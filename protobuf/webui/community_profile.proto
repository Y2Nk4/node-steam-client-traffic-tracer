import "steammessages_unified_base.steamclient.proto";

message CPlayer_GetFavoriteBadge_Response {
	optional bool has_favorite_badge = 1;
	optional uint32 badgeid = 2;
	optional uint64 communityitemid = 3;
	optional uint32 item_type = 4;
	optional uint32 border_color = 5;
	optional uint32 appid = 6;
	optional uint32 level = 7;
}

message CPlayer_SetFavoriteBadge_Request {
	optional uint64 communityitemid = 1;
	optional uint32 badgeid = 2;
}

message CPlayer_SetFavoriteBadge_Response {
}

message ProfileCustomizationSlot {
	optional uint32 slot = 1;
	optional uint32 appid = 2;
	optional uint64 publishedfileid = 3;
	optional uint64 item_assetid = 4;
	optional uint64 item_contextid = 5;
	optional string notes = 6;
	optional string title = 7;
	optional uint32 accountid = 8;
	optional uint32 badgeid = 9;
	optional uint32 border_color = 10;
	optional uint64 item_classid = 11;
	optional uint64 item_instanceid = 12;
}

message ProfileCustomization {
	optional int32 customization_type = 1 [(description) = "enum"];
	optional bool large = 2;
	repeated .ProfileCustomizationSlot slots = 3;
	optional bool active = 4;
	optional int32 customization_style = 5 [(description) = "enum"];
}

message ProfileTheme {
	optional string theme_id = 1;
	optional string title = 2;
}

message CPlayer_GetProfileCustomization_Response {
	repeated .ProfileCustomization customizations = 1;
	optional uint32 slots_available = 2;
	optional .ProfileTheme profile_theme = 3;
}

message CPlayer_GetProfileThemesAvailable_Response {
	repeated .ProfileTheme profile_themes = 1;
}

message CPlayer_SetProfileTheme_Request {
	optional string theme_id = 1;
}

message CPlayer_SetProfileTheme_Response {
}

message CQuest_CommunityItem {
	optional uint64 communityitemid = 1;
	optional uint32 item_type = 2;
	optional uint32 appid = 3;
	optional uint32 owner = 4;
	repeated .CQuest_CommunityItem_Attribute attributes = 5;
	optional bool used = 6;
	optional uint32 owner_origin = 7;
	optional int64 amount = 8;
}

message CQuest_CommunityItem_Attribute {
	optional uint32 attributeid = 1;
	optional uint64 value = 2;
}

message CQuest_GetCommunityInventory_Response {
	repeated .CQuest_CommunityItem items = 1;
}

message CQuest_GetCommunityItemDefinitions_Response {
	repeated .CQuest_GetCommunityItemDefinitions_Response_ItemDefinition item_definitions = 1;
}

message CQuest_GetCommunityItemDefinitions_Response_ItemDefinition {
	optional uint32 item_type = 1;
	optional uint32 appid = 2;
	optional string item_name = 3;
	optional string item_title = 4;
	optional string item_description = 5;
	optional string item_image_small = 6;
	optional string item_image_large = 7;
	optional string item_key_values = 8;
	optional uint32 item_series = 9;
	optional uint32 item_class = 10;
	optional uint32 editor_accountid = 11;
	optional bool active = 12;
	optional string item_image_composed = 13;
	optional string item_image_composed_foil = 14;
	optional bool deleted = 15;
	optional uint32 item_last_changed = 16;
	optional uint64 broadcast_channel_id = 17;
	optional string item_movie_webm = 18;
	optional string item_movie_mp4 = 19;
	optional string item_movie_webm_small = 20;
	optional string item_movie_mp4_small = 21;
}

message CQuest_ActivateProfileModifierItem_Request {
	optional uint32 appid = 1;
	optional uint64 communityitemid = 2;
	optional bool activate = 3;
}

message CQuest_ActivateProfileModifierItem_Response {
}

message CSummerSale2020_ClaimItem_Response {
	optional string item_name = 1;
	optional string item_title = 2;
	optional string item_description = 3;
	optional string item_image_small = 4;
	optional string item_image_large = 5;
	optional bool animated = 6;
	optional uint64 communityitemid = 7;
}

message CSummerSale2020_CanClaimItem_Response {
	optional bool can_claim = 1;
	optional string item_name = 2;
	optional string item_title = 3;
	optional string item_description = 4;
	optional string item_image_small = 5;
	optional string item_image_large = 6;
	optional bool animated = 7;
	optional uint64 communityitemid = 8;
}

message NotImplemented {
}

service Player {
	rpc GetFavoriteBadge (.NotImplemented) returns (.CPlayer_GetFavoriteBadge_Response);
	rpc SetFavoriteBadge (.CPlayer_SetFavoriteBadge_Request) returns (.CPlayer_SetFavoriteBadge_Response);
	rpc GetProfileCustomization (.NotImplemented) returns (.CPlayer_GetProfileCustomization_Response);
	rpc GetProfileThemesAvailable (.NotImplemented) returns (.CPlayer_GetProfileThemesAvailable_Response);
	rpc SetProfileTheme (.CPlayer_SetProfileTheme_Request) returns (.CPlayer_SetProfileTheme_Response);
}

service Quest {
	rpc GetCommunityInventory (.NotImplemented) returns (.CQuest_GetCommunityInventory_Response);
	rpc GetCommunityItemDefinitions (.NotImplemented) returns (.CQuest_GetCommunityItemDefinitions_Response);
	rpc ActivateProfileModifierItem (.CQuest_ActivateProfileModifierItem_Request) returns (.CQuest_ActivateProfileModifierItem_Response);
}

service SummerSale2020 {
	rpc ClaimItem (.NotImplemented) returns (.CSummerSale2020_ClaimItem_Response);
	rpc CanClaimItem (.NotImplemented) returns (.CSummerSale2020_CanClaimItem_Response);
}

