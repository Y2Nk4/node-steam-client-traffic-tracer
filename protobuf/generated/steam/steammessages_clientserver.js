/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    /**
     * EMMSLobbyStatus enum.
     * @exports EMMSLobbyStatus
     * @enum {number}
     * @property {number} k_EMMSLobbyStatusInvalid=0 k_EMMSLobbyStatusInvalid value
     * @property {number} k_EMMSLobbyStatusExists=1 k_EMMSLobbyStatusExists value
     * @property {number} k_EMMSLobbyStatusDoesNotExist=2 k_EMMSLobbyStatusDoesNotExist value
     * @property {number} k_EMMSLobbyStatusNotAMember=3 k_EMMSLobbyStatusNotAMember value
     */
    $root.EMMSLobbyStatus = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "k_EMMSLobbyStatusInvalid"] = 0;
        values[valuesById[1] = "k_EMMSLobbyStatusExists"] = 1;
        values[valuesById[2] = "k_EMMSLobbyStatusDoesNotExist"] = 2;
        values[valuesById[3] = "k_EMMSLobbyStatusNotAMember"] = 3;
        return values;
    })();
    
    $root.CMsgClientUDSP2PSessionStarted = (function() {
    
        /**
         * Properties of a CMsgClientUDSP2PSessionStarted.
         * @exports ICMsgClientUDSP2PSessionStarted
         * @interface ICMsgClientUDSP2PSessionStarted
         * @property {number|Long|null} [steamid_remote] CMsgClientUDSP2PSessionStarted steamid_remote
         * @property {number|null} [appid] CMsgClientUDSP2PSessionStarted appid
         */
    
        /**
         * Constructs a new CMsgClientUDSP2PSessionStarted.
         * @exports CMsgClientUDSP2PSessionStarted
         * @classdesc Represents a CMsgClientUDSP2PSessionStarted.
         * @implements ICMsgClientUDSP2PSessionStarted
         * @constructor
         * @param {ICMsgClientUDSP2PSessionStarted=} [properties] Properties to set
         */
        function CMsgClientUDSP2PSessionStarted(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUDSP2PSessionStarted steamid_remote.
         * @member {number|Long} steamid_remote
         * @memberof CMsgClientUDSP2PSessionStarted
         * @instance
         */
        CMsgClientUDSP2PSessionStarted.prototype.steamid_remote = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientUDSP2PSessionStarted appid.
         * @member {number} appid
         * @memberof CMsgClientUDSP2PSessionStarted
         * @instance
         */
        CMsgClientUDSP2PSessionStarted.prototype.appid = 0;
    
        /**
         * Creates a new CMsgClientUDSP2PSessionStarted instance using the specified properties.
         * @function create
         * @memberof CMsgClientUDSP2PSessionStarted
         * @static
         * @param {ICMsgClientUDSP2PSessionStarted=} [properties] Properties to set
         * @returns {CMsgClientUDSP2PSessionStarted} CMsgClientUDSP2PSessionStarted instance
         */
        CMsgClientUDSP2PSessionStarted.create = function create(properties) {
            return new CMsgClientUDSP2PSessionStarted(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUDSP2PSessionStarted message. Does not implicitly {@link CMsgClientUDSP2PSessionStarted.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUDSP2PSessionStarted
         * @static
         * @param {ICMsgClientUDSP2PSessionStarted} message CMsgClientUDSP2PSessionStarted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUDSP2PSessionStarted.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_remote != null && Object.hasOwnProperty.call(message, "steamid_remote"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_remote);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.appid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUDSP2PSessionStarted message, length delimited. Does not implicitly {@link CMsgClientUDSP2PSessionStarted.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUDSP2PSessionStarted
         * @static
         * @param {ICMsgClientUDSP2PSessionStarted} message CMsgClientUDSP2PSessionStarted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUDSP2PSessionStarted.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUDSP2PSessionStarted message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUDSP2PSessionStarted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUDSP2PSessionStarted} CMsgClientUDSP2PSessionStarted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUDSP2PSessionStarted.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUDSP2PSessionStarted();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid_remote = reader.fixed64();
                    break;
                case 2:
                    message.appid = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUDSP2PSessionStarted message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUDSP2PSessionStarted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUDSP2PSessionStarted} CMsgClientUDSP2PSessionStarted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUDSP2PSessionStarted.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUDSP2PSessionStarted message.
         * @function verify
         * @memberof CMsgClientUDSP2PSessionStarted
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUDSP2PSessionStarted.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_remote != null && message.hasOwnProperty("steamid_remote"))
                if (!$util.isInteger(message.steamid_remote) && !(message.steamid_remote && $util.isInteger(message.steamid_remote.low) && $util.isInteger(message.steamid_remote.high)))
                    return "steamid_remote: integer|Long expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUDSP2PSessionStarted message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUDSP2PSessionStarted
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUDSP2PSessionStarted} CMsgClientUDSP2PSessionStarted
         */
        CMsgClientUDSP2PSessionStarted.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUDSP2PSessionStarted)
                return object;
            var message = new $root.CMsgClientUDSP2PSessionStarted();
            if (object.steamid_remote != null)
                if ($util.Long)
                    (message.steamid_remote = $util.Long.fromValue(object.steamid_remote)).unsigned = false;
                else if (typeof object.steamid_remote === "string")
                    message.steamid_remote = parseInt(object.steamid_remote, 10);
                else if (typeof object.steamid_remote === "number")
                    message.steamid_remote = object.steamid_remote;
                else if (typeof object.steamid_remote === "object")
                    message.steamid_remote = new $util.LongBits(object.steamid_remote.low >>> 0, object.steamid_remote.high >>> 0).toNumber();
            if (object.appid != null)
                message.appid = object.appid | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUDSP2PSessionStarted message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUDSP2PSessionStarted
         * @static
         * @param {CMsgClientUDSP2PSessionStarted} message CMsgClientUDSP2PSessionStarted
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUDSP2PSessionStarted.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_remote = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_remote = options.longs === String ? "0" : 0;
                object.appid = 0;
            }
            if (message.steamid_remote != null && message.hasOwnProperty("steamid_remote"))
                if (typeof message.steamid_remote === "number")
                    object.steamid_remote = options.longs === String ? String(message.steamid_remote) : message.steamid_remote;
                else
                    object.steamid_remote = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_remote) : options.longs === Number ? new $util.LongBits(message.steamid_remote.low >>> 0, message.steamid_remote.high >>> 0).toNumber() : message.steamid_remote;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            return object;
        };
    
        /**
         * Converts this CMsgClientUDSP2PSessionStarted to JSON.
         * @function toJSON
         * @memberof CMsgClientUDSP2PSessionStarted
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUDSP2PSessionStarted.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUDSP2PSessionStarted;
    })();
    
    $root.CMsgClientUDSP2PSessionEnded = (function() {
    
        /**
         * Properties of a CMsgClientUDSP2PSessionEnded.
         * @exports ICMsgClientUDSP2PSessionEnded
         * @interface ICMsgClientUDSP2PSessionEnded
         * @property {number|Long|null} [steamid_remote] CMsgClientUDSP2PSessionEnded steamid_remote
         * @property {number|null} [appid] CMsgClientUDSP2PSessionEnded appid
         * @property {number|null} [session_length_sec] CMsgClientUDSP2PSessionEnded session_length_sec
         * @property {number|null} [session_error] CMsgClientUDSP2PSessionEnded session_error
         * @property {number|null} [nattype] CMsgClientUDSP2PSessionEnded nattype
         * @property {number|null} [bytes_recv] CMsgClientUDSP2PSessionEnded bytes_recv
         * @property {number|null} [bytes_sent] CMsgClientUDSP2PSessionEnded bytes_sent
         * @property {number|null} [bytes_sent_relay] CMsgClientUDSP2PSessionEnded bytes_sent_relay
         * @property {number|null} [bytes_recv_relay] CMsgClientUDSP2PSessionEnded bytes_recv_relay
         * @property {number|null} [time_to_connect_ms] CMsgClientUDSP2PSessionEnded time_to_connect_ms
         */
    
        /**
         * Constructs a new CMsgClientUDSP2PSessionEnded.
         * @exports CMsgClientUDSP2PSessionEnded
         * @classdesc Represents a CMsgClientUDSP2PSessionEnded.
         * @implements ICMsgClientUDSP2PSessionEnded
         * @constructor
         * @param {ICMsgClientUDSP2PSessionEnded=} [properties] Properties to set
         */
        function CMsgClientUDSP2PSessionEnded(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUDSP2PSessionEnded steamid_remote.
         * @member {number|Long} steamid_remote
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.steamid_remote = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded appid.
         * @member {number} appid
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.appid = 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded session_length_sec.
         * @member {number} session_length_sec
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.session_length_sec = 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded session_error.
         * @member {number} session_error
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.session_error = 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded nattype.
         * @member {number} nattype
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.nattype = 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded bytes_recv.
         * @member {number} bytes_recv
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.bytes_recv = 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded bytes_sent.
         * @member {number} bytes_sent
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.bytes_sent = 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded bytes_sent_relay.
         * @member {number} bytes_sent_relay
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.bytes_sent_relay = 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded bytes_recv_relay.
         * @member {number} bytes_recv_relay
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.bytes_recv_relay = 0;
    
        /**
         * CMsgClientUDSP2PSessionEnded time_to_connect_ms.
         * @member {number} time_to_connect_ms
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         */
        CMsgClientUDSP2PSessionEnded.prototype.time_to_connect_ms = 0;
    
        /**
         * Creates a new CMsgClientUDSP2PSessionEnded instance using the specified properties.
         * @function create
         * @memberof CMsgClientUDSP2PSessionEnded
         * @static
         * @param {ICMsgClientUDSP2PSessionEnded=} [properties] Properties to set
         * @returns {CMsgClientUDSP2PSessionEnded} CMsgClientUDSP2PSessionEnded instance
         */
        CMsgClientUDSP2PSessionEnded.create = function create(properties) {
            return new CMsgClientUDSP2PSessionEnded(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUDSP2PSessionEnded message. Does not implicitly {@link CMsgClientUDSP2PSessionEnded.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUDSP2PSessionEnded
         * @static
         * @param {ICMsgClientUDSP2PSessionEnded} message CMsgClientUDSP2PSessionEnded message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUDSP2PSessionEnded.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_remote != null && Object.hasOwnProperty.call(message, "steamid_remote"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_remote);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.appid);
            if (message.session_length_sec != null && Object.hasOwnProperty.call(message, "session_length_sec"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.session_length_sec);
            if (message.session_error != null && Object.hasOwnProperty.call(message, "session_error"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.session_error);
            if (message.nattype != null && Object.hasOwnProperty.call(message, "nattype"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.nattype);
            if (message.bytes_recv != null && Object.hasOwnProperty.call(message, "bytes_recv"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.bytes_recv);
            if (message.bytes_sent != null && Object.hasOwnProperty.call(message, "bytes_sent"))
                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.bytes_sent);
            if (message.bytes_sent_relay != null && Object.hasOwnProperty.call(message, "bytes_sent_relay"))
                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.bytes_sent_relay);
            if (message.bytes_recv_relay != null && Object.hasOwnProperty.call(message, "bytes_recv_relay"))
                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.bytes_recv_relay);
            if (message.time_to_connect_ms != null && Object.hasOwnProperty.call(message, "time_to_connect_ms"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.time_to_connect_ms);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUDSP2PSessionEnded message, length delimited. Does not implicitly {@link CMsgClientUDSP2PSessionEnded.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUDSP2PSessionEnded
         * @static
         * @param {ICMsgClientUDSP2PSessionEnded} message CMsgClientUDSP2PSessionEnded message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUDSP2PSessionEnded.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUDSP2PSessionEnded message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUDSP2PSessionEnded
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUDSP2PSessionEnded} CMsgClientUDSP2PSessionEnded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUDSP2PSessionEnded.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUDSP2PSessionEnded();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid_remote = reader.fixed64();
                    break;
                case 2:
                    message.appid = reader.int32();
                    break;
                case 3:
                    message.session_length_sec = reader.int32();
                    break;
                case 4:
                    message.session_error = reader.int32();
                    break;
                case 5:
                    message.nattype = reader.int32();
                    break;
                case 6:
                    message.bytes_recv = reader.int32();
                    break;
                case 7:
                    message.bytes_sent = reader.int32();
                    break;
                case 8:
                    message.bytes_sent_relay = reader.int32();
                    break;
                case 9:
                    message.bytes_recv_relay = reader.int32();
                    break;
                case 10:
                    message.time_to_connect_ms = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUDSP2PSessionEnded message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUDSP2PSessionEnded
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUDSP2PSessionEnded} CMsgClientUDSP2PSessionEnded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUDSP2PSessionEnded.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUDSP2PSessionEnded message.
         * @function verify
         * @memberof CMsgClientUDSP2PSessionEnded
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUDSP2PSessionEnded.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_remote != null && message.hasOwnProperty("steamid_remote"))
                if (!$util.isInteger(message.steamid_remote) && !(message.steamid_remote && $util.isInteger(message.steamid_remote.low) && $util.isInteger(message.steamid_remote.high)))
                    return "steamid_remote: integer|Long expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.session_length_sec != null && message.hasOwnProperty("session_length_sec"))
                if (!$util.isInteger(message.session_length_sec))
                    return "session_length_sec: integer expected";
            if (message.session_error != null && message.hasOwnProperty("session_error"))
                if (!$util.isInteger(message.session_error))
                    return "session_error: integer expected";
            if (message.nattype != null && message.hasOwnProperty("nattype"))
                if (!$util.isInteger(message.nattype))
                    return "nattype: integer expected";
            if (message.bytes_recv != null && message.hasOwnProperty("bytes_recv"))
                if (!$util.isInteger(message.bytes_recv))
                    return "bytes_recv: integer expected";
            if (message.bytes_sent != null && message.hasOwnProperty("bytes_sent"))
                if (!$util.isInteger(message.bytes_sent))
                    return "bytes_sent: integer expected";
            if (message.bytes_sent_relay != null && message.hasOwnProperty("bytes_sent_relay"))
                if (!$util.isInteger(message.bytes_sent_relay))
                    return "bytes_sent_relay: integer expected";
            if (message.bytes_recv_relay != null && message.hasOwnProperty("bytes_recv_relay"))
                if (!$util.isInteger(message.bytes_recv_relay))
                    return "bytes_recv_relay: integer expected";
            if (message.time_to_connect_ms != null && message.hasOwnProperty("time_to_connect_ms"))
                if (!$util.isInteger(message.time_to_connect_ms))
                    return "time_to_connect_ms: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUDSP2PSessionEnded message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUDSP2PSessionEnded
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUDSP2PSessionEnded} CMsgClientUDSP2PSessionEnded
         */
        CMsgClientUDSP2PSessionEnded.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUDSP2PSessionEnded)
                return object;
            var message = new $root.CMsgClientUDSP2PSessionEnded();
            if (object.steamid_remote != null)
                if ($util.Long)
                    (message.steamid_remote = $util.Long.fromValue(object.steamid_remote)).unsigned = false;
                else if (typeof object.steamid_remote === "string")
                    message.steamid_remote = parseInt(object.steamid_remote, 10);
                else if (typeof object.steamid_remote === "number")
                    message.steamid_remote = object.steamid_remote;
                else if (typeof object.steamid_remote === "object")
                    message.steamid_remote = new $util.LongBits(object.steamid_remote.low >>> 0, object.steamid_remote.high >>> 0).toNumber();
            if (object.appid != null)
                message.appid = object.appid | 0;
            if (object.session_length_sec != null)
                message.session_length_sec = object.session_length_sec | 0;
            if (object.session_error != null)
                message.session_error = object.session_error | 0;
            if (object.nattype != null)
                message.nattype = object.nattype | 0;
            if (object.bytes_recv != null)
                message.bytes_recv = object.bytes_recv | 0;
            if (object.bytes_sent != null)
                message.bytes_sent = object.bytes_sent | 0;
            if (object.bytes_sent_relay != null)
                message.bytes_sent_relay = object.bytes_sent_relay | 0;
            if (object.bytes_recv_relay != null)
                message.bytes_recv_relay = object.bytes_recv_relay | 0;
            if (object.time_to_connect_ms != null)
                message.time_to_connect_ms = object.time_to_connect_ms | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUDSP2PSessionEnded message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUDSP2PSessionEnded
         * @static
         * @param {CMsgClientUDSP2PSessionEnded} message CMsgClientUDSP2PSessionEnded
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUDSP2PSessionEnded.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_remote = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_remote = options.longs === String ? "0" : 0;
                object.appid = 0;
                object.session_length_sec = 0;
                object.session_error = 0;
                object.nattype = 0;
                object.bytes_recv = 0;
                object.bytes_sent = 0;
                object.bytes_sent_relay = 0;
                object.bytes_recv_relay = 0;
                object.time_to_connect_ms = 0;
            }
            if (message.steamid_remote != null && message.hasOwnProperty("steamid_remote"))
                if (typeof message.steamid_remote === "number")
                    object.steamid_remote = options.longs === String ? String(message.steamid_remote) : message.steamid_remote;
                else
                    object.steamid_remote = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_remote) : options.longs === Number ? new $util.LongBits(message.steamid_remote.low >>> 0, message.steamid_remote.high >>> 0).toNumber() : message.steamid_remote;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.session_length_sec != null && message.hasOwnProperty("session_length_sec"))
                object.session_length_sec = message.session_length_sec;
            if (message.session_error != null && message.hasOwnProperty("session_error"))
                object.session_error = message.session_error;
            if (message.nattype != null && message.hasOwnProperty("nattype"))
                object.nattype = message.nattype;
            if (message.bytes_recv != null && message.hasOwnProperty("bytes_recv"))
                object.bytes_recv = message.bytes_recv;
            if (message.bytes_sent != null && message.hasOwnProperty("bytes_sent"))
                object.bytes_sent = message.bytes_sent;
            if (message.bytes_sent_relay != null && message.hasOwnProperty("bytes_sent_relay"))
                object.bytes_sent_relay = message.bytes_sent_relay;
            if (message.bytes_recv_relay != null && message.hasOwnProperty("bytes_recv_relay"))
                object.bytes_recv_relay = message.bytes_recv_relay;
            if (message.time_to_connect_ms != null && message.hasOwnProperty("time_to_connect_ms"))
                object.time_to_connect_ms = message.time_to_connect_ms;
            return object;
        };
    
        /**
         * Converts this CMsgClientUDSP2PSessionEnded to JSON.
         * @function toJSON
         * @memberof CMsgClientUDSP2PSessionEnded
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUDSP2PSessionEnded.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUDSP2PSessionEnded;
    })();
    
    $root.CMsgClientRegisterAuthTicketWithCM = (function() {
    
        /**
         * Properties of a CMsgClientRegisterAuthTicketWithCM.
         * @exports ICMsgClientRegisterAuthTicketWithCM
         * @interface ICMsgClientRegisterAuthTicketWithCM
         * @property {number|null} [protocol_version] CMsgClientRegisterAuthTicketWithCM protocol_version
         * @property {Uint8Array|null} [ticket] CMsgClientRegisterAuthTicketWithCM ticket
         * @property {number|Long|null} [client_instance_id] CMsgClientRegisterAuthTicketWithCM client_instance_id
         */
    
        /**
         * Constructs a new CMsgClientRegisterAuthTicketWithCM.
         * @exports CMsgClientRegisterAuthTicketWithCM
         * @classdesc Represents a CMsgClientRegisterAuthTicketWithCM.
         * @implements ICMsgClientRegisterAuthTicketWithCM
         * @constructor
         * @param {ICMsgClientRegisterAuthTicketWithCM=} [properties] Properties to set
         */
        function CMsgClientRegisterAuthTicketWithCM(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRegisterAuthTicketWithCM protocol_version.
         * @member {number} protocol_version
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @instance
         */
        CMsgClientRegisterAuthTicketWithCM.prototype.protocol_version = 0;
    
        /**
         * CMsgClientRegisterAuthTicketWithCM ticket.
         * @member {Uint8Array} ticket
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @instance
         */
        CMsgClientRegisterAuthTicketWithCM.prototype.ticket = $util.newBuffer([]);
    
        /**
         * CMsgClientRegisterAuthTicketWithCM client_instance_id.
         * @member {number|Long} client_instance_id
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @instance
         */
        CMsgClientRegisterAuthTicketWithCM.prototype.client_instance_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientRegisterAuthTicketWithCM instance using the specified properties.
         * @function create
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @static
         * @param {ICMsgClientRegisterAuthTicketWithCM=} [properties] Properties to set
         * @returns {CMsgClientRegisterAuthTicketWithCM} CMsgClientRegisterAuthTicketWithCM instance
         */
        CMsgClientRegisterAuthTicketWithCM.create = function create(properties) {
            return new CMsgClientRegisterAuthTicketWithCM(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRegisterAuthTicketWithCM message. Does not implicitly {@link CMsgClientRegisterAuthTicketWithCM.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @static
         * @param {ICMsgClientRegisterAuthTicketWithCM} message CMsgClientRegisterAuthTicketWithCM message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRegisterAuthTicketWithCM.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.protocol_version != null && Object.hasOwnProperty.call(message, "protocol_version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.protocol_version);
            if (message.ticket != null && Object.hasOwnProperty.call(message, "ticket"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.ticket);
            if (message.client_instance_id != null && Object.hasOwnProperty.call(message, "client_instance_id"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.client_instance_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRegisterAuthTicketWithCM message, length delimited. Does not implicitly {@link CMsgClientRegisterAuthTicketWithCM.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @static
         * @param {ICMsgClientRegisterAuthTicketWithCM} message CMsgClientRegisterAuthTicketWithCM message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRegisterAuthTicketWithCM.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRegisterAuthTicketWithCM message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRegisterAuthTicketWithCM} CMsgClientRegisterAuthTicketWithCM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRegisterAuthTicketWithCM.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRegisterAuthTicketWithCM();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.protocol_version = reader.uint32();
                    break;
                case 3:
                    message.ticket = reader.bytes();
                    break;
                case 4:
                    message.client_instance_id = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRegisterAuthTicketWithCM message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRegisterAuthTicketWithCM} CMsgClientRegisterAuthTicketWithCM
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRegisterAuthTicketWithCM.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRegisterAuthTicketWithCM message.
         * @function verify
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRegisterAuthTicketWithCM.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                if (!$util.isInteger(message.protocol_version))
                    return "protocol_version: integer expected";
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                if (!(message.ticket && typeof message.ticket.length === "number" || $util.isString(message.ticket)))
                    return "ticket: buffer expected";
            if (message.client_instance_id != null && message.hasOwnProperty("client_instance_id"))
                if (!$util.isInteger(message.client_instance_id) && !(message.client_instance_id && $util.isInteger(message.client_instance_id.low) && $util.isInteger(message.client_instance_id.high)))
                    return "client_instance_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRegisterAuthTicketWithCM message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRegisterAuthTicketWithCM} CMsgClientRegisterAuthTicketWithCM
         */
        CMsgClientRegisterAuthTicketWithCM.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRegisterAuthTicketWithCM)
                return object;
            var message = new $root.CMsgClientRegisterAuthTicketWithCM();
            if (object.protocol_version != null)
                message.protocol_version = object.protocol_version >>> 0;
            if (object.ticket != null)
                if (typeof object.ticket === "string")
                    $util.base64.decode(object.ticket, message.ticket = $util.newBuffer($util.base64.length(object.ticket)), 0);
                else if (object.ticket.length)
                    message.ticket = object.ticket;
            if (object.client_instance_id != null)
                if ($util.Long)
                    (message.client_instance_id = $util.Long.fromValue(object.client_instance_id)).unsigned = true;
                else if (typeof object.client_instance_id === "string")
                    message.client_instance_id = parseInt(object.client_instance_id, 10);
                else if (typeof object.client_instance_id === "number")
                    message.client_instance_id = object.client_instance_id;
                else if (typeof object.client_instance_id === "object")
                    message.client_instance_id = new $util.LongBits(object.client_instance_id.low >>> 0, object.client_instance_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRegisterAuthTicketWithCM message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @static
         * @param {CMsgClientRegisterAuthTicketWithCM} message CMsgClientRegisterAuthTicketWithCM
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRegisterAuthTicketWithCM.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.protocol_version = 0;
                if (options.bytes === String)
                    object.ticket = "";
                else {
                    object.ticket = [];
                    if (options.bytes !== Array)
                        object.ticket = $util.newBuffer(object.ticket);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.client_instance_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_instance_id = options.longs === String ? "0" : 0;
            }
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                object.protocol_version = message.protocol_version;
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                object.ticket = options.bytes === String ? $util.base64.encode(message.ticket, 0, message.ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.ticket) : message.ticket;
            if (message.client_instance_id != null && message.hasOwnProperty("client_instance_id"))
                if (typeof message.client_instance_id === "number")
                    object.client_instance_id = options.longs === String ? String(message.client_instance_id) : message.client_instance_id;
                else
                    object.client_instance_id = options.longs === String ? $util.Long.prototype.toString.call(message.client_instance_id) : options.longs === Number ? new $util.LongBits(message.client_instance_id.low >>> 0, message.client_instance_id.high >>> 0).toNumber(true) : message.client_instance_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientRegisterAuthTicketWithCM to JSON.
         * @function toJSON
         * @memberof CMsgClientRegisterAuthTicketWithCM
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRegisterAuthTicketWithCM.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRegisterAuthTicketWithCM;
    })();
    
    $root.CMsgClientTicketAuthComplete = (function() {
    
        /**
         * Properties of a CMsgClientTicketAuthComplete.
         * @exports ICMsgClientTicketAuthComplete
         * @interface ICMsgClientTicketAuthComplete
         * @property {number|Long|null} [steam_id] CMsgClientTicketAuthComplete steam_id
         * @property {number|Long|null} [game_id] CMsgClientTicketAuthComplete game_id
         * @property {number|null} [estate] CMsgClientTicketAuthComplete estate
         * @property {number|null} [eauth_session_response] CMsgClientTicketAuthComplete eauth_session_response
         * @property {Uint8Array|null} [DEPRECATED_ticket] CMsgClientTicketAuthComplete DEPRECATED_ticket
         * @property {number|null} [ticket_crc] CMsgClientTicketAuthComplete ticket_crc
         * @property {number|null} [ticket_sequence] CMsgClientTicketAuthComplete ticket_sequence
         * @property {number|Long|null} [owner_steam_id] CMsgClientTicketAuthComplete owner_steam_id
         */
    
        /**
         * Constructs a new CMsgClientTicketAuthComplete.
         * @exports CMsgClientTicketAuthComplete
         * @classdesc Represents a CMsgClientTicketAuthComplete.
         * @implements ICMsgClientTicketAuthComplete
         * @constructor
         * @param {ICMsgClientTicketAuthComplete=} [properties] Properties to set
         */
        function CMsgClientTicketAuthComplete(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientTicketAuthComplete steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         */
        CMsgClientTicketAuthComplete.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientTicketAuthComplete game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         */
        CMsgClientTicketAuthComplete.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientTicketAuthComplete estate.
         * @member {number} estate
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         */
        CMsgClientTicketAuthComplete.prototype.estate = 0;
    
        /**
         * CMsgClientTicketAuthComplete eauth_session_response.
         * @member {number} eauth_session_response
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         */
        CMsgClientTicketAuthComplete.prototype.eauth_session_response = 0;
    
        /**
         * CMsgClientTicketAuthComplete DEPRECATED_ticket.
         * @member {Uint8Array} DEPRECATED_ticket
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         */
        CMsgClientTicketAuthComplete.prototype.DEPRECATED_ticket = $util.newBuffer([]);
    
        /**
         * CMsgClientTicketAuthComplete ticket_crc.
         * @member {number} ticket_crc
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         */
        CMsgClientTicketAuthComplete.prototype.ticket_crc = 0;
    
        /**
         * CMsgClientTicketAuthComplete ticket_sequence.
         * @member {number} ticket_sequence
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         */
        CMsgClientTicketAuthComplete.prototype.ticket_sequence = 0;
    
        /**
         * CMsgClientTicketAuthComplete owner_steam_id.
         * @member {number|Long} owner_steam_id
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         */
        CMsgClientTicketAuthComplete.prototype.owner_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientTicketAuthComplete instance using the specified properties.
         * @function create
         * @memberof CMsgClientTicketAuthComplete
         * @static
         * @param {ICMsgClientTicketAuthComplete=} [properties] Properties to set
         * @returns {CMsgClientTicketAuthComplete} CMsgClientTicketAuthComplete instance
         */
        CMsgClientTicketAuthComplete.create = function create(properties) {
            return new CMsgClientTicketAuthComplete(properties);
        };
    
        /**
         * Encodes the specified CMsgClientTicketAuthComplete message. Does not implicitly {@link CMsgClientTicketAuthComplete.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientTicketAuthComplete
         * @static
         * @param {ICMsgClientTicketAuthComplete} message CMsgClientTicketAuthComplete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientTicketAuthComplete.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.game_id);
            if (message.estate != null && Object.hasOwnProperty.call(message, "estate"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.estate);
            if (message.eauth_session_response != null && Object.hasOwnProperty.call(message, "eauth_session_response"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.eauth_session_response);
            if (message.DEPRECATED_ticket != null && Object.hasOwnProperty.call(message, "DEPRECATED_ticket"))
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.DEPRECATED_ticket);
            if (message.ticket_crc != null && Object.hasOwnProperty.call(message, "ticket_crc"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.ticket_crc);
            if (message.ticket_sequence != null && Object.hasOwnProperty.call(message, "ticket_sequence"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.ticket_sequence);
            if (message.owner_steam_id != null && Object.hasOwnProperty.call(message, "owner_steam_id"))
                writer.uint32(/* id 8, wireType 1 =*/65).fixed64(message.owner_steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientTicketAuthComplete message, length delimited. Does not implicitly {@link CMsgClientTicketAuthComplete.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientTicketAuthComplete
         * @static
         * @param {ICMsgClientTicketAuthComplete} message CMsgClientTicketAuthComplete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientTicketAuthComplete.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientTicketAuthComplete message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientTicketAuthComplete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientTicketAuthComplete} CMsgClientTicketAuthComplete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientTicketAuthComplete.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientTicketAuthComplete();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                case 2:
                    message.game_id = reader.fixed64();
                    break;
                case 3:
                    message.estate = reader.uint32();
                    break;
                case 4:
                    message.eauth_session_response = reader.uint32();
                    break;
                case 5:
                    message.DEPRECATED_ticket = reader.bytes();
                    break;
                case 6:
                    message.ticket_crc = reader.uint32();
                    break;
                case 7:
                    message.ticket_sequence = reader.uint32();
                    break;
                case 8:
                    message.owner_steam_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientTicketAuthComplete message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientTicketAuthComplete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientTicketAuthComplete} CMsgClientTicketAuthComplete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientTicketAuthComplete.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientTicketAuthComplete message.
         * @function verify
         * @memberof CMsgClientTicketAuthComplete
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientTicketAuthComplete.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            if (message.estate != null && message.hasOwnProperty("estate"))
                if (!$util.isInteger(message.estate))
                    return "estate: integer expected";
            if (message.eauth_session_response != null && message.hasOwnProperty("eauth_session_response"))
                if (!$util.isInteger(message.eauth_session_response))
                    return "eauth_session_response: integer expected";
            if (message.DEPRECATED_ticket != null && message.hasOwnProperty("DEPRECATED_ticket"))
                if (!(message.DEPRECATED_ticket && typeof message.DEPRECATED_ticket.length === "number" || $util.isString(message.DEPRECATED_ticket)))
                    return "DEPRECATED_ticket: buffer expected";
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                if (!$util.isInteger(message.ticket_crc))
                    return "ticket_crc: integer expected";
            if (message.ticket_sequence != null && message.hasOwnProperty("ticket_sequence"))
                if (!$util.isInteger(message.ticket_sequence))
                    return "ticket_sequence: integer expected";
            if (message.owner_steam_id != null && message.hasOwnProperty("owner_steam_id"))
                if (!$util.isInteger(message.owner_steam_id) && !(message.owner_steam_id && $util.isInteger(message.owner_steam_id.low) && $util.isInteger(message.owner_steam_id.high)))
                    return "owner_steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientTicketAuthComplete message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientTicketAuthComplete
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientTicketAuthComplete} CMsgClientTicketAuthComplete
         */
        CMsgClientTicketAuthComplete.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientTicketAuthComplete)
                return object;
            var message = new $root.CMsgClientTicketAuthComplete();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            if (object.estate != null)
                message.estate = object.estate >>> 0;
            if (object.eauth_session_response != null)
                message.eauth_session_response = object.eauth_session_response >>> 0;
            if (object.DEPRECATED_ticket != null)
                if (typeof object.DEPRECATED_ticket === "string")
                    $util.base64.decode(object.DEPRECATED_ticket, message.DEPRECATED_ticket = $util.newBuffer($util.base64.length(object.DEPRECATED_ticket)), 0);
                else if (object.DEPRECATED_ticket.length)
                    message.DEPRECATED_ticket = object.DEPRECATED_ticket;
            if (object.ticket_crc != null)
                message.ticket_crc = object.ticket_crc >>> 0;
            if (object.ticket_sequence != null)
                message.ticket_sequence = object.ticket_sequence >>> 0;
            if (object.owner_steam_id != null)
                if ($util.Long)
                    (message.owner_steam_id = $util.Long.fromValue(object.owner_steam_id)).unsigned = false;
                else if (typeof object.owner_steam_id === "string")
                    message.owner_steam_id = parseInt(object.owner_steam_id, 10);
                else if (typeof object.owner_steam_id === "number")
                    message.owner_steam_id = object.owner_steam_id;
                else if (typeof object.owner_steam_id === "object")
                    message.owner_steam_id = new $util.LongBits(object.owner_steam_id.low >>> 0, object.owner_steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientTicketAuthComplete message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientTicketAuthComplete
         * @static
         * @param {CMsgClientTicketAuthComplete} message CMsgClientTicketAuthComplete
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientTicketAuthComplete.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
                object.estate = 0;
                object.eauth_session_response = 0;
                if (options.bytes === String)
                    object.DEPRECATED_ticket = "";
                else {
                    object.DEPRECATED_ticket = [];
                    if (options.bytes !== Array)
                        object.DEPRECATED_ticket = $util.newBuffer(object.DEPRECATED_ticket);
                }
                object.ticket_crc = 0;
                object.ticket_sequence = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.owner_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.owner_steam_id = options.longs === String ? "0" : 0;
            }
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            if (message.estate != null && message.hasOwnProperty("estate"))
                object.estate = message.estate;
            if (message.eauth_session_response != null && message.hasOwnProperty("eauth_session_response"))
                object.eauth_session_response = message.eauth_session_response;
            if (message.DEPRECATED_ticket != null && message.hasOwnProperty("DEPRECATED_ticket"))
                object.DEPRECATED_ticket = options.bytes === String ? $util.base64.encode(message.DEPRECATED_ticket, 0, message.DEPRECATED_ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.DEPRECATED_ticket) : message.DEPRECATED_ticket;
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                object.ticket_crc = message.ticket_crc;
            if (message.ticket_sequence != null && message.hasOwnProperty("ticket_sequence"))
                object.ticket_sequence = message.ticket_sequence;
            if (message.owner_steam_id != null && message.hasOwnProperty("owner_steam_id"))
                if (typeof message.owner_steam_id === "number")
                    object.owner_steam_id = options.longs === String ? String(message.owner_steam_id) : message.owner_steam_id;
                else
                    object.owner_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.owner_steam_id) : options.longs === Number ? new $util.LongBits(message.owner_steam_id.low >>> 0, message.owner_steam_id.high >>> 0).toNumber() : message.owner_steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientTicketAuthComplete to JSON.
         * @function toJSON
         * @memberof CMsgClientTicketAuthComplete
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientTicketAuthComplete.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientTicketAuthComplete;
    })();
    
    $root.CMsgClientCMList = (function() {
    
        /**
         * Properties of a CMsgClientCMList.
         * @exports ICMsgClientCMList
         * @interface ICMsgClientCMList
         * @property {Array.<number>|null} [cm_addresses] CMsgClientCMList cm_addresses
         * @property {Array.<number>|null} [cm_ports] CMsgClientCMList cm_ports
         * @property {Array.<string>|null} [cm_websocket_addresses] CMsgClientCMList cm_websocket_addresses
         * @property {number|null} [percent_default_to_websocket] CMsgClientCMList percent_default_to_websocket
         */
    
        /**
         * Constructs a new CMsgClientCMList.
         * @exports CMsgClientCMList
         * @classdesc Represents a CMsgClientCMList.
         * @implements ICMsgClientCMList
         * @constructor
         * @param {ICMsgClientCMList=} [properties] Properties to set
         */
        function CMsgClientCMList(properties) {
            this.cm_addresses = [];
            this.cm_ports = [];
            this.cm_websocket_addresses = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientCMList cm_addresses.
         * @member {Array.<number>} cm_addresses
         * @memberof CMsgClientCMList
         * @instance
         */
        CMsgClientCMList.prototype.cm_addresses = $util.emptyArray;
    
        /**
         * CMsgClientCMList cm_ports.
         * @member {Array.<number>} cm_ports
         * @memberof CMsgClientCMList
         * @instance
         */
        CMsgClientCMList.prototype.cm_ports = $util.emptyArray;
    
        /**
         * CMsgClientCMList cm_websocket_addresses.
         * @member {Array.<string>} cm_websocket_addresses
         * @memberof CMsgClientCMList
         * @instance
         */
        CMsgClientCMList.prototype.cm_websocket_addresses = $util.emptyArray;
    
        /**
         * CMsgClientCMList percent_default_to_websocket.
         * @member {number} percent_default_to_websocket
         * @memberof CMsgClientCMList
         * @instance
         */
        CMsgClientCMList.prototype.percent_default_to_websocket = 0;
    
        /**
         * Creates a new CMsgClientCMList instance using the specified properties.
         * @function create
         * @memberof CMsgClientCMList
         * @static
         * @param {ICMsgClientCMList=} [properties] Properties to set
         * @returns {CMsgClientCMList} CMsgClientCMList instance
         */
        CMsgClientCMList.create = function create(properties) {
            return new CMsgClientCMList(properties);
        };
    
        /**
         * Encodes the specified CMsgClientCMList message. Does not implicitly {@link CMsgClientCMList.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientCMList
         * @static
         * @param {ICMsgClientCMList} message CMsgClientCMList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCMList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.cm_addresses != null && message.cm_addresses.length)
                for (var i = 0; i < message.cm_addresses.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cm_addresses[i]);
            if (message.cm_ports != null && message.cm_ports.length)
                for (var i = 0; i < message.cm_ports.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cm_ports[i]);
            if (message.cm_websocket_addresses != null && message.cm_websocket_addresses.length)
                for (var i = 0; i < message.cm_websocket_addresses.length; ++i)
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.cm_websocket_addresses[i]);
            if (message.percent_default_to_websocket != null && Object.hasOwnProperty.call(message, "percent_default_to_websocket"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.percent_default_to_websocket);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientCMList message, length delimited. Does not implicitly {@link CMsgClientCMList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientCMList
         * @static
         * @param {ICMsgClientCMList} message CMsgClientCMList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientCMList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientCMList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientCMList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientCMList} CMsgClientCMList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCMList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientCMList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.cm_addresses && message.cm_addresses.length))
                        message.cm_addresses = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cm_addresses.push(reader.uint32());
                    } else
                        message.cm_addresses.push(reader.uint32());
                    break;
                case 2:
                    if (!(message.cm_ports && message.cm_ports.length))
                        message.cm_ports = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cm_ports.push(reader.uint32());
                    } else
                        message.cm_ports.push(reader.uint32());
                    break;
                case 3:
                    if (!(message.cm_websocket_addresses && message.cm_websocket_addresses.length))
                        message.cm_websocket_addresses = [];
                    message.cm_websocket_addresses.push(reader.string());
                    break;
                case 4:
                    message.percent_default_to_websocket = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientCMList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientCMList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientCMList} CMsgClientCMList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientCMList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientCMList message.
         * @function verify
         * @memberof CMsgClientCMList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientCMList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.cm_addresses != null && message.hasOwnProperty("cm_addresses")) {
                if (!Array.isArray(message.cm_addresses))
                    return "cm_addresses: array expected";
                for (var i = 0; i < message.cm_addresses.length; ++i)
                    if (!$util.isInteger(message.cm_addresses[i]))
                        return "cm_addresses: integer[] expected";
            }
            if (message.cm_ports != null && message.hasOwnProperty("cm_ports")) {
                if (!Array.isArray(message.cm_ports))
                    return "cm_ports: array expected";
                for (var i = 0; i < message.cm_ports.length; ++i)
                    if (!$util.isInteger(message.cm_ports[i]))
                        return "cm_ports: integer[] expected";
            }
            if (message.cm_websocket_addresses != null && message.hasOwnProperty("cm_websocket_addresses")) {
                if (!Array.isArray(message.cm_websocket_addresses))
                    return "cm_websocket_addresses: array expected";
                for (var i = 0; i < message.cm_websocket_addresses.length; ++i)
                    if (!$util.isString(message.cm_websocket_addresses[i]))
                        return "cm_websocket_addresses: string[] expected";
            }
            if (message.percent_default_to_websocket != null && message.hasOwnProperty("percent_default_to_websocket"))
                if (!$util.isInteger(message.percent_default_to_websocket))
                    return "percent_default_to_websocket: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientCMList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientCMList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientCMList} CMsgClientCMList
         */
        CMsgClientCMList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientCMList)
                return object;
            var message = new $root.CMsgClientCMList();
            if (object.cm_addresses) {
                if (!Array.isArray(object.cm_addresses))
                    throw TypeError(".CMsgClientCMList.cm_addresses: array expected");
                message.cm_addresses = [];
                for (var i = 0; i < object.cm_addresses.length; ++i)
                    message.cm_addresses[i] = object.cm_addresses[i] >>> 0;
            }
            if (object.cm_ports) {
                if (!Array.isArray(object.cm_ports))
                    throw TypeError(".CMsgClientCMList.cm_ports: array expected");
                message.cm_ports = [];
                for (var i = 0; i < object.cm_ports.length; ++i)
                    message.cm_ports[i] = object.cm_ports[i] >>> 0;
            }
            if (object.cm_websocket_addresses) {
                if (!Array.isArray(object.cm_websocket_addresses))
                    throw TypeError(".CMsgClientCMList.cm_websocket_addresses: array expected");
                message.cm_websocket_addresses = [];
                for (var i = 0; i < object.cm_websocket_addresses.length; ++i)
                    message.cm_websocket_addresses[i] = String(object.cm_websocket_addresses[i]);
            }
            if (object.percent_default_to_websocket != null)
                message.percent_default_to_websocket = object.percent_default_to_websocket >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientCMList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientCMList
         * @static
         * @param {CMsgClientCMList} message CMsgClientCMList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientCMList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.cm_addresses = [];
                object.cm_ports = [];
                object.cm_websocket_addresses = [];
            }
            if (options.defaults)
                object.percent_default_to_websocket = 0;
            if (message.cm_addresses && message.cm_addresses.length) {
                object.cm_addresses = [];
                for (var j = 0; j < message.cm_addresses.length; ++j)
                    object.cm_addresses[j] = message.cm_addresses[j];
            }
            if (message.cm_ports && message.cm_ports.length) {
                object.cm_ports = [];
                for (var j = 0; j < message.cm_ports.length; ++j)
                    object.cm_ports[j] = message.cm_ports[j];
            }
            if (message.cm_websocket_addresses && message.cm_websocket_addresses.length) {
                object.cm_websocket_addresses = [];
                for (var j = 0; j < message.cm_websocket_addresses.length; ++j)
                    object.cm_websocket_addresses[j] = message.cm_websocket_addresses[j];
            }
            if (message.percent_default_to_websocket != null && message.hasOwnProperty("percent_default_to_websocket"))
                object.percent_default_to_websocket = message.percent_default_to_websocket;
            return object;
        };
    
        /**
         * Converts this CMsgClientCMList to JSON.
         * @function toJSON
         * @memberof CMsgClientCMList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientCMList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientCMList;
    })();
    
    $root.CMsgClientP2PConnectionInfo = (function() {
    
        /**
         * Properties of a CMsgClientP2PConnectionInfo.
         * @exports ICMsgClientP2PConnectionInfo
         * @interface ICMsgClientP2PConnectionInfo
         * @property {number|Long|null} [steam_id_dest] CMsgClientP2PConnectionInfo steam_id_dest
         * @property {number|Long|null} [steam_id_src] CMsgClientP2PConnectionInfo steam_id_src
         * @property {number|null} [app_id] CMsgClientP2PConnectionInfo app_id
         * @property {Uint8Array|null} [candidate] CMsgClientP2PConnectionInfo candidate
         * @property {number|Long|null} [connection_id_src] CMsgClientP2PConnectionInfo connection_id_src
         * @property {Uint8Array|null} [rendezvous] CMsgClientP2PConnectionInfo rendezvous
         */
    
        /**
         * Constructs a new CMsgClientP2PConnectionInfo.
         * @exports CMsgClientP2PConnectionInfo
         * @classdesc Represents a CMsgClientP2PConnectionInfo.
         * @implements ICMsgClientP2PConnectionInfo
         * @constructor
         * @param {ICMsgClientP2PConnectionInfo=} [properties] Properties to set
         */
        function CMsgClientP2PConnectionInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientP2PConnectionInfo steam_id_dest.
         * @member {number|Long} steam_id_dest
         * @memberof CMsgClientP2PConnectionInfo
         * @instance
         */
        CMsgClientP2PConnectionInfo.prototype.steam_id_dest = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientP2PConnectionInfo steam_id_src.
         * @member {number|Long} steam_id_src
         * @memberof CMsgClientP2PConnectionInfo
         * @instance
         */
        CMsgClientP2PConnectionInfo.prototype.steam_id_src = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientP2PConnectionInfo app_id.
         * @member {number} app_id
         * @memberof CMsgClientP2PConnectionInfo
         * @instance
         */
        CMsgClientP2PConnectionInfo.prototype.app_id = 0;
    
        /**
         * CMsgClientP2PConnectionInfo candidate.
         * @member {Uint8Array} candidate
         * @memberof CMsgClientP2PConnectionInfo
         * @instance
         */
        CMsgClientP2PConnectionInfo.prototype.candidate = $util.newBuffer([]);
    
        /**
         * CMsgClientP2PConnectionInfo connection_id_src.
         * @member {number|Long} connection_id_src
         * @memberof CMsgClientP2PConnectionInfo
         * @instance
         */
        CMsgClientP2PConnectionInfo.prototype.connection_id_src = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientP2PConnectionInfo rendezvous.
         * @member {Uint8Array} rendezvous
         * @memberof CMsgClientP2PConnectionInfo
         * @instance
         */
        CMsgClientP2PConnectionInfo.prototype.rendezvous = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientP2PConnectionInfo instance using the specified properties.
         * @function create
         * @memberof CMsgClientP2PConnectionInfo
         * @static
         * @param {ICMsgClientP2PConnectionInfo=} [properties] Properties to set
         * @returns {CMsgClientP2PConnectionInfo} CMsgClientP2PConnectionInfo instance
         */
        CMsgClientP2PConnectionInfo.create = function create(properties) {
            return new CMsgClientP2PConnectionInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgClientP2PConnectionInfo message. Does not implicitly {@link CMsgClientP2PConnectionInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientP2PConnectionInfo
         * @static
         * @param {ICMsgClientP2PConnectionInfo} message CMsgClientP2PConnectionInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientP2PConnectionInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id_dest != null && Object.hasOwnProperty.call(message, "steam_id_dest"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id_dest);
            if (message.steam_id_src != null && Object.hasOwnProperty.call(message, "steam_id_src"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_src);
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.app_id);
            if (message.candidate != null && Object.hasOwnProperty.call(message, "candidate"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.candidate);
            if (message.connection_id_src != null && Object.hasOwnProperty.call(message, "connection_id_src"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.connection_id_src);
            if (message.rendezvous != null && Object.hasOwnProperty.call(message, "rendezvous"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.rendezvous);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientP2PConnectionInfo message, length delimited. Does not implicitly {@link CMsgClientP2PConnectionInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientP2PConnectionInfo
         * @static
         * @param {ICMsgClientP2PConnectionInfo} message CMsgClientP2PConnectionInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientP2PConnectionInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientP2PConnectionInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientP2PConnectionInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientP2PConnectionInfo} CMsgClientP2PConnectionInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientP2PConnectionInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientP2PConnectionInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id_dest = reader.fixed64();
                    break;
                case 2:
                    message.steam_id_src = reader.fixed64();
                    break;
                case 3:
                    message.app_id = reader.uint32();
                    break;
                case 4:
                    message.candidate = reader.bytes();
                    break;
                case 5:
                    message.connection_id_src = reader.fixed64();
                    break;
                case 6:
                    message.rendezvous = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientP2PConnectionInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientP2PConnectionInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientP2PConnectionInfo} CMsgClientP2PConnectionInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientP2PConnectionInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientP2PConnectionInfo message.
         * @function verify
         * @memberof CMsgClientP2PConnectionInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientP2PConnectionInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                if (!$util.isInteger(message.steam_id_dest) && !(message.steam_id_dest && $util.isInteger(message.steam_id_dest.low) && $util.isInteger(message.steam_id_dest.high)))
                    return "steam_id_dest: integer|Long expected";
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                if (!$util.isInteger(message.steam_id_src) && !(message.steam_id_src && $util.isInteger(message.steam_id_src.low) && $util.isInteger(message.steam_id_src.high)))
                    return "steam_id_src: integer|Long expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.candidate != null && message.hasOwnProperty("candidate"))
                if (!(message.candidate && typeof message.candidate.length === "number" || $util.isString(message.candidate)))
                    return "candidate: buffer expected";
            if (message.connection_id_src != null && message.hasOwnProperty("connection_id_src"))
                if (!$util.isInteger(message.connection_id_src) && !(message.connection_id_src && $util.isInteger(message.connection_id_src.low) && $util.isInteger(message.connection_id_src.high)))
                    return "connection_id_src: integer|Long expected";
            if (message.rendezvous != null && message.hasOwnProperty("rendezvous"))
                if (!(message.rendezvous && typeof message.rendezvous.length === "number" || $util.isString(message.rendezvous)))
                    return "rendezvous: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientP2PConnectionInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientP2PConnectionInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientP2PConnectionInfo} CMsgClientP2PConnectionInfo
         */
        CMsgClientP2PConnectionInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientP2PConnectionInfo)
                return object;
            var message = new $root.CMsgClientP2PConnectionInfo();
            if (object.steam_id_dest != null)
                if ($util.Long)
                    (message.steam_id_dest = $util.Long.fromValue(object.steam_id_dest)).unsigned = false;
                else if (typeof object.steam_id_dest === "string")
                    message.steam_id_dest = parseInt(object.steam_id_dest, 10);
                else if (typeof object.steam_id_dest === "number")
                    message.steam_id_dest = object.steam_id_dest;
                else if (typeof object.steam_id_dest === "object")
                    message.steam_id_dest = new $util.LongBits(object.steam_id_dest.low >>> 0, object.steam_id_dest.high >>> 0).toNumber();
            if (object.steam_id_src != null)
                if ($util.Long)
                    (message.steam_id_src = $util.Long.fromValue(object.steam_id_src)).unsigned = false;
                else if (typeof object.steam_id_src === "string")
                    message.steam_id_src = parseInt(object.steam_id_src, 10);
                else if (typeof object.steam_id_src === "number")
                    message.steam_id_src = object.steam_id_src;
                else if (typeof object.steam_id_src === "object")
                    message.steam_id_src = new $util.LongBits(object.steam_id_src.low >>> 0, object.steam_id_src.high >>> 0).toNumber();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.candidate != null)
                if (typeof object.candidate === "string")
                    $util.base64.decode(object.candidate, message.candidate = $util.newBuffer($util.base64.length(object.candidate)), 0);
                else if (object.candidate.length)
                    message.candidate = object.candidate;
            if (object.connection_id_src != null)
                if ($util.Long)
                    (message.connection_id_src = $util.Long.fromValue(object.connection_id_src)).unsigned = false;
                else if (typeof object.connection_id_src === "string")
                    message.connection_id_src = parseInt(object.connection_id_src, 10);
                else if (typeof object.connection_id_src === "number")
                    message.connection_id_src = object.connection_id_src;
                else if (typeof object.connection_id_src === "object")
                    message.connection_id_src = new $util.LongBits(object.connection_id_src.low >>> 0, object.connection_id_src.high >>> 0).toNumber();
            if (object.rendezvous != null)
                if (typeof object.rendezvous === "string")
                    $util.base64.decode(object.rendezvous, message.rendezvous = $util.newBuffer($util.base64.length(object.rendezvous)), 0);
                else if (object.rendezvous.length)
                    message.rendezvous = object.rendezvous;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientP2PConnectionInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientP2PConnectionInfo
         * @static
         * @param {CMsgClientP2PConnectionInfo} message CMsgClientP2PConnectionInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientP2PConnectionInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_dest = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_dest = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_src = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_src = options.longs === String ? "0" : 0;
                object.app_id = 0;
                if (options.bytes === String)
                    object.candidate = "";
                else {
                    object.candidate = [];
                    if (options.bytes !== Array)
                        object.candidate = $util.newBuffer(object.candidate);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.connection_id_src = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.connection_id_src = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.rendezvous = "";
                else {
                    object.rendezvous = [];
                    if (options.bytes !== Array)
                        object.rendezvous = $util.newBuffer(object.rendezvous);
                }
            }
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                if (typeof message.steam_id_dest === "number")
                    object.steam_id_dest = options.longs === String ? String(message.steam_id_dest) : message.steam_id_dest;
                else
                    object.steam_id_dest = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_dest) : options.longs === Number ? new $util.LongBits(message.steam_id_dest.low >>> 0, message.steam_id_dest.high >>> 0).toNumber() : message.steam_id_dest;
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                if (typeof message.steam_id_src === "number")
                    object.steam_id_src = options.longs === String ? String(message.steam_id_src) : message.steam_id_src;
                else
                    object.steam_id_src = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_src) : options.longs === Number ? new $util.LongBits(message.steam_id_src.low >>> 0, message.steam_id_src.high >>> 0).toNumber() : message.steam_id_src;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.candidate != null && message.hasOwnProperty("candidate"))
                object.candidate = options.bytes === String ? $util.base64.encode(message.candidate, 0, message.candidate.length) : options.bytes === Array ? Array.prototype.slice.call(message.candidate) : message.candidate;
            if (message.connection_id_src != null && message.hasOwnProperty("connection_id_src"))
                if (typeof message.connection_id_src === "number")
                    object.connection_id_src = options.longs === String ? String(message.connection_id_src) : message.connection_id_src;
                else
                    object.connection_id_src = options.longs === String ? $util.Long.prototype.toString.call(message.connection_id_src) : options.longs === Number ? new $util.LongBits(message.connection_id_src.low >>> 0, message.connection_id_src.high >>> 0).toNumber() : message.connection_id_src;
            if (message.rendezvous != null && message.hasOwnProperty("rendezvous"))
                object.rendezvous = options.bytes === String ? $util.base64.encode(message.rendezvous, 0, message.rendezvous.length) : options.bytes === Array ? Array.prototype.slice.call(message.rendezvous) : message.rendezvous;
            return object;
        };
    
        /**
         * Converts this CMsgClientP2PConnectionInfo to JSON.
         * @function toJSON
         * @memberof CMsgClientP2PConnectionInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientP2PConnectionInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientP2PConnectionInfo;
    })();
    
    $root.CMsgClientP2PConnectionFailInfo = (function() {
    
        /**
         * Properties of a CMsgClientP2PConnectionFailInfo.
         * @exports ICMsgClientP2PConnectionFailInfo
         * @interface ICMsgClientP2PConnectionFailInfo
         * @property {number|Long|null} [steam_id_dest] CMsgClientP2PConnectionFailInfo steam_id_dest
         * @property {number|Long|null} [steam_id_src] CMsgClientP2PConnectionFailInfo steam_id_src
         * @property {number|null} [app_id] CMsgClientP2PConnectionFailInfo app_id
         * @property {number|null} [ep2p_session_error] CMsgClientP2PConnectionFailInfo ep2p_session_error
         * @property {number|Long|null} [connection_id_dest] CMsgClientP2PConnectionFailInfo connection_id_dest
         * @property {number|null} [close_reason] CMsgClientP2PConnectionFailInfo close_reason
         * @property {string|null} [close_message] CMsgClientP2PConnectionFailInfo close_message
         */
    
        /**
         * Constructs a new CMsgClientP2PConnectionFailInfo.
         * @exports CMsgClientP2PConnectionFailInfo
         * @classdesc Represents a CMsgClientP2PConnectionFailInfo.
         * @implements ICMsgClientP2PConnectionFailInfo
         * @constructor
         * @param {ICMsgClientP2PConnectionFailInfo=} [properties] Properties to set
         */
        function CMsgClientP2PConnectionFailInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientP2PConnectionFailInfo steam_id_dest.
         * @member {number|Long} steam_id_dest
         * @memberof CMsgClientP2PConnectionFailInfo
         * @instance
         */
        CMsgClientP2PConnectionFailInfo.prototype.steam_id_dest = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientP2PConnectionFailInfo steam_id_src.
         * @member {number|Long} steam_id_src
         * @memberof CMsgClientP2PConnectionFailInfo
         * @instance
         */
        CMsgClientP2PConnectionFailInfo.prototype.steam_id_src = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientP2PConnectionFailInfo app_id.
         * @member {number} app_id
         * @memberof CMsgClientP2PConnectionFailInfo
         * @instance
         */
        CMsgClientP2PConnectionFailInfo.prototype.app_id = 0;
    
        /**
         * CMsgClientP2PConnectionFailInfo ep2p_session_error.
         * @member {number} ep2p_session_error
         * @memberof CMsgClientP2PConnectionFailInfo
         * @instance
         */
        CMsgClientP2PConnectionFailInfo.prototype.ep2p_session_error = 0;
    
        /**
         * CMsgClientP2PConnectionFailInfo connection_id_dest.
         * @member {number|Long} connection_id_dest
         * @memberof CMsgClientP2PConnectionFailInfo
         * @instance
         */
        CMsgClientP2PConnectionFailInfo.prototype.connection_id_dest = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientP2PConnectionFailInfo close_reason.
         * @member {number} close_reason
         * @memberof CMsgClientP2PConnectionFailInfo
         * @instance
         */
        CMsgClientP2PConnectionFailInfo.prototype.close_reason = 0;
    
        /**
         * CMsgClientP2PConnectionFailInfo close_message.
         * @member {string} close_message
         * @memberof CMsgClientP2PConnectionFailInfo
         * @instance
         */
        CMsgClientP2PConnectionFailInfo.prototype.close_message = "";
    
        /**
         * Creates a new CMsgClientP2PConnectionFailInfo instance using the specified properties.
         * @function create
         * @memberof CMsgClientP2PConnectionFailInfo
         * @static
         * @param {ICMsgClientP2PConnectionFailInfo=} [properties] Properties to set
         * @returns {CMsgClientP2PConnectionFailInfo} CMsgClientP2PConnectionFailInfo instance
         */
        CMsgClientP2PConnectionFailInfo.create = function create(properties) {
            return new CMsgClientP2PConnectionFailInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgClientP2PConnectionFailInfo message. Does not implicitly {@link CMsgClientP2PConnectionFailInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientP2PConnectionFailInfo
         * @static
         * @param {ICMsgClientP2PConnectionFailInfo} message CMsgClientP2PConnectionFailInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientP2PConnectionFailInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id_dest != null && Object.hasOwnProperty.call(message, "steam_id_dest"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id_dest);
            if (message.steam_id_src != null && Object.hasOwnProperty.call(message, "steam_id_src"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_src);
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.app_id);
            if (message.ep2p_session_error != null && Object.hasOwnProperty.call(message, "ep2p_session_error"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ep2p_session_error);
            if (message.connection_id_dest != null && Object.hasOwnProperty.call(message, "connection_id_dest"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.connection_id_dest);
            if (message.close_reason != null && Object.hasOwnProperty.call(message, "close_reason"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.close_reason);
            if (message.close_message != null && Object.hasOwnProperty.call(message, "close_message"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.close_message);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientP2PConnectionFailInfo message, length delimited. Does not implicitly {@link CMsgClientP2PConnectionFailInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientP2PConnectionFailInfo
         * @static
         * @param {ICMsgClientP2PConnectionFailInfo} message CMsgClientP2PConnectionFailInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientP2PConnectionFailInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientP2PConnectionFailInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientP2PConnectionFailInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientP2PConnectionFailInfo} CMsgClientP2PConnectionFailInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientP2PConnectionFailInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientP2PConnectionFailInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id_dest = reader.fixed64();
                    break;
                case 2:
                    message.steam_id_src = reader.fixed64();
                    break;
                case 3:
                    message.app_id = reader.uint32();
                    break;
                case 4:
                    message.ep2p_session_error = reader.uint32();
                    break;
                case 5:
                    message.connection_id_dest = reader.fixed64();
                    break;
                case 7:
                    message.close_reason = reader.uint32();
                    break;
                case 8:
                    message.close_message = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientP2PConnectionFailInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientP2PConnectionFailInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientP2PConnectionFailInfo} CMsgClientP2PConnectionFailInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientP2PConnectionFailInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientP2PConnectionFailInfo message.
         * @function verify
         * @memberof CMsgClientP2PConnectionFailInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientP2PConnectionFailInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                if (!$util.isInteger(message.steam_id_dest) && !(message.steam_id_dest && $util.isInteger(message.steam_id_dest.low) && $util.isInteger(message.steam_id_dest.high)))
                    return "steam_id_dest: integer|Long expected";
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                if (!$util.isInteger(message.steam_id_src) && !(message.steam_id_src && $util.isInteger(message.steam_id_src.low) && $util.isInteger(message.steam_id_src.high)))
                    return "steam_id_src: integer|Long expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.ep2p_session_error != null && message.hasOwnProperty("ep2p_session_error"))
                if (!$util.isInteger(message.ep2p_session_error))
                    return "ep2p_session_error: integer expected";
            if (message.connection_id_dest != null && message.hasOwnProperty("connection_id_dest"))
                if (!$util.isInteger(message.connection_id_dest) && !(message.connection_id_dest && $util.isInteger(message.connection_id_dest.low) && $util.isInteger(message.connection_id_dest.high)))
                    return "connection_id_dest: integer|Long expected";
            if (message.close_reason != null && message.hasOwnProperty("close_reason"))
                if (!$util.isInteger(message.close_reason))
                    return "close_reason: integer expected";
            if (message.close_message != null && message.hasOwnProperty("close_message"))
                if (!$util.isString(message.close_message))
                    return "close_message: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientP2PConnectionFailInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientP2PConnectionFailInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientP2PConnectionFailInfo} CMsgClientP2PConnectionFailInfo
         */
        CMsgClientP2PConnectionFailInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientP2PConnectionFailInfo)
                return object;
            var message = new $root.CMsgClientP2PConnectionFailInfo();
            if (object.steam_id_dest != null)
                if ($util.Long)
                    (message.steam_id_dest = $util.Long.fromValue(object.steam_id_dest)).unsigned = false;
                else if (typeof object.steam_id_dest === "string")
                    message.steam_id_dest = parseInt(object.steam_id_dest, 10);
                else if (typeof object.steam_id_dest === "number")
                    message.steam_id_dest = object.steam_id_dest;
                else if (typeof object.steam_id_dest === "object")
                    message.steam_id_dest = new $util.LongBits(object.steam_id_dest.low >>> 0, object.steam_id_dest.high >>> 0).toNumber();
            if (object.steam_id_src != null)
                if ($util.Long)
                    (message.steam_id_src = $util.Long.fromValue(object.steam_id_src)).unsigned = false;
                else if (typeof object.steam_id_src === "string")
                    message.steam_id_src = parseInt(object.steam_id_src, 10);
                else if (typeof object.steam_id_src === "number")
                    message.steam_id_src = object.steam_id_src;
                else if (typeof object.steam_id_src === "object")
                    message.steam_id_src = new $util.LongBits(object.steam_id_src.low >>> 0, object.steam_id_src.high >>> 0).toNumber();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.ep2p_session_error != null)
                message.ep2p_session_error = object.ep2p_session_error >>> 0;
            if (object.connection_id_dest != null)
                if ($util.Long)
                    (message.connection_id_dest = $util.Long.fromValue(object.connection_id_dest)).unsigned = false;
                else if (typeof object.connection_id_dest === "string")
                    message.connection_id_dest = parseInt(object.connection_id_dest, 10);
                else if (typeof object.connection_id_dest === "number")
                    message.connection_id_dest = object.connection_id_dest;
                else if (typeof object.connection_id_dest === "object")
                    message.connection_id_dest = new $util.LongBits(object.connection_id_dest.low >>> 0, object.connection_id_dest.high >>> 0).toNumber();
            if (object.close_reason != null)
                message.close_reason = object.close_reason >>> 0;
            if (object.close_message != null)
                message.close_message = String(object.close_message);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientP2PConnectionFailInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientP2PConnectionFailInfo
         * @static
         * @param {CMsgClientP2PConnectionFailInfo} message CMsgClientP2PConnectionFailInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientP2PConnectionFailInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_dest = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_dest = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_src = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_src = options.longs === String ? "0" : 0;
                object.app_id = 0;
                object.ep2p_session_error = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.connection_id_dest = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.connection_id_dest = options.longs === String ? "0" : 0;
                object.close_reason = 0;
                object.close_message = "";
            }
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                if (typeof message.steam_id_dest === "number")
                    object.steam_id_dest = options.longs === String ? String(message.steam_id_dest) : message.steam_id_dest;
                else
                    object.steam_id_dest = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_dest) : options.longs === Number ? new $util.LongBits(message.steam_id_dest.low >>> 0, message.steam_id_dest.high >>> 0).toNumber() : message.steam_id_dest;
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                if (typeof message.steam_id_src === "number")
                    object.steam_id_src = options.longs === String ? String(message.steam_id_src) : message.steam_id_src;
                else
                    object.steam_id_src = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_src) : options.longs === Number ? new $util.LongBits(message.steam_id_src.low >>> 0, message.steam_id_src.high >>> 0).toNumber() : message.steam_id_src;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.ep2p_session_error != null && message.hasOwnProperty("ep2p_session_error"))
                object.ep2p_session_error = message.ep2p_session_error;
            if (message.connection_id_dest != null && message.hasOwnProperty("connection_id_dest"))
                if (typeof message.connection_id_dest === "number")
                    object.connection_id_dest = options.longs === String ? String(message.connection_id_dest) : message.connection_id_dest;
                else
                    object.connection_id_dest = options.longs === String ? $util.Long.prototype.toString.call(message.connection_id_dest) : options.longs === Number ? new $util.LongBits(message.connection_id_dest.low >>> 0, message.connection_id_dest.high >>> 0).toNumber() : message.connection_id_dest;
            if (message.close_reason != null && message.hasOwnProperty("close_reason"))
                object.close_reason = message.close_reason;
            if (message.close_message != null && message.hasOwnProperty("close_message"))
                object.close_message = message.close_message;
            return object;
        };
    
        /**
         * Converts this CMsgClientP2PConnectionFailInfo to JSON.
         * @function toJSON
         * @memberof CMsgClientP2PConnectionFailInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientP2PConnectionFailInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientP2PConnectionFailInfo;
    })();
    
    $root.CMsgClientNetworkingCertRequest = (function() {
    
        /**
         * Properties of a CMsgClientNetworkingCertRequest.
         * @exports ICMsgClientNetworkingCertRequest
         * @interface ICMsgClientNetworkingCertRequest
         * @property {Uint8Array|null} [key_data] CMsgClientNetworkingCertRequest key_data
         * @property {number|null} [app_id] CMsgClientNetworkingCertRequest app_id
         */
    
        /**
         * Constructs a new CMsgClientNetworkingCertRequest.
         * @exports CMsgClientNetworkingCertRequest
         * @classdesc Represents a CMsgClientNetworkingCertRequest.
         * @implements ICMsgClientNetworkingCertRequest
         * @constructor
         * @param {ICMsgClientNetworkingCertRequest=} [properties] Properties to set
         */
        function CMsgClientNetworkingCertRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientNetworkingCertRequest key_data.
         * @member {Uint8Array} key_data
         * @memberof CMsgClientNetworkingCertRequest
         * @instance
         */
        CMsgClientNetworkingCertRequest.prototype.key_data = $util.newBuffer([]);
    
        /**
         * CMsgClientNetworkingCertRequest app_id.
         * @member {number} app_id
         * @memberof CMsgClientNetworkingCertRequest
         * @instance
         */
        CMsgClientNetworkingCertRequest.prototype.app_id = 0;
    
        /**
         * Creates a new CMsgClientNetworkingCertRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientNetworkingCertRequest
         * @static
         * @param {ICMsgClientNetworkingCertRequest=} [properties] Properties to set
         * @returns {CMsgClientNetworkingCertRequest} CMsgClientNetworkingCertRequest instance
         */
        CMsgClientNetworkingCertRequest.create = function create(properties) {
            return new CMsgClientNetworkingCertRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientNetworkingCertRequest message. Does not implicitly {@link CMsgClientNetworkingCertRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientNetworkingCertRequest
         * @static
         * @param {ICMsgClientNetworkingCertRequest} message CMsgClientNetworkingCertRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientNetworkingCertRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.key_data != null && Object.hasOwnProperty.call(message, "key_data"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.key_data);
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.app_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientNetworkingCertRequest message, length delimited. Does not implicitly {@link CMsgClientNetworkingCertRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientNetworkingCertRequest
         * @static
         * @param {ICMsgClientNetworkingCertRequest} message CMsgClientNetworkingCertRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientNetworkingCertRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientNetworkingCertRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientNetworkingCertRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientNetworkingCertRequest} CMsgClientNetworkingCertRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientNetworkingCertRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientNetworkingCertRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2:
                    message.key_data = reader.bytes();
                    break;
                case 3:
                    message.app_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientNetworkingCertRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientNetworkingCertRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientNetworkingCertRequest} CMsgClientNetworkingCertRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientNetworkingCertRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientNetworkingCertRequest message.
         * @function verify
         * @memberof CMsgClientNetworkingCertRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientNetworkingCertRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.key_data != null && message.hasOwnProperty("key_data"))
                if (!(message.key_data && typeof message.key_data.length === "number" || $util.isString(message.key_data)))
                    return "key_data: buffer expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientNetworkingCertRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientNetworkingCertRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientNetworkingCertRequest} CMsgClientNetworkingCertRequest
         */
        CMsgClientNetworkingCertRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientNetworkingCertRequest)
                return object;
            var message = new $root.CMsgClientNetworkingCertRequest();
            if (object.key_data != null)
                if (typeof object.key_data === "string")
                    $util.base64.decode(object.key_data, message.key_data = $util.newBuffer($util.base64.length(object.key_data)), 0);
                else if (object.key_data.length)
                    message.key_data = object.key_data;
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientNetworkingCertRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientNetworkingCertRequest
         * @static
         * @param {CMsgClientNetworkingCertRequest} message CMsgClientNetworkingCertRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientNetworkingCertRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if (options.bytes === String)
                    object.key_data = "";
                else {
                    object.key_data = [];
                    if (options.bytes !== Array)
                        object.key_data = $util.newBuffer(object.key_data);
                }
                object.app_id = 0;
            }
            if (message.key_data != null && message.hasOwnProperty("key_data"))
                object.key_data = options.bytes === String ? $util.base64.encode(message.key_data, 0, message.key_data.length) : options.bytes === Array ? Array.prototype.slice.call(message.key_data) : message.key_data;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientNetworkingCertRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientNetworkingCertRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientNetworkingCertRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientNetworkingCertRequest;
    })();
    
    $root.CMsgClientNetworkingCertReply = (function() {
    
        /**
         * Properties of a CMsgClientNetworkingCertReply.
         * @exports ICMsgClientNetworkingCertReply
         * @interface ICMsgClientNetworkingCertReply
         * @property {Uint8Array|null} [cert] CMsgClientNetworkingCertReply cert
         * @property {number|Long|null} [ca_key_id] CMsgClientNetworkingCertReply ca_key_id
         * @property {Uint8Array|null} [ca_signature] CMsgClientNetworkingCertReply ca_signature
         */
    
        /**
         * Constructs a new CMsgClientNetworkingCertReply.
         * @exports CMsgClientNetworkingCertReply
         * @classdesc Represents a CMsgClientNetworkingCertReply.
         * @implements ICMsgClientNetworkingCertReply
         * @constructor
         * @param {ICMsgClientNetworkingCertReply=} [properties] Properties to set
         */
        function CMsgClientNetworkingCertReply(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientNetworkingCertReply cert.
         * @member {Uint8Array} cert
         * @memberof CMsgClientNetworkingCertReply
         * @instance
         */
        CMsgClientNetworkingCertReply.prototype.cert = $util.newBuffer([]);
    
        /**
         * CMsgClientNetworkingCertReply ca_key_id.
         * @member {number|Long} ca_key_id
         * @memberof CMsgClientNetworkingCertReply
         * @instance
         */
        CMsgClientNetworkingCertReply.prototype.ca_key_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientNetworkingCertReply ca_signature.
         * @member {Uint8Array} ca_signature
         * @memberof CMsgClientNetworkingCertReply
         * @instance
         */
        CMsgClientNetworkingCertReply.prototype.ca_signature = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientNetworkingCertReply instance using the specified properties.
         * @function create
         * @memberof CMsgClientNetworkingCertReply
         * @static
         * @param {ICMsgClientNetworkingCertReply=} [properties] Properties to set
         * @returns {CMsgClientNetworkingCertReply} CMsgClientNetworkingCertReply instance
         */
        CMsgClientNetworkingCertReply.create = function create(properties) {
            return new CMsgClientNetworkingCertReply(properties);
        };
    
        /**
         * Encodes the specified CMsgClientNetworkingCertReply message. Does not implicitly {@link CMsgClientNetworkingCertReply.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientNetworkingCertReply
         * @static
         * @param {ICMsgClientNetworkingCertReply} message CMsgClientNetworkingCertReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientNetworkingCertReply.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.cert != null && Object.hasOwnProperty.call(message, "cert"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.cert);
            if (message.ca_key_id != null && Object.hasOwnProperty.call(message, "ca_key_id"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.ca_key_id);
            if (message.ca_signature != null && Object.hasOwnProperty.call(message, "ca_signature"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.ca_signature);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientNetworkingCertReply message, length delimited. Does not implicitly {@link CMsgClientNetworkingCertReply.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientNetworkingCertReply
         * @static
         * @param {ICMsgClientNetworkingCertReply} message CMsgClientNetworkingCertReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientNetworkingCertReply.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientNetworkingCertReply message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientNetworkingCertReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientNetworkingCertReply} CMsgClientNetworkingCertReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientNetworkingCertReply.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientNetworkingCertReply();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 4:
                    message.cert = reader.bytes();
                    break;
                case 5:
                    message.ca_key_id = reader.fixed64();
                    break;
                case 6:
                    message.ca_signature = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientNetworkingCertReply message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientNetworkingCertReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientNetworkingCertReply} CMsgClientNetworkingCertReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientNetworkingCertReply.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientNetworkingCertReply message.
         * @function verify
         * @memberof CMsgClientNetworkingCertReply
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientNetworkingCertReply.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.cert != null && message.hasOwnProperty("cert"))
                if (!(message.cert && typeof message.cert.length === "number" || $util.isString(message.cert)))
                    return "cert: buffer expected";
            if (message.ca_key_id != null && message.hasOwnProperty("ca_key_id"))
                if (!$util.isInteger(message.ca_key_id) && !(message.ca_key_id && $util.isInteger(message.ca_key_id.low) && $util.isInteger(message.ca_key_id.high)))
                    return "ca_key_id: integer|Long expected";
            if (message.ca_signature != null && message.hasOwnProperty("ca_signature"))
                if (!(message.ca_signature && typeof message.ca_signature.length === "number" || $util.isString(message.ca_signature)))
                    return "ca_signature: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientNetworkingCertReply message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientNetworkingCertReply
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientNetworkingCertReply} CMsgClientNetworkingCertReply
         */
        CMsgClientNetworkingCertReply.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientNetworkingCertReply)
                return object;
            var message = new $root.CMsgClientNetworkingCertReply();
            if (object.cert != null)
                if (typeof object.cert === "string")
                    $util.base64.decode(object.cert, message.cert = $util.newBuffer($util.base64.length(object.cert)), 0);
                else if (object.cert.length)
                    message.cert = object.cert;
            if (object.ca_key_id != null)
                if ($util.Long)
                    (message.ca_key_id = $util.Long.fromValue(object.ca_key_id)).unsigned = false;
                else if (typeof object.ca_key_id === "string")
                    message.ca_key_id = parseInt(object.ca_key_id, 10);
                else if (typeof object.ca_key_id === "number")
                    message.ca_key_id = object.ca_key_id;
                else if (typeof object.ca_key_id === "object")
                    message.ca_key_id = new $util.LongBits(object.ca_key_id.low >>> 0, object.ca_key_id.high >>> 0).toNumber();
            if (object.ca_signature != null)
                if (typeof object.ca_signature === "string")
                    $util.base64.decode(object.ca_signature, message.ca_signature = $util.newBuffer($util.base64.length(object.ca_signature)), 0);
                else if (object.ca_signature.length)
                    message.ca_signature = object.ca_signature;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientNetworkingCertReply message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientNetworkingCertReply
         * @static
         * @param {CMsgClientNetworkingCertReply} message CMsgClientNetworkingCertReply
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientNetworkingCertReply.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if (options.bytes === String)
                    object.cert = "";
                else {
                    object.cert = [];
                    if (options.bytes !== Array)
                        object.cert = $util.newBuffer(object.cert);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.ca_key_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.ca_key_id = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.ca_signature = "";
                else {
                    object.ca_signature = [];
                    if (options.bytes !== Array)
                        object.ca_signature = $util.newBuffer(object.ca_signature);
                }
            }
            if (message.cert != null && message.hasOwnProperty("cert"))
                object.cert = options.bytes === String ? $util.base64.encode(message.cert, 0, message.cert.length) : options.bytes === Array ? Array.prototype.slice.call(message.cert) : message.cert;
            if (message.ca_key_id != null && message.hasOwnProperty("ca_key_id"))
                if (typeof message.ca_key_id === "number")
                    object.ca_key_id = options.longs === String ? String(message.ca_key_id) : message.ca_key_id;
                else
                    object.ca_key_id = options.longs === String ? $util.Long.prototype.toString.call(message.ca_key_id) : options.longs === Number ? new $util.LongBits(message.ca_key_id.low >>> 0, message.ca_key_id.high >>> 0).toNumber() : message.ca_key_id;
            if (message.ca_signature != null && message.hasOwnProperty("ca_signature"))
                object.ca_signature = options.bytes === String ? $util.base64.encode(message.ca_signature, 0, message.ca_signature.length) : options.bytes === Array ? Array.prototype.slice.call(message.ca_signature) : message.ca_signature;
            return object;
        };
    
        /**
         * Converts this CMsgClientNetworkingCertReply to JSON.
         * @function toJSON
         * @memberof CMsgClientNetworkingCertReply
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientNetworkingCertReply.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientNetworkingCertReply;
    })();
    
    $root.CMsgClientNetworkingMobileCertRequest = (function() {
    
        /**
         * Properties of a CMsgClientNetworkingMobileCertRequest.
         * @exports ICMsgClientNetworkingMobileCertRequest
         * @interface ICMsgClientNetworkingMobileCertRequest
         * @property {number|null} [app_id] CMsgClientNetworkingMobileCertRequest app_id
         */
    
        /**
         * Constructs a new CMsgClientNetworkingMobileCertRequest.
         * @exports CMsgClientNetworkingMobileCertRequest
         * @classdesc Represents a CMsgClientNetworkingMobileCertRequest.
         * @implements ICMsgClientNetworkingMobileCertRequest
         * @constructor
         * @param {ICMsgClientNetworkingMobileCertRequest=} [properties] Properties to set
         */
        function CMsgClientNetworkingMobileCertRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientNetworkingMobileCertRequest app_id.
         * @member {number} app_id
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @instance
         */
        CMsgClientNetworkingMobileCertRequest.prototype.app_id = 0;
    
        /**
         * Creates a new CMsgClientNetworkingMobileCertRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @static
         * @param {ICMsgClientNetworkingMobileCertRequest=} [properties] Properties to set
         * @returns {CMsgClientNetworkingMobileCertRequest} CMsgClientNetworkingMobileCertRequest instance
         */
        CMsgClientNetworkingMobileCertRequest.create = function create(properties) {
            return new CMsgClientNetworkingMobileCertRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientNetworkingMobileCertRequest message. Does not implicitly {@link CMsgClientNetworkingMobileCertRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @static
         * @param {ICMsgClientNetworkingMobileCertRequest} message CMsgClientNetworkingMobileCertRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientNetworkingMobileCertRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientNetworkingMobileCertRequest message, length delimited. Does not implicitly {@link CMsgClientNetworkingMobileCertRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @static
         * @param {ICMsgClientNetworkingMobileCertRequest} message CMsgClientNetworkingMobileCertRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientNetworkingMobileCertRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientNetworkingMobileCertRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientNetworkingMobileCertRequest} CMsgClientNetworkingMobileCertRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientNetworkingMobileCertRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientNetworkingMobileCertRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientNetworkingMobileCertRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientNetworkingMobileCertRequest} CMsgClientNetworkingMobileCertRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientNetworkingMobileCertRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientNetworkingMobileCertRequest message.
         * @function verify
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientNetworkingMobileCertRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientNetworkingMobileCertRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientNetworkingMobileCertRequest} CMsgClientNetworkingMobileCertRequest
         */
        CMsgClientNetworkingMobileCertRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientNetworkingMobileCertRequest)
                return object;
            var message = new $root.CMsgClientNetworkingMobileCertRequest();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientNetworkingMobileCertRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @static
         * @param {CMsgClientNetworkingMobileCertRequest} message CMsgClientNetworkingMobileCertRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientNetworkingMobileCertRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.app_id = 0;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientNetworkingMobileCertRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientNetworkingMobileCertRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientNetworkingMobileCertRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientNetworkingMobileCertRequest;
    })();
    
    $root.CMsgClientNetworkingMobileCertReply = (function() {
    
        /**
         * Properties of a CMsgClientNetworkingMobileCertReply.
         * @exports ICMsgClientNetworkingMobileCertReply
         * @interface ICMsgClientNetworkingMobileCertReply
         * @property {string|null} [encoded_cert] CMsgClientNetworkingMobileCertReply encoded_cert
         */
    
        /**
         * Constructs a new CMsgClientNetworkingMobileCertReply.
         * @exports CMsgClientNetworkingMobileCertReply
         * @classdesc Represents a CMsgClientNetworkingMobileCertReply.
         * @implements ICMsgClientNetworkingMobileCertReply
         * @constructor
         * @param {ICMsgClientNetworkingMobileCertReply=} [properties] Properties to set
         */
        function CMsgClientNetworkingMobileCertReply(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientNetworkingMobileCertReply encoded_cert.
         * @member {string} encoded_cert
         * @memberof CMsgClientNetworkingMobileCertReply
         * @instance
         */
        CMsgClientNetworkingMobileCertReply.prototype.encoded_cert = "";
    
        /**
         * Creates a new CMsgClientNetworkingMobileCertReply instance using the specified properties.
         * @function create
         * @memberof CMsgClientNetworkingMobileCertReply
         * @static
         * @param {ICMsgClientNetworkingMobileCertReply=} [properties] Properties to set
         * @returns {CMsgClientNetworkingMobileCertReply} CMsgClientNetworkingMobileCertReply instance
         */
        CMsgClientNetworkingMobileCertReply.create = function create(properties) {
            return new CMsgClientNetworkingMobileCertReply(properties);
        };
    
        /**
         * Encodes the specified CMsgClientNetworkingMobileCertReply message. Does not implicitly {@link CMsgClientNetworkingMobileCertReply.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientNetworkingMobileCertReply
         * @static
         * @param {ICMsgClientNetworkingMobileCertReply} message CMsgClientNetworkingMobileCertReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientNetworkingMobileCertReply.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.encoded_cert != null && Object.hasOwnProperty.call(message, "encoded_cert"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.encoded_cert);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientNetworkingMobileCertReply message, length delimited. Does not implicitly {@link CMsgClientNetworkingMobileCertReply.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientNetworkingMobileCertReply
         * @static
         * @param {ICMsgClientNetworkingMobileCertReply} message CMsgClientNetworkingMobileCertReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientNetworkingMobileCertReply.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientNetworkingMobileCertReply message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientNetworkingMobileCertReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientNetworkingMobileCertReply} CMsgClientNetworkingMobileCertReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientNetworkingMobileCertReply.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientNetworkingMobileCertReply();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.encoded_cert = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientNetworkingMobileCertReply message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientNetworkingMobileCertReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientNetworkingMobileCertReply} CMsgClientNetworkingMobileCertReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientNetworkingMobileCertReply.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientNetworkingMobileCertReply message.
         * @function verify
         * @memberof CMsgClientNetworkingMobileCertReply
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientNetworkingMobileCertReply.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.encoded_cert != null && message.hasOwnProperty("encoded_cert"))
                if (!$util.isString(message.encoded_cert))
                    return "encoded_cert: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientNetworkingMobileCertReply message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientNetworkingMobileCertReply
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientNetworkingMobileCertReply} CMsgClientNetworkingMobileCertReply
         */
        CMsgClientNetworkingMobileCertReply.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientNetworkingMobileCertReply)
                return object;
            var message = new $root.CMsgClientNetworkingMobileCertReply();
            if (object.encoded_cert != null)
                message.encoded_cert = String(object.encoded_cert);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientNetworkingMobileCertReply message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientNetworkingMobileCertReply
         * @static
         * @param {CMsgClientNetworkingMobileCertReply} message CMsgClientNetworkingMobileCertReply
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientNetworkingMobileCertReply.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.encoded_cert = "";
            if (message.encoded_cert != null && message.hasOwnProperty("encoded_cert"))
                object.encoded_cert = message.encoded_cert;
            return object;
        };
    
        /**
         * Converts this CMsgClientNetworkingMobileCertReply to JSON.
         * @function toJSON
         * @memberof CMsgClientNetworkingMobileCertReply
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientNetworkingMobileCertReply.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientNetworkingMobileCertReply;
    })();
    
    $root.CMsgClientGetAppOwnershipTicket = (function() {
    
        /**
         * Properties of a CMsgClientGetAppOwnershipTicket.
         * @exports ICMsgClientGetAppOwnershipTicket
         * @interface ICMsgClientGetAppOwnershipTicket
         * @property {number|null} [app_id] CMsgClientGetAppOwnershipTicket app_id
         */
    
        /**
         * Constructs a new CMsgClientGetAppOwnershipTicket.
         * @exports CMsgClientGetAppOwnershipTicket
         * @classdesc Represents a CMsgClientGetAppOwnershipTicket.
         * @implements ICMsgClientGetAppOwnershipTicket
         * @constructor
         * @param {ICMsgClientGetAppOwnershipTicket=} [properties] Properties to set
         */
        function CMsgClientGetAppOwnershipTicket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetAppOwnershipTicket app_id.
         * @member {number} app_id
         * @memberof CMsgClientGetAppOwnershipTicket
         * @instance
         */
        CMsgClientGetAppOwnershipTicket.prototype.app_id = 0;
    
        /**
         * Creates a new CMsgClientGetAppOwnershipTicket instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetAppOwnershipTicket
         * @static
         * @param {ICMsgClientGetAppOwnershipTicket=} [properties] Properties to set
         * @returns {CMsgClientGetAppOwnershipTicket} CMsgClientGetAppOwnershipTicket instance
         */
        CMsgClientGetAppOwnershipTicket.create = function create(properties) {
            return new CMsgClientGetAppOwnershipTicket(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetAppOwnershipTicket message. Does not implicitly {@link CMsgClientGetAppOwnershipTicket.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetAppOwnershipTicket
         * @static
         * @param {ICMsgClientGetAppOwnershipTicket} message CMsgClientGetAppOwnershipTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetAppOwnershipTicket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetAppOwnershipTicket message, length delimited. Does not implicitly {@link CMsgClientGetAppOwnershipTicket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetAppOwnershipTicket
         * @static
         * @param {ICMsgClientGetAppOwnershipTicket} message CMsgClientGetAppOwnershipTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetAppOwnershipTicket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetAppOwnershipTicket message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetAppOwnershipTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetAppOwnershipTicket} CMsgClientGetAppOwnershipTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetAppOwnershipTicket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetAppOwnershipTicket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetAppOwnershipTicket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetAppOwnershipTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetAppOwnershipTicket} CMsgClientGetAppOwnershipTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetAppOwnershipTicket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetAppOwnershipTicket message.
         * @function verify
         * @memberof CMsgClientGetAppOwnershipTicket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetAppOwnershipTicket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetAppOwnershipTicket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetAppOwnershipTicket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetAppOwnershipTicket} CMsgClientGetAppOwnershipTicket
         */
        CMsgClientGetAppOwnershipTicket.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetAppOwnershipTicket)
                return object;
            var message = new $root.CMsgClientGetAppOwnershipTicket();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetAppOwnershipTicket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetAppOwnershipTicket
         * @static
         * @param {CMsgClientGetAppOwnershipTicket} message CMsgClientGetAppOwnershipTicket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetAppOwnershipTicket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.app_id = 0;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetAppOwnershipTicket to JSON.
         * @function toJSON
         * @memberof CMsgClientGetAppOwnershipTicket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetAppOwnershipTicket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetAppOwnershipTicket;
    })();
    
    $root.CMsgClientGetAppOwnershipTicketResponse = (function() {
    
        /**
         * Properties of a CMsgClientGetAppOwnershipTicketResponse.
         * @exports ICMsgClientGetAppOwnershipTicketResponse
         * @interface ICMsgClientGetAppOwnershipTicketResponse
         * @property {number|null} [eresult] CMsgClientGetAppOwnershipTicketResponse eresult
         * @property {number|null} [app_id] CMsgClientGetAppOwnershipTicketResponse app_id
         * @property {Uint8Array|null} [ticket] CMsgClientGetAppOwnershipTicketResponse ticket
         */
    
        /**
         * Constructs a new CMsgClientGetAppOwnershipTicketResponse.
         * @exports CMsgClientGetAppOwnershipTicketResponse
         * @classdesc Represents a CMsgClientGetAppOwnershipTicketResponse.
         * @implements ICMsgClientGetAppOwnershipTicketResponse
         * @constructor
         * @param {ICMsgClientGetAppOwnershipTicketResponse=} [properties] Properties to set
         */
        function CMsgClientGetAppOwnershipTicketResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetAppOwnershipTicketResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @instance
         */
        CMsgClientGetAppOwnershipTicketResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientGetAppOwnershipTicketResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @instance
         */
        CMsgClientGetAppOwnershipTicketResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientGetAppOwnershipTicketResponse ticket.
         * @member {Uint8Array} ticket
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @instance
         */
        CMsgClientGetAppOwnershipTicketResponse.prototype.ticket = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientGetAppOwnershipTicketResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @static
         * @param {ICMsgClientGetAppOwnershipTicketResponse=} [properties] Properties to set
         * @returns {CMsgClientGetAppOwnershipTicketResponse} CMsgClientGetAppOwnershipTicketResponse instance
         */
        CMsgClientGetAppOwnershipTicketResponse.create = function create(properties) {
            return new CMsgClientGetAppOwnershipTicketResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetAppOwnershipTicketResponse message. Does not implicitly {@link CMsgClientGetAppOwnershipTicketResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @static
         * @param {ICMsgClientGetAppOwnershipTicketResponse} message CMsgClientGetAppOwnershipTicketResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetAppOwnershipTicketResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eresult);
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
            if (message.ticket != null && Object.hasOwnProperty.call(message, "ticket"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.ticket);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetAppOwnershipTicketResponse message, length delimited. Does not implicitly {@link CMsgClientGetAppOwnershipTicketResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @static
         * @param {ICMsgClientGetAppOwnershipTicketResponse} message CMsgClientGetAppOwnershipTicketResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetAppOwnershipTicketResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetAppOwnershipTicketResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetAppOwnershipTicketResponse} CMsgClientGetAppOwnershipTicketResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetAppOwnershipTicketResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetAppOwnershipTicketResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.uint32();
                    break;
                case 2:
                    message.app_id = reader.uint32();
                    break;
                case 3:
                    message.ticket = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetAppOwnershipTicketResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetAppOwnershipTicketResponse} CMsgClientGetAppOwnershipTicketResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetAppOwnershipTicketResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetAppOwnershipTicketResponse message.
         * @function verify
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetAppOwnershipTicketResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                if (!(message.ticket && typeof message.ticket.length === "number" || $util.isString(message.ticket)))
                    return "ticket: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetAppOwnershipTicketResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetAppOwnershipTicketResponse} CMsgClientGetAppOwnershipTicketResponse
         */
        CMsgClientGetAppOwnershipTicketResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetAppOwnershipTicketResponse)
                return object;
            var message = new $root.CMsgClientGetAppOwnershipTicketResponse();
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.ticket != null)
                if (typeof object.ticket === "string")
                    $util.base64.decode(object.ticket, message.ticket = $util.newBuffer($util.base64.length(object.ticket)), 0);
                else if (object.ticket.length)
                    message.ticket = object.ticket;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetAppOwnershipTicketResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @static
         * @param {CMsgClientGetAppOwnershipTicketResponse} message CMsgClientGetAppOwnershipTicketResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetAppOwnershipTicketResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.app_id = 0;
                if (options.bytes === String)
                    object.ticket = "";
                else {
                    object.ticket = [];
                    if (options.bytes !== Array)
                        object.ticket = $util.newBuffer(object.ticket);
                }
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                object.ticket = options.bytes === String ? $util.base64.encode(message.ticket, 0, message.ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.ticket) : message.ticket;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetAppOwnershipTicketResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientGetAppOwnershipTicketResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetAppOwnershipTicketResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetAppOwnershipTicketResponse;
    })();
    
    $root.CMsgClientSessionToken = (function() {
    
        /**
         * Properties of a CMsgClientSessionToken.
         * @exports ICMsgClientSessionToken
         * @interface ICMsgClientSessionToken
         * @property {number|Long|null} [token] CMsgClientSessionToken token
         */
    
        /**
         * Constructs a new CMsgClientSessionToken.
         * @exports CMsgClientSessionToken
         * @classdesc Represents a CMsgClientSessionToken.
         * @implements ICMsgClientSessionToken
         * @constructor
         * @param {ICMsgClientSessionToken=} [properties] Properties to set
         */
        function CMsgClientSessionToken(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientSessionToken token.
         * @member {number|Long} token
         * @memberof CMsgClientSessionToken
         * @instance
         */
        CMsgClientSessionToken.prototype.token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientSessionToken instance using the specified properties.
         * @function create
         * @memberof CMsgClientSessionToken
         * @static
         * @param {ICMsgClientSessionToken=} [properties] Properties to set
         * @returns {CMsgClientSessionToken} CMsgClientSessionToken instance
         */
        CMsgClientSessionToken.create = function create(properties) {
            return new CMsgClientSessionToken(properties);
        };
    
        /**
         * Encodes the specified CMsgClientSessionToken message. Does not implicitly {@link CMsgClientSessionToken.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientSessionToken
         * @static
         * @param {ICMsgClientSessionToken} message CMsgClientSessionToken message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSessionToken.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.token != null && Object.hasOwnProperty.call(message, "token"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.token);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientSessionToken message, length delimited. Does not implicitly {@link CMsgClientSessionToken.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientSessionToken
         * @static
         * @param {ICMsgClientSessionToken} message CMsgClientSessionToken message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSessionToken.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientSessionToken message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientSessionToken
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientSessionToken} CMsgClientSessionToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSessionToken.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSessionToken();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.token = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientSessionToken message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientSessionToken
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientSessionToken} CMsgClientSessionToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSessionToken.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientSessionToken message.
         * @function verify
         * @memberof CMsgClientSessionToken
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientSessionToken.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.token != null && message.hasOwnProperty("token"))
                if (!$util.isInteger(message.token) && !(message.token && $util.isInteger(message.token.low) && $util.isInteger(message.token.high)))
                    return "token: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientSessionToken message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientSessionToken
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientSessionToken} CMsgClientSessionToken
         */
        CMsgClientSessionToken.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientSessionToken)
                return object;
            var message = new $root.CMsgClientSessionToken();
            if (object.token != null)
                if ($util.Long)
                    (message.token = $util.Long.fromValue(object.token)).unsigned = true;
                else if (typeof object.token === "string")
                    message.token = parseInt(object.token, 10);
                else if (typeof object.token === "number")
                    message.token = object.token;
                else if (typeof object.token === "object")
                    message.token = new $util.LongBits(object.token.low >>> 0, object.token.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientSessionToken message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientSessionToken
         * @static
         * @param {CMsgClientSessionToken} message CMsgClientSessionToken
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientSessionToken.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.token = options.longs === String ? "0" : 0;
            if (message.token != null && message.hasOwnProperty("token"))
                if (typeof message.token === "number")
                    object.token = options.longs === String ? String(message.token) : message.token;
                else
                    object.token = options.longs === String ? $util.Long.prototype.toString.call(message.token) : options.longs === Number ? new $util.LongBits(message.token.low >>> 0, message.token.high >>> 0).toNumber(true) : message.token;
            return object;
        };
    
        /**
         * Converts this CMsgClientSessionToken to JSON.
         * @function toJSON
         * @memberof CMsgClientSessionToken
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientSessionToken.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientSessionToken;
    })();
    
    $root.CMsgClientGameConnectTokens = (function() {
    
        /**
         * Properties of a CMsgClientGameConnectTokens.
         * @exports ICMsgClientGameConnectTokens
         * @interface ICMsgClientGameConnectTokens
         * @property {number|null} [max_tokens_to_keep] CMsgClientGameConnectTokens max_tokens_to_keep
         * @property {Array.<Uint8Array>|null} [tokens] CMsgClientGameConnectTokens tokens
         */
    
        /**
         * Constructs a new CMsgClientGameConnectTokens.
         * @exports CMsgClientGameConnectTokens
         * @classdesc Represents a CMsgClientGameConnectTokens.
         * @implements ICMsgClientGameConnectTokens
         * @constructor
         * @param {ICMsgClientGameConnectTokens=} [properties] Properties to set
         */
        function CMsgClientGameConnectTokens(properties) {
            this.tokens = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGameConnectTokens max_tokens_to_keep.
         * @member {number} max_tokens_to_keep
         * @memberof CMsgClientGameConnectTokens
         * @instance
         */
        CMsgClientGameConnectTokens.prototype.max_tokens_to_keep = 10;
    
        /**
         * CMsgClientGameConnectTokens tokens.
         * @member {Array.<Uint8Array>} tokens
         * @memberof CMsgClientGameConnectTokens
         * @instance
         */
        CMsgClientGameConnectTokens.prototype.tokens = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientGameConnectTokens instance using the specified properties.
         * @function create
         * @memberof CMsgClientGameConnectTokens
         * @static
         * @param {ICMsgClientGameConnectTokens=} [properties] Properties to set
         * @returns {CMsgClientGameConnectTokens} CMsgClientGameConnectTokens instance
         */
        CMsgClientGameConnectTokens.create = function create(properties) {
            return new CMsgClientGameConnectTokens(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGameConnectTokens message. Does not implicitly {@link CMsgClientGameConnectTokens.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGameConnectTokens
         * @static
         * @param {ICMsgClientGameConnectTokens} message CMsgClientGameConnectTokens message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGameConnectTokens.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.max_tokens_to_keep != null && Object.hasOwnProperty.call(message, "max_tokens_to_keep"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.max_tokens_to_keep);
            if (message.tokens != null && message.tokens.length)
                for (var i = 0; i < message.tokens.length; ++i)
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.tokens[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGameConnectTokens message, length delimited. Does not implicitly {@link CMsgClientGameConnectTokens.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGameConnectTokens
         * @static
         * @param {ICMsgClientGameConnectTokens} message CMsgClientGameConnectTokens message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGameConnectTokens.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGameConnectTokens message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGameConnectTokens
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGameConnectTokens} CMsgClientGameConnectTokens
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGameConnectTokens.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGameConnectTokens();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.max_tokens_to_keep = reader.uint32();
                    break;
                case 2:
                    if (!(message.tokens && message.tokens.length))
                        message.tokens = [];
                    message.tokens.push(reader.bytes());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGameConnectTokens message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGameConnectTokens
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGameConnectTokens} CMsgClientGameConnectTokens
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGameConnectTokens.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGameConnectTokens message.
         * @function verify
         * @memberof CMsgClientGameConnectTokens
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGameConnectTokens.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.max_tokens_to_keep != null && message.hasOwnProperty("max_tokens_to_keep"))
                if (!$util.isInteger(message.max_tokens_to_keep))
                    return "max_tokens_to_keep: integer expected";
            if (message.tokens != null && message.hasOwnProperty("tokens")) {
                if (!Array.isArray(message.tokens))
                    return "tokens: array expected";
                for (var i = 0; i < message.tokens.length; ++i)
                    if (!(message.tokens[i] && typeof message.tokens[i].length === "number" || $util.isString(message.tokens[i])))
                        return "tokens: buffer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientGameConnectTokens message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGameConnectTokens
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGameConnectTokens} CMsgClientGameConnectTokens
         */
        CMsgClientGameConnectTokens.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGameConnectTokens)
                return object;
            var message = new $root.CMsgClientGameConnectTokens();
            if (object.max_tokens_to_keep != null)
                message.max_tokens_to_keep = object.max_tokens_to_keep >>> 0;
            if (object.tokens) {
                if (!Array.isArray(object.tokens))
                    throw TypeError(".CMsgClientGameConnectTokens.tokens: array expected");
                message.tokens = [];
                for (var i = 0; i < object.tokens.length; ++i)
                    if (typeof object.tokens[i] === "string")
                        $util.base64.decode(object.tokens[i], message.tokens[i] = $util.newBuffer($util.base64.length(object.tokens[i])), 0);
                    else if (object.tokens[i].length)
                        message.tokens[i] = object.tokens[i];
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGameConnectTokens message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGameConnectTokens
         * @static
         * @param {CMsgClientGameConnectTokens} message CMsgClientGameConnectTokens
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGameConnectTokens.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.tokens = [];
            if (options.defaults)
                object.max_tokens_to_keep = 10;
            if (message.max_tokens_to_keep != null && message.hasOwnProperty("max_tokens_to_keep"))
                object.max_tokens_to_keep = message.max_tokens_to_keep;
            if (message.tokens && message.tokens.length) {
                object.tokens = [];
                for (var j = 0; j < message.tokens.length; ++j)
                    object.tokens[j] = options.bytes === String ? $util.base64.encode(message.tokens[j], 0, message.tokens[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.tokens[j]) : message.tokens[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientGameConnectTokens to JSON.
         * @function toJSON
         * @memberof CMsgClientGameConnectTokens
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGameConnectTokens.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGameConnectTokens;
    })();
    
    $root.CMsgGSServerType = (function() {
    
        /**
         * Properties of a CMsgGSServerType.
         * @exports ICMsgGSServerType
         * @interface ICMsgGSServerType
         * @property {number|null} [app_id_served] CMsgGSServerType app_id_served
         * @property {number|null} [flags] CMsgGSServerType flags
         * @property {number|null} [deprecated_game_ip_address] CMsgGSServerType deprecated_game_ip_address
         * @property {number|null} [game_port] CMsgGSServerType game_port
         * @property {string|null} [game_dir] CMsgGSServerType game_dir
         * @property {string|null} [game_version] CMsgGSServerType game_version
         * @property {number|null} [game_query_port] CMsgGSServerType game_query_port
         */
    
        /**
         * Constructs a new CMsgGSServerType.
         * @exports CMsgGSServerType
         * @classdesc Represents a CMsgGSServerType.
         * @implements ICMsgGSServerType
         * @constructor
         * @param {ICMsgGSServerType=} [properties] Properties to set
         */
        function CMsgGSServerType(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGSServerType app_id_served.
         * @member {number} app_id_served
         * @memberof CMsgGSServerType
         * @instance
         */
        CMsgGSServerType.prototype.app_id_served = 0;
    
        /**
         * CMsgGSServerType flags.
         * @member {number} flags
         * @memberof CMsgGSServerType
         * @instance
         */
        CMsgGSServerType.prototype.flags = 0;
    
        /**
         * CMsgGSServerType deprecated_game_ip_address.
         * @member {number} deprecated_game_ip_address
         * @memberof CMsgGSServerType
         * @instance
         */
        CMsgGSServerType.prototype.deprecated_game_ip_address = 0;
    
        /**
         * CMsgGSServerType game_port.
         * @member {number} game_port
         * @memberof CMsgGSServerType
         * @instance
         */
        CMsgGSServerType.prototype.game_port = 0;
    
        /**
         * CMsgGSServerType game_dir.
         * @member {string} game_dir
         * @memberof CMsgGSServerType
         * @instance
         */
        CMsgGSServerType.prototype.game_dir = "";
    
        /**
         * CMsgGSServerType game_version.
         * @member {string} game_version
         * @memberof CMsgGSServerType
         * @instance
         */
        CMsgGSServerType.prototype.game_version = "";
    
        /**
         * CMsgGSServerType game_query_port.
         * @member {number} game_query_port
         * @memberof CMsgGSServerType
         * @instance
         */
        CMsgGSServerType.prototype.game_query_port = 0;
    
        /**
         * Creates a new CMsgGSServerType instance using the specified properties.
         * @function create
         * @memberof CMsgGSServerType
         * @static
         * @param {ICMsgGSServerType=} [properties] Properties to set
         * @returns {CMsgGSServerType} CMsgGSServerType instance
         */
        CMsgGSServerType.create = function create(properties) {
            return new CMsgGSServerType(properties);
        };
    
        /**
         * Encodes the specified CMsgGSServerType message. Does not implicitly {@link CMsgGSServerType.verify|verify} messages.
         * @function encode
         * @memberof CMsgGSServerType
         * @static
         * @param {ICMsgGSServerType} message CMsgGSServerType message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSServerType.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id_served != null && Object.hasOwnProperty.call(message, "app_id_served"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id_served);
            if (message.flags != null && Object.hasOwnProperty.call(message, "flags"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.flags);
            if (message.deprecated_game_ip_address != null && Object.hasOwnProperty.call(message, "deprecated_game_ip_address"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.deprecated_game_ip_address);
            if (message.game_port != null && Object.hasOwnProperty.call(message, "game_port"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.game_port);
            if (message.game_dir != null && Object.hasOwnProperty.call(message, "game_dir"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.game_dir);
            if (message.game_version != null && Object.hasOwnProperty.call(message, "game_version"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.game_version);
            if (message.game_query_port != null && Object.hasOwnProperty.call(message, "game_query_port"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.game_query_port);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGSServerType message, length delimited. Does not implicitly {@link CMsgGSServerType.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGSServerType
         * @static
         * @param {ICMsgGSServerType} message CMsgGSServerType message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSServerType.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGSServerType message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGSServerType
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGSServerType} CMsgGSServerType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSServerType.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSServerType();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id_served = reader.uint32();
                    break;
                case 2:
                    message.flags = reader.uint32();
                    break;
                case 3:
                    message.deprecated_game_ip_address = reader.uint32();
                    break;
                case 4:
                    message.game_port = reader.uint32();
                    break;
                case 5:
                    message.game_dir = reader.string();
                    break;
                case 6:
                    message.game_version = reader.string();
                    break;
                case 7:
                    message.game_query_port = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGSServerType message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGSServerType
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGSServerType} CMsgGSServerType
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSServerType.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGSServerType message.
         * @function verify
         * @memberof CMsgGSServerType
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGSServerType.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id_served != null && message.hasOwnProperty("app_id_served"))
                if (!$util.isInteger(message.app_id_served))
                    return "app_id_served: integer expected";
            if (message.flags != null && message.hasOwnProperty("flags"))
                if (!$util.isInteger(message.flags))
                    return "flags: integer expected";
            if (message.deprecated_game_ip_address != null && message.hasOwnProperty("deprecated_game_ip_address"))
                if (!$util.isInteger(message.deprecated_game_ip_address))
                    return "deprecated_game_ip_address: integer expected";
            if (message.game_port != null && message.hasOwnProperty("game_port"))
                if (!$util.isInteger(message.game_port))
                    return "game_port: integer expected";
            if (message.game_dir != null && message.hasOwnProperty("game_dir"))
                if (!$util.isString(message.game_dir))
                    return "game_dir: string expected";
            if (message.game_version != null && message.hasOwnProperty("game_version"))
                if (!$util.isString(message.game_version))
                    return "game_version: string expected";
            if (message.game_query_port != null && message.hasOwnProperty("game_query_port"))
                if (!$util.isInteger(message.game_query_port))
                    return "game_query_port: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGSServerType message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGSServerType
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGSServerType} CMsgGSServerType
         */
        CMsgGSServerType.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGSServerType)
                return object;
            var message = new $root.CMsgGSServerType();
            if (object.app_id_served != null)
                message.app_id_served = object.app_id_served >>> 0;
            if (object.flags != null)
                message.flags = object.flags >>> 0;
            if (object.deprecated_game_ip_address != null)
                message.deprecated_game_ip_address = object.deprecated_game_ip_address >>> 0;
            if (object.game_port != null)
                message.game_port = object.game_port >>> 0;
            if (object.game_dir != null)
                message.game_dir = String(object.game_dir);
            if (object.game_version != null)
                message.game_version = String(object.game_version);
            if (object.game_query_port != null)
                message.game_query_port = object.game_query_port >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGSServerType message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGSServerType
         * @static
         * @param {CMsgGSServerType} message CMsgGSServerType
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGSServerType.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id_served = 0;
                object.flags = 0;
                object.deprecated_game_ip_address = 0;
                object.game_port = 0;
                object.game_dir = "";
                object.game_version = "";
                object.game_query_port = 0;
            }
            if (message.app_id_served != null && message.hasOwnProperty("app_id_served"))
                object.app_id_served = message.app_id_served;
            if (message.flags != null && message.hasOwnProperty("flags"))
                object.flags = message.flags;
            if (message.deprecated_game_ip_address != null && message.hasOwnProperty("deprecated_game_ip_address"))
                object.deprecated_game_ip_address = message.deprecated_game_ip_address;
            if (message.game_port != null && message.hasOwnProperty("game_port"))
                object.game_port = message.game_port;
            if (message.game_dir != null && message.hasOwnProperty("game_dir"))
                object.game_dir = message.game_dir;
            if (message.game_version != null && message.hasOwnProperty("game_version"))
                object.game_version = message.game_version;
            if (message.game_query_port != null && message.hasOwnProperty("game_query_port"))
                object.game_query_port = message.game_query_port;
            return object;
        };
    
        /**
         * Converts this CMsgGSServerType to JSON.
         * @function toJSON
         * @memberof CMsgGSServerType
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGSServerType.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgGSServerType;
    })();
    
    $root.CMsgGSStatusReply = (function() {
    
        /**
         * Properties of a CMsgGSStatusReply.
         * @exports ICMsgGSStatusReply
         * @interface ICMsgGSStatusReply
         * @property {boolean|null} [is_secure] CMsgGSStatusReply is_secure
         */
    
        /**
         * Constructs a new CMsgGSStatusReply.
         * @exports CMsgGSStatusReply
         * @classdesc Represents a CMsgGSStatusReply.
         * @implements ICMsgGSStatusReply
         * @constructor
         * @param {ICMsgGSStatusReply=} [properties] Properties to set
         */
        function CMsgGSStatusReply(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGSStatusReply is_secure.
         * @member {boolean} is_secure
         * @memberof CMsgGSStatusReply
         * @instance
         */
        CMsgGSStatusReply.prototype.is_secure = false;
    
        /**
         * Creates a new CMsgGSStatusReply instance using the specified properties.
         * @function create
         * @memberof CMsgGSStatusReply
         * @static
         * @param {ICMsgGSStatusReply=} [properties] Properties to set
         * @returns {CMsgGSStatusReply} CMsgGSStatusReply instance
         */
        CMsgGSStatusReply.create = function create(properties) {
            return new CMsgGSStatusReply(properties);
        };
    
        /**
         * Encodes the specified CMsgGSStatusReply message. Does not implicitly {@link CMsgGSStatusReply.verify|verify} messages.
         * @function encode
         * @memberof CMsgGSStatusReply
         * @static
         * @param {ICMsgGSStatusReply} message CMsgGSStatusReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSStatusReply.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.is_secure != null && Object.hasOwnProperty.call(message, "is_secure"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.is_secure);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGSStatusReply message, length delimited. Does not implicitly {@link CMsgGSStatusReply.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGSStatusReply
         * @static
         * @param {ICMsgGSStatusReply} message CMsgGSStatusReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSStatusReply.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGSStatusReply message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGSStatusReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGSStatusReply} CMsgGSStatusReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSStatusReply.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSStatusReply();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.is_secure = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGSStatusReply message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGSStatusReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGSStatusReply} CMsgGSStatusReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSStatusReply.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGSStatusReply message.
         * @function verify
         * @memberof CMsgGSStatusReply
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGSStatusReply.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.is_secure != null && message.hasOwnProperty("is_secure"))
                if (typeof message.is_secure !== "boolean")
                    return "is_secure: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGSStatusReply message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGSStatusReply
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGSStatusReply} CMsgGSStatusReply
         */
        CMsgGSStatusReply.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGSStatusReply)
                return object;
            var message = new $root.CMsgGSStatusReply();
            if (object.is_secure != null)
                message.is_secure = Boolean(object.is_secure);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGSStatusReply message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGSStatusReply
         * @static
         * @param {CMsgGSStatusReply} message CMsgGSStatusReply
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGSStatusReply.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.is_secure = false;
            if (message.is_secure != null && message.hasOwnProperty("is_secure"))
                object.is_secure = message.is_secure;
            return object;
        };
    
        /**
         * Converts this CMsgGSStatusReply to JSON.
         * @function toJSON
         * @memberof CMsgGSStatusReply
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGSStatusReply.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgGSStatusReply;
    })();
    
    $root.CMsgGSPlayerList = (function() {
    
        /**
         * Properties of a CMsgGSPlayerList.
         * @exports ICMsgGSPlayerList
         * @interface ICMsgGSPlayerList
         * @property {Array.<CMsgGSPlayerList.IPlayer>|null} [players] CMsgGSPlayerList players
         */
    
        /**
         * Constructs a new CMsgGSPlayerList.
         * @exports CMsgGSPlayerList
         * @classdesc Represents a CMsgGSPlayerList.
         * @implements ICMsgGSPlayerList
         * @constructor
         * @param {ICMsgGSPlayerList=} [properties] Properties to set
         */
        function CMsgGSPlayerList(properties) {
            this.players = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGSPlayerList players.
         * @member {Array.<CMsgGSPlayerList.IPlayer>} players
         * @memberof CMsgGSPlayerList
         * @instance
         */
        CMsgGSPlayerList.prototype.players = $util.emptyArray;
    
        /**
         * Creates a new CMsgGSPlayerList instance using the specified properties.
         * @function create
         * @memberof CMsgGSPlayerList
         * @static
         * @param {ICMsgGSPlayerList=} [properties] Properties to set
         * @returns {CMsgGSPlayerList} CMsgGSPlayerList instance
         */
        CMsgGSPlayerList.create = function create(properties) {
            return new CMsgGSPlayerList(properties);
        };
    
        /**
         * Encodes the specified CMsgGSPlayerList message. Does not implicitly {@link CMsgGSPlayerList.verify|verify} messages.
         * @function encode
         * @memberof CMsgGSPlayerList
         * @static
         * @param {ICMsgGSPlayerList} message CMsgGSPlayerList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSPlayerList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.players != null && message.players.length)
                for (var i = 0; i < message.players.length; ++i)
                    $root.CMsgGSPlayerList.Player.encode(message.players[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGSPlayerList message, length delimited. Does not implicitly {@link CMsgGSPlayerList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGSPlayerList
         * @static
         * @param {ICMsgGSPlayerList} message CMsgGSPlayerList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSPlayerList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGSPlayerList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGSPlayerList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGSPlayerList} CMsgGSPlayerList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSPlayerList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSPlayerList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.players && message.players.length))
                        message.players = [];
                    message.players.push($root.CMsgGSPlayerList.Player.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGSPlayerList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGSPlayerList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGSPlayerList} CMsgGSPlayerList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSPlayerList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGSPlayerList message.
         * @function verify
         * @memberof CMsgGSPlayerList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGSPlayerList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.players != null && message.hasOwnProperty("players")) {
                if (!Array.isArray(message.players))
                    return "players: array expected";
                for (var i = 0; i < message.players.length; ++i) {
                    var error = $root.CMsgGSPlayerList.Player.verify(message.players[i]);
                    if (error)
                        return "players." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGSPlayerList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGSPlayerList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGSPlayerList} CMsgGSPlayerList
         */
        CMsgGSPlayerList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGSPlayerList)
                return object;
            var message = new $root.CMsgGSPlayerList();
            if (object.players) {
                if (!Array.isArray(object.players))
                    throw TypeError(".CMsgGSPlayerList.players: array expected");
                message.players = [];
                for (var i = 0; i < object.players.length; ++i) {
                    if (typeof object.players[i] !== "object")
                        throw TypeError(".CMsgGSPlayerList.players: object expected");
                    message.players[i] = $root.CMsgGSPlayerList.Player.fromObject(object.players[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGSPlayerList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGSPlayerList
         * @static
         * @param {CMsgGSPlayerList} message CMsgGSPlayerList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGSPlayerList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.players = [];
            if (message.players && message.players.length) {
                object.players = [];
                for (var j = 0; j < message.players.length; ++j)
                    object.players[j] = $root.CMsgGSPlayerList.Player.toObject(message.players[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGSPlayerList to JSON.
         * @function toJSON
         * @memberof CMsgGSPlayerList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGSPlayerList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgGSPlayerList.Player = (function() {
    
            /**
             * Properties of a Player.
             * @memberof CMsgGSPlayerList
             * @interface IPlayer
             * @property {number|Long|null} [steam_id] Player steam_id
             * @property {number|null} [deprecated_public_ip] Player deprecated_public_ip
             * @property {Uint8Array|null} [token] Player token
             * @property {ICMsgIPAddress|null} [public_ip] Player public_ip
             */
    
            /**
             * Constructs a new Player.
             * @memberof CMsgGSPlayerList
             * @classdesc Represents a Player.
             * @implements IPlayer
             * @constructor
             * @param {CMsgGSPlayerList.IPlayer=} [properties] Properties to set
             */
            function Player(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Player steam_id.
             * @member {number|Long} steam_id
             * @memberof CMsgGSPlayerList.Player
             * @instance
             */
            Player.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Player deprecated_public_ip.
             * @member {number} deprecated_public_ip
             * @memberof CMsgGSPlayerList.Player
             * @instance
             */
            Player.prototype.deprecated_public_ip = 0;
    
            /**
             * Player token.
             * @member {Uint8Array} token
             * @memberof CMsgGSPlayerList.Player
             * @instance
             */
            Player.prototype.token = $util.newBuffer([]);
    
            /**
             * Player public_ip.
             * @member {ICMsgIPAddress|null|undefined} public_ip
             * @memberof CMsgGSPlayerList.Player
             * @instance
             */
            Player.prototype.public_ip = null;
    
            /**
             * Creates a new Player instance using the specified properties.
             * @function create
             * @memberof CMsgGSPlayerList.Player
             * @static
             * @param {CMsgGSPlayerList.IPlayer=} [properties] Properties to set
             * @returns {CMsgGSPlayerList.Player} Player instance
             */
            Player.create = function create(properties) {
                return new Player(properties);
            };
    
            /**
             * Encodes the specified Player message. Does not implicitly {@link CMsgGSPlayerList.Player.verify|verify} messages.
             * @function encode
             * @memberof CMsgGSPlayerList.Player
             * @static
             * @param {CMsgGSPlayerList.IPlayer} message Player message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Player.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.steam_id);
                if (message.deprecated_public_ip != null && Object.hasOwnProperty.call(message, "deprecated_public_ip"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.deprecated_public_ip);
                if (message.token != null && Object.hasOwnProperty.call(message, "token"))
                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.token);
                if (message.public_ip != null && Object.hasOwnProperty.call(message, "public_ip"))
                    $root.CMsgIPAddress.encode(message.public_ip, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Player message, length delimited. Does not implicitly {@link CMsgGSPlayerList.Player.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgGSPlayerList.Player
             * @static
             * @param {CMsgGSPlayerList.IPlayer} message Player message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Player.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Player message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgGSPlayerList.Player
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgGSPlayerList.Player} Player
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Player.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSPlayerList.Player();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.steam_id = reader.uint64();
                        break;
                    case 2:
                        message.deprecated_public_ip = reader.uint32();
                        break;
                    case 3:
                        message.token = reader.bytes();
                        break;
                    case 4:
                        message.public_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Player message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgGSPlayerList.Player
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgGSPlayerList.Player} Player
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Player.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Player message.
             * @function verify
             * @memberof CMsgGSPlayerList.Player
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Player.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                    if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                        return "steam_id: integer|Long expected";
                if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                    if (!$util.isInteger(message.deprecated_public_ip))
                        return "deprecated_public_ip: integer expected";
                if (message.token != null && message.hasOwnProperty("token"))
                    if (!(message.token && typeof message.token.length === "number" || $util.isString(message.token)))
                        return "token: buffer expected";
                if (message.public_ip != null && message.hasOwnProperty("public_ip")) {
                    var error = $root.CMsgIPAddress.verify(message.public_ip);
                    if (error)
                        return "public_ip." + error;
                }
                return null;
            };
    
            /**
             * Creates a Player message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgGSPlayerList.Player
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgGSPlayerList.Player} Player
             */
            Player.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgGSPlayerList.Player)
                    return object;
                var message = new $root.CMsgGSPlayerList.Player();
                if (object.steam_id != null)
                    if ($util.Long)
                        (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = true;
                    else if (typeof object.steam_id === "string")
                        message.steam_id = parseInt(object.steam_id, 10);
                    else if (typeof object.steam_id === "number")
                        message.steam_id = object.steam_id;
                    else if (typeof object.steam_id === "object")
                        message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber(true);
                if (object.deprecated_public_ip != null)
                    message.deprecated_public_ip = object.deprecated_public_ip >>> 0;
                if (object.token != null)
                    if (typeof object.token === "string")
                        $util.base64.decode(object.token, message.token = $util.newBuffer($util.base64.length(object.token)), 0);
                    else if (object.token.length)
                        message.token = object.token;
                if (object.public_ip != null) {
                    if (typeof object.public_ip !== "object")
                        throw TypeError(".CMsgGSPlayerList.Player.public_ip: object expected");
                    message.public_ip = $root.CMsgIPAddress.fromObject(object.public_ip);
                }
                return message;
            };
    
            /**
             * Creates a plain object from a Player message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgGSPlayerList.Player
             * @static
             * @param {CMsgGSPlayerList.Player} message Player
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Player.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steam_id = options.longs === String ? "0" : 0;
                    object.deprecated_public_ip = 0;
                    if (options.bytes === String)
                        object.token = "";
                    else {
                        object.token = [];
                        if (options.bytes !== Array)
                            object.token = $util.newBuffer(object.token);
                    }
                    object.public_ip = null;
                }
                if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                    if (typeof message.steam_id === "number")
                        object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                    else
                        object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber(true) : message.steam_id;
                if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                    object.deprecated_public_ip = message.deprecated_public_ip;
                if (message.token != null && message.hasOwnProperty("token"))
                    object.token = options.bytes === String ? $util.base64.encode(message.token, 0, message.token.length) : options.bytes === Array ? Array.prototype.slice.call(message.token) : message.token;
                if (message.public_ip != null && message.hasOwnProperty("public_ip"))
                    object.public_ip = $root.CMsgIPAddress.toObject(message.public_ip, options);
                return object;
            };
    
            /**
             * Converts this Player to JSON.
             * @function toJSON
             * @memberof CMsgGSPlayerList.Player
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Player.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Player;
        })();
    
        return CMsgGSPlayerList;
    })();
    
    $root.CMsgGSUserPlaying = (function() {
    
        /**
         * Properties of a CMsgGSUserPlaying.
         * @exports ICMsgGSUserPlaying
         * @interface ICMsgGSUserPlaying
         * @property {number|Long|null} [steam_id] CMsgGSUserPlaying steam_id
         * @property {number|null} [deprecated_public_ip] CMsgGSUserPlaying deprecated_public_ip
         * @property {Uint8Array|null} [token] CMsgGSUserPlaying token
         * @property {ICMsgIPAddress|null} [public_ip] CMsgGSUserPlaying public_ip
         */
    
        /**
         * Constructs a new CMsgGSUserPlaying.
         * @exports CMsgGSUserPlaying
         * @classdesc Represents a CMsgGSUserPlaying.
         * @implements ICMsgGSUserPlaying
         * @constructor
         * @param {ICMsgGSUserPlaying=} [properties] Properties to set
         */
        function CMsgGSUserPlaying(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGSUserPlaying steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgGSUserPlaying
         * @instance
         */
        CMsgGSUserPlaying.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGSUserPlaying deprecated_public_ip.
         * @member {number} deprecated_public_ip
         * @memberof CMsgGSUserPlaying
         * @instance
         */
        CMsgGSUserPlaying.prototype.deprecated_public_ip = 0;
    
        /**
         * CMsgGSUserPlaying token.
         * @member {Uint8Array} token
         * @memberof CMsgGSUserPlaying
         * @instance
         */
        CMsgGSUserPlaying.prototype.token = $util.newBuffer([]);
    
        /**
         * CMsgGSUserPlaying public_ip.
         * @member {ICMsgIPAddress|null|undefined} public_ip
         * @memberof CMsgGSUserPlaying
         * @instance
         */
        CMsgGSUserPlaying.prototype.public_ip = null;
    
        /**
         * Creates a new CMsgGSUserPlaying instance using the specified properties.
         * @function create
         * @memberof CMsgGSUserPlaying
         * @static
         * @param {ICMsgGSUserPlaying=} [properties] Properties to set
         * @returns {CMsgGSUserPlaying} CMsgGSUserPlaying instance
         */
        CMsgGSUserPlaying.create = function create(properties) {
            return new CMsgGSUserPlaying(properties);
        };
    
        /**
         * Encodes the specified CMsgGSUserPlaying message. Does not implicitly {@link CMsgGSUserPlaying.verify|verify} messages.
         * @function encode
         * @memberof CMsgGSUserPlaying
         * @static
         * @param {ICMsgGSUserPlaying} message CMsgGSUserPlaying message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSUserPlaying.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            if (message.deprecated_public_ip != null && Object.hasOwnProperty.call(message, "deprecated_public_ip"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.deprecated_public_ip);
            if (message.token != null && Object.hasOwnProperty.call(message, "token"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.token);
            if (message.public_ip != null && Object.hasOwnProperty.call(message, "public_ip"))
                $root.CMsgIPAddress.encode(message.public_ip, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGSUserPlaying message, length delimited. Does not implicitly {@link CMsgGSUserPlaying.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGSUserPlaying
         * @static
         * @param {ICMsgGSUserPlaying} message CMsgGSUserPlaying message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSUserPlaying.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGSUserPlaying message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGSUserPlaying
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGSUserPlaying} CMsgGSUserPlaying
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSUserPlaying.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSUserPlaying();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                case 2:
                    message.deprecated_public_ip = reader.uint32();
                    break;
                case 3:
                    message.token = reader.bytes();
                    break;
                case 4:
                    message.public_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGSUserPlaying message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGSUserPlaying
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGSUserPlaying} CMsgGSUserPlaying
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSUserPlaying.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGSUserPlaying message.
         * @function verify
         * @memberof CMsgGSUserPlaying
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGSUserPlaying.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                if (!$util.isInteger(message.deprecated_public_ip))
                    return "deprecated_public_ip: integer expected";
            if (message.token != null && message.hasOwnProperty("token"))
                if (!(message.token && typeof message.token.length === "number" || $util.isString(message.token)))
                    return "token: buffer expected";
            if (message.public_ip != null && message.hasOwnProperty("public_ip")) {
                var error = $root.CMsgIPAddress.verify(message.public_ip);
                if (error)
                    return "public_ip." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgGSUserPlaying message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGSUserPlaying
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGSUserPlaying} CMsgGSUserPlaying
         */
        CMsgGSUserPlaying.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGSUserPlaying)
                return object;
            var message = new $root.CMsgGSUserPlaying();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            if (object.deprecated_public_ip != null)
                message.deprecated_public_ip = object.deprecated_public_ip >>> 0;
            if (object.token != null)
                if (typeof object.token === "string")
                    $util.base64.decode(object.token, message.token = $util.newBuffer($util.base64.length(object.token)), 0);
                else if (object.token.length)
                    message.token = object.token;
            if (object.public_ip != null) {
                if (typeof object.public_ip !== "object")
                    throw TypeError(".CMsgGSUserPlaying.public_ip: object expected");
                message.public_ip = $root.CMsgIPAddress.fromObject(object.public_ip);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGSUserPlaying message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGSUserPlaying
         * @static
         * @param {CMsgGSUserPlaying} message CMsgGSUserPlaying
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGSUserPlaying.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
                object.deprecated_public_ip = 0;
                if (options.bytes === String)
                    object.token = "";
                else {
                    object.token = [];
                    if (options.bytes !== Array)
                        object.token = $util.newBuffer(object.token);
                }
                object.public_ip = null;
            }
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                object.deprecated_public_ip = message.deprecated_public_ip;
            if (message.token != null && message.hasOwnProperty("token"))
                object.token = options.bytes === String ? $util.base64.encode(message.token, 0, message.token.length) : options.bytes === Array ? Array.prototype.slice.call(message.token) : message.token;
            if (message.public_ip != null && message.hasOwnProperty("public_ip"))
                object.public_ip = $root.CMsgIPAddress.toObject(message.public_ip, options);
            return object;
        };
    
        /**
         * Converts this CMsgGSUserPlaying to JSON.
         * @function toJSON
         * @memberof CMsgGSUserPlaying
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGSUserPlaying.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgGSUserPlaying;
    })();
    
    $root.CMsgGSDisconnectNotice = (function() {
    
        /**
         * Properties of a CMsgGSDisconnectNotice.
         * @exports ICMsgGSDisconnectNotice
         * @interface ICMsgGSDisconnectNotice
         * @property {number|Long|null} [steam_id] CMsgGSDisconnectNotice steam_id
         */
    
        /**
         * Constructs a new CMsgGSDisconnectNotice.
         * @exports CMsgGSDisconnectNotice
         * @classdesc Represents a CMsgGSDisconnectNotice.
         * @implements ICMsgGSDisconnectNotice
         * @constructor
         * @param {ICMsgGSDisconnectNotice=} [properties] Properties to set
         */
        function CMsgGSDisconnectNotice(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGSDisconnectNotice steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgGSDisconnectNotice
         * @instance
         */
        CMsgGSDisconnectNotice.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGSDisconnectNotice instance using the specified properties.
         * @function create
         * @memberof CMsgGSDisconnectNotice
         * @static
         * @param {ICMsgGSDisconnectNotice=} [properties] Properties to set
         * @returns {CMsgGSDisconnectNotice} CMsgGSDisconnectNotice instance
         */
        CMsgGSDisconnectNotice.create = function create(properties) {
            return new CMsgGSDisconnectNotice(properties);
        };
    
        /**
         * Encodes the specified CMsgGSDisconnectNotice message. Does not implicitly {@link CMsgGSDisconnectNotice.verify|verify} messages.
         * @function encode
         * @memberof CMsgGSDisconnectNotice
         * @static
         * @param {ICMsgGSDisconnectNotice} message CMsgGSDisconnectNotice message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSDisconnectNotice.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGSDisconnectNotice message, length delimited. Does not implicitly {@link CMsgGSDisconnectNotice.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGSDisconnectNotice
         * @static
         * @param {ICMsgGSDisconnectNotice} message CMsgGSDisconnectNotice message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSDisconnectNotice.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGSDisconnectNotice message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGSDisconnectNotice
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGSDisconnectNotice} CMsgGSDisconnectNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSDisconnectNotice.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSDisconnectNotice();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGSDisconnectNotice message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGSDisconnectNotice
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGSDisconnectNotice} CMsgGSDisconnectNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSDisconnectNotice.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGSDisconnectNotice message.
         * @function verify
         * @memberof CMsgGSDisconnectNotice
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGSDisconnectNotice.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGSDisconnectNotice message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGSDisconnectNotice
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGSDisconnectNotice} CMsgGSDisconnectNotice
         */
        CMsgGSDisconnectNotice.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGSDisconnectNotice)
                return object;
            var message = new $root.CMsgGSDisconnectNotice();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGSDisconnectNotice message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGSDisconnectNotice
         * @static
         * @param {CMsgGSDisconnectNotice} message CMsgGSDisconnectNotice
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGSDisconnectNotice.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgGSDisconnectNotice to JSON.
         * @function toJSON
         * @memberof CMsgGSDisconnectNotice
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGSDisconnectNotice.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgGSDisconnectNotice;
    })();
    
    $root.CMsgClientGamesPlayed = (function() {
    
        /**
         * Properties of a CMsgClientGamesPlayed.
         * @exports ICMsgClientGamesPlayed
         * @interface ICMsgClientGamesPlayed
         * @property {Array.<CMsgClientGamesPlayed.IGamePlayed>|null} [games_played] CMsgClientGamesPlayed games_played
         * @property {number|null} [client_os_type] CMsgClientGamesPlayed client_os_type
         * @property {number|null} [cloud_gaming_platform] CMsgClientGamesPlayed cloud_gaming_platform
         */
    
        /**
         * Constructs a new CMsgClientGamesPlayed.
         * @exports CMsgClientGamesPlayed
         * @classdesc Represents a CMsgClientGamesPlayed.
         * @implements ICMsgClientGamesPlayed
         * @constructor
         * @param {ICMsgClientGamesPlayed=} [properties] Properties to set
         */
        function CMsgClientGamesPlayed(properties) {
            this.games_played = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGamesPlayed games_played.
         * @member {Array.<CMsgClientGamesPlayed.IGamePlayed>} games_played
         * @memberof CMsgClientGamesPlayed
         * @instance
         */
        CMsgClientGamesPlayed.prototype.games_played = $util.emptyArray;
    
        /**
         * CMsgClientGamesPlayed client_os_type.
         * @member {number} client_os_type
         * @memberof CMsgClientGamesPlayed
         * @instance
         */
        CMsgClientGamesPlayed.prototype.client_os_type = 0;
    
        /**
         * CMsgClientGamesPlayed cloud_gaming_platform.
         * @member {number} cloud_gaming_platform
         * @memberof CMsgClientGamesPlayed
         * @instance
         */
        CMsgClientGamesPlayed.prototype.cloud_gaming_platform = 0;
    
        /**
         * Creates a new CMsgClientGamesPlayed instance using the specified properties.
         * @function create
         * @memberof CMsgClientGamesPlayed
         * @static
         * @param {ICMsgClientGamesPlayed=} [properties] Properties to set
         * @returns {CMsgClientGamesPlayed} CMsgClientGamesPlayed instance
         */
        CMsgClientGamesPlayed.create = function create(properties) {
            return new CMsgClientGamesPlayed(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGamesPlayed message. Does not implicitly {@link CMsgClientGamesPlayed.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGamesPlayed
         * @static
         * @param {ICMsgClientGamesPlayed} message CMsgClientGamesPlayed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGamesPlayed.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.games_played != null && message.games_played.length)
                for (var i = 0; i < message.games_played.length; ++i)
                    $root.CMsgClientGamesPlayed.GamePlayed.encode(message.games_played[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.client_os_type != null && Object.hasOwnProperty.call(message, "client_os_type"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.client_os_type);
            if (message.cloud_gaming_platform != null && Object.hasOwnProperty.call(message, "cloud_gaming_platform"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cloud_gaming_platform);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGamesPlayed message, length delimited. Does not implicitly {@link CMsgClientGamesPlayed.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGamesPlayed
         * @static
         * @param {ICMsgClientGamesPlayed} message CMsgClientGamesPlayed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGamesPlayed.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGamesPlayed message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGamesPlayed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGamesPlayed} CMsgClientGamesPlayed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGamesPlayed.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGamesPlayed();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.games_played && message.games_played.length))
                        message.games_played = [];
                    message.games_played.push($root.CMsgClientGamesPlayed.GamePlayed.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.client_os_type = reader.uint32();
                    break;
                case 3:
                    message.cloud_gaming_platform = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGamesPlayed message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGamesPlayed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGamesPlayed} CMsgClientGamesPlayed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGamesPlayed.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGamesPlayed message.
         * @function verify
         * @memberof CMsgClientGamesPlayed
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGamesPlayed.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.games_played != null && message.hasOwnProperty("games_played")) {
                if (!Array.isArray(message.games_played))
                    return "games_played: array expected";
                for (var i = 0; i < message.games_played.length; ++i) {
                    var error = $root.CMsgClientGamesPlayed.GamePlayed.verify(message.games_played[i]);
                    if (error)
                        return "games_played." + error;
                }
            }
            if (message.client_os_type != null && message.hasOwnProperty("client_os_type"))
                if (!$util.isInteger(message.client_os_type))
                    return "client_os_type: integer expected";
            if (message.cloud_gaming_platform != null && message.hasOwnProperty("cloud_gaming_platform"))
                if (!$util.isInteger(message.cloud_gaming_platform))
                    return "cloud_gaming_platform: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGamesPlayed message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGamesPlayed
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGamesPlayed} CMsgClientGamesPlayed
         */
        CMsgClientGamesPlayed.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGamesPlayed)
                return object;
            var message = new $root.CMsgClientGamesPlayed();
            if (object.games_played) {
                if (!Array.isArray(object.games_played))
                    throw TypeError(".CMsgClientGamesPlayed.games_played: array expected");
                message.games_played = [];
                for (var i = 0; i < object.games_played.length; ++i) {
                    if (typeof object.games_played[i] !== "object")
                        throw TypeError(".CMsgClientGamesPlayed.games_played: object expected");
                    message.games_played[i] = $root.CMsgClientGamesPlayed.GamePlayed.fromObject(object.games_played[i]);
                }
            }
            if (object.client_os_type != null)
                message.client_os_type = object.client_os_type >>> 0;
            if (object.cloud_gaming_platform != null)
                message.cloud_gaming_platform = object.cloud_gaming_platform >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGamesPlayed message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGamesPlayed
         * @static
         * @param {CMsgClientGamesPlayed} message CMsgClientGamesPlayed
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGamesPlayed.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.games_played = [];
            if (options.defaults) {
                object.client_os_type = 0;
                object.cloud_gaming_platform = 0;
            }
            if (message.games_played && message.games_played.length) {
                object.games_played = [];
                for (var j = 0; j < message.games_played.length; ++j)
                    object.games_played[j] = $root.CMsgClientGamesPlayed.GamePlayed.toObject(message.games_played[j], options);
            }
            if (message.client_os_type != null && message.hasOwnProperty("client_os_type"))
                object.client_os_type = message.client_os_type;
            if (message.cloud_gaming_platform != null && message.hasOwnProperty("cloud_gaming_platform"))
                object.cloud_gaming_platform = message.cloud_gaming_platform;
            return object;
        };
    
        /**
         * Converts this CMsgClientGamesPlayed to JSON.
         * @function toJSON
         * @memberof CMsgClientGamesPlayed
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGamesPlayed.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientGamesPlayed.GamePlayed = (function() {
    
            /**
             * Properties of a GamePlayed.
             * @memberof CMsgClientGamesPlayed
             * @interface IGamePlayed
             * @property {number|Long|null} [steam_id_gs] GamePlayed steam_id_gs
             * @property {number|Long|null} [game_id] GamePlayed game_id
             * @property {number|null} [deprecated_game_ip_address] GamePlayed deprecated_game_ip_address
             * @property {number|null} [game_port] GamePlayed game_port
             * @property {boolean|null} [is_secure] GamePlayed is_secure
             * @property {Uint8Array|null} [token] GamePlayed token
             * @property {string|null} [game_extra_info] GamePlayed game_extra_info
             * @property {Uint8Array|null} [game_data_blob] GamePlayed game_data_blob
             * @property {number|null} [process_id] GamePlayed process_id
             * @property {number|null} [streaming_provider_id] GamePlayed streaming_provider_id
             * @property {number|null} [game_flags] GamePlayed game_flags
             * @property {number|null} [owner_id] GamePlayed owner_id
             * @property {string|null} [vr_hmd_vendor] GamePlayed vr_hmd_vendor
             * @property {string|null} [vr_hmd_model] GamePlayed vr_hmd_model
             * @property {number|null} [launch_option_type] GamePlayed launch_option_type
             * @property {number|null} [primary_controller_type] GamePlayed primary_controller_type
             * @property {string|null} [primary_steam_controller_serial] GamePlayed primary_steam_controller_serial
             * @property {number|null} [total_steam_controller_count] GamePlayed total_steam_controller_count
             * @property {number|null} [total_non_steam_controller_count] GamePlayed total_non_steam_controller_count
             * @property {number|Long|null} [controller_workshop_file_id] GamePlayed controller_workshop_file_id
             * @property {number|null} [launch_source] GamePlayed launch_source
             * @property {number|null} [vr_hmd_runtime] GamePlayed vr_hmd_runtime
             * @property {ICMsgIPAddress|null} [game_ip_address] GamePlayed game_ip_address
             * @property {number|null} [controller_connection_type] GamePlayed controller_connection_type
             */
    
            /**
             * Constructs a new GamePlayed.
             * @memberof CMsgClientGamesPlayed
             * @classdesc Represents a GamePlayed.
             * @implements IGamePlayed
             * @constructor
             * @param {CMsgClientGamesPlayed.IGamePlayed=} [properties] Properties to set
             */
            function GamePlayed(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * GamePlayed steam_id_gs.
             * @member {number|Long} steam_id_gs
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.steam_id_gs = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * GamePlayed game_id.
             * @member {number|Long} game_id
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * GamePlayed deprecated_game_ip_address.
             * @member {number} deprecated_game_ip_address
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.deprecated_game_ip_address = 0;
    
            /**
             * GamePlayed game_port.
             * @member {number} game_port
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.game_port = 0;
    
            /**
             * GamePlayed is_secure.
             * @member {boolean} is_secure
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.is_secure = false;
    
            /**
             * GamePlayed token.
             * @member {Uint8Array} token
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.token = $util.newBuffer([]);
    
            /**
             * GamePlayed game_extra_info.
             * @member {string} game_extra_info
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.game_extra_info = "";
    
            /**
             * GamePlayed game_data_blob.
             * @member {Uint8Array} game_data_blob
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.game_data_blob = $util.newBuffer([]);
    
            /**
             * GamePlayed process_id.
             * @member {number} process_id
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.process_id = 0;
    
            /**
             * GamePlayed streaming_provider_id.
             * @member {number} streaming_provider_id
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.streaming_provider_id = 0;
    
            /**
             * GamePlayed game_flags.
             * @member {number} game_flags
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.game_flags = 0;
    
            /**
             * GamePlayed owner_id.
             * @member {number} owner_id
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.owner_id = 0;
    
            /**
             * GamePlayed vr_hmd_vendor.
             * @member {string} vr_hmd_vendor
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.vr_hmd_vendor = "";
    
            /**
             * GamePlayed vr_hmd_model.
             * @member {string} vr_hmd_model
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.vr_hmd_model = "";
    
            /**
             * GamePlayed launch_option_type.
             * @member {number} launch_option_type
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.launch_option_type = 0;
    
            /**
             * GamePlayed primary_controller_type.
             * @member {number} primary_controller_type
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.primary_controller_type = -1;
    
            /**
             * GamePlayed primary_steam_controller_serial.
             * @member {string} primary_steam_controller_serial
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.primary_steam_controller_serial = "";
    
            /**
             * GamePlayed total_steam_controller_count.
             * @member {number} total_steam_controller_count
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.total_steam_controller_count = 0;
    
            /**
             * GamePlayed total_non_steam_controller_count.
             * @member {number} total_non_steam_controller_count
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.total_non_steam_controller_count = 0;
    
            /**
             * GamePlayed controller_workshop_file_id.
             * @member {number|Long} controller_workshop_file_id
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.controller_workshop_file_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * GamePlayed launch_source.
             * @member {number} launch_source
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.launch_source = 0;
    
            /**
             * GamePlayed vr_hmd_runtime.
             * @member {number} vr_hmd_runtime
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.vr_hmd_runtime = 0;
    
            /**
             * GamePlayed game_ip_address.
             * @member {ICMsgIPAddress|null|undefined} game_ip_address
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.game_ip_address = null;
    
            /**
             * GamePlayed controller_connection_type.
             * @member {number} controller_connection_type
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             */
            GamePlayed.prototype.controller_connection_type = 0;
    
            /**
             * Creates a new GamePlayed instance using the specified properties.
             * @function create
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @static
             * @param {CMsgClientGamesPlayed.IGamePlayed=} [properties] Properties to set
             * @returns {CMsgClientGamesPlayed.GamePlayed} GamePlayed instance
             */
            GamePlayed.create = function create(properties) {
                return new GamePlayed(properties);
            };
    
            /**
             * Encodes the specified GamePlayed message. Does not implicitly {@link CMsgClientGamesPlayed.GamePlayed.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @static
             * @param {CMsgClientGamesPlayed.IGamePlayed} message GamePlayed message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GamePlayed.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steam_id_gs != null && Object.hasOwnProperty.call(message, "steam_id_gs"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.steam_id_gs);
                if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                    writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.game_id);
                if (message.deprecated_game_ip_address != null && Object.hasOwnProperty.call(message, "deprecated_game_ip_address"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.deprecated_game_ip_address);
                if (message.game_port != null && Object.hasOwnProperty.call(message, "game_port"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.game_port);
                if (message.is_secure != null && Object.hasOwnProperty.call(message, "is_secure"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.is_secure);
                if (message.token != null && Object.hasOwnProperty.call(message, "token"))
                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.token);
                if (message.game_extra_info != null && Object.hasOwnProperty.call(message, "game_extra_info"))
                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.game_extra_info);
                if (message.game_data_blob != null && Object.hasOwnProperty.call(message, "game_data_blob"))
                    writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.game_data_blob);
                if (message.process_id != null && Object.hasOwnProperty.call(message, "process_id"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.process_id);
                if (message.streaming_provider_id != null && Object.hasOwnProperty.call(message, "streaming_provider_id"))
                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.streaming_provider_id);
                if (message.game_flags != null && Object.hasOwnProperty.call(message, "game_flags"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.game_flags);
                if (message.owner_id != null && Object.hasOwnProperty.call(message, "owner_id"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.owner_id);
                if (message.vr_hmd_vendor != null && Object.hasOwnProperty.call(message, "vr_hmd_vendor"))
                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.vr_hmd_vendor);
                if (message.vr_hmd_model != null && Object.hasOwnProperty.call(message, "vr_hmd_model"))
                    writer.uint32(/* id 14, wireType 2 =*/114).string(message.vr_hmd_model);
                if (message.launch_option_type != null && Object.hasOwnProperty.call(message, "launch_option_type"))
                    writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.launch_option_type);
                if (message.primary_controller_type != null && Object.hasOwnProperty.call(message, "primary_controller_type"))
                    writer.uint32(/* id 16, wireType 0 =*/128).int32(message.primary_controller_type);
                if (message.primary_steam_controller_serial != null && Object.hasOwnProperty.call(message, "primary_steam_controller_serial"))
                    writer.uint32(/* id 17, wireType 2 =*/138).string(message.primary_steam_controller_serial);
                if (message.total_steam_controller_count != null && Object.hasOwnProperty.call(message, "total_steam_controller_count"))
                    writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.total_steam_controller_count);
                if (message.total_non_steam_controller_count != null && Object.hasOwnProperty.call(message, "total_non_steam_controller_count"))
                    writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.total_non_steam_controller_count);
                if (message.controller_workshop_file_id != null && Object.hasOwnProperty.call(message, "controller_workshop_file_id"))
                    writer.uint32(/* id 20, wireType 0 =*/160).uint64(message.controller_workshop_file_id);
                if (message.launch_source != null && Object.hasOwnProperty.call(message, "launch_source"))
                    writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.launch_source);
                if (message.vr_hmd_runtime != null && Object.hasOwnProperty.call(message, "vr_hmd_runtime"))
                    writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.vr_hmd_runtime);
                if (message.game_ip_address != null && Object.hasOwnProperty.call(message, "game_ip_address"))
                    $root.CMsgIPAddress.encode(message.game_ip_address, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                if (message.controller_connection_type != null && Object.hasOwnProperty.call(message, "controller_connection_type"))
                    writer.uint32(/* id 24, wireType 0 =*/192).uint32(message.controller_connection_type);
                return writer;
            };
    
            /**
             * Encodes the specified GamePlayed message, length delimited. Does not implicitly {@link CMsgClientGamesPlayed.GamePlayed.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @static
             * @param {CMsgClientGamesPlayed.IGamePlayed} message GamePlayed message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GamePlayed.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a GamePlayed message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientGamesPlayed.GamePlayed} GamePlayed
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GamePlayed.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGamesPlayed.GamePlayed();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.steam_id_gs = reader.uint64();
                        break;
                    case 2:
                        message.game_id = reader.fixed64();
                        break;
                    case 3:
                        message.deprecated_game_ip_address = reader.uint32();
                        break;
                    case 4:
                        message.game_port = reader.uint32();
                        break;
                    case 5:
                        message.is_secure = reader.bool();
                        break;
                    case 6:
                        message.token = reader.bytes();
                        break;
                    case 7:
                        message.game_extra_info = reader.string();
                        break;
                    case 8:
                        message.game_data_blob = reader.bytes();
                        break;
                    case 9:
                        message.process_id = reader.uint32();
                        break;
                    case 10:
                        message.streaming_provider_id = reader.uint32();
                        break;
                    case 11:
                        message.game_flags = reader.uint32();
                        break;
                    case 12:
                        message.owner_id = reader.uint32();
                        break;
                    case 13:
                        message.vr_hmd_vendor = reader.string();
                        break;
                    case 14:
                        message.vr_hmd_model = reader.string();
                        break;
                    case 15:
                        message.launch_option_type = reader.uint32();
                        break;
                    case 16:
                        message.primary_controller_type = reader.int32();
                        break;
                    case 17:
                        message.primary_steam_controller_serial = reader.string();
                        break;
                    case 18:
                        message.total_steam_controller_count = reader.uint32();
                        break;
                    case 19:
                        message.total_non_steam_controller_count = reader.uint32();
                        break;
                    case 20:
                        message.controller_workshop_file_id = reader.uint64();
                        break;
                    case 21:
                        message.launch_source = reader.uint32();
                        break;
                    case 22:
                        message.vr_hmd_runtime = reader.uint32();
                        break;
                    case 23:
                        message.game_ip_address = $root.CMsgIPAddress.decode(reader, reader.uint32());
                        break;
                    case 24:
                        message.controller_connection_type = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a GamePlayed message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientGamesPlayed.GamePlayed} GamePlayed
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GamePlayed.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a GamePlayed message.
             * @function verify
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GamePlayed.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steam_id_gs != null && message.hasOwnProperty("steam_id_gs"))
                    if (!$util.isInteger(message.steam_id_gs) && !(message.steam_id_gs && $util.isInteger(message.steam_id_gs.low) && $util.isInteger(message.steam_id_gs.high)))
                        return "steam_id_gs: integer|Long expected";
                if (message.game_id != null && message.hasOwnProperty("game_id"))
                    if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                        return "game_id: integer|Long expected";
                if (message.deprecated_game_ip_address != null && message.hasOwnProperty("deprecated_game_ip_address"))
                    if (!$util.isInteger(message.deprecated_game_ip_address))
                        return "deprecated_game_ip_address: integer expected";
                if (message.game_port != null && message.hasOwnProperty("game_port"))
                    if (!$util.isInteger(message.game_port))
                        return "game_port: integer expected";
                if (message.is_secure != null && message.hasOwnProperty("is_secure"))
                    if (typeof message.is_secure !== "boolean")
                        return "is_secure: boolean expected";
                if (message.token != null && message.hasOwnProperty("token"))
                    if (!(message.token && typeof message.token.length === "number" || $util.isString(message.token)))
                        return "token: buffer expected";
                if (message.game_extra_info != null && message.hasOwnProperty("game_extra_info"))
                    if (!$util.isString(message.game_extra_info))
                        return "game_extra_info: string expected";
                if (message.game_data_blob != null && message.hasOwnProperty("game_data_blob"))
                    if (!(message.game_data_blob && typeof message.game_data_blob.length === "number" || $util.isString(message.game_data_blob)))
                        return "game_data_blob: buffer expected";
                if (message.process_id != null && message.hasOwnProperty("process_id"))
                    if (!$util.isInteger(message.process_id))
                        return "process_id: integer expected";
                if (message.streaming_provider_id != null && message.hasOwnProperty("streaming_provider_id"))
                    if (!$util.isInteger(message.streaming_provider_id))
                        return "streaming_provider_id: integer expected";
                if (message.game_flags != null && message.hasOwnProperty("game_flags"))
                    if (!$util.isInteger(message.game_flags))
                        return "game_flags: integer expected";
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    if (!$util.isInteger(message.owner_id))
                        return "owner_id: integer expected";
                if (message.vr_hmd_vendor != null && message.hasOwnProperty("vr_hmd_vendor"))
                    if (!$util.isString(message.vr_hmd_vendor))
                        return "vr_hmd_vendor: string expected";
                if (message.vr_hmd_model != null && message.hasOwnProperty("vr_hmd_model"))
                    if (!$util.isString(message.vr_hmd_model))
                        return "vr_hmd_model: string expected";
                if (message.launch_option_type != null && message.hasOwnProperty("launch_option_type"))
                    if (!$util.isInteger(message.launch_option_type))
                        return "launch_option_type: integer expected";
                if (message.primary_controller_type != null && message.hasOwnProperty("primary_controller_type"))
                    if (!$util.isInteger(message.primary_controller_type))
                        return "primary_controller_type: integer expected";
                if (message.primary_steam_controller_serial != null && message.hasOwnProperty("primary_steam_controller_serial"))
                    if (!$util.isString(message.primary_steam_controller_serial))
                        return "primary_steam_controller_serial: string expected";
                if (message.total_steam_controller_count != null && message.hasOwnProperty("total_steam_controller_count"))
                    if (!$util.isInteger(message.total_steam_controller_count))
                        return "total_steam_controller_count: integer expected";
                if (message.total_non_steam_controller_count != null && message.hasOwnProperty("total_non_steam_controller_count"))
                    if (!$util.isInteger(message.total_non_steam_controller_count))
                        return "total_non_steam_controller_count: integer expected";
                if (message.controller_workshop_file_id != null && message.hasOwnProperty("controller_workshop_file_id"))
                    if (!$util.isInteger(message.controller_workshop_file_id) && !(message.controller_workshop_file_id && $util.isInteger(message.controller_workshop_file_id.low) && $util.isInteger(message.controller_workshop_file_id.high)))
                        return "controller_workshop_file_id: integer|Long expected";
                if (message.launch_source != null && message.hasOwnProperty("launch_source"))
                    if (!$util.isInteger(message.launch_source))
                        return "launch_source: integer expected";
                if (message.vr_hmd_runtime != null && message.hasOwnProperty("vr_hmd_runtime"))
                    if (!$util.isInteger(message.vr_hmd_runtime))
                        return "vr_hmd_runtime: integer expected";
                if (message.game_ip_address != null && message.hasOwnProperty("game_ip_address")) {
                    var error = $root.CMsgIPAddress.verify(message.game_ip_address);
                    if (error)
                        return "game_ip_address." + error;
                }
                if (message.controller_connection_type != null && message.hasOwnProperty("controller_connection_type"))
                    if (!$util.isInteger(message.controller_connection_type))
                        return "controller_connection_type: integer expected";
                return null;
            };
    
            /**
             * Creates a GamePlayed message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientGamesPlayed.GamePlayed} GamePlayed
             */
            GamePlayed.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientGamesPlayed.GamePlayed)
                    return object;
                var message = new $root.CMsgClientGamesPlayed.GamePlayed();
                if (object.steam_id_gs != null)
                    if ($util.Long)
                        (message.steam_id_gs = $util.Long.fromValue(object.steam_id_gs)).unsigned = true;
                    else if (typeof object.steam_id_gs === "string")
                        message.steam_id_gs = parseInt(object.steam_id_gs, 10);
                    else if (typeof object.steam_id_gs === "number")
                        message.steam_id_gs = object.steam_id_gs;
                    else if (typeof object.steam_id_gs === "object")
                        message.steam_id_gs = new $util.LongBits(object.steam_id_gs.low >>> 0, object.steam_id_gs.high >>> 0).toNumber(true);
                if (object.game_id != null)
                    if ($util.Long)
                        (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                    else if (typeof object.game_id === "string")
                        message.game_id = parseInt(object.game_id, 10);
                    else if (typeof object.game_id === "number")
                        message.game_id = object.game_id;
                    else if (typeof object.game_id === "object")
                        message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
                if (object.deprecated_game_ip_address != null)
                    message.deprecated_game_ip_address = object.deprecated_game_ip_address >>> 0;
                if (object.game_port != null)
                    message.game_port = object.game_port >>> 0;
                if (object.is_secure != null)
                    message.is_secure = Boolean(object.is_secure);
                if (object.token != null)
                    if (typeof object.token === "string")
                        $util.base64.decode(object.token, message.token = $util.newBuffer($util.base64.length(object.token)), 0);
                    else if (object.token.length)
                        message.token = object.token;
                if (object.game_extra_info != null)
                    message.game_extra_info = String(object.game_extra_info);
                if (object.game_data_blob != null)
                    if (typeof object.game_data_blob === "string")
                        $util.base64.decode(object.game_data_blob, message.game_data_blob = $util.newBuffer($util.base64.length(object.game_data_blob)), 0);
                    else if (object.game_data_blob.length)
                        message.game_data_blob = object.game_data_blob;
                if (object.process_id != null)
                    message.process_id = object.process_id >>> 0;
                if (object.streaming_provider_id != null)
                    message.streaming_provider_id = object.streaming_provider_id >>> 0;
                if (object.game_flags != null)
                    message.game_flags = object.game_flags >>> 0;
                if (object.owner_id != null)
                    message.owner_id = object.owner_id >>> 0;
                if (object.vr_hmd_vendor != null)
                    message.vr_hmd_vendor = String(object.vr_hmd_vendor);
                if (object.vr_hmd_model != null)
                    message.vr_hmd_model = String(object.vr_hmd_model);
                if (object.launch_option_type != null)
                    message.launch_option_type = object.launch_option_type >>> 0;
                if (object.primary_controller_type != null)
                    message.primary_controller_type = object.primary_controller_type | 0;
                if (object.primary_steam_controller_serial != null)
                    message.primary_steam_controller_serial = String(object.primary_steam_controller_serial);
                if (object.total_steam_controller_count != null)
                    message.total_steam_controller_count = object.total_steam_controller_count >>> 0;
                if (object.total_non_steam_controller_count != null)
                    message.total_non_steam_controller_count = object.total_non_steam_controller_count >>> 0;
                if (object.controller_workshop_file_id != null)
                    if ($util.Long)
                        (message.controller_workshop_file_id = $util.Long.fromValue(object.controller_workshop_file_id)).unsigned = true;
                    else if (typeof object.controller_workshop_file_id === "string")
                        message.controller_workshop_file_id = parseInt(object.controller_workshop_file_id, 10);
                    else if (typeof object.controller_workshop_file_id === "number")
                        message.controller_workshop_file_id = object.controller_workshop_file_id;
                    else if (typeof object.controller_workshop_file_id === "object")
                        message.controller_workshop_file_id = new $util.LongBits(object.controller_workshop_file_id.low >>> 0, object.controller_workshop_file_id.high >>> 0).toNumber(true);
                if (object.launch_source != null)
                    message.launch_source = object.launch_source >>> 0;
                if (object.vr_hmd_runtime != null)
                    message.vr_hmd_runtime = object.vr_hmd_runtime >>> 0;
                if (object.game_ip_address != null) {
                    if (typeof object.game_ip_address !== "object")
                        throw TypeError(".CMsgClientGamesPlayed.GamePlayed.game_ip_address: object expected");
                    message.game_ip_address = $root.CMsgIPAddress.fromObject(object.game_ip_address);
                }
                if (object.controller_connection_type != null)
                    message.controller_connection_type = object.controller_connection_type >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a GamePlayed message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @static
             * @param {CMsgClientGamesPlayed.GamePlayed} message GamePlayed
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GamePlayed.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.steam_id_gs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steam_id_gs = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.game_id = options.longs === String ? "0" : 0;
                    object.deprecated_game_ip_address = 0;
                    object.game_port = 0;
                    object.is_secure = false;
                    if (options.bytes === String)
                        object.token = "";
                    else {
                        object.token = [];
                        if (options.bytes !== Array)
                            object.token = $util.newBuffer(object.token);
                    }
                    object.game_extra_info = "";
                    if (options.bytes === String)
                        object.game_data_blob = "";
                    else {
                        object.game_data_blob = [];
                        if (options.bytes !== Array)
                            object.game_data_blob = $util.newBuffer(object.game_data_blob);
                    }
                    object.process_id = 0;
                    object.streaming_provider_id = 0;
                    object.game_flags = 0;
                    object.owner_id = 0;
                    object.vr_hmd_vendor = "";
                    object.vr_hmd_model = "";
                    object.launch_option_type = 0;
                    object.primary_controller_type = -1;
                    object.primary_steam_controller_serial = "";
                    object.total_steam_controller_count = 0;
                    object.total_non_steam_controller_count = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.controller_workshop_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.controller_workshop_file_id = options.longs === String ? "0" : 0;
                    object.launch_source = 0;
                    object.vr_hmd_runtime = 0;
                    object.game_ip_address = null;
                    object.controller_connection_type = 0;
                }
                if (message.steam_id_gs != null && message.hasOwnProperty("steam_id_gs"))
                    if (typeof message.steam_id_gs === "number")
                        object.steam_id_gs = options.longs === String ? String(message.steam_id_gs) : message.steam_id_gs;
                    else
                        object.steam_id_gs = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_gs) : options.longs === Number ? new $util.LongBits(message.steam_id_gs.low >>> 0, message.steam_id_gs.high >>> 0).toNumber(true) : message.steam_id_gs;
                if (message.game_id != null && message.hasOwnProperty("game_id"))
                    if (typeof message.game_id === "number")
                        object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                    else
                        object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
                if (message.deprecated_game_ip_address != null && message.hasOwnProperty("deprecated_game_ip_address"))
                    object.deprecated_game_ip_address = message.deprecated_game_ip_address;
                if (message.game_port != null && message.hasOwnProperty("game_port"))
                    object.game_port = message.game_port;
                if (message.is_secure != null && message.hasOwnProperty("is_secure"))
                    object.is_secure = message.is_secure;
                if (message.token != null && message.hasOwnProperty("token"))
                    object.token = options.bytes === String ? $util.base64.encode(message.token, 0, message.token.length) : options.bytes === Array ? Array.prototype.slice.call(message.token) : message.token;
                if (message.game_extra_info != null && message.hasOwnProperty("game_extra_info"))
                    object.game_extra_info = message.game_extra_info;
                if (message.game_data_blob != null && message.hasOwnProperty("game_data_blob"))
                    object.game_data_blob = options.bytes === String ? $util.base64.encode(message.game_data_blob, 0, message.game_data_blob.length) : options.bytes === Array ? Array.prototype.slice.call(message.game_data_blob) : message.game_data_blob;
                if (message.process_id != null && message.hasOwnProperty("process_id"))
                    object.process_id = message.process_id;
                if (message.streaming_provider_id != null && message.hasOwnProperty("streaming_provider_id"))
                    object.streaming_provider_id = message.streaming_provider_id;
                if (message.game_flags != null && message.hasOwnProperty("game_flags"))
                    object.game_flags = message.game_flags;
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    object.owner_id = message.owner_id;
                if (message.vr_hmd_vendor != null && message.hasOwnProperty("vr_hmd_vendor"))
                    object.vr_hmd_vendor = message.vr_hmd_vendor;
                if (message.vr_hmd_model != null && message.hasOwnProperty("vr_hmd_model"))
                    object.vr_hmd_model = message.vr_hmd_model;
                if (message.launch_option_type != null && message.hasOwnProperty("launch_option_type"))
                    object.launch_option_type = message.launch_option_type;
                if (message.primary_controller_type != null && message.hasOwnProperty("primary_controller_type"))
                    object.primary_controller_type = message.primary_controller_type;
                if (message.primary_steam_controller_serial != null && message.hasOwnProperty("primary_steam_controller_serial"))
                    object.primary_steam_controller_serial = message.primary_steam_controller_serial;
                if (message.total_steam_controller_count != null && message.hasOwnProperty("total_steam_controller_count"))
                    object.total_steam_controller_count = message.total_steam_controller_count;
                if (message.total_non_steam_controller_count != null && message.hasOwnProperty("total_non_steam_controller_count"))
                    object.total_non_steam_controller_count = message.total_non_steam_controller_count;
                if (message.controller_workshop_file_id != null && message.hasOwnProperty("controller_workshop_file_id"))
                    if (typeof message.controller_workshop_file_id === "number")
                        object.controller_workshop_file_id = options.longs === String ? String(message.controller_workshop_file_id) : message.controller_workshop_file_id;
                    else
                        object.controller_workshop_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.controller_workshop_file_id) : options.longs === Number ? new $util.LongBits(message.controller_workshop_file_id.low >>> 0, message.controller_workshop_file_id.high >>> 0).toNumber(true) : message.controller_workshop_file_id;
                if (message.launch_source != null && message.hasOwnProperty("launch_source"))
                    object.launch_source = message.launch_source;
                if (message.vr_hmd_runtime != null && message.hasOwnProperty("vr_hmd_runtime"))
                    object.vr_hmd_runtime = message.vr_hmd_runtime;
                if (message.game_ip_address != null && message.hasOwnProperty("game_ip_address"))
                    object.game_ip_address = $root.CMsgIPAddress.toObject(message.game_ip_address, options);
                if (message.controller_connection_type != null && message.hasOwnProperty("controller_connection_type"))
                    object.controller_connection_type = message.controller_connection_type;
                return object;
            };
    
            /**
             * Converts this GamePlayed to JSON.
             * @function toJSON
             * @memberof CMsgClientGamesPlayed.GamePlayed
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GamePlayed.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return GamePlayed;
        })();
    
        return CMsgClientGamesPlayed;
    })();
    
    $root.CMsgGSApprove = (function() {
    
        /**
         * Properties of a CMsgGSApprove.
         * @exports ICMsgGSApprove
         * @interface ICMsgGSApprove
         * @property {number|Long|null} [steam_id] CMsgGSApprove steam_id
         * @property {number|Long|null} [owner_steam_id] CMsgGSApprove owner_steam_id
         */
    
        /**
         * Constructs a new CMsgGSApprove.
         * @exports CMsgGSApprove
         * @classdesc Represents a CMsgGSApprove.
         * @implements ICMsgGSApprove
         * @constructor
         * @param {ICMsgGSApprove=} [properties] Properties to set
         */
        function CMsgGSApprove(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGSApprove steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgGSApprove
         * @instance
         */
        CMsgGSApprove.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGSApprove owner_steam_id.
         * @member {number|Long} owner_steam_id
         * @memberof CMsgGSApprove
         * @instance
         */
        CMsgGSApprove.prototype.owner_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGSApprove instance using the specified properties.
         * @function create
         * @memberof CMsgGSApprove
         * @static
         * @param {ICMsgGSApprove=} [properties] Properties to set
         * @returns {CMsgGSApprove} CMsgGSApprove instance
         */
        CMsgGSApprove.create = function create(properties) {
            return new CMsgGSApprove(properties);
        };
    
        /**
         * Encodes the specified CMsgGSApprove message. Does not implicitly {@link CMsgGSApprove.verify|verify} messages.
         * @function encode
         * @memberof CMsgGSApprove
         * @static
         * @param {ICMsgGSApprove} message CMsgGSApprove message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSApprove.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            if (message.owner_steam_id != null && Object.hasOwnProperty.call(message, "owner_steam_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.owner_steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGSApprove message, length delimited. Does not implicitly {@link CMsgGSApprove.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGSApprove
         * @static
         * @param {ICMsgGSApprove} message CMsgGSApprove message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSApprove.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGSApprove message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGSApprove
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGSApprove} CMsgGSApprove
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSApprove.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSApprove();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                case 2:
                    message.owner_steam_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGSApprove message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGSApprove
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGSApprove} CMsgGSApprove
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSApprove.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGSApprove message.
         * @function verify
         * @memberof CMsgGSApprove
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGSApprove.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            if (message.owner_steam_id != null && message.hasOwnProperty("owner_steam_id"))
                if (!$util.isInteger(message.owner_steam_id) && !(message.owner_steam_id && $util.isInteger(message.owner_steam_id.low) && $util.isInteger(message.owner_steam_id.high)))
                    return "owner_steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGSApprove message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGSApprove
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGSApprove} CMsgGSApprove
         */
        CMsgGSApprove.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGSApprove)
                return object;
            var message = new $root.CMsgGSApprove();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            if (object.owner_steam_id != null)
                if ($util.Long)
                    (message.owner_steam_id = $util.Long.fromValue(object.owner_steam_id)).unsigned = false;
                else if (typeof object.owner_steam_id === "string")
                    message.owner_steam_id = parseInt(object.owner_steam_id, 10);
                else if (typeof object.owner_steam_id === "number")
                    message.owner_steam_id = object.owner_steam_id;
                else if (typeof object.owner_steam_id === "object")
                    message.owner_steam_id = new $util.LongBits(object.owner_steam_id.low >>> 0, object.owner_steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGSApprove message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGSApprove
         * @static
         * @param {CMsgGSApprove} message CMsgGSApprove
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGSApprove.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.owner_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.owner_steam_id = options.longs === String ? "0" : 0;
            }
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            if (message.owner_steam_id != null && message.hasOwnProperty("owner_steam_id"))
                if (typeof message.owner_steam_id === "number")
                    object.owner_steam_id = options.longs === String ? String(message.owner_steam_id) : message.owner_steam_id;
                else
                    object.owner_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.owner_steam_id) : options.longs === Number ? new $util.LongBits(message.owner_steam_id.low >>> 0, message.owner_steam_id.high >>> 0).toNumber() : message.owner_steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgGSApprove to JSON.
         * @function toJSON
         * @memberof CMsgGSApprove
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGSApprove.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgGSApprove;
    })();
    
    $root.CMsgGSDeny = (function() {
    
        /**
         * Properties of a CMsgGSDeny.
         * @exports ICMsgGSDeny
         * @interface ICMsgGSDeny
         * @property {number|Long|null} [steam_id] CMsgGSDeny steam_id
         * @property {number|null} [edeny_reason] CMsgGSDeny edeny_reason
         * @property {string|null} [deny_string] CMsgGSDeny deny_string
         */
    
        /**
         * Constructs a new CMsgGSDeny.
         * @exports CMsgGSDeny
         * @classdesc Represents a CMsgGSDeny.
         * @implements ICMsgGSDeny
         * @constructor
         * @param {ICMsgGSDeny=} [properties] Properties to set
         */
        function CMsgGSDeny(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGSDeny steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgGSDeny
         * @instance
         */
        CMsgGSDeny.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGSDeny edeny_reason.
         * @member {number} edeny_reason
         * @memberof CMsgGSDeny
         * @instance
         */
        CMsgGSDeny.prototype.edeny_reason = 0;
    
        /**
         * CMsgGSDeny deny_string.
         * @member {string} deny_string
         * @memberof CMsgGSDeny
         * @instance
         */
        CMsgGSDeny.prototype.deny_string = "";
    
        /**
         * Creates a new CMsgGSDeny instance using the specified properties.
         * @function create
         * @memberof CMsgGSDeny
         * @static
         * @param {ICMsgGSDeny=} [properties] Properties to set
         * @returns {CMsgGSDeny} CMsgGSDeny instance
         */
        CMsgGSDeny.create = function create(properties) {
            return new CMsgGSDeny(properties);
        };
    
        /**
         * Encodes the specified CMsgGSDeny message. Does not implicitly {@link CMsgGSDeny.verify|verify} messages.
         * @function encode
         * @memberof CMsgGSDeny
         * @static
         * @param {ICMsgGSDeny} message CMsgGSDeny message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSDeny.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            if (message.edeny_reason != null && Object.hasOwnProperty.call(message, "edeny_reason"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.edeny_reason);
            if (message.deny_string != null && Object.hasOwnProperty.call(message, "deny_string"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.deny_string);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGSDeny message, length delimited. Does not implicitly {@link CMsgGSDeny.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGSDeny
         * @static
         * @param {ICMsgGSDeny} message CMsgGSDeny message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSDeny.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGSDeny message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGSDeny
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGSDeny} CMsgGSDeny
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSDeny.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSDeny();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                case 2:
                    message.edeny_reason = reader.int32();
                    break;
                case 3:
                    message.deny_string = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGSDeny message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGSDeny
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGSDeny} CMsgGSDeny
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSDeny.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGSDeny message.
         * @function verify
         * @memberof CMsgGSDeny
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGSDeny.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            if (message.edeny_reason != null && message.hasOwnProperty("edeny_reason"))
                if (!$util.isInteger(message.edeny_reason))
                    return "edeny_reason: integer expected";
            if (message.deny_string != null && message.hasOwnProperty("deny_string"))
                if (!$util.isString(message.deny_string))
                    return "deny_string: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGSDeny message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGSDeny
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGSDeny} CMsgGSDeny
         */
        CMsgGSDeny.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGSDeny)
                return object;
            var message = new $root.CMsgGSDeny();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            if (object.edeny_reason != null)
                message.edeny_reason = object.edeny_reason | 0;
            if (object.deny_string != null)
                message.deny_string = String(object.deny_string);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGSDeny message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGSDeny
         * @static
         * @param {CMsgGSDeny} message CMsgGSDeny
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGSDeny.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
                object.edeny_reason = 0;
                object.deny_string = "";
            }
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            if (message.edeny_reason != null && message.hasOwnProperty("edeny_reason"))
                object.edeny_reason = message.edeny_reason;
            if (message.deny_string != null && message.hasOwnProperty("deny_string"))
                object.deny_string = message.deny_string;
            return object;
        };
    
        /**
         * Converts this CMsgGSDeny to JSON.
         * @function toJSON
         * @memberof CMsgGSDeny
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGSDeny.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgGSDeny;
    })();
    
    $root.CMsgGSKick = (function() {
    
        /**
         * Properties of a CMsgGSKick.
         * @exports ICMsgGSKick
         * @interface ICMsgGSKick
         * @property {number|Long|null} [steam_id] CMsgGSKick steam_id
         * @property {number|null} [edeny_reason] CMsgGSKick edeny_reason
         */
    
        /**
         * Constructs a new CMsgGSKick.
         * @exports CMsgGSKick
         * @classdesc Represents a CMsgGSKick.
         * @implements ICMsgGSKick
         * @constructor
         * @param {ICMsgGSKick=} [properties] Properties to set
         */
        function CMsgGSKick(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGSKick steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgGSKick
         * @instance
         */
        CMsgGSKick.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGSKick edeny_reason.
         * @member {number} edeny_reason
         * @memberof CMsgGSKick
         * @instance
         */
        CMsgGSKick.prototype.edeny_reason = 0;
    
        /**
         * Creates a new CMsgGSKick instance using the specified properties.
         * @function create
         * @memberof CMsgGSKick
         * @static
         * @param {ICMsgGSKick=} [properties] Properties to set
         * @returns {CMsgGSKick} CMsgGSKick instance
         */
        CMsgGSKick.create = function create(properties) {
            return new CMsgGSKick(properties);
        };
    
        /**
         * Encodes the specified CMsgGSKick message. Does not implicitly {@link CMsgGSKick.verify|verify} messages.
         * @function encode
         * @memberof CMsgGSKick
         * @static
         * @param {ICMsgGSKick} message CMsgGSKick message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSKick.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            if (message.edeny_reason != null && Object.hasOwnProperty.call(message, "edeny_reason"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.edeny_reason);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGSKick message, length delimited. Does not implicitly {@link CMsgGSKick.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGSKick
         * @static
         * @param {ICMsgGSKick} message CMsgGSKick message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGSKick.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGSKick message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGSKick
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGSKick} CMsgGSKick
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSKick.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGSKick();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                case 2:
                    message.edeny_reason = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGSKick message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGSKick
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGSKick} CMsgGSKick
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGSKick.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGSKick message.
         * @function verify
         * @memberof CMsgGSKick
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGSKick.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            if (message.edeny_reason != null && message.hasOwnProperty("edeny_reason"))
                if (!$util.isInteger(message.edeny_reason))
                    return "edeny_reason: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGSKick message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGSKick
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGSKick} CMsgGSKick
         */
        CMsgGSKick.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGSKick)
                return object;
            var message = new $root.CMsgGSKick();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            if (object.edeny_reason != null)
                message.edeny_reason = object.edeny_reason | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGSKick message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGSKick
         * @static
         * @param {CMsgGSKick} message CMsgGSKick
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGSKick.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
                object.edeny_reason = 0;
            }
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            if (message.edeny_reason != null && message.hasOwnProperty("edeny_reason"))
                object.edeny_reason = message.edeny_reason;
            return object;
        };
    
        /**
         * Converts this CMsgGSKick to JSON.
         * @function toJSON
         * @memberof CMsgGSKick
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGSKick.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgGSKick;
    })();
    
    $root.CMsgClientAuthList = (function() {
    
        /**
         * Properties of a CMsgClientAuthList.
         * @exports ICMsgClientAuthList
         * @interface ICMsgClientAuthList
         * @property {number|null} [tokens_left] CMsgClientAuthList tokens_left
         * @property {number|null} [last_request_seq] CMsgClientAuthList last_request_seq
         * @property {number|null} [last_request_seq_from_server] CMsgClientAuthList last_request_seq_from_server
         * @property {Array.<ICMsgAuthTicket>|null} [tickets] CMsgClientAuthList tickets
         * @property {Array.<number>|null} [app_ids] CMsgClientAuthList app_ids
         * @property {number|null} [message_sequence] CMsgClientAuthList message_sequence
         */
    
        /**
         * Constructs a new CMsgClientAuthList.
         * @exports CMsgClientAuthList
         * @classdesc Represents a CMsgClientAuthList.
         * @implements ICMsgClientAuthList
         * @constructor
         * @param {ICMsgClientAuthList=} [properties] Properties to set
         */
        function CMsgClientAuthList(properties) {
            this.tickets = [];
            this.app_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAuthList tokens_left.
         * @member {number} tokens_left
         * @memberof CMsgClientAuthList
         * @instance
         */
        CMsgClientAuthList.prototype.tokens_left = 0;
    
        /**
         * CMsgClientAuthList last_request_seq.
         * @member {number} last_request_seq
         * @memberof CMsgClientAuthList
         * @instance
         */
        CMsgClientAuthList.prototype.last_request_seq = 0;
    
        /**
         * CMsgClientAuthList last_request_seq_from_server.
         * @member {number} last_request_seq_from_server
         * @memberof CMsgClientAuthList
         * @instance
         */
        CMsgClientAuthList.prototype.last_request_seq_from_server = 0;
    
        /**
         * CMsgClientAuthList tickets.
         * @member {Array.<ICMsgAuthTicket>} tickets
         * @memberof CMsgClientAuthList
         * @instance
         */
        CMsgClientAuthList.prototype.tickets = $util.emptyArray;
    
        /**
         * CMsgClientAuthList app_ids.
         * @member {Array.<number>} app_ids
         * @memberof CMsgClientAuthList
         * @instance
         */
        CMsgClientAuthList.prototype.app_ids = $util.emptyArray;
    
        /**
         * CMsgClientAuthList message_sequence.
         * @member {number} message_sequence
         * @memberof CMsgClientAuthList
         * @instance
         */
        CMsgClientAuthList.prototype.message_sequence = 0;
    
        /**
         * Creates a new CMsgClientAuthList instance using the specified properties.
         * @function create
         * @memberof CMsgClientAuthList
         * @static
         * @param {ICMsgClientAuthList=} [properties] Properties to set
         * @returns {CMsgClientAuthList} CMsgClientAuthList instance
         */
        CMsgClientAuthList.create = function create(properties) {
            return new CMsgClientAuthList(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAuthList message. Does not implicitly {@link CMsgClientAuthList.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAuthList
         * @static
         * @param {ICMsgClientAuthList} message CMsgClientAuthList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.tokens_left != null && Object.hasOwnProperty.call(message, "tokens_left"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.tokens_left);
            if (message.last_request_seq != null && Object.hasOwnProperty.call(message, "last_request_seq"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.last_request_seq);
            if (message.last_request_seq_from_server != null && Object.hasOwnProperty.call(message, "last_request_seq_from_server"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.last_request_seq_from_server);
            if (message.tickets != null && message.tickets.length)
                for (var i = 0; i < message.tickets.length; ++i)
                    $root.CMsgAuthTicket.encode(message.tickets[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.app_ids != null && message.app_ids.length)
                for (var i = 0; i < message.app_ids.length; ++i)
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.app_ids[i]);
            if (message.message_sequence != null && Object.hasOwnProperty.call(message, "message_sequence"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.message_sequence);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAuthList message, length delimited. Does not implicitly {@link CMsgClientAuthList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAuthList
         * @static
         * @param {ICMsgClientAuthList} message CMsgClientAuthList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAuthList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAuthList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAuthList} CMsgClientAuthList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAuthList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.tokens_left = reader.uint32();
                    break;
                case 2:
                    message.last_request_seq = reader.uint32();
                    break;
                case 3:
                    message.last_request_seq_from_server = reader.uint32();
                    break;
                case 4:
                    if (!(message.tickets && message.tickets.length))
                        message.tickets = [];
                    message.tickets.push($root.CMsgAuthTicket.decode(reader, reader.uint32()));
                    break;
                case 5:
                    if (!(message.app_ids && message.app_ids.length))
                        message.app_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.app_ids.push(reader.uint32());
                    } else
                        message.app_ids.push(reader.uint32());
                    break;
                case 6:
                    message.message_sequence = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAuthList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAuthList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAuthList} CMsgClientAuthList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAuthList message.
         * @function verify
         * @memberof CMsgClientAuthList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAuthList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.tokens_left != null && message.hasOwnProperty("tokens_left"))
                if (!$util.isInteger(message.tokens_left))
                    return "tokens_left: integer expected";
            if (message.last_request_seq != null && message.hasOwnProperty("last_request_seq"))
                if (!$util.isInteger(message.last_request_seq))
                    return "last_request_seq: integer expected";
            if (message.last_request_seq_from_server != null && message.hasOwnProperty("last_request_seq_from_server"))
                if (!$util.isInteger(message.last_request_seq_from_server))
                    return "last_request_seq_from_server: integer expected";
            if (message.tickets != null && message.hasOwnProperty("tickets")) {
                if (!Array.isArray(message.tickets))
                    return "tickets: array expected";
                for (var i = 0; i < message.tickets.length; ++i) {
                    var error = $root.CMsgAuthTicket.verify(message.tickets[i]);
                    if (error)
                        return "tickets." + error;
                }
            }
            if (message.app_ids != null && message.hasOwnProperty("app_ids")) {
                if (!Array.isArray(message.app_ids))
                    return "app_ids: array expected";
                for (var i = 0; i < message.app_ids.length; ++i)
                    if (!$util.isInteger(message.app_ids[i]))
                        return "app_ids: integer[] expected";
            }
            if (message.message_sequence != null && message.hasOwnProperty("message_sequence"))
                if (!$util.isInteger(message.message_sequence))
                    return "message_sequence: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAuthList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAuthList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAuthList} CMsgClientAuthList
         */
        CMsgClientAuthList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAuthList)
                return object;
            var message = new $root.CMsgClientAuthList();
            if (object.tokens_left != null)
                message.tokens_left = object.tokens_left >>> 0;
            if (object.last_request_seq != null)
                message.last_request_seq = object.last_request_seq >>> 0;
            if (object.last_request_seq_from_server != null)
                message.last_request_seq_from_server = object.last_request_seq_from_server >>> 0;
            if (object.tickets) {
                if (!Array.isArray(object.tickets))
                    throw TypeError(".CMsgClientAuthList.tickets: array expected");
                message.tickets = [];
                for (var i = 0; i < object.tickets.length; ++i) {
                    if (typeof object.tickets[i] !== "object")
                        throw TypeError(".CMsgClientAuthList.tickets: object expected");
                    message.tickets[i] = $root.CMsgAuthTicket.fromObject(object.tickets[i]);
                }
            }
            if (object.app_ids) {
                if (!Array.isArray(object.app_ids))
                    throw TypeError(".CMsgClientAuthList.app_ids: array expected");
                message.app_ids = [];
                for (var i = 0; i < object.app_ids.length; ++i)
                    message.app_ids[i] = object.app_ids[i] >>> 0;
            }
            if (object.message_sequence != null)
                message.message_sequence = object.message_sequence >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAuthList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAuthList
         * @static
         * @param {CMsgClientAuthList} message CMsgClientAuthList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAuthList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.tickets = [];
                object.app_ids = [];
            }
            if (options.defaults) {
                object.tokens_left = 0;
                object.last_request_seq = 0;
                object.last_request_seq_from_server = 0;
                object.message_sequence = 0;
            }
            if (message.tokens_left != null && message.hasOwnProperty("tokens_left"))
                object.tokens_left = message.tokens_left;
            if (message.last_request_seq != null && message.hasOwnProperty("last_request_seq"))
                object.last_request_seq = message.last_request_seq;
            if (message.last_request_seq_from_server != null && message.hasOwnProperty("last_request_seq_from_server"))
                object.last_request_seq_from_server = message.last_request_seq_from_server;
            if (message.tickets && message.tickets.length) {
                object.tickets = [];
                for (var j = 0; j < message.tickets.length; ++j)
                    object.tickets[j] = $root.CMsgAuthTicket.toObject(message.tickets[j], options);
            }
            if (message.app_ids && message.app_ids.length) {
                object.app_ids = [];
                for (var j = 0; j < message.app_ids.length; ++j)
                    object.app_ids[j] = message.app_ids[j];
            }
            if (message.message_sequence != null && message.hasOwnProperty("message_sequence"))
                object.message_sequence = message.message_sequence;
            return object;
        };
    
        /**
         * Converts this CMsgClientAuthList to JSON.
         * @function toJSON
         * @memberof CMsgClientAuthList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAuthList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAuthList;
    })();
    
    $root.CMsgClientAuthListAck = (function() {
    
        /**
         * Properties of a CMsgClientAuthListAck.
         * @exports ICMsgClientAuthListAck
         * @interface ICMsgClientAuthListAck
         * @property {Array.<number>|null} [ticket_crc] CMsgClientAuthListAck ticket_crc
         * @property {Array.<number>|null} [app_ids] CMsgClientAuthListAck app_ids
         * @property {number|null} [message_sequence] CMsgClientAuthListAck message_sequence
         */
    
        /**
         * Constructs a new CMsgClientAuthListAck.
         * @exports CMsgClientAuthListAck
         * @classdesc Represents a CMsgClientAuthListAck.
         * @implements ICMsgClientAuthListAck
         * @constructor
         * @param {ICMsgClientAuthListAck=} [properties] Properties to set
         */
        function CMsgClientAuthListAck(properties) {
            this.ticket_crc = [];
            this.app_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAuthListAck ticket_crc.
         * @member {Array.<number>} ticket_crc
         * @memberof CMsgClientAuthListAck
         * @instance
         */
        CMsgClientAuthListAck.prototype.ticket_crc = $util.emptyArray;
    
        /**
         * CMsgClientAuthListAck app_ids.
         * @member {Array.<number>} app_ids
         * @memberof CMsgClientAuthListAck
         * @instance
         */
        CMsgClientAuthListAck.prototype.app_ids = $util.emptyArray;
    
        /**
         * CMsgClientAuthListAck message_sequence.
         * @member {number} message_sequence
         * @memberof CMsgClientAuthListAck
         * @instance
         */
        CMsgClientAuthListAck.prototype.message_sequence = 0;
    
        /**
         * Creates a new CMsgClientAuthListAck instance using the specified properties.
         * @function create
         * @memberof CMsgClientAuthListAck
         * @static
         * @param {ICMsgClientAuthListAck=} [properties] Properties to set
         * @returns {CMsgClientAuthListAck} CMsgClientAuthListAck instance
         */
        CMsgClientAuthListAck.create = function create(properties) {
            return new CMsgClientAuthListAck(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAuthListAck message. Does not implicitly {@link CMsgClientAuthListAck.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAuthListAck
         * @static
         * @param {ICMsgClientAuthListAck} message CMsgClientAuthListAck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthListAck.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ticket_crc != null && message.ticket_crc.length)
                for (var i = 0; i < message.ticket_crc.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ticket_crc[i]);
            if (message.app_ids != null && message.app_ids.length)
                for (var i = 0; i < message.app_ids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_ids[i]);
            if (message.message_sequence != null && Object.hasOwnProperty.call(message, "message_sequence"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.message_sequence);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAuthListAck message, length delimited. Does not implicitly {@link CMsgClientAuthListAck.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAuthListAck
         * @static
         * @param {ICMsgClientAuthListAck} message CMsgClientAuthListAck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAuthListAck.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAuthListAck message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAuthListAck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAuthListAck} CMsgClientAuthListAck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthListAck.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAuthListAck();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.ticket_crc && message.ticket_crc.length))
                        message.ticket_crc = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.ticket_crc.push(reader.uint32());
                    } else
                        message.ticket_crc.push(reader.uint32());
                    break;
                case 2:
                    if (!(message.app_ids && message.app_ids.length))
                        message.app_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.app_ids.push(reader.uint32());
                    } else
                        message.app_ids.push(reader.uint32());
                    break;
                case 3:
                    message.message_sequence = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAuthListAck message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAuthListAck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAuthListAck} CMsgClientAuthListAck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAuthListAck.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAuthListAck message.
         * @function verify
         * @memberof CMsgClientAuthListAck
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAuthListAck.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc")) {
                if (!Array.isArray(message.ticket_crc))
                    return "ticket_crc: array expected";
                for (var i = 0; i < message.ticket_crc.length; ++i)
                    if (!$util.isInteger(message.ticket_crc[i]))
                        return "ticket_crc: integer[] expected";
            }
            if (message.app_ids != null && message.hasOwnProperty("app_ids")) {
                if (!Array.isArray(message.app_ids))
                    return "app_ids: array expected";
                for (var i = 0; i < message.app_ids.length; ++i)
                    if (!$util.isInteger(message.app_ids[i]))
                        return "app_ids: integer[] expected";
            }
            if (message.message_sequence != null && message.hasOwnProperty("message_sequence"))
                if (!$util.isInteger(message.message_sequence))
                    return "message_sequence: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAuthListAck message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAuthListAck
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAuthListAck} CMsgClientAuthListAck
         */
        CMsgClientAuthListAck.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAuthListAck)
                return object;
            var message = new $root.CMsgClientAuthListAck();
            if (object.ticket_crc) {
                if (!Array.isArray(object.ticket_crc))
                    throw TypeError(".CMsgClientAuthListAck.ticket_crc: array expected");
                message.ticket_crc = [];
                for (var i = 0; i < object.ticket_crc.length; ++i)
                    message.ticket_crc[i] = object.ticket_crc[i] >>> 0;
            }
            if (object.app_ids) {
                if (!Array.isArray(object.app_ids))
                    throw TypeError(".CMsgClientAuthListAck.app_ids: array expected");
                message.app_ids = [];
                for (var i = 0; i < object.app_ids.length; ++i)
                    message.app_ids[i] = object.app_ids[i] >>> 0;
            }
            if (object.message_sequence != null)
                message.message_sequence = object.message_sequence >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAuthListAck message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAuthListAck
         * @static
         * @param {CMsgClientAuthListAck} message CMsgClientAuthListAck
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAuthListAck.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.ticket_crc = [];
                object.app_ids = [];
            }
            if (options.defaults)
                object.message_sequence = 0;
            if (message.ticket_crc && message.ticket_crc.length) {
                object.ticket_crc = [];
                for (var j = 0; j < message.ticket_crc.length; ++j)
                    object.ticket_crc[j] = message.ticket_crc[j];
            }
            if (message.app_ids && message.app_ids.length) {
                object.app_ids = [];
                for (var j = 0; j < message.app_ids.length; ++j)
                    object.app_ids[j] = message.app_ids[j];
            }
            if (message.message_sequence != null && message.hasOwnProperty("message_sequence"))
                object.message_sequence = message.message_sequence;
            return object;
        };
    
        /**
         * Converts this CMsgClientAuthListAck to JSON.
         * @function toJSON
         * @memberof CMsgClientAuthListAck
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAuthListAck.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAuthListAck;
    })();
    
    $root.CMsgClientLicenseList = (function() {
    
        /**
         * Properties of a CMsgClientLicenseList.
         * @exports ICMsgClientLicenseList
         * @interface ICMsgClientLicenseList
         * @property {number|null} [eresult] CMsgClientLicenseList eresult
         * @property {Array.<CMsgClientLicenseList.ILicense>|null} [licenses] CMsgClientLicenseList licenses
         */
    
        /**
         * Constructs a new CMsgClientLicenseList.
         * @exports CMsgClientLicenseList
         * @classdesc Represents a CMsgClientLicenseList.
         * @implements ICMsgClientLicenseList
         * @constructor
         * @param {ICMsgClientLicenseList=} [properties] Properties to set
         */
        function CMsgClientLicenseList(properties) {
            this.licenses = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLicenseList eresult.
         * @member {number} eresult
         * @memberof CMsgClientLicenseList
         * @instance
         */
        CMsgClientLicenseList.prototype.eresult = 2;
    
        /**
         * CMsgClientLicenseList licenses.
         * @member {Array.<CMsgClientLicenseList.ILicense>} licenses
         * @memberof CMsgClientLicenseList
         * @instance
         */
        CMsgClientLicenseList.prototype.licenses = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientLicenseList instance using the specified properties.
         * @function create
         * @memberof CMsgClientLicenseList
         * @static
         * @param {ICMsgClientLicenseList=} [properties] Properties to set
         * @returns {CMsgClientLicenseList} CMsgClientLicenseList instance
         */
        CMsgClientLicenseList.create = function create(properties) {
            return new CMsgClientLicenseList(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLicenseList message. Does not implicitly {@link CMsgClientLicenseList.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLicenseList
         * @static
         * @param {ICMsgClientLicenseList} message CMsgClientLicenseList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLicenseList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.licenses != null && message.licenses.length)
                for (var i = 0; i < message.licenses.length; ++i)
                    $root.CMsgClientLicenseList.License.encode(message.licenses[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLicenseList message, length delimited. Does not implicitly {@link CMsgClientLicenseList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLicenseList
         * @static
         * @param {ICMsgClientLicenseList} message CMsgClientLicenseList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLicenseList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLicenseList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLicenseList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLicenseList} CMsgClientLicenseList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLicenseList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLicenseList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    if (!(message.licenses && message.licenses.length))
                        message.licenses = [];
                    message.licenses.push($root.CMsgClientLicenseList.License.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLicenseList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLicenseList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLicenseList} CMsgClientLicenseList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLicenseList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLicenseList message.
         * @function verify
         * @memberof CMsgClientLicenseList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLicenseList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.licenses != null && message.hasOwnProperty("licenses")) {
                if (!Array.isArray(message.licenses))
                    return "licenses: array expected";
                for (var i = 0; i < message.licenses.length; ++i) {
                    var error = $root.CMsgClientLicenseList.License.verify(message.licenses[i]);
                    if (error)
                        return "licenses." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientLicenseList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLicenseList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLicenseList} CMsgClientLicenseList
         */
        CMsgClientLicenseList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLicenseList)
                return object;
            var message = new $root.CMsgClientLicenseList();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.licenses) {
                if (!Array.isArray(object.licenses))
                    throw TypeError(".CMsgClientLicenseList.licenses: array expected");
                message.licenses = [];
                for (var i = 0; i < object.licenses.length; ++i) {
                    if (typeof object.licenses[i] !== "object")
                        throw TypeError(".CMsgClientLicenseList.licenses: object expected");
                    message.licenses[i] = $root.CMsgClientLicenseList.License.fromObject(object.licenses[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLicenseList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLicenseList
         * @static
         * @param {CMsgClientLicenseList} message CMsgClientLicenseList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLicenseList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.licenses = [];
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.licenses && message.licenses.length) {
                object.licenses = [];
                for (var j = 0; j < message.licenses.length; ++j)
                    object.licenses[j] = $root.CMsgClientLicenseList.License.toObject(message.licenses[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientLicenseList to JSON.
         * @function toJSON
         * @memberof CMsgClientLicenseList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLicenseList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientLicenseList.License = (function() {
    
            /**
             * Properties of a License.
             * @memberof CMsgClientLicenseList
             * @interface ILicense
             * @property {number|null} [package_id] License package_id
             * @property {number|null} [time_created] License time_created
             * @property {number|null} [time_next_process] License time_next_process
             * @property {number|null} [minute_limit] License minute_limit
             * @property {number|null} [minutes_used] License minutes_used
             * @property {number|null} [payment_method] License payment_method
             * @property {number|null} [flags] License flags
             * @property {string|null} [purchase_country_code] License purchase_country_code
             * @property {number|null} [license_type] License license_type
             * @property {number|null} [territory_code] License territory_code
             * @property {number|null} [change_number] License change_number
             * @property {number|null} [owner_id] License owner_id
             * @property {number|null} [initial_period] License initial_period
             * @property {number|null} [initial_time_unit] License initial_time_unit
             * @property {number|null} [renewal_period] License renewal_period
             * @property {number|null} [renewal_time_unit] License renewal_time_unit
             * @property {number|Long|null} [access_token] License access_token
             * @property {number|null} [master_package_id] License master_package_id
             */
    
            /**
             * Constructs a new License.
             * @memberof CMsgClientLicenseList
             * @classdesc Represents a License.
             * @implements ILicense
             * @constructor
             * @param {CMsgClientLicenseList.ILicense=} [properties] Properties to set
             */
            function License(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * License package_id.
             * @member {number} package_id
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.package_id = 0;
    
            /**
             * License time_created.
             * @member {number} time_created
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.time_created = 0;
    
            /**
             * License time_next_process.
             * @member {number} time_next_process
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.time_next_process = 0;
    
            /**
             * License minute_limit.
             * @member {number} minute_limit
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.minute_limit = 0;
    
            /**
             * License minutes_used.
             * @member {number} minutes_used
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.minutes_used = 0;
    
            /**
             * License payment_method.
             * @member {number} payment_method
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.payment_method = 0;
    
            /**
             * License flags.
             * @member {number} flags
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.flags = 0;
    
            /**
             * License purchase_country_code.
             * @member {string} purchase_country_code
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.purchase_country_code = "";
    
            /**
             * License license_type.
             * @member {number} license_type
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.license_type = 0;
    
            /**
             * License territory_code.
             * @member {number} territory_code
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.territory_code = 0;
    
            /**
             * License change_number.
             * @member {number} change_number
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.change_number = 0;
    
            /**
             * License owner_id.
             * @member {number} owner_id
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.owner_id = 0;
    
            /**
             * License initial_period.
             * @member {number} initial_period
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.initial_period = 0;
    
            /**
             * License initial_time_unit.
             * @member {number} initial_time_unit
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.initial_time_unit = 0;
    
            /**
             * License renewal_period.
             * @member {number} renewal_period
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.renewal_period = 0;
    
            /**
             * License renewal_time_unit.
             * @member {number} renewal_time_unit
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.renewal_time_unit = 0;
    
            /**
             * License access_token.
             * @member {number|Long} access_token
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.access_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * License master_package_id.
             * @member {number} master_package_id
             * @memberof CMsgClientLicenseList.License
             * @instance
             */
            License.prototype.master_package_id = 0;
    
            /**
             * Creates a new License instance using the specified properties.
             * @function create
             * @memberof CMsgClientLicenseList.License
             * @static
             * @param {CMsgClientLicenseList.ILicense=} [properties] Properties to set
             * @returns {CMsgClientLicenseList.License} License instance
             */
            License.create = function create(properties) {
                return new License(properties);
            };
    
            /**
             * Encodes the specified License message. Does not implicitly {@link CMsgClientLicenseList.License.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientLicenseList.License
             * @static
             * @param {CMsgClientLicenseList.ILicense} message License message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            License.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.package_id != null && Object.hasOwnProperty.call(message, "package_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.package_id);
                if (message.time_created != null && Object.hasOwnProperty.call(message, "time_created"))
                    writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.time_created);
                if (message.time_next_process != null && Object.hasOwnProperty.call(message, "time_next_process"))
                    writer.uint32(/* id 3, wireType 5 =*/29).fixed32(message.time_next_process);
                if (message.minute_limit != null && Object.hasOwnProperty.call(message, "minute_limit"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.minute_limit);
                if (message.minutes_used != null && Object.hasOwnProperty.call(message, "minutes_used"))
                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.minutes_used);
                if (message.payment_method != null && Object.hasOwnProperty.call(message, "payment_method"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.payment_method);
                if (message.flags != null && Object.hasOwnProperty.call(message, "flags"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.flags);
                if (message.purchase_country_code != null && Object.hasOwnProperty.call(message, "purchase_country_code"))
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.purchase_country_code);
                if (message.license_type != null && Object.hasOwnProperty.call(message, "license_type"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.license_type);
                if (message.territory_code != null && Object.hasOwnProperty.call(message, "territory_code"))
                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.territory_code);
                if (message.change_number != null && Object.hasOwnProperty.call(message, "change_number"))
                    writer.uint32(/* id 11, wireType 0 =*/88).int32(message.change_number);
                if (message.owner_id != null && Object.hasOwnProperty.call(message, "owner_id"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.owner_id);
                if (message.initial_period != null && Object.hasOwnProperty.call(message, "initial_period"))
                    writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.initial_period);
                if (message.initial_time_unit != null && Object.hasOwnProperty.call(message, "initial_time_unit"))
                    writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.initial_time_unit);
                if (message.renewal_period != null && Object.hasOwnProperty.call(message, "renewal_period"))
                    writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.renewal_period);
                if (message.renewal_time_unit != null && Object.hasOwnProperty.call(message, "renewal_time_unit"))
                    writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.renewal_time_unit);
                if (message.access_token != null && Object.hasOwnProperty.call(message, "access_token"))
                    writer.uint32(/* id 17, wireType 0 =*/136).uint64(message.access_token);
                if (message.master_package_id != null && Object.hasOwnProperty.call(message, "master_package_id"))
                    writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.master_package_id);
                return writer;
            };
    
            /**
             * Encodes the specified License message, length delimited. Does not implicitly {@link CMsgClientLicenseList.License.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientLicenseList.License
             * @static
             * @param {CMsgClientLicenseList.ILicense} message License message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            License.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a License message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientLicenseList.License
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientLicenseList.License} License
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            License.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLicenseList.License();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.package_id = reader.uint32();
                        break;
                    case 2:
                        message.time_created = reader.fixed32();
                        break;
                    case 3:
                        message.time_next_process = reader.fixed32();
                        break;
                    case 4:
                        message.minute_limit = reader.int32();
                        break;
                    case 5:
                        message.minutes_used = reader.int32();
                        break;
                    case 6:
                        message.payment_method = reader.uint32();
                        break;
                    case 7:
                        message.flags = reader.uint32();
                        break;
                    case 8:
                        message.purchase_country_code = reader.string();
                        break;
                    case 9:
                        message.license_type = reader.uint32();
                        break;
                    case 10:
                        message.territory_code = reader.int32();
                        break;
                    case 11:
                        message.change_number = reader.int32();
                        break;
                    case 12:
                        message.owner_id = reader.uint32();
                        break;
                    case 13:
                        message.initial_period = reader.uint32();
                        break;
                    case 14:
                        message.initial_time_unit = reader.uint32();
                        break;
                    case 15:
                        message.renewal_period = reader.uint32();
                        break;
                    case 16:
                        message.renewal_time_unit = reader.uint32();
                        break;
                    case 17:
                        message.access_token = reader.uint64();
                        break;
                    case 18:
                        message.master_package_id = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a License message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientLicenseList.License
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientLicenseList.License} License
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            License.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a License message.
             * @function verify
             * @memberof CMsgClientLicenseList.License
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            License.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.package_id != null && message.hasOwnProperty("package_id"))
                    if (!$util.isInteger(message.package_id))
                        return "package_id: integer expected";
                if (message.time_created != null && message.hasOwnProperty("time_created"))
                    if (!$util.isInteger(message.time_created))
                        return "time_created: integer expected";
                if (message.time_next_process != null && message.hasOwnProperty("time_next_process"))
                    if (!$util.isInteger(message.time_next_process))
                        return "time_next_process: integer expected";
                if (message.minute_limit != null && message.hasOwnProperty("minute_limit"))
                    if (!$util.isInteger(message.minute_limit))
                        return "minute_limit: integer expected";
                if (message.minutes_used != null && message.hasOwnProperty("minutes_used"))
                    if (!$util.isInteger(message.minutes_used))
                        return "minutes_used: integer expected";
                if (message.payment_method != null && message.hasOwnProperty("payment_method"))
                    if (!$util.isInteger(message.payment_method))
                        return "payment_method: integer expected";
                if (message.flags != null && message.hasOwnProperty("flags"))
                    if (!$util.isInteger(message.flags))
                        return "flags: integer expected";
                if (message.purchase_country_code != null && message.hasOwnProperty("purchase_country_code"))
                    if (!$util.isString(message.purchase_country_code))
                        return "purchase_country_code: string expected";
                if (message.license_type != null && message.hasOwnProperty("license_type"))
                    if (!$util.isInteger(message.license_type))
                        return "license_type: integer expected";
                if (message.territory_code != null && message.hasOwnProperty("territory_code"))
                    if (!$util.isInteger(message.territory_code))
                        return "territory_code: integer expected";
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    if (!$util.isInteger(message.change_number))
                        return "change_number: integer expected";
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    if (!$util.isInteger(message.owner_id))
                        return "owner_id: integer expected";
                if (message.initial_period != null && message.hasOwnProperty("initial_period"))
                    if (!$util.isInteger(message.initial_period))
                        return "initial_period: integer expected";
                if (message.initial_time_unit != null && message.hasOwnProperty("initial_time_unit"))
                    if (!$util.isInteger(message.initial_time_unit))
                        return "initial_time_unit: integer expected";
                if (message.renewal_period != null && message.hasOwnProperty("renewal_period"))
                    if (!$util.isInteger(message.renewal_period))
                        return "renewal_period: integer expected";
                if (message.renewal_time_unit != null && message.hasOwnProperty("renewal_time_unit"))
                    if (!$util.isInteger(message.renewal_time_unit))
                        return "renewal_time_unit: integer expected";
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (!$util.isInteger(message.access_token) && !(message.access_token && $util.isInteger(message.access_token.low) && $util.isInteger(message.access_token.high)))
                        return "access_token: integer|Long expected";
                if (message.master_package_id != null && message.hasOwnProperty("master_package_id"))
                    if (!$util.isInteger(message.master_package_id))
                        return "master_package_id: integer expected";
                return null;
            };
    
            /**
             * Creates a License message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientLicenseList.License
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientLicenseList.License} License
             */
            License.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientLicenseList.License)
                    return object;
                var message = new $root.CMsgClientLicenseList.License();
                if (object.package_id != null)
                    message.package_id = object.package_id >>> 0;
                if (object.time_created != null)
                    message.time_created = object.time_created >>> 0;
                if (object.time_next_process != null)
                    message.time_next_process = object.time_next_process >>> 0;
                if (object.minute_limit != null)
                    message.minute_limit = object.minute_limit | 0;
                if (object.minutes_used != null)
                    message.minutes_used = object.minutes_used | 0;
                if (object.payment_method != null)
                    message.payment_method = object.payment_method >>> 0;
                if (object.flags != null)
                    message.flags = object.flags >>> 0;
                if (object.purchase_country_code != null)
                    message.purchase_country_code = String(object.purchase_country_code);
                if (object.license_type != null)
                    message.license_type = object.license_type >>> 0;
                if (object.territory_code != null)
                    message.territory_code = object.territory_code | 0;
                if (object.change_number != null)
                    message.change_number = object.change_number | 0;
                if (object.owner_id != null)
                    message.owner_id = object.owner_id >>> 0;
                if (object.initial_period != null)
                    message.initial_period = object.initial_period >>> 0;
                if (object.initial_time_unit != null)
                    message.initial_time_unit = object.initial_time_unit >>> 0;
                if (object.renewal_period != null)
                    message.renewal_period = object.renewal_period >>> 0;
                if (object.renewal_time_unit != null)
                    message.renewal_time_unit = object.renewal_time_unit >>> 0;
                if (object.access_token != null)
                    if ($util.Long)
                        (message.access_token = $util.Long.fromValue(object.access_token)).unsigned = true;
                    else if (typeof object.access_token === "string")
                        message.access_token = parseInt(object.access_token, 10);
                    else if (typeof object.access_token === "number")
                        message.access_token = object.access_token;
                    else if (typeof object.access_token === "object")
                        message.access_token = new $util.LongBits(object.access_token.low >>> 0, object.access_token.high >>> 0).toNumber(true);
                if (object.master_package_id != null)
                    message.master_package_id = object.master_package_id >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a License message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientLicenseList.License
             * @static
             * @param {CMsgClientLicenseList.License} message License
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            License.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.package_id = 0;
                    object.time_created = 0;
                    object.time_next_process = 0;
                    object.minute_limit = 0;
                    object.minutes_used = 0;
                    object.payment_method = 0;
                    object.flags = 0;
                    object.purchase_country_code = "";
                    object.license_type = 0;
                    object.territory_code = 0;
                    object.change_number = 0;
                    object.owner_id = 0;
                    object.initial_period = 0;
                    object.initial_time_unit = 0;
                    object.renewal_period = 0;
                    object.renewal_time_unit = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.access_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.access_token = options.longs === String ? "0" : 0;
                    object.master_package_id = 0;
                }
                if (message.package_id != null && message.hasOwnProperty("package_id"))
                    object.package_id = message.package_id;
                if (message.time_created != null && message.hasOwnProperty("time_created"))
                    object.time_created = message.time_created;
                if (message.time_next_process != null && message.hasOwnProperty("time_next_process"))
                    object.time_next_process = message.time_next_process;
                if (message.minute_limit != null && message.hasOwnProperty("minute_limit"))
                    object.minute_limit = message.minute_limit;
                if (message.minutes_used != null && message.hasOwnProperty("minutes_used"))
                    object.minutes_used = message.minutes_used;
                if (message.payment_method != null && message.hasOwnProperty("payment_method"))
                    object.payment_method = message.payment_method;
                if (message.flags != null && message.hasOwnProperty("flags"))
                    object.flags = message.flags;
                if (message.purchase_country_code != null && message.hasOwnProperty("purchase_country_code"))
                    object.purchase_country_code = message.purchase_country_code;
                if (message.license_type != null && message.hasOwnProperty("license_type"))
                    object.license_type = message.license_type;
                if (message.territory_code != null && message.hasOwnProperty("territory_code"))
                    object.territory_code = message.territory_code;
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    object.change_number = message.change_number;
                if (message.owner_id != null && message.hasOwnProperty("owner_id"))
                    object.owner_id = message.owner_id;
                if (message.initial_period != null && message.hasOwnProperty("initial_period"))
                    object.initial_period = message.initial_period;
                if (message.initial_time_unit != null && message.hasOwnProperty("initial_time_unit"))
                    object.initial_time_unit = message.initial_time_unit;
                if (message.renewal_period != null && message.hasOwnProperty("renewal_period"))
                    object.renewal_period = message.renewal_period;
                if (message.renewal_time_unit != null && message.hasOwnProperty("renewal_time_unit"))
                    object.renewal_time_unit = message.renewal_time_unit;
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (typeof message.access_token === "number")
                        object.access_token = options.longs === String ? String(message.access_token) : message.access_token;
                    else
                        object.access_token = options.longs === String ? $util.Long.prototype.toString.call(message.access_token) : options.longs === Number ? new $util.LongBits(message.access_token.low >>> 0, message.access_token.high >>> 0).toNumber(true) : message.access_token;
                if (message.master_package_id != null && message.hasOwnProperty("master_package_id"))
                    object.master_package_id = message.master_package_id;
                return object;
            };
    
            /**
             * Converts this License to JSON.
             * @function toJSON
             * @memberof CMsgClientLicenseList.License
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            License.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return License;
        })();
    
        return CMsgClientLicenseList;
    })();
    
    $root.CMsgClientLBSSetScore = (function() {
    
        /**
         * Properties of a CMsgClientLBSSetScore.
         * @exports ICMsgClientLBSSetScore
         * @interface ICMsgClientLBSSetScore
         * @property {number|null} [app_id] CMsgClientLBSSetScore app_id
         * @property {number|null} [leaderboard_id] CMsgClientLBSSetScore leaderboard_id
         * @property {number|null} [score] CMsgClientLBSSetScore score
         * @property {Uint8Array|null} [details] CMsgClientLBSSetScore details
         * @property {number|null} [upload_score_method] CMsgClientLBSSetScore upload_score_method
         */
    
        /**
         * Constructs a new CMsgClientLBSSetScore.
         * @exports CMsgClientLBSSetScore
         * @classdesc Represents a CMsgClientLBSSetScore.
         * @implements ICMsgClientLBSSetScore
         * @constructor
         * @param {ICMsgClientLBSSetScore=} [properties] Properties to set
         */
        function CMsgClientLBSSetScore(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLBSSetScore app_id.
         * @member {number} app_id
         * @memberof CMsgClientLBSSetScore
         * @instance
         */
        CMsgClientLBSSetScore.prototype.app_id = 0;
    
        /**
         * CMsgClientLBSSetScore leaderboard_id.
         * @member {number} leaderboard_id
         * @memberof CMsgClientLBSSetScore
         * @instance
         */
        CMsgClientLBSSetScore.prototype.leaderboard_id = 0;
    
        /**
         * CMsgClientLBSSetScore score.
         * @member {number} score
         * @memberof CMsgClientLBSSetScore
         * @instance
         */
        CMsgClientLBSSetScore.prototype.score = 0;
    
        /**
         * CMsgClientLBSSetScore details.
         * @member {Uint8Array} details
         * @memberof CMsgClientLBSSetScore
         * @instance
         */
        CMsgClientLBSSetScore.prototype.details = $util.newBuffer([]);
    
        /**
         * CMsgClientLBSSetScore upload_score_method.
         * @member {number} upload_score_method
         * @memberof CMsgClientLBSSetScore
         * @instance
         */
        CMsgClientLBSSetScore.prototype.upload_score_method = 0;
    
        /**
         * Creates a new CMsgClientLBSSetScore instance using the specified properties.
         * @function create
         * @memberof CMsgClientLBSSetScore
         * @static
         * @param {ICMsgClientLBSSetScore=} [properties] Properties to set
         * @returns {CMsgClientLBSSetScore} CMsgClientLBSSetScore instance
         */
        CMsgClientLBSSetScore.create = function create(properties) {
            return new CMsgClientLBSSetScore(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLBSSetScore message. Does not implicitly {@link CMsgClientLBSSetScore.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLBSSetScore
         * @static
         * @param {ICMsgClientLBSSetScore} message CMsgClientLBSSetScore message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSSetScore.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.leaderboard_id != null && Object.hasOwnProperty.call(message, "leaderboard_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.leaderboard_id);
            if (message.score != null && Object.hasOwnProperty.call(message, "score"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.score);
            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.details);
            if (message.upload_score_method != null && Object.hasOwnProperty.call(message, "upload_score_method"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.upload_score_method);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLBSSetScore message, length delimited. Does not implicitly {@link CMsgClientLBSSetScore.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLBSSetScore
         * @static
         * @param {ICMsgClientLBSSetScore} message CMsgClientLBSSetScore message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSSetScore.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLBSSetScore message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLBSSetScore
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLBSSetScore} CMsgClientLBSSetScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSSetScore.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSSetScore();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.leaderboard_id = reader.int32();
                    break;
                case 3:
                    message.score = reader.int32();
                    break;
                case 4:
                    message.details = reader.bytes();
                    break;
                case 5:
                    message.upload_score_method = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLBSSetScore message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLBSSetScore
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLBSSetScore} CMsgClientLBSSetScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSSetScore.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLBSSetScore message.
         * @function verify
         * @memberof CMsgClientLBSSetScore
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLBSSetScore.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.leaderboard_id != null && message.hasOwnProperty("leaderboard_id"))
                if (!$util.isInteger(message.leaderboard_id))
                    return "leaderboard_id: integer expected";
            if (message.score != null && message.hasOwnProperty("score"))
                if (!$util.isInteger(message.score))
                    return "score: integer expected";
            if (message.details != null && message.hasOwnProperty("details"))
                if (!(message.details && typeof message.details.length === "number" || $util.isString(message.details)))
                    return "details: buffer expected";
            if (message.upload_score_method != null && message.hasOwnProperty("upload_score_method"))
                if (!$util.isInteger(message.upload_score_method))
                    return "upload_score_method: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLBSSetScore message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLBSSetScore
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLBSSetScore} CMsgClientLBSSetScore
         */
        CMsgClientLBSSetScore.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLBSSetScore)
                return object;
            var message = new $root.CMsgClientLBSSetScore();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.leaderboard_id != null)
                message.leaderboard_id = object.leaderboard_id | 0;
            if (object.score != null)
                message.score = object.score | 0;
            if (object.details != null)
                if (typeof object.details === "string")
                    $util.base64.decode(object.details, message.details = $util.newBuffer($util.base64.length(object.details)), 0);
                else if (object.details.length)
                    message.details = object.details;
            if (object.upload_score_method != null)
                message.upload_score_method = object.upload_score_method | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLBSSetScore message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLBSSetScore
         * @static
         * @param {CMsgClientLBSSetScore} message CMsgClientLBSSetScore
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLBSSetScore.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.leaderboard_id = 0;
                object.score = 0;
                if (options.bytes === String)
                    object.details = "";
                else {
                    object.details = [];
                    if (options.bytes !== Array)
                        object.details = $util.newBuffer(object.details);
                }
                object.upload_score_method = 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.leaderboard_id != null && message.hasOwnProperty("leaderboard_id"))
                object.leaderboard_id = message.leaderboard_id;
            if (message.score != null && message.hasOwnProperty("score"))
                object.score = message.score;
            if (message.details != null && message.hasOwnProperty("details"))
                object.details = options.bytes === String ? $util.base64.encode(message.details, 0, message.details.length) : options.bytes === Array ? Array.prototype.slice.call(message.details) : message.details;
            if (message.upload_score_method != null && message.hasOwnProperty("upload_score_method"))
                object.upload_score_method = message.upload_score_method;
            return object;
        };
    
        /**
         * Converts this CMsgClientLBSSetScore to JSON.
         * @function toJSON
         * @memberof CMsgClientLBSSetScore
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLBSSetScore.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLBSSetScore;
    })();
    
    $root.CMsgClientLBSSetScoreResponse = (function() {
    
        /**
         * Properties of a CMsgClientLBSSetScoreResponse.
         * @exports ICMsgClientLBSSetScoreResponse
         * @interface ICMsgClientLBSSetScoreResponse
         * @property {number|null} [eresult] CMsgClientLBSSetScoreResponse eresult
         * @property {number|null} [leaderboard_entry_count] CMsgClientLBSSetScoreResponse leaderboard_entry_count
         * @property {boolean|null} [score_changed] CMsgClientLBSSetScoreResponse score_changed
         * @property {number|null} [global_rank_previous] CMsgClientLBSSetScoreResponse global_rank_previous
         * @property {number|null} [global_rank_new] CMsgClientLBSSetScoreResponse global_rank_new
         */
    
        /**
         * Constructs a new CMsgClientLBSSetScoreResponse.
         * @exports CMsgClientLBSSetScoreResponse
         * @classdesc Represents a CMsgClientLBSSetScoreResponse.
         * @implements ICMsgClientLBSSetScoreResponse
         * @constructor
         * @param {ICMsgClientLBSSetScoreResponse=} [properties] Properties to set
         */
        function CMsgClientLBSSetScoreResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLBSSetScoreResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientLBSSetScoreResponse
         * @instance
         */
        CMsgClientLBSSetScoreResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientLBSSetScoreResponse leaderboard_entry_count.
         * @member {number} leaderboard_entry_count
         * @memberof CMsgClientLBSSetScoreResponse
         * @instance
         */
        CMsgClientLBSSetScoreResponse.prototype.leaderboard_entry_count = 0;
    
        /**
         * CMsgClientLBSSetScoreResponse score_changed.
         * @member {boolean} score_changed
         * @memberof CMsgClientLBSSetScoreResponse
         * @instance
         */
        CMsgClientLBSSetScoreResponse.prototype.score_changed = false;
    
        /**
         * CMsgClientLBSSetScoreResponse global_rank_previous.
         * @member {number} global_rank_previous
         * @memberof CMsgClientLBSSetScoreResponse
         * @instance
         */
        CMsgClientLBSSetScoreResponse.prototype.global_rank_previous = 0;
    
        /**
         * CMsgClientLBSSetScoreResponse global_rank_new.
         * @member {number} global_rank_new
         * @memberof CMsgClientLBSSetScoreResponse
         * @instance
         */
        CMsgClientLBSSetScoreResponse.prototype.global_rank_new = 0;
    
        /**
         * Creates a new CMsgClientLBSSetScoreResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientLBSSetScoreResponse
         * @static
         * @param {ICMsgClientLBSSetScoreResponse=} [properties] Properties to set
         * @returns {CMsgClientLBSSetScoreResponse} CMsgClientLBSSetScoreResponse instance
         */
        CMsgClientLBSSetScoreResponse.create = function create(properties) {
            return new CMsgClientLBSSetScoreResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLBSSetScoreResponse message. Does not implicitly {@link CMsgClientLBSSetScoreResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLBSSetScoreResponse
         * @static
         * @param {ICMsgClientLBSSetScoreResponse} message CMsgClientLBSSetScoreResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSSetScoreResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.leaderboard_entry_count != null && Object.hasOwnProperty.call(message, "leaderboard_entry_count"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.leaderboard_entry_count);
            if (message.score_changed != null && Object.hasOwnProperty.call(message, "score_changed"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.score_changed);
            if (message.global_rank_previous != null && Object.hasOwnProperty.call(message, "global_rank_previous"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.global_rank_previous);
            if (message.global_rank_new != null && Object.hasOwnProperty.call(message, "global_rank_new"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.global_rank_new);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLBSSetScoreResponse message, length delimited. Does not implicitly {@link CMsgClientLBSSetScoreResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLBSSetScoreResponse
         * @static
         * @param {ICMsgClientLBSSetScoreResponse} message CMsgClientLBSSetScoreResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSSetScoreResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLBSSetScoreResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLBSSetScoreResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLBSSetScoreResponse} CMsgClientLBSSetScoreResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSSetScoreResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSSetScoreResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.leaderboard_entry_count = reader.int32();
                    break;
                case 3:
                    message.score_changed = reader.bool();
                    break;
                case 4:
                    message.global_rank_previous = reader.int32();
                    break;
                case 5:
                    message.global_rank_new = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLBSSetScoreResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLBSSetScoreResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLBSSetScoreResponse} CMsgClientLBSSetScoreResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSSetScoreResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLBSSetScoreResponse message.
         * @function verify
         * @memberof CMsgClientLBSSetScoreResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLBSSetScoreResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.leaderboard_entry_count != null && message.hasOwnProperty("leaderboard_entry_count"))
                if (!$util.isInteger(message.leaderboard_entry_count))
                    return "leaderboard_entry_count: integer expected";
            if (message.score_changed != null && message.hasOwnProperty("score_changed"))
                if (typeof message.score_changed !== "boolean")
                    return "score_changed: boolean expected";
            if (message.global_rank_previous != null && message.hasOwnProperty("global_rank_previous"))
                if (!$util.isInteger(message.global_rank_previous))
                    return "global_rank_previous: integer expected";
            if (message.global_rank_new != null && message.hasOwnProperty("global_rank_new"))
                if (!$util.isInteger(message.global_rank_new))
                    return "global_rank_new: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLBSSetScoreResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLBSSetScoreResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLBSSetScoreResponse} CMsgClientLBSSetScoreResponse
         */
        CMsgClientLBSSetScoreResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLBSSetScoreResponse)
                return object;
            var message = new $root.CMsgClientLBSSetScoreResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.leaderboard_entry_count != null)
                message.leaderboard_entry_count = object.leaderboard_entry_count | 0;
            if (object.score_changed != null)
                message.score_changed = Boolean(object.score_changed);
            if (object.global_rank_previous != null)
                message.global_rank_previous = object.global_rank_previous | 0;
            if (object.global_rank_new != null)
                message.global_rank_new = object.global_rank_new | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLBSSetScoreResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLBSSetScoreResponse
         * @static
         * @param {CMsgClientLBSSetScoreResponse} message CMsgClientLBSSetScoreResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLBSSetScoreResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.leaderboard_entry_count = 0;
                object.score_changed = false;
                object.global_rank_previous = 0;
                object.global_rank_new = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.leaderboard_entry_count != null && message.hasOwnProperty("leaderboard_entry_count"))
                object.leaderboard_entry_count = message.leaderboard_entry_count;
            if (message.score_changed != null && message.hasOwnProperty("score_changed"))
                object.score_changed = message.score_changed;
            if (message.global_rank_previous != null && message.hasOwnProperty("global_rank_previous"))
                object.global_rank_previous = message.global_rank_previous;
            if (message.global_rank_new != null && message.hasOwnProperty("global_rank_new"))
                object.global_rank_new = message.global_rank_new;
            return object;
        };
    
        /**
         * Converts this CMsgClientLBSSetScoreResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientLBSSetScoreResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLBSSetScoreResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLBSSetScoreResponse;
    })();
    
    $root.CMsgClientLBSSetUGC = (function() {
    
        /**
         * Properties of a CMsgClientLBSSetUGC.
         * @exports ICMsgClientLBSSetUGC
         * @interface ICMsgClientLBSSetUGC
         * @property {number|null} [app_id] CMsgClientLBSSetUGC app_id
         * @property {number|null} [leaderboard_id] CMsgClientLBSSetUGC leaderboard_id
         * @property {number|Long|null} [ugc_id] CMsgClientLBSSetUGC ugc_id
         */
    
        /**
         * Constructs a new CMsgClientLBSSetUGC.
         * @exports CMsgClientLBSSetUGC
         * @classdesc Represents a CMsgClientLBSSetUGC.
         * @implements ICMsgClientLBSSetUGC
         * @constructor
         * @param {ICMsgClientLBSSetUGC=} [properties] Properties to set
         */
        function CMsgClientLBSSetUGC(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLBSSetUGC app_id.
         * @member {number} app_id
         * @memberof CMsgClientLBSSetUGC
         * @instance
         */
        CMsgClientLBSSetUGC.prototype.app_id = 0;
    
        /**
         * CMsgClientLBSSetUGC leaderboard_id.
         * @member {number} leaderboard_id
         * @memberof CMsgClientLBSSetUGC
         * @instance
         */
        CMsgClientLBSSetUGC.prototype.leaderboard_id = 0;
    
        /**
         * CMsgClientLBSSetUGC ugc_id.
         * @member {number|Long} ugc_id
         * @memberof CMsgClientLBSSetUGC
         * @instance
         */
        CMsgClientLBSSetUGC.prototype.ugc_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientLBSSetUGC instance using the specified properties.
         * @function create
         * @memberof CMsgClientLBSSetUGC
         * @static
         * @param {ICMsgClientLBSSetUGC=} [properties] Properties to set
         * @returns {CMsgClientLBSSetUGC} CMsgClientLBSSetUGC instance
         */
        CMsgClientLBSSetUGC.create = function create(properties) {
            return new CMsgClientLBSSetUGC(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLBSSetUGC message. Does not implicitly {@link CMsgClientLBSSetUGC.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLBSSetUGC
         * @static
         * @param {ICMsgClientLBSSetUGC} message CMsgClientLBSSetUGC message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSSetUGC.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.leaderboard_id != null && Object.hasOwnProperty.call(message, "leaderboard_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.leaderboard_id);
            if (message.ugc_id != null && Object.hasOwnProperty.call(message, "ugc_id"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.ugc_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLBSSetUGC message, length delimited. Does not implicitly {@link CMsgClientLBSSetUGC.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLBSSetUGC
         * @static
         * @param {ICMsgClientLBSSetUGC} message CMsgClientLBSSetUGC message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSSetUGC.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLBSSetUGC message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLBSSetUGC
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLBSSetUGC} CMsgClientLBSSetUGC
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSSetUGC.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSSetUGC();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.leaderboard_id = reader.int32();
                    break;
                case 3:
                    message.ugc_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLBSSetUGC message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLBSSetUGC
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLBSSetUGC} CMsgClientLBSSetUGC
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSSetUGC.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLBSSetUGC message.
         * @function verify
         * @memberof CMsgClientLBSSetUGC
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLBSSetUGC.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.leaderboard_id != null && message.hasOwnProperty("leaderboard_id"))
                if (!$util.isInteger(message.leaderboard_id))
                    return "leaderboard_id: integer expected";
            if (message.ugc_id != null && message.hasOwnProperty("ugc_id"))
                if (!$util.isInteger(message.ugc_id) && !(message.ugc_id && $util.isInteger(message.ugc_id.low) && $util.isInteger(message.ugc_id.high)))
                    return "ugc_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLBSSetUGC message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLBSSetUGC
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLBSSetUGC} CMsgClientLBSSetUGC
         */
        CMsgClientLBSSetUGC.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLBSSetUGC)
                return object;
            var message = new $root.CMsgClientLBSSetUGC();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.leaderboard_id != null)
                message.leaderboard_id = object.leaderboard_id | 0;
            if (object.ugc_id != null)
                if ($util.Long)
                    (message.ugc_id = $util.Long.fromValue(object.ugc_id)).unsigned = false;
                else if (typeof object.ugc_id === "string")
                    message.ugc_id = parseInt(object.ugc_id, 10);
                else if (typeof object.ugc_id === "number")
                    message.ugc_id = object.ugc_id;
                else if (typeof object.ugc_id === "object")
                    message.ugc_id = new $util.LongBits(object.ugc_id.low >>> 0, object.ugc_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLBSSetUGC message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLBSSetUGC
         * @static
         * @param {CMsgClientLBSSetUGC} message CMsgClientLBSSetUGC
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLBSSetUGC.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.leaderboard_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.ugc_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.ugc_id = options.longs === String ? "0" : 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.leaderboard_id != null && message.hasOwnProperty("leaderboard_id"))
                object.leaderboard_id = message.leaderboard_id;
            if (message.ugc_id != null && message.hasOwnProperty("ugc_id"))
                if (typeof message.ugc_id === "number")
                    object.ugc_id = options.longs === String ? String(message.ugc_id) : message.ugc_id;
                else
                    object.ugc_id = options.longs === String ? $util.Long.prototype.toString.call(message.ugc_id) : options.longs === Number ? new $util.LongBits(message.ugc_id.low >>> 0, message.ugc_id.high >>> 0).toNumber() : message.ugc_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientLBSSetUGC to JSON.
         * @function toJSON
         * @memberof CMsgClientLBSSetUGC
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLBSSetUGC.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLBSSetUGC;
    })();
    
    $root.CMsgClientLBSSetUGCResponse = (function() {
    
        /**
         * Properties of a CMsgClientLBSSetUGCResponse.
         * @exports ICMsgClientLBSSetUGCResponse
         * @interface ICMsgClientLBSSetUGCResponse
         * @property {number|null} [eresult] CMsgClientLBSSetUGCResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientLBSSetUGCResponse.
         * @exports CMsgClientLBSSetUGCResponse
         * @classdesc Represents a CMsgClientLBSSetUGCResponse.
         * @implements ICMsgClientLBSSetUGCResponse
         * @constructor
         * @param {ICMsgClientLBSSetUGCResponse=} [properties] Properties to set
         */
        function CMsgClientLBSSetUGCResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLBSSetUGCResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientLBSSetUGCResponse
         * @instance
         */
        CMsgClientLBSSetUGCResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgClientLBSSetUGCResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientLBSSetUGCResponse
         * @static
         * @param {ICMsgClientLBSSetUGCResponse=} [properties] Properties to set
         * @returns {CMsgClientLBSSetUGCResponse} CMsgClientLBSSetUGCResponse instance
         */
        CMsgClientLBSSetUGCResponse.create = function create(properties) {
            return new CMsgClientLBSSetUGCResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLBSSetUGCResponse message. Does not implicitly {@link CMsgClientLBSSetUGCResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLBSSetUGCResponse
         * @static
         * @param {ICMsgClientLBSSetUGCResponse} message CMsgClientLBSSetUGCResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSSetUGCResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLBSSetUGCResponse message, length delimited. Does not implicitly {@link CMsgClientLBSSetUGCResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLBSSetUGCResponse
         * @static
         * @param {ICMsgClientLBSSetUGCResponse} message CMsgClientLBSSetUGCResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSSetUGCResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLBSSetUGCResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLBSSetUGCResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLBSSetUGCResponse} CMsgClientLBSSetUGCResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSSetUGCResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSSetUGCResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLBSSetUGCResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLBSSetUGCResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLBSSetUGCResponse} CMsgClientLBSSetUGCResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSSetUGCResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLBSSetUGCResponse message.
         * @function verify
         * @memberof CMsgClientLBSSetUGCResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLBSSetUGCResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLBSSetUGCResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLBSSetUGCResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLBSSetUGCResponse} CMsgClientLBSSetUGCResponse
         */
        CMsgClientLBSSetUGCResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLBSSetUGCResponse)
                return object;
            var message = new $root.CMsgClientLBSSetUGCResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLBSSetUGCResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLBSSetUGCResponse
         * @static
         * @param {CMsgClientLBSSetUGCResponse} message CMsgClientLBSSetUGCResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLBSSetUGCResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientLBSSetUGCResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientLBSSetUGCResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLBSSetUGCResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLBSSetUGCResponse;
    })();
    
    $root.CMsgClientLBSFindOrCreateLB = (function() {
    
        /**
         * Properties of a CMsgClientLBSFindOrCreateLB.
         * @exports ICMsgClientLBSFindOrCreateLB
         * @interface ICMsgClientLBSFindOrCreateLB
         * @property {number|null} [app_id] CMsgClientLBSFindOrCreateLB app_id
         * @property {number|null} [leaderboard_sort_method] CMsgClientLBSFindOrCreateLB leaderboard_sort_method
         * @property {number|null} [leaderboard_display_type] CMsgClientLBSFindOrCreateLB leaderboard_display_type
         * @property {boolean|null} [create_if_not_found] CMsgClientLBSFindOrCreateLB create_if_not_found
         * @property {string|null} [leaderboard_name] CMsgClientLBSFindOrCreateLB leaderboard_name
         */
    
        /**
         * Constructs a new CMsgClientLBSFindOrCreateLB.
         * @exports CMsgClientLBSFindOrCreateLB
         * @classdesc Represents a CMsgClientLBSFindOrCreateLB.
         * @implements ICMsgClientLBSFindOrCreateLB
         * @constructor
         * @param {ICMsgClientLBSFindOrCreateLB=} [properties] Properties to set
         */
        function CMsgClientLBSFindOrCreateLB(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLBSFindOrCreateLB app_id.
         * @member {number} app_id
         * @memberof CMsgClientLBSFindOrCreateLB
         * @instance
         */
        CMsgClientLBSFindOrCreateLB.prototype.app_id = 0;
    
        /**
         * CMsgClientLBSFindOrCreateLB leaderboard_sort_method.
         * @member {number} leaderboard_sort_method
         * @memberof CMsgClientLBSFindOrCreateLB
         * @instance
         */
        CMsgClientLBSFindOrCreateLB.prototype.leaderboard_sort_method = 0;
    
        /**
         * CMsgClientLBSFindOrCreateLB leaderboard_display_type.
         * @member {number} leaderboard_display_type
         * @memberof CMsgClientLBSFindOrCreateLB
         * @instance
         */
        CMsgClientLBSFindOrCreateLB.prototype.leaderboard_display_type = 0;
    
        /**
         * CMsgClientLBSFindOrCreateLB create_if_not_found.
         * @member {boolean} create_if_not_found
         * @memberof CMsgClientLBSFindOrCreateLB
         * @instance
         */
        CMsgClientLBSFindOrCreateLB.prototype.create_if_not_found = false;
    
        /**
         * CMsgClientLBSFindOrCreateLB leaderboard_name.
         * @member {string} leaderboard_name
         * @memberof CMsgClientLBSFindOrCreateLB
         * @instance
         */
        CMsgClientLBSFindOrCreateLB.prototype.leaderboard_name = "";
    
        /**
         * Creates a new CMsgClientLBSFindOrCreateLB instance using the specified properties.
         * @function create
         * @memberof CMsgClientLBSFindOrCreateLB
         * @static
         * @param {ICMsgClientLBSFindOrCreateLB=} [properties] Properties to set
         * @returns {CMsgClientLBSFindOrCreateLB} CMsgClientLBSFindOrCreateLB instance
         */
        CMsgClientLBSFindOrCreateLB.create = function create(properties) {
            return new CMsgClientLBSFindOrCreateLB(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLBSFindOrCreateLB message. Does not implicitly {@link CMsgClientLBSFindOrCreateLB.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLBSFindOrCreateLB
         * @static
         * @param {ICMsgClientLBSFindOrCreateLB} message CMsgClientLBSFindOrCreateLB message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSFindOrCreateLB.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.leaderboard_sort_method != null && Object.hasOwnProperty.call(message, "leaderboard_sort_method"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.leaderboard_sort_method);
            if (message.leaderboard_display_type != null && Object.hasOwnProperty.call(message, "leaderboard_display_type"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.leaderboard_display_type);
            if (message.create_if_not_found != null && Object.hasOwnProperty.call(message, "create_if_not_found"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.create_if_not_found);
            if (message.leaderboard_name != null && Object.hasOwnProperty.call(message, "leaderboard_name"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.leaderboard_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLBSFindOrCreateLB message, length delimited. Does not implicitly {@link CMsgClientLBSFindOrCreateLB.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLBSFindOrCreateLB
         * @static
         * @param {ICMsgClientLBSFindOrCreateLB} message CMsgClientLBSFindOrCreateLB message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSFindOrCreateLB.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLBSFindOrCreateLB message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLBSFindOrCreateLB
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLBSFindOrCreateLB} CMsgClientLBSFindOrCreateLB
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSFindOrCreateLB.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSFindOrCreateLB();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.leaderboard_sort_method = reader.int32();
                    break;
                case 3:
                    message.leaderboard_display_type = reader.int32();
                    break;
                case 4:
                    message.create_if_not_found = reader.bool();
                    break;
                case 5:
                    message.leaderboard_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLBSFindOrCreateLB message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLBSFindOrCreateLB
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLBSFindOrCreateLB} CMsgClientLBSFindOrCreateLB
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSFindOrCreateLB.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLBSFindOrCreateLB message.
         * @function verify
         * @memberof CMsgClientLBSFindOrCreateLB
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLBSFindOrCreateLB.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.leaderboard_sort_method != null && message.hasOwnProperty("leaderboard_sort_method"))
                if (!$util.isInteger(message.leaderboard_sort_method))
                    return "leaderboard_sort_method: integer expected";
            if (message.leaderboard_display_type != null && message.hasOwnProperty("leaderboard_display_type"))
                if (!$util.isInteger(message.leaderboard_display_type))
                    return "leaderboard_display_type: integer expected";
            if (message.create_if_not_found != null && message.hasOwnProperty("create_if_not_found"))
                if (typeof message.create_if_not_found !== "boolean")
                    return "create_if_not_found: boolean expected";
            if (message.leaderboard_name != null && message.hasOwnProperty("leaderboard_name"))
                if (!$util.isString(message.leaderboard_name))
                    return "leaderboard_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLBSFindOrCreateLB message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLBSFindOrCreateLB
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLBSFindOrCreateLB} CMsgClientLBSFindOrCreateLB
         */
        CMsgClientLBSFindOrCreateLB.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLBSFindOrCreateLB)
                return object;
            var message = new $root.CMsgClientLBSFindOrCreateLB();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.leaderboard_sort_method != null)
                message.leaderboard_sort_method = object.leaderboard_sort_method | 0;
            if (object.leaderboard_display_type != null)
                message.leaderboard_display_type = object.leaderboard_display_type | 0;
            if (object.create_if_not_found != null)
                message.create_if_not_found = Boolean(object.create_if_not_found);
            if (object.leaderboard_name != null)
                message.leaderboard_name = String(object.leaderboard_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLBSFindOrCreateLB message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLBSFindOrCreateLB
         * @static
         * @param {CMsgClientLBSFindOrCreateLB} message CMsgClientLBSFindOrCreateLB
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLBSFindOrCreateLB.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.leaderboard_sort_method = 0;
                object.leaderboard_display_type = 0;
                object.create_if_not_found = false;
                object.leaderboard_name = "";
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.leaderboard_sort_method != null && message.hasOwnProperty("leaderboard_sort_method"))
                object.leaderboard_sort_method = message.leaderboard_sort_method;
            if (message.leaderboard_display_type != null && message.hasOwnProperty("leaderboard_display_type"))
                object.leaderboard_display_type = message.leaderboard_display_type;
            if (message.create_if_not_found != null && message.hasOwnProperty("create_if_not_found"))
                object.create_if_not_found = message.create_if_not_found;
            if (message.leaderboard_name != null && message.hasOwnProperty("leaderboard_name"))
                object.leaderboard_name = message.leaderboard_name;
            return object;
        };
    
        /**
         * Converts this CMsgClientLBSFindOrCreateLB to JSON.
         * @function toJSON
         * @memberof CMsgClientLBSFindOrCreateLB
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLBSFindOrCreateLB.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLBSFindOrCreateLB;
    })();
    
    $root.CMsgClientLBSFindOrCreateLBResponse = (function() {
    
        /**
         * Properties of a CMsgClientLBSFindOrCreateLBResponse.
         * @exports ICMsgClientLBSFindOrCreateLBResponse
         * @interface ICMsgClientLBSFindOrCreateLBResponse
         * @property {number|null} [eresult] CMsgClientLBSFindOrCreateLBResponse eresult
         * @property {number|null} [leaderboard_id] CMsgClientLBSFindOrCreateLBResponse leaderboard_id
         * @property {number|null} [leaderboard_entry_count] CMsgClientLBSFindOrCreateLBResponse leaderboard_entry_count
         * @property {number|null} [leaderboard_sort_method] CMsgClientLBSFindOrCreateLBResponse leaderboard_sort_method
         * @property {number|null} [leaderboard_display_type] CMsgClientLBSFindOrCreateLBResponse leaderboard_display_type
         * @property {string|null} [leaderboard_name] CMsgClientLBSFindOrCreateLBResponse leaderboard_name
         */
    
        /**
         * Constructs a new CMsgClientLBSFindOrCreateLBResponse.
         * @exports CMsgClientLBSFindOrCreateLBResponse
         * @classdesc Represents a CMsgClientLBSFindOrCreateLBResponse.
         * @implements ICMsgClientLBSFindOrCreateLBResponse
         * @constructor
         * @param {ICMsgClientLBSFindOrCreateLBResponse=} [properties] Properties to set
         */
        function CMsgClientLBSFindOrCreateLBResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLBSFindOrCreateLBResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @instance
         */
        CMsgClientLBSFindOrCreateLBResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientLBSFindOrCreateLBResponse leaderboard_id.
         * @member {number} leaderboard_id
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @instance
         */
        CMsgClientLBSFindOrCreateLBResponse.prototype.leaderboard_id = 0;
    
        /**
         * CMsgClientLBSFindOrCreateLBResponse leaderboard_entry_count.
         * @member {number} leaderboard_entry_count
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @instance
         */
        CMsgClientLBSFindOrCreateLBResponse.prototype.leaderboard_entry_count = 0;
    
        /**
         * CMsgClientLBSFindOrCreateLBResponse leaderboard_sort_method.
         * @member {number} leaderboard_sort_method
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @instance
         */
        CMsgClientLBSFindOrCreateLBResponse.prototype.leaderboard_sort_method = 0;
    
        /**
         * CMsgClientLBSFindOrCreateLBResponse leaderboard_display_type.
         * @member {number} leaderboard_display_type
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @instance
         */
        CMsgClientLBSFindOrCreateLBResponse.prototype.leaderboard_display_type = 0;
    
        /**
         * CMsgClientLBSFindOrCreateLBResponse leaderboard_name.
         * @member {string} leaderboard_name
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @instance
         */
        CMsgClientLBSFindOrCreateLBResponse.prototype.leaderboard_name = "";
    
        /**
         * Creates a new CMsgClientLBSFindOrCreateLBResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @static
         * @param {ICMsgClientLBSFindOrCreateLBResponse=} [properties] Properties to set
         * @returns {CMsgClientLBSFindOrCreateLBResponse} CMsgClientLBSFindOrCreateLBResponse instance
         */
        CMsgClientLBSFindOrCreateLBResponse.create = function create(properties) {
            return new CMsgClientLBSFindOrCreateLBResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLBSFindOrCreateLBResponse message. Does not implicitly {@link CMsgClientLBSFindOrCreateLBResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @static
         * @param {ICMsgClientLBSFindOrCreateLBResponse} message CMsgClientLBSFindOrCreateLBResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSFindOrCreateLBResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.leaderboard_id != null && Object.hasOwnProperty.call(message, "leaderboard_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.leaderboard_id);
            if (message.leaderboard_entry_count != null && Object.hasOwnProperty.call(message, "leaderboard_entry_count"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.leaderboard_entry_count);
            if (message.leaderboard_sort_method != null && Object.hasOwnProperty.call(message, "leaderboard_sort_method"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.leaderboard_sort_method);
            if (message.leaderboard_display_type != null && Object.hasOwnProperty.call(message, "leaderboard_display_type"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.leaderboard_display_type);
            if (message.leaderboard_name != null && Object.hasOwnProperty.call(message, "leaderboard_name"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leaderboard_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLBSFindOrCreateLBResponse message, length delimited. Does not implicitly {@link CMsgClientLBSFindOrCreateLBResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @static
         * @param {ICMsgClientLBSFindOrCreateLBResponse} message CMsgClientLBSFindOrCreateLBResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSFindOrCreateLBResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLBSFindOrCreateLBResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLBSFindOrCreateLBResponse} CMsgClientLBSFindOrCreateLBResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSFindOrCreateLBResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSFindOrCreateLBResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.leaderboard_id = reader.int32();
                    break;
                case 3:
                    message.leaderboard_entry_count = reader.int32();
                    break;
                case 4:
                    message.leaderboard_sort_method = reader.int32();
                    break;
                case 5:
                    message.leaderboard_display_type = reader.int32();
                    break;
                case 6:
                    message.leaderboard_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLBSFindOrCreateLBResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLBSFindOrCreateLBResponse} CMsgClientLBSFindOrCreateLBResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSFindOrCreateLBResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLBSFindOrCreateLBResponse message.
         * @function verify
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLBSFindOrCreateLBResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.leaderboard_id != null && message.hasOwnProperty("leaderboard_id"))
                if (!$util.isInteger(message.leaderboard_id))
                    return "leaderboard_id: integer expected";
            if (message.leaderboard_entry_count != null && message.hasOwnProperty("leaderboard_entry_count"))
                if (!$util.isInteger(message.leaderboard_entry_count))
                    return "leaderboard_entry_count: integer expected";
            if (message.leaderboard_sort_method != null && message.hasOwnProperty("leaderboard_sort_method"))
                if (!$util.isInteger(message.leaderboard_sort_method))
                    return "leaderboard_sort_method: integer expected";
            if (message.leaderboard_display_type != null && message.hasOwnProperty("leaderboard_display_type"))
                if (!$util.isInteger(message.leaderboard_display_type))
                    return "leaderboard_display_type: integer expected";
            if (message.leaderboard_name != null && message.hasOwnProperty("leaderboard_name"))
                if (!$util.isString(message.leaderboard_name))
                    return "leaderboard_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientLBSFindOrCreateLBResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLBSFindOrCreateLBResponse} CMsgClientLBSFindOrCreateLBResponse
         */
        CMsgClientLBSFindOrCreateLBResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLBSFindOrCreateLBResponse)
                return object;
            var message = new $root.CMsgClientLBSFindOrCreateLBResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.leaderboard_id != null)
                message.leaderboard_id = object.leaderboard_id | 0;
            if (object.leaderboard_entry_count != null)
                message.leaderboard_entry_count = object.leaderboard_entry_count | 0;
            if (object.leaderboard_sort_method != null)
                message.leaderboard_sort_method = object.leaderboard_sort_method | 0;
            if (object.leaderboard_display_type != null)
                message.leaderboard_display_type = object.leaderboard_display_type | 0;
            if (object.leaderboard_name != null)
                message.leaderboard_name = String(object.leaderboard_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLBSFindOrCreateLBResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @static
         * @param {CMsgClientLBSFindOrCreateLBResponse} message CMsgClientLBSFindOrCreateLBResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLBSFindOrCreateLBResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.leaderboard_id = 0;
                object.leaderboard_entry_count = 0;
                object.leaderboard_sort_method = 0;
                object.leaderboard_display_type = 0;
                object.leaderboard_name = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.leaderboard_id != null && message.hasOwnProperty("leaderboard_id"))
                object.leaderboard_id = message.leaderboard_id;
            if (message.leaderboard_entry_count != null && message.hasOwnProperty("leaderboard_entry_count"))
                object.leaderboard_entry_count = message.leaderboard_entry_count;
            if (message.leaderboard_sort_method != null && message.hasOwnProperty("leaderboard_sort_method"))
                object.leaderboard_sort_method = message.leaderboard_sort_method;
            if (message.leaderboard_display_type != null && message.hasOwnProperty("leaderboard_display_type"))
                object.leaderboard_display_type = message.leaderboard_display_type;
            if (message.leaderboard_name != null && message.hasOwnProperty("leaderboard_name"))
                object.leaderboard_name = message.leaderboard_name;
            return object;
        };
    
        /**
         * Converts this CMsgClientLBSFindOrCreateLBResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientLBSFindOrCreateLBResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLBSFindOrCreateLBResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLBSFindOrCreateLBResponse;
    })();
    
    $root.CMsgClientLBSGetLBEntries = (function() {
    
        /**
         * Properties of a CMsgClientLBSGetLBEntries.
         * @exports ICMsgClientLBSGetLBEntries
         * @interface ICMsgClientLBSGetLBEntries
         * @property {number|null} [app_id] CMsgClientLBSGetLBEntries app_id
         * @property {number|null} [leaderboard_id] CMsgClientLBSGetLBEntries leaderboard_id
         * @property {number|null} [range_start] CMsgClientLBSGetLBEntries range_start
         * @property {number|null} [range_end] CMsgClientLBSGetLBEntries range_end
         * @property {number|null} [leaderboard_data_request] CMsgClientLBSGetLBEntries leaderboard_data_request
         * @property {Array.<number|Long>|null} [steamids] CMsgClientLBSGetLBEntries steamids
         */
    
        /**
         * Constructs a new CMsgClientLBSGetLBEntries.
         * @exports CMsgClientLBSGetLBEntries
         * @classdesc Represents a CMsgClientLBSGetLBEntries.
         * @implements ICMsgClientLBSGetLBEntries
         * @constructor
         * @param {ICMsgClientLBSGetLBEntries=} [properties] Properties to set
         */
        function CMsgClientLBSGetLBEntries(properties) {
            this.steamids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLBSGetLBEntries app_id.
         * @member {number} app_id
         * @memberof CMsgClientLBSGetLBEntries
         * @instance
         */
        CMsgClientLBSGetLBEntries.prototype.app_id = 0;
    
        /**
         * CMsgClientLBSGetLBEntries leaderboard_id.
         * @member {number} leaderboard_id
         * @memberof CMsgClientLBSGetLBEntries
         * @instance
         */
        CMsgClientLBSGetLBEntries.prototype.leaderboard_id = 0;
    
        /**
         * CMsgClientLBSGetLBEntries range_start.
         * @member {number} range_start
         * @memberof CMsgClientLBSGetLBEntries
         * @instance
         */
        CMsgClientLBSGetLBEntries.prototype.range_start = 0;
    
        /**
         * CMsgClientLBSGetLBEntries range_end.
         * @member {number} range_end
         * @memberof CMsgClientLBSGetLBEntries
         * @instance
         */
        CMsgClientLBSGetLBEntries.prototype.range_end = 0;
    
        /**
         * CMsgClientLBSGetLBEntries leaderboard_data_request.
         * @member {number} leaderboard_data_request
         * @memberof CMsgClientLBSGetLBEntries
         * @instance
         */
        CMsgClientLBSGetLBEntries.prototype.leaderboard_data_request = 0;
    
        /**
         * CMsgClientLBSGetLBEntries steamids.
         * @member {Array.<number|Long>} steamids
         * @memberof CMsgClientLBSGetLBEntries
         * @instance
         */
        CMsgClientLBSGetLBEntries.prototype.steamids = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientLBSGetLBEntries instance using the specified properties.
         * @function create
         * @memberof CMsgClientLBSGetLBEntries
         * @static
         * @param {ICMsgClientLBSGetLBEntries=} [properties] Properties to set
         * @returns {CMsgClientLBSGetLBEntries} CMsgClientLBSGetLBEntries instance
         */
        CMsgClientLBSGetLBEntries.create = function create(properties) {
            return new CMsgClientLBSGetLBEntries(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLBSGetLBEntries message. Does not implicitly {@link CMsgClientLBSGetLBEntries.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLBSGetLBEntries
         * @static
         * @param {ICMsgClientLBSGetLBEntries} message CMsgClientLBSGetLBEntries message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSGetLBEntries.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.app_id);
            if (message.leaderboard_id != null && Object.hasOwnProperty.call(message, "leaderboard_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.leaderboard_id);
            if (message.range_start != null && Object.hasOwnProperty.call(message, "range_start"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.range_start);
            if (message.range_end != null && Object.hasOwnProperty.call(message, "range_end"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.range_end);
            if (message.leaderboard_data_request != null && Object.hasOwnProperty.call(message, "leaderboard_data_request"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.leaderboard_data_request);
            if (message.steamids != null && message.steamids.length)
                for (var i = 0; i < message.steamids.length; ++i)
                    writer.uint32(/* id 6, wireType 1 =*/49).fixed64(message.steamids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLBSGetLBEntries message, length delimited. Does not implicitly {@link CMsgClientLBSGetLBEntries.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLBSGetLBEntries
         * @static
         * @param {ICMsgClientLBSGetLBEntries} message CMsgClientLBSGetLBEntries message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSGetLBEntries.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLBSGetLBEntries message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLBSGetLBEntries
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLBSGetLBEntries} CMsgClientLBSGetLBEntries
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSGetLBEntries.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSGetLBEntries();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.int32();
                    break;
                case 2:
                    message.leaderboard_id = reader.int32();
                    break;
                case 3:
                    message.range_start = reader.int32();
                    break;
                case 4:
                    message.range_end = reader.int32();
                    break;
                case 5:
                    message.leaderboard_data_request = reader.int32();
                    break;
                case 6:
                    if (!(message.steamids && message.steamids.length))
                        message.steamids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.steamids.push(reader.fixed64());
                    } else
                        message.steamids.push(reader.fixed64());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLBSGetLBEntries message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLBSGetLBEntries
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLBSGetLBEntries} CMsgClientLBSGetLBEntries
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSGetLBEntries.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLBSGetLBEntries message.
         * @function verify
         * @memberof CMsgClientLBSGetLBEntries
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLBSGetLBEntries.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.leaderboard_id != null && message.hasOwnProperty("leaderboard_id"))
                if (!$util.isInteger(message.leaderboard_id))
                    return "leaderboard_id: integer expected";
            if (message.range_start != null && message.hasOwnProperty("range_start"))
                if (!$util.isInteger(message.range_start))
                    return "range_start: integer expected";
            if (message.range_end != null && message.hasOwnProperty("range_end"))
                if (!$util.isInteger(message.range_end))
                    return "range_end: integer expected";
            if (message.leaderboard_data_request != null && message.hasOwnProperty("leaderboard_data_request"))
                if (!$util.isInteger(message.leaderboard_data_request))
                    return "leaderboard_data_request: integer expected";
            if (message.steamids != null && message.hasOwnProperty("steamids")) {
                if (!Array.isArray(message.steamids))
                    return "steamids: array expected";
                for (var i = 0; i < message.steamids.length; ++i)
                    if (!$util.isInteger(message.steamids[i]) && !(message.steamids[i] && $util.isInteger(message.steamids[i].low) && $util.isInteger(message.steamids[i].high)))
                        return "steamids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientLBSGetLBEntries message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLBSGetLBEntries
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLBSGetLBEntries} CMsgClientLBSGetLBEntries
         */
        CMsgClientLBSGetLBEntries.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLBSGetLBEntries)
                return object;
            var message = new $root.CMsgClientLBSGetLBEntries();
            if (object.app_id != null)
                message.app_id = object.app_id | 0;
            if (object.leaderboard_id != null)
                message.leaderboard_id = object.leaderboard_id | 0;
            if (object.range_start != null)
                message.range_start = object.range_start | 0;
            if (object.range_end != null)
                message.range_end = object.range_end | 0;
            if (object.leaderboard_data_request != null)
                message.leaderboard_data_request = object.leaderboard_data_request | 0;
            if (object.steamids) {
                if (!Array.isArray(object.steamids))
                    throw TypeError(".CMsgClientLBSGetLBEntries.steamids: array expected");
                message.steamids = [];
                for (var i = 0; i < object.steamids.length; ++i)
                    if ($util.Long)
                        (message.steamids[i] = $util.Long.fromValue(object.steamids[i])).unsigned = false;
                    else if (typeof object.steamids[i] === "string")
                        message.steamids[i] = parseInt(object.steamids[i], 10);
                    else if (typeof object.steamids[i] === "number")
                        message.steamids[i] = object.steamids[i];
                    else if (typeof object.steamids[i] === "object")
                        message.steamids[i] = new $util.LongBits(object.steamids[i].low >>> 0, object.steamids[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLBSGetLBEntries message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLBSGetLBEntries
         * @static
         * @param {CMsgClientLBSGetLBEntries} message CMsgClientLBSGetLBEntries
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLBSGetLBEntries.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamids = [];
            if (options.defaults) {
                object.app_id = 0;
                object.leaderboard_id = 0;
                object.range_start = 0;
                object.range_end = 0;
                object.leaderboard_data_request = 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.leaderboard_id != null && message.hasOwnProperty("leaderboard_id"))
                object.leaderboard_id = message.leaderboard_id;
            if (message.range_start != null && message.hasOwnProperty("range_start"))
                object.range_start = message.range_start;
            if (message.range_end != null && message.hasOwnProperty("range_end"))
                object.range_end = message.range_end;
            if (message.leaderboard_data_request != null && message.hasOwnProperty("leaderboard_data_request"))
                object.leaderboard_data_request = message.leaderboard_data_request;
            if (message.steamids && message.steamids.length) {
                object.steamids = [];
                for (var j = 0; j < message.steamids.length; ++j)
                    if (typeof message.steamids[j] === "number")
                        object.steamids[j] = options.longs === String ? String(message.steamids[j]) : message.steamids[j];
                    else
                        object.steamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamids[j]) : options.longs === Number ? new $util.LongBits(message.steamids[j].low >>> 0, message.steamids[j].high >>> 0).toNumber() : message.steamids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientLBSGetLBEntries to JSON.
         * @function toJSON
         * @memberof CMsgClientLBSGetLBEntries
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLBSGetLBEntries.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientLBSGetLBEntries;
    })();
    
    $root.CMsgClientLBSGetLBEntriesResponse = (function() {
    
        /**
         * Properties of a CMsgClientLBSGetLBEntriesResponse.
         * @exports ICMsgClientLBSGetLBEntriesResponse
         * @interface ICMsgClientLBSGetLBEntriesResponse
         * @property {number|null} [eresult] CMsgClientLBSGetLBEntriesResponse eresult
         * @property {number|null} [leaderboard_entry_count] CMsgClientLBSGetLBEntriesResponse leaderboard_entry_count
         * @property {Array.<CMsgClientLBSGetLBEntriesResponse.IEntry>|null} [entries] CMsgClientLBSGetLBEntriesResponse entries
         */
    
        /**
         * Constructs a new CMsgClientLBSGetLBEntriesResponse.
         * @exports CMsgClientLBSGetLBEntriesResponse
         * @classdesc Represents a CMsgClientLBSGetLBEntriesResponse.
         * @implements ICMsgClientLBSGetLBEntriesResponse
         * @constructor
         * @param {ICMsgClientLBSGetLBEntriesResponse=} [properties] Properties to set
         */
        function CMsgClientLBSGetLBEntriesResponse(properties) {
            this.entries = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientLBSGetLBEntriesResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @instance
         */
        CMsgClientLBSGetLBEntriesResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientLBSGetLBEntriesResponse leaderboard_entry_count.
         * @member {number} leaderboard_entry_count
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @instance
         */
        CMsgClientLBSGetLBEntriesResponse.prototype.leaderboard_entry_count = 0;
    
        /**
         * CMsgClientLBSGetLBEntriesResponse entries.
         * @member {Array.<CMsgClientLBSGetLBEntriesResponse.IEntry>} entries
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @instance
         */
        CMsgClientLBSGetLBEntriesResponse.prototype.entries = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientLBSGetLBEntriesResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @static
         * @param {ICMsgClientLBSGetLBEntriesResponse=} [properties] Properties to set
         * @returns {CMsgClientLBSGetLBEntriesResponse} CMsgClientLBSGetLBEntriesResponse instance
         */
        CMsgClientLBSGetLBEntriesResponse.create = function create(properties) {
            return new CMsgClientLBSGetLBEntriesResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientLBSGetLBEntriesResponse message. Does not implicitly {@link CMsgClientLBSGetLBEntriesResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @static
         * @param {ICMsgClientLBSGetLBEntriesResponse} message CMsgClientLBSGetLBEntriesResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSGetLBEntriesResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.leaderboard_entry_count != null && Object.hasOwnProperty.call(message, "leaderboard_entry_count"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.leaderboard_entry_count);
            if (message.entries != null && message.entries.length)
                for (var i = 0; i < message.entries.length; ++i)
                    $root.CMsgClientLBSGetLBEntriesResponse.Entry.encode(message.entries[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientLBSGetLBEntriesResponse message, length delimited. Does not implicitly {@link CMsgClientLBSGetLBEntriesResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @static
         * @param {ICMsgClientLBSGetLBEntriesResponse} message CMsgClientLBSGetLBEntriesResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientLBSGetLBEntriesResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientLBSGetLBEntriesResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientLBSGetLBEntriesResponse} CMsgClientLBSGetLBEntriesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSGetLBEntriesResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSGetLBEntriesResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.leaderboard_entry_count = reader.int32();
                    break;
                case 3:
                    if (!(message.entries && message.entries.length))
                        message.entries = [];
                    message.entries.push($root.CMsgClientLBSGetLBEntriesResponse.Entry.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientLBSGetLBEntriesResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientLBSGetLBEntriesResponse} CMsgClientLBSGetLBEntriesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientLBSGetLBEntriesResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientLBSGetLBEntriesResponse message.
         * @function verify
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientLBSGetLBEntriesResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.leaderboard_entry_count != null && message.hasOwnProperty("leaderboard_entry_count"))
                if (!$util.isInteger(message.leaderboard_entry_count))
                    return "leaderboard_entry_count: integer expected";
            if (message.entries != null && message.hasOwnProperty("entries")) {
                if (!Array.isArray(message.entries))
                    return "entries: array expected";
                for (var i = 0; i < message.entries.length; ++i) {
                    var error = $root.CMsgClientLBSGetLBEntriesResponse.Entry.verify(message.entries[i]);
                    if (error)
                        return "entries." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientLBSGetLBEntriesResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientLBSGetLBEntriesResponse} CMsgClientLBSGetLBEntriesResponse
         */
        CMsgClientLBSGetLBEntriesResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientLBSGetLBEntriesResponse)
                return object;
            var message = new $root.CMsgClientLBSGetLBEntriesResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.leaderboard_entry_count != null)
                message.leaderboard_entry_count = object.leaderboard_entry_count | 0;
            if (object.entries) {
                if (!Array.isArray(object.entries))
                    throw TypeError(".CMsgClientLBSGetLBEntriesResponse.entries: array expected");
                message.entries = [];
                for (var i = 0; i < object.entries.length; ++i) {
                    if (typeof object.entries[i] !== "object")
                        throw TypeError(".CMsgClientLBSGetLBEntriesResponse.entries: object expected");
                    message.entries[i] = $root.CMsgClientLBSGetLBEntriesResponse.Entry.fromObject(object.entries[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientLBSGetLBEntriesResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @static
         * @param {CMsgClientLBSGetLBEntriesResponse} message CMsgClientLBSGetLBEntriesResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientLBSGetLBEntriesResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.entries = [];
            if (options.defaults) {
                object.eresult = 2;
                object.leaderboard_entry_count = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.leaderboard_entry_count != null && message.hasOwnProperty("leaderboard_entry_count"))
                object.leaderboard_entry_count = message.leaderboard_entry_count;
            if (message.entries && message.entries.length) {
                object.entries = [];
                for (var j = 0; j < message.entries.length; ++j)
                    object.entries[j] = $root.CMsgClientLBSGetLBEntriesResponse.Entry.toObject(message.entries[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientLBSGetLBEntriesResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientLBSGetLBEntriesResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientLBSGetLBEntriesResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientLBSGetLBEntriesResponse.Entry = (function() {
    
            /**
             * Properties of an Entry.
             * @memberof CMsgClientLBSGetLBEntriesResponse
             * @interface IEntry
             * @property {number|Long|null} [steam_id_user] Entry steam_id_user
             * @property {number|null} [global_rank] Entry global_rank
             * @property {number|null} [score] Entry score
             * @property {Uint8Array|null} [details] Entry details
             * @property {number|Long|null} [ugc_id] Entry ugc_id
             */
    
            /**
             * Constructs a new Entry.
             * @memberof CMsgClientLBSGetLBEntriesResponse
             * @classdesc Represents an Entry.
             * @implements IEntry
             * @constructor
             * @param {CMsgClientLBSGetLBEntriesResponse.IEntry=} [properties] Properties to set
             */
            function Entry(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Entry steam_id_user.
             * @member {number|Long} steam_id_user
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @instance
             */
            Entry.prototype.steam_id_user = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Entry global_rank.
             * @member {number} global_rank
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @instance
             */
            Entry.prototype.global_rank = 0;
    
            /**
             * Entry score.
             * @member {number} score
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @instance
             */
            Entry.prototype.score = 0;
    
            /**
             * Entry details.
             * @member {Uint8Array} details
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @instance
             */
            Entry.prototype.details = $util.newBuffer([]);
    
            /**
             * Entry ugc_id.
             * @member {number|Long} ugc_id
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @instance
             */
            Entry.prototype.ugc_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Creates a new Entry instance using the specified properties.
             * @function create
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @static
             * @param {CMsgClientLBSGetLBEntriesResponse.IEntry=} [properties] Properties to set
             * @returns {CMsgClientLBSGetLBEntriesResponse.Entry} Entry instance
             */
            Entry.create = function create(properties) {
                return new Entry(properties);
            };
    
            /**
             * Encodes the specified Entry message. Does not implicitly {@link CMsgClientLBSGetLBEntriesResponse.Entry.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @static
             * @param {CMsgClientLBSGetLBEntriesResponse.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steam_id_user != null && Object.hasOwnProperty.call(message, "steam_id_user"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id_user);
                if (message.global_rank != null && Object.hasOwnProperty.call(message, "global_rank"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.global_rank);
                if (message.score != null && Object.hasOwnProperty.call(message, "score"))
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.score);
                if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                    writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.details);
                if (message.ugc_id != null && Object.hasOwnProperty.call(message, "ugc_id"))
                    writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.ugc_id);
                return writer;
            };
    
            /**
             * Encodes the specified Entry message, length delimited. Does not implicitly {@link CMsgClientLBSGetLBEntriesResponse.Entry.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @static
             * @param {CMsgClientLBSGetLBEntriesResponse.IEntry} message Entry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Entry.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientLBSGetLBEntriesResponse.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientLBSGetLBEntriesResponse.Entry();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.steam_id_user = reader.fixed64();
                        break;
                    case 2:
                        message.global_rank = reader.int32();
                        break;
                    case 3:
                        message.score = reader.int32();
                        break;
                    case 4:
                        message.details = reader.bytes();
                        break;
                    case 5:
                        message.ugc_id = reader.fixed64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Entry message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientLBSGetLBEntriesResponse.Entry} Entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Entry.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Entry message.
             * @function verify
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Entry.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steam_id_user != null && message.hasOwnProperty("steam_id_user"))
                    if (!$util.isInteger(message.steam_id_user) && !(message.steam_id_user && $util.isInteger(message.steam_id_user.low) && $util.isInteger(message.steam_id_user.high)))
                        return "steam_id_user: integer|Long expected";
                if (message.global_rank != null && message.hasOwnProperty("global_rank"))
                    if (!$util.isInteger(message.global_rank))
                        return "global_rank: integer expected";
                if (message.score != null && message.hasOwnProperty("score"))
                    if (!$util.isInteger(message.score))
                        return "score: integer expected";
                if (message.details != null && message.hasOwnProperty("details"))
                    if (!(message.details && typeof message.details.length === "number" || $util.isString(message.details)))
                        return "details: buffer expected";
                if (message.ugc_id != null && message.hasOwnProperty("ugc_id"))
                    if (!$util.isInteger(message.ugc_id) && !(message.ugc_id && $util.isInteger(message.ugc_id.low) && $util.isInteger(message.ugc_id.high)))
                        return "ugc_id: integer|Long expected";
                return null;
            };
    
            /**
             * Creates an Entry message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientLBSGetLBEntriesResponse.Entry} Entry
             */
            Entry.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientLBSGetLBEntriesResponse.Entry)
                    return object;
                var message = new $root.CMsgClientLBSGetLBEntriesResponse.Entry();
                if (object.steam_id_user != null)
                    if ($util.Long)
                        (message.steam_id_user = $util.Long.fromValue(object.steam_id_user)).unsigned = false;
                    else if (typeof object.steam_id_user === "string")
                        message.steam_id_user = parseInt(object.steam_id_user, 10);
                    else if (typeof object.steam_id_user === "number")
                        message.steam_id_user = object.steam_id_user;
                    else if (typeof object.steam_id_user === "object")
                        message.steam_id_user = new $util.LongBits(object.steam_id_user.low >>> 0, object.steam_id_user.high >>> 0).toNumber();
                if (object.global_rank != null)
                    message.global_rank = object.global_rank | 0;
                if (object.score != null)
                    message.score = object.score | 0;
                if (object.details != null)
                    if (typeof object.details === "string")
                        $util.base64.decode(object.details, message.details = $util.newBuffer($util.base64.length(object.details)), 0);
                    else if (object.details.length)
                        message.details = object.details;
                if (object.ugc_id != null)
                    if ($util.Long)
                        (message.ugc_id = $util.Long.fromValue(object.ugc_id)).unsigned = false;
                    else if (typeof object.ugc_id === "string")
                        message.ugc_id = parseInt(object.ugc_id, 10);
                    else if (typeof object.ugc_id === "number")
                        message.ugc_id = object.ugc_id;
                    else if (typeof object.ugc_id === "object")
                        message.ugc_id = new $util.LongBits(object.ugc_id.low >>> 0, object.ugc_id.high >>> 0).toNumber();
                return message;
            };
    
            /**
             * Creates a plain object from an Entry message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @static
             * @param {CMsgClientLBSGetLBEntriesResponse.Entry} message Entry
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Entry.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steam_id_user = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steam_id_user = options.longs === String ? "0" : 0;
                    object.global_rank = 0;
                    object.score = 0;
                    if (options.bytes === String)
                        object.details = "";
                    else {
                        object.details = [];
                        if (options.bytes !== Array)
                            object.details = $util.newBuffer(object.details);
                    }
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.ugc_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.ugc_id = options.longs === String ? "0" : 0;
                }
                if (message.steam_id_user != null && message.hasOwnProperty("steam_id_user"))
                    if (typeof message.steam_id_user === "number")
                        object.steam_id_user = options.longs === String ? String(message.steam_id_user) : message.steam_id_user;
                    else
                        object.steam_id_user = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_user) : options.longs === Number ? new $util.LongBits(message.steam_id_user.low >>> 0, message.steam_id_user.high >>> 0).toNumber() : message.steam_id_user;
                if (message.global_rank != null && message.hasOwnProperty("global_rank"))
                    object.global_rank = message.global_rank;
                if (message.score != null && message.hasOwnProperty("score"))
                    object.score = message.score;
                if (message.details != null && message.hasOwnProperty("details"))
                    object.details = options.bytes === String ? $util.base64.encode(message.details, 0, message.details.length) : options.bytes === Array ? Array.prototype.slice.call(message.details) : message.details;
                if (message.ugc_id != null && message.hasOwnProperty("ugc_id"))
                    if (typeof message.ugc_id === "number")
                        object.ugc_id = options.longs === String ? String(message.ugc_id) : message.ugc_id;
                    else
                        object.ugc_id = options.longs === String ? $util.Long.prototype.toString.call(message.ugc_id) : options.longs === Number ? new $util.LongBits(message.ugc_id.low >>> 0, message.ugc_id.high >>> 0).toNumber() : message.ugc_id;
                return object;
            };
    
            /**
             * Converts this Entry to JSON.
             * @function toJSON
             * @memberof CMsgClientLBSGetLBEntriesResponse.Entry
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Entry.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Entry;
        })();
    
        return CMsgClientLBSGetLBEntriesResponse;
    })();
    
    $root.CMsgClientIsLimitedAccount = (function() {
    
        /**
         * Properties of a CMsgClientIsLimitedAccount.
         * @exports ICMsgClientIsLimitedAccount
         * @interface ICMsgClientIsLimitedAccount
         * @property {boolean|null} [bis_limited_account] CMsgClientIsLimitedAccount bis_limited_account
         * @property {boolean|null} [bis_community_banned] CMsgClientIsLimitedAccount bis_community_banned
         * @property {boolean|null} [bis_locked_account] CMsgClientIsLimitedAccount bis_locked_account
         * @property {boolean|null} [bis_limited_account_allowed_to_invite_friends] CMsgClientIsLimitedAccount bis_limited_account_allowed_to_invite_friends
         */
    
        /**
         * Constructs a new CMsgClientIsLimitedAccount.
         * @exports CMsgClientIsLimitedAccount
         * @classdesc Represents a CMsgClientIsLimitedAccount.
         * @implements ICMsgClientIsLimitedAccount
         * @constructor
         * @param {ICMsgClientIsLimitedAccount=} [properties] Properties to set
         */
        function CMsgClientIsLimitedAccount(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientIsLimitedAccount bis_limited_account.
         * @member {boolean} bis_limited_account
         * @memberof CMsgClientIsLimitedAccount
         * @instance
         */
        CMsgClientIsLimitedAccount.prototype.bis_limited_account = false;
    
        /**
         * CMsgClientIsLimitedAccount bis_community_banned.
         * @member {boolean} bis_community_banned
         * @memberof CMsgClientIsLimitedAccount
         * @instance
         */
        CMsgClientIsLimitedAccount.prototype.bis_community_banned = false;
    
        /**
         * CMsgClientIsLimitedAccount bis_locked_account.
         * @member {boolean} bis_locked_account
         * @memberof CMsgClientIsLimitedAccount
         * @instance
         */
        CMsgClientIsLimitedAccount.prototype.bis_locked_account = false;
    
        /**
         * CMsgClientIsLimitedAccount bis_limited_account_allowed_to_invite_friends.
         * @member {boolean} bis_limited_account_allowed_to_invite_friends
         * @memberof CMsgClientIsLimitedAccount
         * @instance
         */
        CMsgClientIsLimitedAccount.prototype.bis_limited_account_allowed_to_invite_friends = false;
    
        /**
         * Creates a new CMsgClientIsLimitedAccount instance using the specified properties.
         * @function create
         * @memberof CMsgClientIsLimitedAccount
         * @static
         * @param {ICMsgClientIsLimitedAccount=} [properties] Properties to set
         * @returns {CMsgClientIsLimitedAccount} CMsgClientIsLimitedAccount instance
         */
        CMsgClientIsLimitedAccount.create = function create(properties) {
            return new CMsgClientIsLimitedAccount(properties);
        };
    
        /**
         * Encodes the specified CMsgClientIsLimitedAccount message. Does not implicitly {@link CMsgClientIsLimitedAccount.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientIsLimitedAccount
         * @static
         * @param {ICMsgClientIsLimitedAccount} message CMsgClientIsLimitedAccount message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientIsLimitedAccount.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.bis_limited_account != null && Object.hasOwnProperty.call(message, "bis_limited_account"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.bis_limited_account);
            if (message.bis_community_banned != null && Object.hasOwnProperty.call(message, "bis_community_banned"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.bis_community_banned);
            if (message.bis_locked_account != null && Object.hasOwnProperty.call(message, "bis_locked_account"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.bis_locked_account);
            if (message.bis_limited_account_allowed_to_invite_friends != null && Object.hasOwnProperty.call(message, "bis_limited_account_allowed_to_invite_friends"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.bis_limited_account_allowed_to_invite_friends);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientIsLimitedAccount message, length delimited. Does not implicitly {@link CMsgClientIsLimitedAccount.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientIsLimitedAccount
         * @static
         * @param {ICMsgClientIsLimitedAccount} message CMsgClientIsLimitedAccount message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientIsLimitedAccount.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientIsLimitedAccount message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientIsLimitedAccount
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientIsLimitedAccount} CMsgClientIsLimitedAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientIsLimitedAccount.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientIsLimitedAccount();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.bis_limited_account = reader.bool();
                    break;
                case 2:
                    message.bis_community_banned = reader.bool();
                    break;
                case 3:
                    message.bis_locked_account = reader.bool();
                    break;
                case 4:
                    message.bis_limited_account_allowed_to_invite_friends = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientIsLimitedAccount message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientIsLimitedAccount
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientIsLimitedAccount} CMsgClientIsLimitedAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientIsLimitedAccount.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientIsLimitedAccount message.
         * @function verify
         * @memberof CMsgClientIsLimitedAccount
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientIsLimitedAccount.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.bis_limited_account != null && message.hasOwnProperty("bis_limited_account"))
                if (typeof message.bis_limited_account !== "boolean")
                    return "bis_limited_account: boolean expected";
            if (message.bis_community_banned != null && message.hasOwnProperty("bis_community_banned"))
                if (typeof message.bis_community_banned !== "boolean")
                    return "bis_community_banned: boolean expected";
            if (message.bis_locked_account != null && message.hasOwnProperty("bis_locked_account"))
                if (typeof message.bis_locked_account !== "boolean")
                    return "bis_locked_account: boolean expected";
            if (message.bis_limited_account_allowed_to_invite_friends != null && message.hasOwnProperty("bis_limited_account_allowed_to_invite_friends"))
                if (typeof message.bis_limited_account_allowed_to_invite_friends !== "boolean")
                    return "bis_limited_account_allowed_to_invite_friends: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientIsLimitedAccount message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientIsLimitedAccount
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientIsLimitedAccount} CMsgClientIsLimitedAccount
         */
        CMsgClientIsLimitedAccount.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientIsLimitedAccount)
                return object;
            var message = new $root.CMsgClientIsLimitedAccount();
            if (object.bis_limited_account != null)
                message.bis_limited_account = Boolean(object.bis_limited_account);
            if (object.bis_community_banned != null)
                message.bis_community_banned = Boolean(object.bis_community_banned);
            if (object.bis_locked_account != null)
                message.bis_locked_account = Boolean(object.bis_locked_account);
            if (object.bis_limited_account_allowed_to_invite_friends != null)
                message.bis_limited_account_allowed_to_invite_friends = Boolean(object.bis_limited_account_allowed_to_invite_friends);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientIsLimitedAccount message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientIsLimitedAccount
         * @static
         * @param {CMsgClientIsLimitedAccount} message CMsgClientIsLimitedAccount
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientIsLimitedAccount.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.bis_limited_account = false;
                object.bis_community_banned = false;
                object.bis_locked_account = false;
                object.bis_limited_account_allowed_to_invite_friends = false;
            }
            if (message.bis_limited_account != null && message.hasOwnProperty("bis_limited_account"))
                object.bis_limited_account = message.bis_limited_account;
            if (message.bis_community_banned != null && message.hasOwnProperty("bis_community_banned"))
                object.bis_community_banned = message.bis_community_banned;
            if (message.bis_locked_account != null && message.hasOwnProperty("bis_locked_account"))
                object.bis_locked_account = message.bis_locked_account;
            if (message.bis_limited_account_allowed_to_invite_friends != null && message.hasOwnProperty("bis_limited_account_allowed_to_invite_friends"))
                object.bis_limited_account_allowed_to_invite_friends = message.bis_limited_account_allowed_to_invite_friends;
            return object;
        };
    
        /**
         * Converts this CMsgClientIsLimitedAccount to JSON.
         * @function toJSON
         * @memberof CMsgClientIsLimitedAccount
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientIsLimitedAccount.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientIsLimitedAccount;
    })();
    
    $root.CMsgClientRequestedClientStats = (function() {
    
        /**
         * Properties of a CMsgClientRequestedClientStats.
         * @exports ICMsgClientRequestedClientStats
         * @interface ICMsgClientRequestedClientStats
         * @property {Array.<CMsgClientRequestedClientStats.IStatsToSend>|null} [stats_to_send] CMsgClientRequestedClientStats stats_to_send
         */
    
        /**
         * Constructs a new CMsgClientRequestedClientStats.
         * @exports CMsgClientRequestedClientStats
         * @classdesc Represents a CMsgClientRequestedClientStats.
         * @implements ICMsgClientRequestedClientStats
         * @constructor
         * @param {ICMsgClientRequestedClientStats=} [properties] Properties to set
         */
        function CMsgClientRequestedClientStats(properties) {
            this.stats_to_send = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestedClientStats stats_to_send.
         * @member {Array.<CMsgClientRequestedClientStats.IStatsToSend>} stats_to_send
         * @memberof CMsgClientRequestedClientStats
         * @instance
         */
        CMsgClientRequestedClientStats.prototype.stats_to_send = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientRequestedClientStats instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestedClientStats
         * @static
         * @param {ICMsgClientRequestedClientStats=} [properties] Properties to set
         * @returns {CMsgClientRequestedClientStats} CMsgClientRequestedClientStats instance
         */
        CMsgClientRequestedClientStats.create = function create(properties) {
            return new CMsgClientRequestedClientStats(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestedClientStats message. Does not implicitly {@link CMsgClientRequestedClientStats.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestedClientStats
         * @static
         * @param {ICMsgClientRequestedClientStats} message CMsgClientRequestedClientStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestedClientStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.stats_to_send != null && message.stats_to_send.length)
                for (var i = 0; i < message.stats_to_send.length; ++i)
                    $root.CMsgClientRequestedClientStats.StatsToSend.encode(message.stats_to_send[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestedClientStats message, length delimited. Does not implicitly {@link CMsgClientRequestedClientStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestedClientStats
         * @static
         * @param {ICMsgClientRequestedClientStats} message CMsgClientRequestedClientStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestedClientStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestedClientStats message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestedClientStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestedClientStats} CMsgClientRequestedClientStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestedClientStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestedClientStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.stats_to_send && message.stats_to_send.length))
                        message.stats_to_send = [];
                    message.stats_to_send.push($root.CMsgClientRequestedClientStats.StatsToSend.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestedClientStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestedClientStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestedClientStats} CMsgClientRequestedClientStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestedClientStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestedClientStats message.
         * @function verify
         * @memberof CMsgClientRequestedClientStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestedClientStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.stats_to_send != null && message.hasOwnProperty("stats_to_send")) {
                if (!Array.isArray(message.stats_to_send))
                    return "stats_to_send: array expected";
                for (var i = 0; i < message.stats_to_send.length; ++i) {
                    var error = $root.CMsgClientRequestedClientStats.StatsToSend.verify(message.stats_to_send[i]);
                    if (error)
                        return "stats_to_send." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestedClientStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestedClientStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestedClientStats} CMsgClientRequestedClientStats
         */
        CMsgClientRequestedClientStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestedClientStats)
                return object;
            var message = new $root.CMsgClientRequestedClientStats();
            if (object.stats_to_send) {
                if (!Array.isArray(object.stats_to_send))
                    throw TypeError(".CMsgClientRequestedClientStats.stats_to_send: array expected");
                message.stats_to_send = [];
                for (var i = 0; i < object.stats_to_send.length; ++i) {
                    if (typeof object.stats_to_send[i] !== "object")
                        throw TypeError(".CMsgClientRequestedClientStats.stats_to_send: object expected");
                    message.stats_to_send[i] = $root.CMsgClientRequestedClientStats.StatsToSend.fromObject(object.stats_to_send[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestedClientStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestedClientStats
         * @static
         * @param {CMsgClientRequestedClientStats} message CMsgClientRequestedClientStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestedClientStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stats_to_send = [];
            if (message.stats_to_send && message.stats_to_send.length) {
                object.stats_to_send = [];
                for (var j = 0; j < message.stats_to_send.length; ++j)
                    object.stats_to_send[j] = $root.CMsgClientRequestedClientStats.StatsToSend.toObject(message.stats_to_send[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestedClientStats to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestedClientStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestedClientStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientRequestedClientStats.StatsToSend = (function() {
    
            /**
             * Properties of a StatsToSend.
             * @memberof CMsgClientRequestedClientStats
             * @interface IStatsToSend
             * @property {number|null} [client_stat] StatsToSend client_stat
             * @property {number|null} [stat_aggregate_method] StatsToSend stat_aggregate_method
             */
    
            /**
             * Constructs a new StatsToSend.
             * @memberof CMsgClientRequestedClientStats
             * @classdesc Represents a StatsToSend.
             * @implements IStatsToSend
             * @constructor
             * @param {CMsgClientRequestedClientStats.IStatsToSend=} [properties] Properties to set
             */
            function StatsToSend(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * StatsToSend client_stat.
             * @member {number} client_stat
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @instance
             */
            StatsToSend.prototype.client_stat = 0;
    
            /**
             * StatsToSend stat_aggregate_method.
             * @member {number} stat_aggregate_method
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @instance
             */
            StatsToSend.prototype.stat_aggregate_method = 0;
    
            /**
             * Creates a new StatsToSend instance using the specified properties.
             * @function create
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @static
             * @param {CMsgClientRequestedClientStats.IStatsToSend=} [properties] Properties to set
             * @returns {CMsgClientRequestedClientStats.StatsToSend} StatsToSend instance
             */
            StatsToSend.create = function create(properties) {
                return new StatsToSend(properties);
            };
    
            /**
             * Encodes the specified StatsToSend message. Does not implicitly {@link CMsgClientRequestedClientStats.StatsToSend.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @static
             * @param {CMsgClientRequestedClientStats.IStatsToSend} message StatsToSend message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatsToSend.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.client_stat != null && Object.hasOwnProperty.call(message, "client_stat"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.client_stat);
                if (message.stat_aggregate_method != null && Object.hasOwnProperty.call(message, "stat_aggregate_method"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.stat_aggregate_method);
                return writer;
            };
    
            /**
             * Encodes the specified StatsToSend message, length delimited. Does not implicitly {@link CMsgClientRequestedClientStats.StatsToSend.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @static
             * @param {CMsgClientRequestedClientStats.IStatsToSend} message StatsToSend message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatsToSend.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StatsToSend message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientRequestedClientStats.StatsToSend} StatsToSend
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatsToSend.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestedClientStats.StatsToSend();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.client_stat = reader.uint32();
                        break;
                    case 2:
                        message.stat_aggregate_method = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StatsToSend message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientRequestedClientStats.StatsToSend} StatsToSend
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatsToSend.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StatsToSend message.
             * @function verify
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StatsToSend.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.client_stat != null && message.hasOwnProperty("client_stat"))
                    if (!$util.isInteger(message.client_stat))
                        return "client_stat: integer expected";
                if (message.stat_aggregate_method != null && message.hasOwnProperty("stat_aggregate_method"))
                    if (!$util.isInteger(message.stat_aggregate_method))
                        return "stat_aggregate_method: integer expected";
                return null;
            };
    
            /**
             * Creates a StatsToSend message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientRequestedClientStats.StatsToSend} StatsToSend
             */
            StatsToSend.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientRequestedClientStats.StatsToSend)
                    return object;
                var message = new $root.CMsgClientRequestedClientStats.StatsToSend();
                if (object.client_stat != null)
                    message.client_stat = object.client_stat >>> 0;
                if (object.stat_aggregate_method != null)
                    message.stat_aggregate_method = object.stat_aggregate_method >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a StatsToSend message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @static
             * @param {CMsgClientRequestedClientStats.StatsToSend} message StatsToSend
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StatsToSend.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.client_stat = 0;
                    object.stat_aggregate_method = 0;
                }
                if (message.client_stat != null && message.hasOwnProperty("client_stat"))
                    object.client_stat = message.client_stat;
                if (message.stat_aggregate_method != null && message.hasOwnProperty("stat_aggregate_method"))
                    object.stat_aggregate_method = message.stat_aggregate_method;
                return object;
            };
    
            /**
             * Converts this StatsToSend to JSON.
             * @function toJSON
             * @memberof CMsgClientRequestedClientStats.StatsToSend
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StatsToSend.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return StatsToSend;
        })();
    
        return CMsgClientRequestedClientStats;
    })();
    
    $root.CMsgClientStat2 = (function() {
    
        /**
         * Properties of a CMsgClientStat2.
         * @exports ICMsgClientStat2
         * @interface ICMsgClientStat2
         * @property {Array.<CMsgClientStat2.IStatDetail>|null} [stat_detail] CMsgClientStat2 stat_detail
         */
    
        /**
         * Constructs a new CMsgClientStat2.
         * @exports CMsgClientStat2
         * @classdesc Represents a CMsgClientStat2.
         * @implements ICMsgClientStat2
         * @constructor
         * @param {ICMsgClientStat2=} [properties] Properties to set
         */
        function CMsgClientStat2(properties) {
            this.stat_detail = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientStat2 stat_detail.
         * @member {Array.<CMsgClientStat2.IStatDetail>} stat_detail
         * @memberof CMsgClientStat2
         * @instance
         */
        CMsgClientStat2.prototype.stat_detail = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientStat2 instance using the specified properties.
         * @function create
         * @memberof CMsgClientStat2
         * @static
         * @param {ICMsgClientStat2=} [properties] Properties to set
         * @returns {CMsgClientStat2} CMsgClientStat2 instance
         */
        CMsgClientStat2.create = function create(properties) {
            return new CMsgClientStat2(properties);
        };
    
        /**
         * Encodes the specified CMsgClientStat2 message. Does not implicitly {@link CMsgClientStat2.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientStat2
         * @static
         * @param {ICMsgClientStat2} message CMsgClientStat2 message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStat2.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.stat_detail != null && message.stat_detail.length)
                for (var i = 0; i < message.stat_detail.length; ++i)
                    $root.CMsgClientStat2.StatDetail.encode(message.stat_detail[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientStat2 message, length delimited. Does not implicitly {@link CMsgClientStat2.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientStat2
         * @static
         * @param {ICMsgClientStat2} message CMsgClientStat2 message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStat2.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientStat2 message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientStat2
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientStat2} CMsgClientStat2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStat2.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStat2();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.stat_detail && message.stat_detail.length))
                        message.stat_detail = [];
                    message.stat_detail.push($root.CMsgClientStat2.StatDetail.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientStat2 message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientStat2
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientStat2} CMsgClientStat2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStat2.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientStat2 message.
         * @function verify
         * @memberof CMsgClientStat2
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientStat2.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.stat_detail != null && message.hasOwnProperty("stat_detail")) {
                if (!Array.isArray(message.stat_detail))
                    return "stat_detail: array expected";
                for (var i = 0; i < message.stat_detail.length; ++i) {
                    var error = $root.CMsgClientStat2.StatDetail.verify(message.stat_detail[i]);
                    if (error)
                        return "stat_detail." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientStat2 message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientStat2
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientStat2} CMsgClientStat2
         */
        CMsgClientStat2.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientStat2)
                return object;
            var message = new $root.CMsgClientStat2();
            if (object.stat_detail) {
                if (!Array.isArray(object.stat_detail))
                    throw TypeError(".CMsgClientStat2.stat_detail: array expected");
                message.stat_detail = [];
                for (var i = 0; i < object.stat_detail.length; ++i) {
                    if (typeof object.stat_detail[i] !== "object")
                        throw TypeError(".CMsgClientStat2.stat_detail: object expected");
                    message.stat_detail[i] = $root.CMsgClientStat2.StatDetail.fromObject(object.stat_detail[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientStat2 message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientStat2
         * @static
         * @param {CMsgClientStat2} message CMsgClientStat2
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientStat2.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stat_detail = [];
            if (message.stat_detail && message.stat_detail.length) {
                object.stat_detail = [];
                for (var j = 0; j < message.stat_detail.length; ++j)
                    object.stat_detail[j] = $root.CMsgClientStat2.StatDetail.toObject(message.stat_detail[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientStat2 to JSON.
         * @function toJSON
         * @memberof CMsgClientStat2
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientStat2.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientStat2.StatDetail = (function() {
    
            /**
             * Properties of a StatDetail.
             * @memberof CMsgClientStat2
             * @interface IStatDetail
             * @property {number|null} [client_stat] StatDetail client_stat
             * @property {number|Long|null} [ll_value] StatDetail ll_value
             * @property {number|null} [time_of_day] StatDetail time_of_day
             * @property {number|null} [cell_id] StatDetail cell_id
             * @property {number|null} [depot_id] StatDetail depot_id
             * @property {number|null} [app_id] StatDetail app_id
             */
    
            /**
             * Constructs a new StatDetail.
             * @memberof CMsgClientStat2
             * @classdesc Represents a StatDetail.
             * @implements IStatDetail
             * @constructor
             * @param {CMsgClientStat2.IStatDetail=} [properties] Properties to set
             */
            function StatDetail(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * StatDetail client_stat.
             * @member {number} client_stat
             * @memberof CMsgClientStat2.StatDetail
             * @instance
             */
            StatDetail.prototype.client_stat = 0;
    
            /**
             * StatDetail ll_value.
             * @member {number|Long} ll_value
             * @memberof CMsgClientStat2.StatDetail
             * @instance
             */
            StatDetail.prototype.ll_value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * StatDetail time_of_day.
             * @member {number} time_of_day
             * @memberof CMsgClientStat2.StatDetail
             * @instance
             */
            StatDetail.prototype.time_of_day = 0;
    
            /**
             * StatDetail cell_id.
             * @member {number} cell_id
             * @memberof CMsgClientStat2.StatDetail
             * @instance
             */
            StatDetail.prototype.cell_id = 0;
    
            /**
             * StatDetail depot_id.
             * @member {number} depot_id
             * @memberof CMsgClientStat2.StatDetail
             * @instance
             */
            StatDetail.prototype.depot_id = 0;
    
            /**
             * StatDetail app_id.
             * @member {number} app_id
             * @memberof CMsgClientStat2.StatDetail
             * @instance
             */
            StatDetail.prototype.app_id = 0;
    
            /**
             * Creates a new StatDetail instance using the specified properties.
             * @function create
             * @memberof CMsgClientStat2.StatDetail
             * @static
             * @param {CMsgClientStat2.IStatDetail=} [properties] Properties to set
             * @returns {CMsgClientStat2.StatDetail} StatDetail instance
             */
            StatDetail.create = function create(properties) {
                return new StatDetail(properties);
            };
    
            /**
             * Encodes the specified StatDetail message. Does not implicitly {@link CMsgClientStat2.StatDetail.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientStat2.StatDetail
             * @static
             * @param {CMsgClientStat2.IStatDetail} message StatDetail message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatDetail.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.client_stat != null && Object.hasOwnProperty.call(message, "client_stat"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.client_stat);
                if (message.ll_value != null && Object.hasOwnProperty.call(message, "ll_value"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.ll_value);
                if (message.time_of_day != null && Object.hasOwnProperty.call(message, "time_of_day"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_of_day);
                if (message.cell_id != null && Object.hasOwnProperty.call(message, "cell_id"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.cell_id);
                if (message.depot_id != null && Object.hasOwnProperty.call(message, "depot_id"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.depot_id);
                if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.app_id);
                return writer;
            };
    
            /**
             * Encodes the specified StatDetail message, length delimited. Does not implicitly {@link CMsgClientStat2.StatDetail.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientStat2.StatDetail
             * @static
             * @param {CMsgClientStat2.IStatDetail} message StatDetail message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StatDetail.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a StatDetail message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientStat2.StatDetail
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientStat2.StatDetail} StatDetail
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatDetail.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStat2.StatDetail();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.client_stat = reader.uint32();
                        break;
                    case 2:
                        message.ll_value = reader.int64();
                        break;
                    case 3:
                        message.time_of_day = reader.uint32();
                        break;
                    case 4:
                        message.cell_id = reader.uint32();
                        break;
                    case 5:
                        message.depot_id = reader.uint32();
                        break;
                    case 6:
                        message.app_id = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a StatDetail message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientStat2.StatDetail
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientStat2.StatDetail} StatDetail
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StatDetail.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a StatDetail message.
             * @function verify
             * @memberof CMsgClientStat2.StatDetail
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StatDetail.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.client_stat != null && message.hasOwnProperty("client_stat"))
                    if (!$util.isInteger(message.client_stat))
                        return "client_stat: integer expected";
                if (message.ll_value != null && message.hasOwnProperty("ll_value"))
                    if (!$util.isInteger(message.ll_value) && !(message.ll_value && $util.isInteger(message.ll_value.low) && $util.isInteger(message.ll_value.high)))
                        return "ll_value: integer|Long expected";
                if (message.time_of_day != null && message.hasOwnProperty("time_of_day"))
                    if (!$util.isInteger(message.time_of_day))
                        return "time_of_day: integer expected";
                if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                    if (!$util.isInteger(message.cell_id))
                        return "cell_id: integer expected";
                if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                    if (!$util.isInteger(message.depot_id))
                        return "depot_id: integer expected";
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    if (!$util.isInteger(message.app_id))
                        return "app_id: integer expected";
                return null;
            };
    
            /**
             * Creates a StatDetail message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientStat2.StatDetail
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientStat2.StatDetail} StatDetail
             */
            StatDetail.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientStat2.StatDetail)
                    return object;
                var message = new $root.CMsgClientStat2.StatDetail();
                if (object.client_stat != null)
                    message.client_stat = object.client_stat >>> 0;
                if (object.ll_value != null)
                    if ($util.Long)
                        (message.ll_value = $util.Long.fromValue(object.ll_value)).unsigned = false;
                    else if (typeof object.ll_value === "string")
                        message.ll_value = parseInt(object.ll_value, 10);
                    else if (typeof object.ll_value === "number")
                        message.ll_value = object.ll_value;
                    else if (typeof object.ll_value === "object")
                        message.ll_value = new $util.LongBits(object.ll_value.low >>> 0, object.ll_value.high >>> 0).toNumber();
                if (object.time_of_day != null)
                    message.time_of_day = object.time_of_day >>> 0;
                if (object.cell_id != null)
                    message.cell_id = object.cell_id >>> 0;
                if (object.depot_id != null)
                    message.depot_id = object.depot_id >>> 0;
                if (object.app_id != null)
                    message.app_id = object.app_id >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a StatDetail message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientStat2.StatDetail
             * @static
             * @param {CMsgClientStat2.StatDetail} message StatDetail
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StatDetail.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.client_stat = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.ll_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.ll_value = options.longs === String ? "0" : 0;
                    object.time_of_day = 0;
                    object.cell_id = 0;
                    object.depot_id = 0;
                    object.app_id = 0;
                }
                if (message.client_stat != null && message.hasOwnProperty("client_stat"))
                    object.client_stat = message.client_stat;
                if (message.ll_value != null && message.hasOwnProperty("ll_value"))
                    if (typeof message.ll_value === "number")
                        object.ll_value = options.longs === String ? String(message.ll_value) : message.ll_value;
                    else
                        object.ll_value = options.longs === String ? $util.Long.prototype.toString.call(message.ll_value) : options.longs === Number ? new $util.LongBits(message.ll_value.low >>> 0, message.ll_value.high >>> 0).toNumber() : message.ll_value;
                if (message.time_of_day != null && message.hasOwnProperty("time_of_day"))
                    object.time_of_day = message.time_of_day;
                if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                    object.cell_id = message.cell_id;
                if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                    object.depot_id = message.depot_id;
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    object.app_id = message.app_id;
                return object;
            };
    
            /**
             * Converts this StatDetail to JSON.
             * @function toJSON
             * @memberof CMsgClientStat2.StatDetail
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StatDetail.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return StatDetail;
        })();
    
        return CMsgClientStat2;
    })();
    
    $root.CMsgClientMMSSetRatelimitPolicyOnClient = (function() {
    
        /**
         * Properties of a CMsgClientMMSSetRatelimitPolicyOnClient.
         * @exports ICMsgClientMMSSetRatelimitPolicyOnClient
         * @interface ICMsgClientMMSSetRatelimitPolicyOnClient
         * @property {number|null} [app_id] CMsgClientMMSSetRatelimitPolicyOnClient app_id
         * @property {boolean|null} [enable_rate_limits] CMsgClientMMSSetRatelimitPolicyOnClient enable_rate_limits
         * @property {number|null} [seconds_per_message] CMsgClientMMSSetRatelimitPolicyOnClient seconds_per_message
         * @property {number|null} [milliseconds_per_data_update] CMsgClientMMSSetRatelimitPolicyOnClient milliseconds_per_data_update
         */
    
        /**
         * Constructs a new CMsgClientMMSSetRatelimitPolicyOnClient.
         * @exports CMsgClientMMSSetRatelimitPolicyOnClient
         * @classdesc Represents a CMsgClientMMSSetRatelimitPolicyOnClient.
         * @implements ICMsgClientMMSSetRatelimitPolicyOnClient
         * @constructor
         * @param {ICMsgClientMMSSetRatelimitPolicyOnClient=} [properties] Properties to set
         */
        function CMsgClientMMSSetRatelimitPolicyOnClient(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSSetRatelimitPolicyOnClient app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @instance
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSSetRatelimitPolicyOnClient enable_rate_limits.
         * @member {boolean} enable_rate_limits
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @instance
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.prototype.enable_rate_limits = false;
    
        /**
         * CMsgClientMMSSetRatelimitPolicyOnClient seconds_per_message.
         * @member {number} seconds_per_message
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @instance
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.prototype.seconds_per_message = 0;
    
        /**
         * CMsgClientMMSSetRatelimitPolicyOnClient milliseconds_per_data_update.
         * @member {number} milliseconds_per_data_update
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @instance
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.prototype.milliseconds_per_data_update = 0;
    
        /**
         * Creates a new CMsgClientMMSSetRatelimitPolicyOnClient instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @static
         * @param {ICMsgClientMMSSetRatelimitPolicyOnClient=} [properties] Properties to set
         * @returns {CMsgClientMMSSetRatelimitPolicyOnClient} CMsgClientMMSSetRatelimitPolicyOnClient instance
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.create = function create(properties) {
            return new CMsgClientMMSSetRatelimitPolicyOnClient(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetRatelimitPolicyOnClient message. Does not implicitly {@link CMsgClientMMSSetRatelimitPolicyOnClient.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @static
         * @param {ICMsgClientMMSSetRatelimitPolicyOnClient} message CMsgClientMMSSetRatelimitPolicyOnClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.enable_rate_limits != null && Object.hasOwnProperty.call(message, "enable_rate_limits"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable_rate_limits);
            if (message.seconds_per_message != null && Object.hasOwnProperty.call(message, "seconds_per_message"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.seconds_per_message);
            if (message.milliseconds_per_data_update != null && Object.hasOwnProperty.call(message, "milliseconds_per_data_update"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.milliseconds_per_data_update);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetRatelimitPolicyOnClient message, length delimited. Does not implicitly {@link CMsgClientMMSSetRatelimitPolicyOnClient.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @static
         * @param {ICMsgClientMMSSetRatelimitPolicyOnClient} message CMsgClientMMSSetRatelimitPolicyOnClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSSetRatelimitPolicyOnClient message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSSetRatelimitPolicyOnClient} CMsgClientMMSSetRatelimitPolicyOnClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSSetRatelimitPolicyOnClient();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.enable_rate_limits = reader.bool();
                    break;
                case 3:
                    message.seconds_per_message = reader.int32();
                    break;
                case 4:
                    message.milliseconds_per_data_update = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSSetRatelimitPolicyOnClient message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSSetRatelimitPolicyOnClient} CMsgClientMMSSetRatelimitPolicyOnClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSSetRatelimitPolicyOnClient message.
         * @function verify
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.enable_rate_limits != null && message.hasOwnProperty("enable_rate_limits"))
                if (typeof message.enable_rate_limits !== "boolean")
                    return "enable_rate_limits: boolean expected";
            if (message.seconds_per_message != null && message.hasOwnProperty("seconds_per_message"))
                if (!$util.isInteger(message.seconds_per_message))
                    return "seconds_per_message: integer expected";
            if (message.milliseconds_per_data_update != null && message.hasOwnProperty("milliseconds_per_data_update"))
                if (!$util.isInteger(message.milliseconds_per_data_update))
                    return "milliseconds_per_data_update: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSSetRatelimitPolicyOnClient message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSSetRatelimitPolicyOnClient} CMsgClientMMSSetRatelimitPolicyOnClient
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSSetRatelimitPolicyOnClient)
                return object;
            var message = new $root.CMsgClientMMSSetRatelimitPolicyOnClient();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.enable_rate_limits != null)
                message.enable_rate_limits = Boolean(object.enable_rate_limits);
            if (object.seconds_per_message != null)
                message.seconds_per_message = object.seconds_per_message | 0;
            if (object.milliseconds_per_data_update != null)
                message.milliseconds_per_data_update = object.milliseconds_per_data_update | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSSetRatelimitPolicyOnClient message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @static
         * @param {CMsgClientMMSSetRatelimitPolicyOnClient} message CMsgClientMMSSetRatelimitPolicyOnClient
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.enable_rate_limits = false;
                object.seconds_per_message = 0;
                object.milliseconds_per_data_update = 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.enable_rate_limits != null && message.hasOwnProperty("enable_rate_limits"))
                object.enable_rate_limits = message.enable_rate_limits;
            if (message.seconds_per_message != null && message.hasOwnProperty("seconds_per_message"))
                object.seconds_per_message = message.seconds_per_message;
            if (message.milliseconds_per_data_update != null && message.hasOwnProperty("milliseconds_per_data_update"))
                object.milliseconds_per_data_update = message.milliseconds_per_data_update;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSSetRatelimitPolicyOnClient to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSSetRatelimitPolicyOnClient
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSSetRatelimitPolicyOnClient.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSSetRatelimitPolicyOnClient;
    })();
    
    $root.CMsgClientMMSCreateLobby = (function() {
    
        /**
         * Properties of a CMsgClientMMSCreateLobby.
         * @exports ICMsgClientMMSCreateLobby
         * @interface ICMsgClientMMSCreateLobby
         * @property {number|null} [app_id] CMsgClientMMSCreateLobby app_id
         * @property {number|null} [max_members] CMsgClientMMSCreateLobby max_members
         * @property {number|null} [lobby_type] CMsgClientMMSCreateLobby lobby_type
         * @property {number|null} [lobby_flags] CMsgClientMMSCreateLobby lobby_flags
         * @property {number|null} [cell_id] CMsgClientMMSCreateLobby cell_id
         * @property {number|null} [deprecated_public_ip] CMsgClientMMSCreateLobby deprecated_public_ip
         * @property {Uint8Array|null} [metadata] CMsgClientMMSCreateLobby metadata
         * @property {string|null} [persona_name_owner] CMsgClientMMSCreateLobby persona_name_owner
         * @property {ICMsgIPAddress|null} [public_ip] CMsgClientMMSCreateLobby public_ip
         */
    
        /**
         * Constructs a new CMsgClientMMSCreateLobby.
         * @exports CMsgClientMMSCreateLobby
         * @classdesc Represents a CMsgClientMMSCreateLobby.
         * @implements ICMsgClientMMSCreateLobby
         * @constructor
         * @param {ICMsgClientMMSCreateLobby=} [properties] Properties to set
         */
        function CMsgClientMMSCreateLobby(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSCreateLobby app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSCreateLobby max_members.
         * @member {number} max_members
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.max_members = 0;
    
        /**
         * CMsgClientMMSCreateLobby lobby_type.
         * @member {number} lobby_type
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.lobby_type = 0;
    
        /**
         * CMsgClientMMSCreateLobby lobby_flags.
         * @member {number} lobby_flags
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.lobby_flags = 0;
    
        /**
         * CMsgClientMMSCreateLobby cell_id.
         * @member {number} cell_id
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.cell_id = 0;
    
        /**
         * CMsgClientMMSCreateLobby deprecated_public_ip.
         * @member {number} deprecated_public_ip
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.deprecated_public_ip = 0;
    
        /**
         * CMsgClientMMSCreateLobby metadata.
         * @member {Uint8Array} metadata
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.metadata = $util.newBuffer([]);
    
        /**
         * CMsgClientMMSCreateLobby persona_name_owner.
         * @member {string} persona_name_owner
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.persona_name_owner = "";
    
        /**
         * CMsgClientMMSCreateLobby public_ip.
         * @member {ICMsgIPAddress|null|undefined} public_ip
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         */
        CMsgClientMMSCreateLobby.prototype.public_ip = null;
    
        /**
         * Creates a new CMsgClientMMSCreateLobby instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSCreateLobby
         * @static
         * @param {ICMsgClientMMSCreateLobby=} [properties] Properties to set
         * @returns {CMsgClientMMSCreateLobby} CMsgClientMMSCreateLobby instance
         */
        CMsgClientMMSCreateLobby.create = function create(properties) {
            return new CMsgClientMMSCreateLobby(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSCreateLobby message. Does not implicitly {@link CMsgClientMMSCreateLobby.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSCreateLobby
         * @static
         * @param {ICMsgClientMMSCreateLobby} message CMsgClientMMSCreateLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSCreateLobby.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.max_members != null && Object.hasOwnProperty.call(message, "max_members"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.max_members);
            if (message.lobby_type != null && Object.hasOwnProperty.call(message, "lobby_type"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.lobby_type);
            if (message.lobby_flags != null && Object.hasOwnProperty.call(message, "lobby_flags"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.lobby_flags);
            if (message.cell_id != null && Object.hasOwnProperty.call(message, "cell_id"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.cell_id);
            if (message.deprecated_public_ip != null && Object.hasOwnProperty.call(message, "deprecated_public_ip"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.deprecated_public_ip);
            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.metadata);
            if (message.persona_name_owner != null && Object.hasOwnProperty.call(message, "persona_name_owner"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.persona_name_owner);
            if (message.public_ip != null && Object.hasOwnProperty.call(message, "public_ip"))
                $root.CMsgIPAddress.encode(message.public_ip, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSCreateLobby message, length delimited. Does not implicitly {@link CMsgClientMMSCreateLobby.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSCreateLobby
         * @static
         * @param {ICMsgClientMMSCreateLobby} message CMsgClientMMSCreateLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSCreateLobby.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSCreateLobby message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSCreateLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSCreateLobby} CMsgClientMMSCreateLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSCreateLobby.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSCreateLobby();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.max_members = reader.int32();
                    break;
                case 3:
                    message.lobby_type = reader.int32();
                    break;
                case 4:
                    message.lobby_flags = reader.int32();
                    break;
                case 5:
                    message.cell_id = reader.uint32();
                    break;
                case 6:
                    message.deprecated_public_ip = reader.uint32();
                    break;
                case 7:
                    message.metadata = reader.bytes();
                    break;
                case 8:
                    message.persona_name_owner = reader.string();
                    break;
                case 9:
                    message.public_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSCreateLobby message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSCreateLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSCreateLobby} CMsgClientMMSCreateLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSCreateLobby.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSCreateLobby message.
         * @function verify
         * @memberof CMsgClientMMSCreateLobby
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSCreateLobby.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.max_members != null && message.hasOwnProperty("max_members"))
                if (!$util.isInteger(message.max_members))
                    return "max_members: integer expected";
            if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                if (!$util.isInteger(message.lobby_type))
                    return "lobby_type: integer expected";
            if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                if (!$util.isInteger(message.lobby_flags))
                    return "lobby_flags: integer expected";
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                if (!$util.isInteger(message.cell_id))
                    return "cell_id: integer expected";
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                if (!$util.isInteger(message.deprecated_public_ip))
                    return "deprecated_public_ip: integer expected";
            if (message.metadata != null && message.hasOwnProperty("metadata"))
                if (!(message.metadata && typeof message.metadata.length === "number" || $util.isString(message.metadata)))
                    return "metadata: buffer expected";
            if (message.persona_name_owner != null && message.hasOwnProperty("persona_name_owner"))
                if (!$util.isString(message.persona_name_owner))
                    return "persona_name_owner: string expected";
            if (message.public_ip != null && message.hasOwnProperty("public_ip")) {
                var error = $root.CMsgIPAddress.verify(message.public_ip);
                if (error)
                    return "public_ip." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSCreateLobby message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSCreateLobby
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSCreateLobby} CMsgClientMMSCreateLobby
         */
        CMsgClientMMSCreateLobby.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSCreateLobby)
                return object;
            var message = new $root.CMsgClientMMSCreateLobby();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.max_members != null)
                message.max_members = object.max_members | 0;
            if (object.lobby_type != null)
                message.lobby_type = object.lobby_type | 0;
            if (object.lobby_flags != null)
                message.lobby_flags = object.lobby_flags | 0;
            if (object.cell_id != null)
                message.cell_id = object.cell_id >>> 0;
            if (object.deprecated_public_ip != null)
                message.deprecated_public_ip = object.deprecated_public_ip >>> 0;
            if (object.metadata != null)
                if (typeof object.metadata === "string")
                    $util.base64.decode(object.metadata, message.metadata = $util.newBuffer($util.base64.length(object.metadata)), 0);
                else if (object.metadata.length)
                    message.metadata = object.metadata;
            if (object.persona_name_owner != null)
                message.persona_name_owner = String(object.persona_name_owner);
            if (object.public_ip != null) {
                if (typeof object.public_ip !== "object")
                    throw TypeError(".CMsgClientMMSCreateLobby.public_ip: object expected");
                message.public_ip = $root.CMsgIPAddress.fromObject(object.public_ip);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSCreateLobby message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSCreateLobby
         * @static
         * @param {CMsgClientMMSCreateLobby} message CMsgClientMMSCreateLobby
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSCreateLobby.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.max_members = 0;
                object.lobby_type = 0;
                object.lobby_flags = 0;
                object.cell_id = 0;
                object.deprecated_public_ip = 0;
                if (options.bytes === String)
                    object.metadata = "";
                else {
                    object.metadata = [];
                    if (options.bytes !== Array)
                        object.metadata = $util.newBuffer(object.metadata);
                }
                object.persona_name_owner = "";
                object.public_ip = null;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.max_members != null && message.hasOwnProperty("max_members"))
                object.max_members = message.max_members;
            if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                object.lobby_type = message.lobby_type;
            if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                object.lobby_flags = message.lobby_flags;
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                object.cell_id = message.cell_id;
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                object.deprecated_public_ip = message.deprecated_public_ip;
            if (message.metadata != null && message.hasOwnProperty("metadata"))
                object.metadata = options.bytes === String ? $util.base64.encode(message.metadata, 0, message.metadata.length) : options.bytes === Array ? Array.prototype.slice.call(message.metadata) : message.metadata;
            if (message.persona_name_owner != null && message.hasOwnProperty("persona_name_owner"))
                object.persona_name_owner = message.persona_name_owner;
            if (message.public_ip != null && message.hasOwnProperty("public_ip"))
                object.public_ip = $root.CMsgIPAddress.toObject(message.public_ip, options);
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSCreateLobby to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSCreateLobby
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSCreateLobby.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSCreateLobby;
    })();
    
    $root.CMsgClientMMSCreateLobbyResponse = (function() {
    
        /**
         * Properties of a CMsgClientMMSCreateLobbyResponse.
         * @exports ICMsgClientMMSCreateLobbyResponse
         * @interface ICMsgClientMMSCreateLobbyResponse
         * @property {number|null} [app_id] CMsgClientMMSCreateLobbyResponse app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSCreateLobbyResponse steam_id_lobby
         * @property {number|null} [eresult] CMsgClientMMSCreateLobbyResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientMMSCreateLobbyResponse.
         * @exports CMsgClientMMSCreateLobbyResponse
         * @classdesc Represents a CMsgClientMMSCreateLobbyResponse.
         * @implements ICMsgClientMMSCreateLobbyResponse
         * @constructor
         * @param {ICMsgClientMMSCreateLobbyResponse=} [properties] Properties to set
         */
        function CMsgClientMMSCreateLobbyResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSCreateLobbyResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @instance
         */
        CMsgClientMMSCreateLobbyResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSCreateLobbyResponse steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @instance
         */
        CMsgClientMMSCreateLobbyResponse.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSCreateLobbyResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @instance
         */
        CMsgClientMMSCreateLobbyResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgClientMMSCreateLobbyResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @static
         * @param {ICMsgClientMMSCreateLobbyResponse=} [properties] Properties to set
         * @returns {CMsgClientMMSCreateLobbyResponse} CMsgClientMMSCreateLobbyResponse instance
         */
        CMsgClientMMSCreateLobbyResponse.create = function create(properties) {
            return new CMsgClientMMSCreateLobbyResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSCreateLobbyResponse message. Does not implicitly {@link CMsgClientMMSCreateLobbyResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @static
         * @param {ICMsgClientMMSCreateLobbyResponse} message CMsgClientMMSCreateLobbyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSCreateLobbyResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSCreateLobbyResponse message, length delimited. Does not implicitly {@link CMsgClientMMSCreateLobbyResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @static
         * @param {ICMsgClientMMSCreateLobbyResponse} message CMsgClientMMSCreateLobbyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSCreateLobbyResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSCreateLobbyResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSCreateLobbyResponse} CMsgClientMMSCreateLobbyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSCreateLobbyResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSCreateLobbyResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSCreateLobbyResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSCreateLobbyResponse} CMsgClientMMSCreateLobbyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSCreateLobbyResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSCreateLobbyResponse message.
         * @function verify
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSCreateLobbyResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSCreateLobbyResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSCreateLobbyResponse} CMsgClientMMSCreateLobbyResponse
         */
        CMsgClientMMSCreateLobbyResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSCreateLobbyResponse)
                return object;
            var message = new $root.CMsgClientMMSCreateLobbyResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSCreateLobbyResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @static
         * @param {CMsgClientMMSCreateLobbyResponse} message CMsgClientMMSCreateLobbyResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSCreateLobbyResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.eresult = 2;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSCreateLobbyResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSCreateLobbyResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSCreateLobbyResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSCreateLobbyResponse;
    })();
    
    $root.CMsgClientMMSJoinLobby = (function() {
    
        /**
         * Properties of a CMsgClientMMSJoinLobby.
         * @exports ICMsgClientMMSJoinLobby
         * @interface ICMsgClientMMSJoinLobby
         * @property {number|null} [app_id] CMsgClientMMSJoinLobby app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSJoinLobby steam_id_lobby
         * @property {string|null} [persona_name] CMsgClientMMSJoinLobby persona_name
         */
    
        /**
         * Constructs a new CMsgClientMMSJoinLobby.
         * @exports CMsgClientMMSJoinLobby
         * @classdesc Represents a CMsgClientMMSJoinLobby.
         * @implements ICMsgClientMMSJoinLobby
         * @constructor
         * @param {ICMsgClientMMSJoinLobby=} [properties] Properties to set
         */
        function CMsgClientMMSJoinLobby(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSJoinLobby app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSJoinLobby
         * @instance
         */
        CMsgClientMMSJoinLobby.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSJoinLobby steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSJoinLobby
         * @instance
         */
        CMsgClientMMSJoinLobby.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSJoinLobby persona_name.
         * @member {string} persona_name
         * @memberof CMsgClientMMSJoinLobby
         * @instance
         */
        CMsgClientMMSJoinLobby.prototype.persona_name = "";
    
        /**
         * Creates a new CMsgClientMMSJoinLobby instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSJoinLobby
         * @static
         * @param {ICMsgClientMMSJoinLobby=} [properties] Properties to set
         * @returns {CMsgClientMMSJoinLobby} CMsgClientMMSJoinLobby instance
         */
        CMsgClientMMSJoinLobby.create = function create(properties) {
            return new CMsgClientMMSJoinLobby(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSJoinLobby message. Does not implicitly {@link CMsgClientMMSJoinLobby.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSJoinLobby
         * @static
         * @param {ICMsgClientMMSJoinLobby} message CMsgClientMMSJoinLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSJoinLobby.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.persona_name != null && Object.hasOwnProperty.call(message, "persona_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.persona_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSJoinLobby message, length delimited. Does not implicitly {@link CMsgClientMMSJoinLobby.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSJoinLobby
         * @static
         * @param {ICMsgClientMMSJoinLobby} message CMsgClientMMSJoinLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSJoinLobby.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSJoinLobby message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSJoinLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSJoinLobby} CMsgClientMMSJoinLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSJoinLobby.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSJoinLobby();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.persona_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSJoinLobby message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSJoinLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSJoinLobby} CMsgClientMMSJoinLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSJoinLobby.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSJoinLobby message.
         * @function verify
         * @memberof CMsgClientMMSJoinLobby
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSJoinLobby.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                if (!$util.isString(message.persona_name))
                    return "persona_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSJoinLobby message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSJoinLobby
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSJoinLobby} CMsgClientMMSJoinLobby
         */
        CMsgClientMMSJoinLobby.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSJoinLobby)
                return object;
            var message = new $root.CMsgClientMMSJoinLobby();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.persona_name != null)
                message.persona_name = String(object.persona_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSJoinLobby message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSJoinLobby
         * @static
         * @param {CMsgClientMMSJoinLobby} message CMsgClientMMSJoinLobby
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSJoinLobby.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.persona_name = "";
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                object.persona_name = message.persona_name;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSJoinLobby to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSJoinLobby
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSJoinLobby.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSJoinLobby;
    })();
    
    $root.CMsgClientMMSJoinLobbyResponse = (function() {
    
        /**
         * Properties of a CMsgClientMMSJoinLobbyResponse.
         * @exports ICMsgClientMMSJoinLobbyResponse
         * @interface ICMsgClientMMSJoinLobbyResponse
         * @property {number|null} [app_id] CMsgClientMMSJoinLobbyResponse app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSJoinLobbyResponse steam_id_lobby
         * @property {number|null} [chat_room_enter_response] CMsgClientMMSJoinLobbyResponse chat_room_enter_response
         * @property {number|null} [max_members] CMsgClientMMSJoinLobbyResponse max_members
         * @property {number|null} [lobby_type] CMsgClientMMSJoinLobbyResponse lobby_type
         * @property {number|null} [lobby_flags] CMsgClientMMSJoinLobbyResponse lobby_flags
         * @property {number|Long|null} [steam_id_owner] CMsgClientMMSJoinLobbyResponse steam_id_owner
         * @property {Uint8Array|null} [metadata] CMsgClientMMSJoinLobbyResponse metadata
         * @property {Array.<CMsgClientMMSJoinLobbyResponse.IMember>|null} [members] CMsgClientMMSJoinLobbyResponse members
         */
    
        /**
         * Constructs a new CMsgClientMMSJoinLobbyResponse.
         * @exports CMsgClientMMSJoinLobbyResponse
         * @classdesc Represents a CMsgClientMMSJoinLobbyResponse.
         * @implements ICMsgClientMMSJoinLobbyResponse
         * @constructor
         * @param {ICMsgClientMMSJoinLobbyResponse=} [properties] Properties to set
         */
        function CMsgClientMMSJoinLobbyResponse(properties) {
            this.members = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSJoinLobbyResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSJoinLobbyResponse steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSJoinLobbyResponse chat_room_enter_response.
         * @member {number} chat_room_enter_response
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.chat_room_enter_response = 0;
    
        /**
         * CMsgClientMMSJoinLobbyResponse max_members.
         * @member {number} max_members
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.max_members = 0;
    
        /**
         * CMsgClientMMSJoinLobbyResponse lobby_type.
         * @member {number} lobby_type
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.lobby_type = 0;
    
        /**
         * CMsgClientMMSJoinLobbyResponse lobby_flags.
         * @member {number} lobby_flags
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.lobby_flags = 0;
    
        /**
         * CMsgClientMMSJoinLobbyResponse steam_id_owner.
         * @member {number|Long} steam_id_owner
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.steam_id_owner = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSJoinLobbyResponse metadata.
         * @member {Uint8Array} metadata
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.metadata = $util.newBuffer([]);
    
        /**
         * CMsgClientMMSJoinLobbyResponse members.
         * @member {Array.<CMsgClientMMSJoinLobbyResponse.IMember>} members
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         */
        CMsgClientMMSJoinLobbyResponse.prototype.members = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientMMSJoinLobbyResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @static
         * @param {ICMsgClientMMSJoinLobbyResponse=} [properties] Properties to set
         * @returns {CMsgClientMMSJoinLobbyResponse} CMsgClientMMSJoinLobbyResponse instance
         */
        CMsgClientMMSJoinLobbyResponse.create = function create(properties) {
            return new CMsgClientMMSJoinLobbyResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSJoinLobbyResponse message. Does not implicitly {@link CMsgClientMMSJoinLobbyResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @static
         * @param {ICMsgClientMMSJoinLobbyResponse} message CMsgClientMMSJoinLobbyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSJoinLobbyResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.chat_room_enter_response != null && Object.hasOwnProperty.call(message, "chat_room_enter_response"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.chat_room_enter_response);
            if (message.max_members != null && Object.hasOwnProperty.call(message, "max_members"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.max_members);
            if (message.lobby_type != null && Object.hasOwnProperty.call(message, "lobby_type"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.lobby_type);
            if (message.lobby_flags != null && Object.hasOwnProperty.call(message, "lobby_flags"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.lobby_flags);
            if (message.steam_id_owner != null && Object.hasOwnProperty.call(message, "steam_id_owner"))
                writer.uint32(/* id 7, wireType 1 =*/57).fixed64(message.steam_id_owner);
            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.metadata);
            if (message.members != null && message.members.length)
                for (var i = 0; i < message.members.length; ++i)
                    $root.CMsgClientMMSJoinLobbyResponse.Member.encode(message.members[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSJoinLobbyResponse message, length delimited. Does not implicitly {@link CMsgClientMMSJoinLobbyResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @static
         * @param {ICMsgClientMMSJoinLobbyResponse} message CMsgClientMMSJoinLobbyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSJoinLobbyResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSJoinLobbyResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSJoinLobbyResponse} CMsgClientMMSJoinLobbyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSJoinLobbyResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSJoinLobbyResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.chat_room_enter_response = reader.int32();
                    break;
                case 4:
                    message.max_members = reader.int32();
                    break;
                case 5:
                    message.lobby_type = reader.int32();
                    break;
                case 6:
                    message.lobby_flags = reader.int32();
                    break;
                case 7:
                    message.steam_id_owner = reader.fixed64();
                    break;
                case 8:
                    message.metadata = reader.bytes();
                    break;
                case 9:
                    if (!(message.members && message.members.length))
                        message.members = [];
                    message.members.push($root.CMsgClientMMSJoinLobbyResponse.Member.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSJoinLobbyResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSJoinLobbyResponse} CMsgClientMMSJoinLobbyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSJoinLobbyResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSJoinLobbyResponse message.
         * @function verify
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSJoinLobbyResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.chat_room_enter_response != null && message.hasOwnProperty("chat_room_enter_response"))
                if (!$util.isInteger(message.chat_room_enter_response))
                    return "chat_room_enter_response: integer expected";
            if (message.max_members != null && message.hasOwnProperty("max_members"))
                if (!$util.isInteger(message.max_members))
                    return "max_members: integer expected";
            if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                if (!$util.isInteger(message.lobby_type))
                    return "lobby_type: integer expected";
            if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                if (!$util.isInteger(message.lobby_flags))
                    return "lobby_flags: integer expected";
            if (message.steam_id_owner != null && message.hasOwnProperty("steam_id_owner"))
                if (!$util.isInteger(message.steam_id_owner) && !(message.steam_id_owner && $util.isInteger(message.steam_id_owner.low) && $util.isInteger(message.steam_id_owner.high)))
                    return "steam_id_owner: integer|Long expected";
            if (message.metadata != null && message.hasOwnProperty("metadata"))
                if (!(message.metadata && typeof message.metadata.length === "number" || $util.isString(message.metadata)))
                    return "metadata: buffer expected";
            if (message.members != null && message.hasOwnProperty("members")) {
                if (!Array.isArray(message.members))
                    return "members: array expected";
                for (var i = 0; i < message.members.length; ++i) {
                    var error = $root.CMsgClientMMSJoinLobbyResponse.Member.verify(message.members[i]);
                    if (error)
                        return "members." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSJoinLobbyResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSJoinLobbyResponse} CMsgClientMMSJoinLobbyResponse
         */
        CMsgClientMMSJoinLobbyResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSJoinLobbyResponse)
                return object;
            var message = new $root.CMsgClientMMSJoinLobbyResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.chat_room_enter_response != null)
                message.chat_room_enter_response = object.chat_room_enter_response | 0;
            if (object.max_members != null)
                message.max_members = object.max_members | 0;
            if (object.lobby_type != null)
                message.lobby_type = object.lobby_type | 0;
            if (object.lobby_flags != null)
                message.lobby_flags = object.lobby_flags | 0;
            if (object.steam_id_owner != null)
                if ($util.Long)
                    (message.steam_id_owner = $util.Long.fromValue(object.steam_id_owner)).unsigned = false;
                else if (typeof object.steam_id_owner === "string")
                    message.steam_id_owner = parseInt(object.steam_id_owner, 10);
                else if (typeof object.steam_id_owner === "number")
                    message.steam_id_owner = object.steam_id_owner;
                else if (typeof object.steam_id_owner === "object")
                    message.steam_id_owner = new $util.LongBits(object.steam_id_owner.low >>> 0, object.steam_id_owner.high >>> 0).toNumber();
            if (object.metadata != null)
                if (typeof object.metadata === "string")
                    $util.base64.decode(object.metadata, message.metadata = $util.newBuffer($util.base64.length(object.metadata)), 0);
                else if (object.metadata.length)
                    message.metadata = object.metadata;
            if (object.members) {
                if (!Array.isArray(object.members))
                    throw TypeError(".CMsgClientMMSJoinLobbyResponse.members: array expected");
                message.members = [];
                for (var i = 0; i < object.members.length; ++i) {
                    if (typeof object.members[i] !== "object")
                        throw TypeError(".CMsgClientMMSJoinLobbyResponse.members: object expected");
                    message.members[i] = $root.CMsgClientMMSJoinLobbyResponse.Member.fromObject(object.members[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSJoinLobbyResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @static
         * @param {CMsgClientMMSJoinLobbyResponse} message CMsgClientMMSJoinLobbyResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSJoinLobbyResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.members = [];
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.chat_room_enter_response = 0;
                object.max_members = 0;
                object.lobby_type = 0;
                object.lobby_flags = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_owner = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_owner = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.metadata = "";
                else {
                    object.metadata = [];
                    if (options.bytes !== Array)
                        object.metadata = $util.newBuffer(object.metadata);
                }
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.chat_room_enter_response != null && message.hasOwnProperty("chat_room_enter_response"))
                object.chat_room_enter_response = message.chat_room_enter_response;
            if (message.max_members != null && message.hasOwnProperty("max_members"))
                object.max_members = message.max_members;
            if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                object.lobby_type = message.lobby_type;
            if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                object.lobby_flags = message.lobby_flags;
            if (message.steam_id_owner != null && message.hasOwnProperty("steam_id_owner"))
                if (typeof message.steam_id_owner === "number")
                    object.steam_id_owner = options.longs === String ? String(message.steam_id_owner) : message.steam_id_owner;
                else
                    object.steam_id_owner = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_owner) : options.longs === Number ? new $util.LongBits(message.steam_id_owner.low >>> 0, message.steam_id_owner.high >>> 0).toNumber() : message.steam_id_owner;
            if (message.metadata != null && message.hasOwnProperty("metadata"))
                object.metadata = options.bytes === String ? $util.base64.encode(message.metadata, 0, message.metadata.length) : options.bytes === Array ? Array.prototype.slice.call(message.metadata) : message.metadata;
            if (message.members && message.members.length) {
                object.members = [];
                for (var j = 0; j < message.members.length; ++j)
                    object.members[j] = $root.CMsgClientMMSJoinLobbyResponse.Member.toObject(message.members[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSJoinLobbyResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSJoinLobbyResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSJoinLobbyResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientMMSJoinLobbyResponse.Member = (function() {
    
            /**
             * Properties of a Member.
             * @memberof CMsgClientMMSJoinLobbyResponse
             * @interface IMember
             * @property {number|Long|null} [steam_id] Member steam_id
             * @property {string|null} [persona_name] Member persona_name
             * @property {Uint8Array|null} [metadata] Member metadata
             */
    
            /**
             * Constructs a new Member.
             * @memberof CMsgClientMMSJoinLobbyResponse
             * @classdesc Represents a Member.
             * @implements IMember
             * @constructor
             * @param {CMsgClientMMSJoinLobbyResponse.IMember=} [properties] Properties to set
             */
            function Member(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Member steam_id.
             * @member {number|Long} steam_id
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @instance
             */
            Member.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Member persona_name.
             * @member {string} persona_name
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @instance
             */
            Member.prototype.persona_name = "";
    
            /**
             * Member metadata.
             * @member {Uint8Array} metadata
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @instance
             */
            Member.prototype.metadata = $util.newBuffer([]);
    
            /**
             * Creates a new Member instance using the specified properties.
             * @function create
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @static
             * @param {CMsgClientMMSJoinLobbyResponse.IMember=} [properties] Properties to set
             * @returns {CMsgClientMMSJoinLobbyResponse.Member} Member instance
             */
            Member.create = function create(properties) {
                return new Member(properties);
            };
    
            /**
             * Encodes the specified Member message. Does not implicitly {@link CMsgClientMMSJoinLobbyResponse.Member.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @static
             * @param {CMsgClientMMSJoinLobbyResponse.IMember} message Member message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Member.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
                if (message.persona_name != null && Object.hasOwnProperty.call(message, "persona_name"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.persona_name);
                if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.metadata);
                return writer;
            };
    
            /**
             * Encodes the specified Member message, length delimited. Does not implicitly {@link CMsgClientMMSJoinLobbyResponse.Member.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @static
             * @param {CMsgClientMMSJoinLobbyResponse.IMember} message Member message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Member.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Member message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientMMSJoinLobbyResponse.Member} Member
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Member.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSJoinLobbyResponse.Member();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.steam_id = reader.fixed64();
                        break;
                    case 2:
                        message.persona_name = reader.string();
                        break;
                    case 3:
                        message.metadata = reader.bytes();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Member message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientMMSJoinLobbyResponse.Member} Member
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Member.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Member message.
             * @function verify
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Member.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                    if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                        return "steam_id: integer|Long expected";
                if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                    if (!$util.isString(message.persona_name))
                        return "persona_name: string expected";
                if (message.metadata != null && message.hasOwnProperty("metadata"))
                    if (!(message.metadata && typeof message.metadata.length === "number" || $util.isString(message.metadata)))
                        return "metadata: buffer expected";
                return null;
            };
    
            /**
             * Creates a Member message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientMMSJoinLobbyResponse.Member} Member
             */
            Member.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientMMSJoinLobbyResponse.Member)
                    return object;
                var message = new $root.CMsgClientMMSJoinLobbyResponse.Member();
                if (object.steam_id != null)
                    if ($util.Long)
                        (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                    else if (typeof object.steam_id === "string")
                        message.steam_id = parseInt(object.steam_id, 10);
                    else if (typeof object.steam_id === "number")
                        message.steam_id = object.steam_id;
                    else if (typeof object.steam_id === "object")
                        message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
                if (object.persona_name != null)
                    message.persona_name = String(object.persona_name);
                if (object.metadata != null)
                    if (typeof object.metadata === "string")
                        $util.base64.decode(object.metadata, message.metadata = $util.newBuffer($util.base64.length(object.metadata)), 0);
                    else if (object.metadata.length)
                        message.metadata = object.metadata;
                return message;
            };
    
            /**
             * Creates a plain object from a Member message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @static
             * @param {CMsgClientMMSJoinLobbyResponse.Member} message Member
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Member.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steam_id = options.longs === String ? "0" : 0;
                    object.persona_name = "";
                    if (options.bytes === String)
                        object.metadata = "";
                    else {
                        object.metadata = [];
                        if (options.bytes !== Array)
                            object.metadata = $util.newBuffer(object.metadata);
                    }
                }
                if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                    if (typeof message.steam_id === "number")
                        object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                    else
                        object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
                if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                    object.persona_name = message.persona_name;
                if (message.metadata != null && message.hasOwnProperty("metadata"))
                    object.metadata = options.bytes === String ? $util.base64.encode(message.metadata, 0, message.metadata.length) : options.bytes === Array ? Array.prototype.slice.call(message.metadata) : message.metadata;
                return object;
            };
    
            /**
             * Converts this Member to JSON.
             * @function toJSON
             * @memberof CMsgClientMMSJoinLobbyResponse.Member
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Member.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Member;
        })();
    
        return CMsgClientMMSJoinLobbyResponse;
    })();
    
    $root.CMsgClientMMSLeaveLobby = (function() {
    
        /**
         * Properties of a CMsgClientMMSLeaveLobby.
         * @exports ICMsgClientMMSLeaveLobby
         * @interface ICMsgClientMMSLeaveLobby
         * @property {number|null} [app_id] CMsgClientMMSLeaveLobby app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSLeaveLobby steam_id_lobby
         */
    
        /**
         * Constructs a new CMsgClientMMSLeaveLobby.
         * @exports CMsgClientMMSLeaveLobby
         * @classdesc Represents a CMsgClientMMSLeaveLobby.
         * @implements ICMsgClientMMSLeaveLobby
         * @constructor
         * @param {ICMsgClientMMSLeaveLobby=} [properties] Properties to set
         */
        function CMsgClientMMSLeaveLobby(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSLeaveLobby app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSLeaveLobby
         * @instance
         */
        CMsgClientMMSLeaveLobby.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSLeaveLobby steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSLeaveLobby
         * @instance
         */
        CMsgClientMMSLeaveLobby.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientMMSLeaveLobby instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSLeaveLobby
         * @static
         * @param {ICMsgClientMMSLeaveLobby=} [properties] Properties to set
         * @returns {CMsgClientMMSLeaveLobby} CMsgClientMMSLeaveLobby instance
         */
        CMsgClientMMSLeaveLobby.create = function create(properties) {
            return new CMsgClientMMSLeaveLobby(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSLeaveLobby message. Does not implicitly {@link CMsgClientMMSLeaveLobby.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSLeaveLobby
         * @static
         * @param {ICMsgClientMMSLeaveLobby} message CMsgClientMMSLeaveLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLeaveLobby.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSLeaveLobby message, length delimited. Does not implicitly {@link CMsgClientMMSLeaveLobby.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSLeaveLobby
         * @static
         * @param {ICMsgClientMMSLeaveLobby} message CMsgClientMMSLeaveLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLeaveLobby.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSLeaveLobby message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSLeaveLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSLeaveLobby} CMsgClientMMSLeaveLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLeaveLobby.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSLeaveLobby();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSLeaveLobby message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSLeaveLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSLeaveLobby} CMsgClientMMSLeaveLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLeaveLobby.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSLeaveLobby message.
         * @function verify
         * @memberof CMsgClientMMSLeaveLobby
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSLeaveLobby.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSLeaveLobby message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSLeaveLobby
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSLeaveLobby} CMsgClientMMSLeaveLobby
         */
        CMsgClientMMSLeaveLobby.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSLeaveLobby)
                return object;
            var message = new $root.CMsgClientMMSLeaveLobby();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSLeaveLobby message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSLeaveLobby
         * @static
         * @param {CMsgClientMMSLeaveLobby} message CMsgClientMMSLeaveLobby
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSLeaveLobby.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSLeaveLobby to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSLeaveLobby
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSLeaveLobby.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSLeaveLobby;
    })();
    
    $root.CMsgClientMMSLeaveLobbyResponse = (function() {
    
        /**
         * Properties of a CMsgClientMMSLeaveLobbyResponse.
         * @exports ICMsgClientMMSLeaveLobbyResponse
         * @interface ICMsgClientMMSLeaveLobbyResponse
         * @property {number|null} [app_id] CMsgClientMMSLeaveLobbyResponse app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSLeaveLobbyResponse steam_id_lobby
         * @property {number|null} [eresult] CMsgClientMMSLeaveLobbyResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientMMSLeaveLobbyResponse.
         * @exports CMsgClientMMSLeaveLobbyResponse
         * @classdesc Represents a CMsgClientMMSLeaveLobbyResponse.
         * @implements ICMsgClientMMSLeaveLobbyResponse
         * @constructor
         * @param {ICMsgClientMMSLeaveLobbyResponse=} [properties] Properties to set
         */
        function CMsgClientMMSLeaveLobbyResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSLeaveLobbyResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @instance
         */
        CMsgClientMMSLeaveLobbyResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSLeaveLobbyResponse steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @instance
         */
        CMsgClientMMSLeaveLobbyResponse.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSLeaveLobbyResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @instance
         */
        CMsgClientMMSLeaveLobbyResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgClientMMSLeaveLobbyResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @static
         * @param {ICMsgClientMMSLeaveLobbyResponse=} [properties] Properties to set
         * @returns {CMsgClientMMSLeaveLobbyResponse} CMsgClientMMSLeaveLobbyResponse instance
         */
        CMsgClientMMSLeaveLobbyResponse.create = function create(properties) {
            return new CMsgClientMMSLeaveLobbyResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSLeaveLobbyResponse message. Does not implicitly {@link CMsgClientMMSLeaveLobbyResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @static
         * @param {ICMsgClientMMSLeaveLobbyResponse} message CMsgClientMMSLeaveLobbyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLeaveLobbyResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSLeaveLobbyResponse message, length delimited. Does not implicitly {@link CMsgClientMMSLeaveLobbyResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @static
         * @param {ICMsgClientMMSLeaveLobbyResponse} message CMsgClientMMSLeaveLobbyResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLeaveLobbyResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSLeaveLobbyResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSLeaveLobbyResponse} CMsgClientMMSLeaveLobbyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLeaveLobbyResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSLeaveLobbyResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSLeaveLobbyResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSLeaveLobbyResponse} CMsgClientMMSLeaveLobbyResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLeaveLobbyResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSLeaveLobbyResponse message.
         * @function verify
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSLeaveLobbyResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSLeaveLobbyResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSLeaveLobbyResponse} CMsgClientMMSLeaveLobbyResponse
         */
        CMsgClientMMSLeaveLobbyResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSLeaveLobbyResponse)
                return object;
            var message = new $root.CMsgClientMMSLeaveLobbyResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSLeaveLobbyResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @static
         * @param {CMsgClientMMSLeaveLobbyResponse} message CMsgClientMMSLeaveLobbyResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSLeaveLobbyResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.eresult = 2;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSLeaveLobbyResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSLeaveLobbyResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSLeaveLobbyResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSLeaveLobbyResponse;
    })();
    
    $root.CMsgClientMMSGetLobbyList = (function() {
    
        /**
         * Properties of a CMsgClientMMSGetLobbyList.
         * @exports ICMsgClientMMSGetLobbyList
         * @interface ICMsgClientMMSGetLobbyList
         * @property {number|null} [app_id] CMsgClientMMSGetLobbyList app_id
         * @property {number|null} [num_lobbies_requested] CMsgClientMMSGetLobbyList num_lobbies_requested
         * @property {number|null} [cell_id] CMsgClientMMSGetLobbyList cell_id
         * @property {number|null} [deprecated_public_ip] CMsgClientMMSGetLobbyList deprecated_public_ip
         * @property {Array.<CMsgClientMMSGetLobbyList.IFilter>|null} [filters] CMsgClientMMSGetLobbyList filters
         * @property {ICMsgIPAddress|null} [public_ip] CMsgClientMMSGetLobbyList public_ip
         */
    
        /**
         * Constructs a new CMsgClientMMSGetLobbyList.
         * @exports CMsgClientMMSGetLobbyList
         * @classdesc Represents a CMsgClientMMSGetLobbyList.
         * @implements ICMsgClientMMSGetLobbyList
         * @constructor
         * @param {ICMsgClientMMSGetLobbyList=} [properties] Properties to set
         */
        function CMsgClientMMSGetLobbyList(properties) {
            this.filters = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSGetLobbyList app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSGetLobbyList
         * @instance
         */
        CMsgClientMMSGetLobbyList.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSGetLobbyList num_lobbies_requested.
         * @member {number} num_lobbies_requested
         * @memberof CMsgClientMMSGetLobbyList
         * @instance
         */
        CMsgClientMMSGetLobbyList.prototype.num_lobbies_requested = 0;
    
        /**
         * CMsgClientMMSGetLobbyList cell_id.
         * @member {number} cell_id
         * @memberof CMsgClientMMSGetLobbyList
         * @instance
         */
        CMsgClientMMSGetLobbyList.prototype.cell_id = 0;
    
        /**
         * CMsgClientMMSGetLobbyList deprecated_public_ip.
         * @member {number} deprecated_public_ip
         * @memberof CMsgClientMMSGetLobbyList
         * @instance
         */
        CMsgClientMMSGetLobbyList.prototype.deprecated_public_ip = 0;
    
        /**
         * CMsgClientMMSGetLobbyList filters.
         * @member {Array.<CMsgClientMMSGetLobbyList.IFilter>} filters
         * @memberof CMsgClientMMSGetLobbyList
         * @instance
         */
        CMsgClientMMSGetLobbyList.prototype.filters = $util.emptyArray;
    
        /**
         * CMsgClientMMSGetLobbyList public_ip.
         * @member {ICMsgIPAddress|null|undefined} public_ip
         * @memberof CMsgClientMMSGetLobbyList
         * @instance
         */
        CMsgClientMMSGetLobbyList.prototype.public_ip = null;
    
        /**
         * Creates a new CMsgClientMMSGetLobbyList instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSGetLobbyList
         * @static
         * @param {ICMsgClientMMSGetLobbyList=} [properties] Properties to set
         * @returns {CMsgClientMMSGetLobbyList} CMsgClientMMSGetLobbyList instance
         */
        CMsgClientMMSGetLobbyList.create = function create(properties) {
            return new CMsgClientMMSGetLobbyList(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyList message. Does not implicitly {@link CMsgClientMMSGetLobbyList.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSGetLobbyList
         * @static
         * @param {ICMsgClientMMSGetLobbyList} message CMsgClientMMSGetLobbyList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.num_lobbies_requested != null && Object.hasOwnProperty.call(message, "num_lobbies_requested"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.num_lobbies_requested);
            if (message.cell_id != null && Object.hasOwnProperty.call(message, "cell_id"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.cell_id);
            if (message.deprecated_public_ip != null && Object.hasOwnProperty.call(message, "deprecated_public_ip"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.deprecated_public_ip);
            if (message.filters != null && message.filters.length)
                for (var i = 0; i < message.filters.length; ++i)
                    $root.CMsgClientMMSGetLobbyList.Filter.encode(message.filters[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.public_ip != null && Object.hasOwnProperty.call(message, "public_ip"))
                $root.CMsgIPAddress.encode(message.public_ip, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyList message, length delimited. Does not implicitly {@link CMsgClientMMSGetLobbyList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSGetLobbyList
         * @static
         * @param {ICMsgClientMMSGetLobbyList} message CMsgClientMMSGetLobbyList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSGetLobbyList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSGetLobbyList} CMsgClientMMSGetLobbyList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSGetLobbyList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 3:
                    message.num_lobbies_requested = reader.int32();
                    break;
                case 4:
                    message.cell_id = reader.uint32();
                    break;
                case 5:
                    message.deprecated_public_ip = reader.uint32();
                    break;
                case 6:
                    if (!(message.filters && message.filters.length))
                        message.filters = [];
                    message.filters.push($root.CMsgClientMMSGetLobbyList.Filter.decode(reader, reader.uint32()));
                    break;
                case 7:
                    message.public_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSGetLobbyList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSGetLobbyList} CMsgClientMMSGetLobbyList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSGetLobbyList message.
         * @function verify
         * @memberof CMsgClientMMSGetLobbyList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSGetLobbyList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.num_lobbies_requested != null && message.hasOwnProperty("num_lobbies_requested"))
                if (!$util.isInteger(message.num_lobbies_requested))
                    return "num_lobbies_requested: integer expected";
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                if (!$util.isInteger(message.cell_id))
                    return "cell_id: integer expected";
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                if (!$util.isInteger(message.deprecated_public_ip))
                    return "deprecated_public_ip: integer expected";
            if (message.filters != null && message.hasOwnProperty("filters")) {
                if (!Array.isArray(message.filters))
                    return "filters: array expected";
                for (var i = 0; i < message.filters.length; ++i) {
                    var error = $root.CMsgClientMMSGetLobbyList.Filter.verify(message.filters[i]);
                    if (error)
                        return "filters." + error;
                }
            }
            if (message.public_ip != null && message.hasOwnProperty("public_ip")) {
                var error = $root.CMsgIPAddress.verify(message.public_ip);
                if (error)
                    return "public_ip." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSGetLobbyList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSGetLobbyList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSGetLobbyList} CMsgClientMMSGetLobbyList
         */
        CMsgClientMMSGetLobbyList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSGetLobbyList)
                return object;
            var message = new $root.CMsgClientMMSGetLobbyList();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.num_lobbies_requested != null)
                message.num_lobbies_requested = object.num_lobbies_requested | 0;
            if (object.cell_id != null)
                message.cell_id = object.cell_id >>> 0;
            if (object.deprecated_public_ip != null)
                message.deprecated_public_ip = object.deprecated_public_ip >>> 0;
            if (object.filters) {
                if (!Array.isArray(object.filters))
                    throw TypeError(".CMsgClientMMSGetLobbyList.filters: array expected");
                message.filters = [];
                for (var i = 0; i < object.filters.length; ++i) {
                    if (typeof object.filters[i] !== "object")
                        throw TypeError(".CMsgClientMMSGetLobbyList.filters: object expected");
                    message.filters[i] = $root.CMsgClientMMSGetLobbyList.Filter.fromObject(object.filters[i]);
                }
            }
            if (object.public_ip != null) {
                if (typeof object.public_ip !== "object")
                    throw TypeError(".CMsgClientMMSGetLobbyList.public_ip: object expected");
                message.public_ip = $root.CMsgIPAddress.fromObject(object.public_ip);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSGetLobbyList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSGetLobbyList
         * @static
         * @param {CMsgClientMMSGetLobbyList} message CMsgClientMMSGetLobbyList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSGetLobbyList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.filters = [];
            if (options.defaults) {
                object.app_id = 0;
                object.num_lobbies_requested = 0;
                object.cell_id = 0;
                object.deprecated_public_ip = 0;
                object.public_ip = null;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.num_lobbies_requested != null && message.hasOwnProperty("num_lobbies_requested"))
                object.num_lobbies_requested = message.num_lobbies_requested;
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                object.cell_id = message.cell_id;
            if (message.deprecated_public_ip != null && message.hasOwnProperty("deprecated_public_ip"))
                object.deprecated_public_ip = message.deprecated_public_ip;
            if (message.filters && message.filters.length) {
                object.filters = [];
                for (var j = 0; j < message.filters.length; ++j)
                    object.filters[j] = $root.CMsgClientMMSGetLobbyList.Filter.toObject(message.filters[j], options);
            }
            if (message.public_ip != null && message.hasOwnProperty("public_ip"))
                object.public_ip = $root.CMsgIPAddress.toObject(message.public_ip, options);
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSGetLobbyList to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSGetLobbyList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSGetLobbyList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientMMSGetLobbyList.Filter = (function() {
    
            /**
             * Properties of a Filter.
             * @memberof CMsgClientMMSGetLobbyList
             * @interface IFilter
             * @property {string|null} [key] Filter key
             * @property {string|null} [value] Filter value
             * @property {number|null} [comparision] Filter comparision
             * @property {number|null} [filter_type] Filter filter_type
             */
    
            /**
             * Constructs a new Filter.
             * @memberof CMsgClientMMSGetLobbyList
             * @classdesc Represents a Filter.
             * @implements IFilter
             * @constructor
             * @param {CMsgClientMMSGetLobbyList.IFilter=} [properties] Properties to set
             */
            function Filter(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Filter key.
             * @member {string} key
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @instance
             */
            Filter.prototype.key = "";
    
            /**
             * Filter value.
             * @member {string} value
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @instance
             */
            Filter.prototype.value = "";
    
            /**
             * Filter comparision.
             * @member {number} comparision
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @instance
             */
            Filter.prototype.comparision = 0;
    
            /**
             * Filter filter_type.
             * @member {number} filter_type
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @instance
             */
            Filter.prototype.filter_type = 0;
    
            /**
             * Creates a new Filter instance using the specified properties.
             * @function create
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @static
             * @param {CMsgClientMMSGetLobbyList.IFilter=} [properties] Properties to set
             * @returns {CMsgClientMMSGetLobbyList.Filter} Filter instance
             */
            Filter.create = function create(properties) {
                return new Filter(properties);
            };
    
            /**
             * Encodes the specified Filter message. Does not implicitly {@link CMsgClientMMSGetLobbyList.Filter.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @static
             * @param {CMsgClientMMSGetLobbyList.IFilter} message Filter message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Filter.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                if (message.comparision != null && Object.hasOwnProperty.call(message, "comparision"))
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.comparision);
                if (message.filter_type != null && Object.hasOwnProperty.call(message, "filter_type"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.filter_type);
                return writer;
            };
    
            /**
             * Encodes the specified Filter message, length delimited. Does not implicitly {@link CMsgClientMMSGetLobbyList.Filter.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @static
             * @param {CMsgClientMMSGetLobbyList.IFilter} message Filter message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Filter.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Filter message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientMMSGetLobbyList.Filter} Filter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Filter.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSGetLobbyList.Filter();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.key = reader.string();
                        break;
                    case 2:
                        message.value = reader.string();
                        break;
                    case 3:
                        message.comparision = reader.int32();
                        break;
                    case 4:
                        message.filter_type = reader.int32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Filter message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientMMSGetLobbyList.Filter} Filter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Filter.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Filter message.
             * @function verify
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Filter.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.key != null && message.hasOwnProperty("key"))
                    if (!$util.isString(message.key))
                        return "key: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                if (message.comparision != null && message.hasOwnProperty("comparision"))
                    if (!$util.isInteger(message.comparision))
                        return "comparision: integer expected";
                if (message.filter_type != null && message.hasOwnProperty("filter_type"))
                    if (!$util.isInteger(message.filter_type))
                        return "filter_type: integer expected";
                return null;
            };
    
            /**
             * Creates a Filter message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientMMSGetLobbyList.Filter} Filter
             */
            Filter.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientMMSGetLobbyList.Filter)
                    return object;
                var message = new $root.CMsgClientMMSGetLobbyList.Filter();
                if (object.key != null)
                    message.key = String(object.key);
                if (object.value != null)
                    message.value = String(object.value);
                if (object.comparision != null)
                    message.comparision = object.comparision | 0;
                if (object.filter_type != null)
                    message.filter_type = object.filter_type | 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Filter message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @static
             * @param {CMsgClientMMSGetLobbyList.Filter} message Filter
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Filter.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.key = "";
                    object.value = "";
                    object.comparision = 0;
                    object.filter_type = 0;
                }
                if (message.key != null && message.hasOwnProperty("key"))
                    object.key = message.key;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                if (message.comparision != null && message.hasOwnProperty("comparision"))
                    object.comparision = message.comparision;
                if (message.filter_type != null && message.hasOwnProperty("filter_type"))
                    object.filter_type = message.filter_type;
                return object;
            };
    
            /**
             * Converts this Filter to JSON.
             * @function toJSON
             * @memberof CMsgClientMMSGetLobbyList.Filter
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Filter.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Filter;
        })();
    
        return CMsgClientMMSGetLobbyList;
    })();
    
    $root.CMsgClientMMSGetLobbyListResponse = (function() {
    
        /**
         * Properties of a CMsgClientMMSGetLobbyListResponse.
         * @exports ICMsgClientMMSGetLobbyListResponse
         * @interface ICMsgClientMMSGetLobbyListResponse
         * @property {number|null} [app_id] CMsgClientMMSGetLobbyListResponse app_id
         * @property {number|null} [eresult] CMsgClientMMSGetLobbyListResponse eresult
         * @property {Array.<CMsgClientMMSGetLobbyListResponse.ILobby>|null} [lobbies] CMsgClientMMSGetLobbyListResponse lobbies
         */
    
        /**
         * Constructs a new CMsgClientMMSGetLobbyListResponse.
         * @exports CMsgClientMMSGetLobbyListResponse
         * @classdesc Represents a CMsgClientMMSGetLobbyListResponse.
         * @implements ICMsgClientMMSGetLobbyListResponse
         * @constructor
         * @param {ICMsgClientMMSGetLobbyListResponse=} [properties] Properties to set
         */
        function CMsgClientMMSGetLobbyListResponse(properties) {
            this.lobbies = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSGetLobbyListResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @instance
         */
        CMsgClientMMSGetLobbyListResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSGetLobbyListResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @instance
         */
        CMsgClientMMSGetLobbyListResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientMMSGetLobbyListResponse lobbies.
         * @member {Array.<CMsgClientMMSGetLobbyListResponse.ILobby>} lobbies
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @instance
         */
        CMsgClientMMSGetLobbyListResponse.prototype.lobbies = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientMMSGetLobbyListResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @static
         * @param {ICMsgClientMMSGetLobbyListResponse=} [properties] Properties to set
         * @returns {CMsgClientMMSGetLobbyListResponse} CMsgClientMMSGetLobbyListResponse instance
         */
        CMsgClientMMSGetLobbyListResponse.create = function create(properties) {
            return new CMsgClientMMSGetLobbyListResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyListResponse message. Does not implicitly {@link CMsgClientMMSGetLobbyListResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @static
         * @param {ICMsgClientMMSGetLobbyListResponse} message CMsgClientMMSGetLobbyListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyListResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.eresult);
            if (message.lobbies != null && message.lobbies.length)
                for (var i = 0; i < message.lobbies.length; ++i)
                    $root.CMsgClientMMSGetLobbyListResponse.Lobby.encode(message.lobbies[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyListResponse message, length delimited. Does not implicitly {@link CMsgClientMMSGetLobbyListResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @static
         * @param {ICMsgClientMMSGetLobbyListResponse} message CMsgClientMMSGetLobbyListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyListResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyListResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSGetLobbyListResponse} CMsgClientMMSGetLobbyListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyListResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSGetLobbyListResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 3:
                    message.eresult = reader.int32();
                    break;
                case 4:
                    if (!(message.lobbies && message.lobbies.length))
                        message.lobbies = [];
                    message.lobbies.push($root.CMsgClientMMSGetLobbyListResponse.Lobby.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyListResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSGetLobbyListResponse} CMsgClientMMSGetLobbyListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyListResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSGetLobbyListResponse message.
         * @function verify
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSGetLobbyListResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.lobbies != null && message.hasOwnProperty("lobbies")) {
                if (!Array.isArray(message.lobbies))
                    return "lobbies: array expected";
                for (var i = 0; i < message.lobbies.length; ++i) {
                    var error = $root.CMsgClientMMSGetLobbyListResponse.Lobby.verify(message.lobbies[i]);
                    if (error)
                        return "lobbies." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSGetLobbyListResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSGetLobbyListResponse} CMsgClientMMSGetLobbyListResponse
         */
        CMsgClientMMSGetLobbyListResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSGetLobbyListResponse)
                return object;
            var message = new $root.CMsgClientMMSGetLobbyListResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.lobbies) {
                if (!Array.isArray(object.lobbies))
                    throw TypeError(".CMsgClientMMSGetLobbyListResponse.lobbies: array expected");
                message.lobbies = [];
                for (var i = 0; i < object.lobbies.length; ++i) {
                    if (typeof object.lobbies[i] !== "object")
                        throw TypeError(".CMsgClientMMSGetLobbyListResponse.lobbies: object expected");
                    message.lobbies[i] = $root.CMsgClientMMSGetLobbyListResponse.Lobby.fromObject(object.lobbies[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSGetLobbyListResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @static
         * @param {CMsgClientMMSGetLobbyListResponse} message CMsgClientMMSGetLobbyListResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSGetLobbyListResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.lobbies = [];
            if (options.defaults) {
                object.app_id = 0;
                object.eresult = 2;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.lobbies && message.lobbies.length) {
                object.lobbies = [];
                for (var j = 0; j < message.lobbies.length; ++j)
                    object.lobbies[j] = $root.CMsgClientMMSGetLobbyListResponse.Lobby.toObject(message.lobbies[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSGetLobbyListResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSGetLobbyListResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSGetLobbyListResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientMMSGetLobbyListResponse.Lobby = (function() {
    
            /**
             * Properties of a Lobby.
             * @memberof CMsgClientMMSGetLobbyListResponse
             * @interface ILobby
             * @property {number|Long|null} [steam_id] Lobby steam_id
             * @property {number|null} [max_members] Lobby max_members
             * @property {number|null} [lobby_type] Lobby lobby_type
             * @property {number|null} [lobby_flags] Lobby lobby_flags
             * @property {Uint8Array|null} [metadata] Lobby metadata
             * @property {number|null} [num_members] Lobby num_members
             * @property {number|null} [distance] Lobby distance
             * @property {number|Long|null} [weight] Lobby weight
             */
    
            /**
             * Constructs a new Lobby.
             * @memberof CMsgClientMMSGetLobbyListResponse
             * @classdesc Represents a Lobby.
             * @implements ILobby
             * @constructor
             * @param {CMsgClientMMSGetLobbyListResponse.ILobby=} [properties] Properties to set
             */
            function Lobby(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Lobby steam_id.
             * @member {number|Long} steam_id
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             */
            Lobby.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Lobby max_members.
             * @member {number} max_members
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             */
            Lobby.prototype.max_members = 0;
    
            /**
             * Lobby lobby_type.
             * @member {number} lobby_type
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             */
            Lobby.prototype.lobby_type = 0;
    
            /**
             * Lobby lobby_flags.
             * @member {number} lobby_flags
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             */
            Lobby.prototype.lobby_flags = 0;
    
            /**
             * Lobby metadata.
             * @member {Uint8Array} metadata
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             */
            Lobby.prototype.metadata = $util.newBuffer([]);
    
            /**
             * Lobby num_members.
             * @member {number} num_members
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             */
            Lobby.prototype.num_members = 0;
    
            /**
             * Lobby distance.
             * @member {number} distance
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             */
            Lobby.prototype.distance = 0;
    
            /**
             * Lobby weight.
             * @member {number|Long} weight
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             */
            Lobby.prototype.weight = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Creates a new Lobby instance using the specified properties.
             * @function create
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @static
             * @param {CMsgClientMMSGetLobbyListResponse.ILobby=} [properties] Properties to set
             * @returns {CMsgClientMMSGetLobbyListResponse.Lobby} Lobby instance
             */
            Lobby.create = function create(properties) {
                return new Lobby(properties);
            };
    
            /**
             * Encodes the specified Lobby message. Does not implicitly {@link CMsgClientMMSGetLobbyListResponse.Lobby.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @static
             * @param {CMsgClientMMSGetLobbyListResponse.ILobby} message Lobby message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Lobby.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
                if (message.max_members != null && Object.hasOwnProperty.call(message, "max_members"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.max_members);
                if (message.lobby_type != null && Object.hasOwnProperty.call(message, "lobby_type"))
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.lobby_type);
                if (message.lobby_flags != null && Object.hasOwnProperty.call(message, "lobby_flags"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.lobby_flags);
                if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                    writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.metadata);
                if (message.num_members != null && Object.hasOwnProperty.call(message, "num_members"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.num_members);
                if (message.distance != null && Object.hasOwnProperty.call(message, "distance"))
                    writer.uint32(/* id 7, wireType 5 =*/61).float(message.distance);
                if (message.weight != null && Object.hasOwnProperty.call(message, "weight"))
                    writer.uint32(/* id 8, wireType 0 =*/64).int64(message.weight);
                return writer;
            };
    
            /**
             * Encodes the specified Lobby message, length delimited. Does not implicitly {@link CMsgClientMMSGetLobbyListResponse.Lobby.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @static
             * @param {CMsgClientMMSGetLobbyListResponse.ILobby} message Lobby message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Lobby.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Lobby message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientMMSGetLobbyListResponse.Lobby} Lobby
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Lobby.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSGetLobbyListResponse.Lobby();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.steam_id = reader.fixed64();
                        break;
                    case 2:
                        message.max_members = reader.int32();
                        break;
                    case 3:
                        message.lobby_type = reader.int32();
                        break;
                    case 4:
                        message.lobby_flags = reader.int32();
                        break;
                    case 5:
                        message.metadata = reader.bytes();
                        break;
                    case 6:
                        message.num_members = reader.int32();
                        break;
                    case 7:
                        message.distance = reader.float();
                        break;
                    case 8:
                        message.weight = reader.int64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Lobby message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientMMSGetLobbyListResponse.Lobby} Lobby
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Lobby.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Lobby message.
             * @function verify
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Lobby.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                    if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                        return "steam_id: integer|Long expected";
                if (message.max_members != null && message.hasOwnProperty("max_members"))
                    if (!$util.isInteger(message.max_members))
                        return "max_members: integer expected";
                if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                    if (!$util.isInteger(message.lobby_type))
                        return "lobby_type: integer expected";
                if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                    if (!$util.isInteger(message.lobby_flags))
                        return "lobby_flags: integer expected";
                if (message.metadata != null && message.hasOwnProperty("metadata"))
                    if (!(message.metadata && typeof message.metadata.length === "number" || $util.isString(message.metadata)))
                        return "metadata: buffer expected";
                if (message.num_members != null && message.hasOwnProperty("num_members"))
                    if (!$util.isInteger(message.num_members))
                        return "num_members: integer expected";
                if (message.distance != null && message.hasOwnProperty("distance"))
                    if (typeof message.distance !== "number")
                        return "distance: number expected";
                if (message.weight != null && message.hasOwnProperty("weight"))
                    if (!$util.isInteger(message.weight) && !(message.weight && $util.isInteger(message.weight.low) && $util.isInteger(message.weight.high)))
                        return "weight: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a Lobby message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientMMSGetLobbyListResponse.Lobby} Lobby
             */
            Lobby.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientMMSGetLobbyListResponse.Lobby)
                    return object;
                var message = new $root.CMsgClientMMSGetLobbyListResponse.Lobby();
                if (object.steam_id != null)
                    if ($util.Long)
                        (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                    else if (typeof object.steam_id === "string")
                        message.steam_id = parseInt(object.steam_id, 10);
                    else if (typeof object.steam_id === "number")
                        message.steam_id = object.steam_id;
                    else if (typeof object.steam_id === "object")
                        message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
                if (object.max_members != null)
                    message.max_members = object.max_members | 0;
                if (object.lobby_type != null)
                    message.lobby_type = object.lobby_type | 0;
                if (object.lobby_flags != null)
                    message.lobby_flags = object.lobby_flags | 0;
                if (object.metadata != null)
                    if (typeof object.metadata === "string")
                        $util.base64.decode(object.metadata, message.metadata = $util.newBuffer($util.base64.length(object.metadata)), 0);
                    else if (object.metadata.length)
                        message.metadata = object.metadata;
                if (object.num_members != null)
                    message.num_members = object.num_members | 0;
                if (object.distance != null)
                    message.distance = Number(object.distance);
                if (object.weight != null)
                    if ($util.Long)
                        (message.weight = $util.Long.fromValue(object.weight)).unsigned = false;
                    else if (typeof object.weight === "string")
                        message.weight = parseInt(object.weight, 10);
                    else if (typeof object.weight === "number")
                        message.weight = object.weight;
                    else if (typeof object.weight === "object")
                        message.weight = new $util.LongBits(object.weight.low >>> 0, object.weight.high >>> 0).toNumber();
                return message;
            };
    
            /**
             * Creates a plain object from a Lobby message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @static
             * @param {CMsgClientMMSGetLobbyListResponse.Lobby} message Lobby
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Lobby.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steam_id = options.longs === String ? "0" : 0;
                    object.max_members = 0;
                    object.lobby_type = 0;
                    object.lobby_flags = 0;
                    if (options.bytes === String)
                        object.metadata = "";
                    else {
                        object.metadata = [];
                        if (options.bytes !== Array)
                            object.metadata = $util.newBuffer(object.metadata);
                    }
                    object.num_members = 0;
                    object.distance = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.weight = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.weight = options.longs === String ? "0" : 0;
                }
                if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                    if (typeof message.steam_id === "number")
                        object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                    else
                        object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
                if (message.max_members != null && message.hasOwnProperty("max_members"))
                    object.max_members = message.max_members;
                if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                    object.lobby_type = message.lobby_type;
                if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                    object.lobby_flags = message.lobby_flags;
                if (message.metadata != null && message.hasOwnProperty("metadata"))
                    object.metadata = options.bytes === String ? $util.base64.encode(message.metadata, 0, message.metadata.length) : options.bytes === Array ? Array.prototype.slice.call(message.metadata) : message.metadata;
                if (message.num_members != null && message.hasOwnProperty("num_members"))
                    object.num_members = message.num_members;
                if (message.distance != null && message.hasOwnProperty("distance"))
                    object.distance = options.json && !isFinite(message.distance) ? String(message.distance) : message.distance;
                if (message.weight != null && message.hasOwnProperty("weight"))
                    if (typeof message.weight === "number")
                        object.weight = options.longs === String ? String(message.weight) : message.weight;
                    else
                        object.weight = options.longs === String ? $util.Long.prototype.toString.call(message.weight) : options.longs === Number ? new $util.LongBits(message.weight.low >>> 0, message.weight.high >>> 0).toNumber() : message.weight;
                return object;
            };
    
            /**
             * Converts this Lobby to JSON.
             * @function toJSON
             * @memberof CMsgClientMMSGetLobbyListResponse.Lobby
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Lobby.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Lobby;
        })();
    
        return CMsgClientMMSGetLobbyListResponse;
    })();
    
    $root.CMsgClientMMSSetLobbyData = (function() {
    
        /**
         * Properties of a CMsgClientMMSSetLobbyData.
         * @exports ICMsgClientMMSSetLobbyData
         * @interface ICMsgClientMMSSetLobbyData
         * @property {number|null} [app_id] CMsgClientMMSSetLobbyData app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSSetLobbyData steam_id_lobby
         * @property {number|Long|null} [steam_id_member] CMsgClientMMSSetLobbyData steam_id_member
         * @property {number|null} [max_members] CMsgClientMMSSetLobbyData max_members
         * @property {number|null} [lobby_type] CMsgClientMMSSetLobbyData lobby_type
         * @property {number|null} [lobby_flags] CMsgClientMMSSetLobbyData lobby_flags
         * @property {Uint8Array|null} [metadata] CMsgClientMMSSetLobbyData metadata
         */
    
        /**
         * Constructs a new CMsgClientMMSSetLobbyData.
         * @exports CMsgClientMMSSetLobbyData
         * @classdesc Represents a CMsgClientMMSSetLobbyData.
         * @implements ICMsgClientMMSSetLobbyData
         * @constructor
         * @param {ICMsgClientMMSSetLobbyData=} [properties] Properties to set
         */
        function CMsgClientMMSSetLobbyData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSSetLobbyData app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSSetLobbyData
         * @instance
         */
        CMsgClientMMSSetLobbyData.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSSetLobbyData steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSSetLobbyData
         * @instance
         */
        CMsgClientMMSSetLobbyData.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSetLobbyData steam_id_member.
         * @member {number|Long} steam_id_member
         * @memberof CMsgClientMMSSetLobbyData
         * @instance
         */
        CMsgClientMMSSetLobbyData.prototype.steam_id_member = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSetLobbyData max_members.
         * @member {number} max_members
         * @memberof CMsgClientMMSSetLobbyData
         * @instance
         */
        CMsgClientMMSSetLobbyData.prototype.max_members = 0;
    
        /**
         * CMsgClientMMSSetLobbyData lobby_type.
         * @member {number} lobby_type
         * @memberof CMsgClientMMSSetLobbyData
         * @instance
         */
        CMsgClientMMSSetLobbyData.prototype.lobby_type = 0;
    
        /**
         * CMsgClientMMSSetLobbyData lobby_flags.
         * @member {number} lobby_flags
         * @memberof CMsgClientMMSSetLobbyData
         * @instance
         */
        CMsgClientMMSSetLobbyData.prototype.lobby_flags = 0;
    
        /**
         * CMsgClientMMSSetLobbyData metadata.
         * @member {Uint8Array} metadata
         * @memberof CMsgClientMMSSetLobbyData
         * @instance
         */
        CMsgClientMMSSetLobbyData.prototype.metadata = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientMMSSetLobbyData instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSSetLobbyData
         * @static
         * @param {ICMsgClientMMSSetLobbyData=} [properties] Properties to set
         * @returns {CMsgClientMMSSetLobbyData} CMsgClientMMSSetLobbyData instance
         */
        CMsgClientMMSSetLobbyData.create = function create(properties) {
            return new CMsgClientMMSSetLobbyData(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyData message. Does not implicitly {@link CMsgClientMMSSetLobbyData.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSSetLobbyData
         * @static
         * @param {ICMsgClientMMSSetLobbyData} message CMsgClientMMSSetLobbyData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_member != null && Object.hasOwnProperty.call(message, "steam_id_member"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_member);
            if (message.max_members != null && Object.hasOwnProperty.call(message, "max_members"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.max_members);
            if (message.lobby_type != null && Object.hasOwnProperty.call(message, "lobby_type"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.lobby_type);
            if (message.lobby_flags != null && Object.hasOwnProperty.call(message, "lobby_flags"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.lobby_flags);
            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.metadata);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyData message, length delimited. Does not implicitly {@link CMsgClientMMSSetLobbyData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSSetLobbyData
         * @static
         * @param {ICMsgClientMMSSetLobbyData} message CMsgClientMMSSetLobbyData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSSetLobbyData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSSetLobbyData} CMsgClientMMSSetLobbyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSSetLobbyData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_member = reader.fixed64();
                    break;
                case 4:
                    message.max_members = reader.int32();
                    break;
                case 5:
                    message.lobby_type = reader.int32();
                    break;
                case 6:
                    message.lobby_flags = reader.int32();
                    break;
                case 7:
                    message.metadata = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSSetLobbyData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSSetLobbyData} CMsgClientMMSSetLobbyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSSetLobbyData message.
         * @function verify
         * @memberof CMsgClientMMSSetLobbyData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSSetLobbyData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_member != null && message.hasOwnProperty("steam_id_member"))
                if (!$util.isInteger(message.steam_id_member) && !(message.steam_id_member && $util.isInteger(message.steam_id_member.low) && $util.isInteger(message.steam_id_member.high)))
                    return "steam_id_member: integer|Long expected";
            if (message.max_members != null && message.hasOwnProperty("max_members"))
                if (!$util.isInteger(message.max_members))
                    return "max_members: integer expected";
            if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                if (!$util.isInteger(message.lobby_type))
                    return "lobby_type: integer expected";
            if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                if (!$util.isInteger(message.lobby_flags))
                    return "lobby_flags: integer expected";
            if (message.metadata != null && message.hasOwnProperty("metadata"))
                if (!(message.metadata && typeof message.metadata.length === "number" || $util.isString(message.metadata)))
                    return "metadata: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSSetLobbyData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSSetLobbyData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSSetLobbyData} CMsgClientMMSSetLobbyData
         */
        CMsgClientMMSSetLobbyData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSSetLobbyData)
                return object;
            var message = new $root.CMsgClientMMSSetLobbyData();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_member != null)
                if ($util.Long)
                    (message.steam_id_member = $util.Long.fromValue(object.steam_id_member)).unsigned = false;
                else if (typeof object.steam_id_member === "string")
                    message.steam_id_member = parseInt(object.steam_id_member, 10);
                else if (typeof object.steam_id_member === "number")
                    message.steam_id_member = object.steam_id_member;
                else if (typeof object.steam_id_member === "object")
                    message.steam_id_member = new $util.LongBits(object.steam_id_member.low >>> 0, object.steam_id_member.high >>> 0).toNumber();
            if (object.max_members != null)
                message.max_members = object.max_members | 0;
            if (object.lobby_type != null)
                message.lobby_type = object.lobby_type | 0;
            if (object.lobby_flags != null)
                message.lobby_flags = object.lobby_flags | 0;
            if (object.metadata != null)
                if (typeof object.metadata === "string")
                    $util.base64.decode(object.metadata, message.metadata = $util.newBuffer($util.base64.length(object.metadata)), 0);
                else if (object.metadata.length)
                    message.metadata = object.metadata;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSSetLobbyData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSSetLobbyData
         * @static
         * @param {CMsgClientMMSSetLobbyData} message CMsgClientMMSSetLobbyData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSSetLobbyData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_member = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_member = options.longs === String ? "0" : 0;
                object.max_members = 0;
                object.lobby_type = 0;
                object.lobby_flags = 0;
                if (options.bytes === String)
                    object.metadata = "";
                else {
                    object.metadata = [];
                    if (options.bytes !== Array)
                        object.metadata = $util.newBuffer(object.metadata);
                }
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_member != null && message.hasOwnProperty("steam_id_member"))
                if (typeof message.steam_id_member === "number")
                    object.steam_id_member = options.longs === String ? String(message.steam_id_member) : message.steam_id_member;
                else
                    object.steam_id_member = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_member) : options.longs === Number ? new $util.LongBits(message.steam_id_member.low >>> 0, message.steam_id_member.high >>> 0).toNumber() : message.steam_id_member;
            if (message.max_members != null && message.hasOwnProperty("max_members"))
                object.max_members = message.max_members;
            if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                object.lobby_type = message.lobby_type;
            if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                object.lobby_flags = message.lobby_flags;
            if (message.metadata != null && message.hasOwnProperty("metadata"))
                object.metadata = options.bytes === String ? $util.base64.encode(message.metadata, 0, message.metadata.length) : options.bytes === Array ? Array.prototype.slice.call(message.metadata) : message.metadata;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSSetLobbyData to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSSetLobbyData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSSetLobbyData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSSetLobbyData;
    })();
    
    $root.CMsgClientMMSSetLobbyDataResponse = (function() {
    
        /**
         * Properties of a CMsgClientMMSSetLobbyDataResponse.
         * @exports ICMsgClientMMSSetLobbyDataResponse
         * @interface ICMsgClientMMSSetLobbyDataResponse
         * @property {number|null} [app_id] CMsgClientMMSSetLobbyDataResponse app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSSetLobbyDataResponse steam_id_lobby
         * @property {number|null} [eresult] CMsgClientMMSSetLobbyDataResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientMMSSetLobbyDataResponse.
         * @exports CMsgClientMMSSetLobbyDataResponse
         * @classdesc Represents a CMsgClientMMSSetLobbyDataResponse.
         * @implements ICMsgClientMMSSetLobbyDataResponse
         * @constructor
         * @param {ICMsgClientMMSSetLobbyDataResponse=} [properties] Properties to set
         */
        function CMsgClientMMSSetLobbyDataResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSSetLobbyDataResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @instance
         */
        CMsgClientMMSSetLobbyDataResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSSetLobbyDataResponse steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @instance
         */
        CMsgClientMMSSetLobbyDataResponse.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSetLobbyDataResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @instance
         */
        CMsgClientMMSSetLobbyDataResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgClientMMSSetLobbyDataResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @static
         * @param {ICMsgClientMMSSetLobbyDataResponse=} [properties] Properties to set
         * @returns {CMsgClientMMSSetLobbyDataResponse} CMsgClientMMSSetLobbyDataResponse instance
         */
        CMsgClientMMSSetLobbyDataResponse.create = function create(properties) {
            return new CMsgClientMMSSetLobbyDataResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyDataResponse message. Does not implicitly {@link CMsgClientMMSSetLobbyDataResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @static
         * @param {ICMsgClientMMSSetLobbyDataResponse} message CMsgClientMMSSetLobbyDataResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyDataResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyDataResponse message, length delimited. Does not implicitly {@link CMsgClientMMSSetLobbyDataResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @static
         * @param {ICMsgClientMMSSetLobbyDataResponse} message CMsgClientMMSSetLobbyDataResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyDataResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyDataResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSSetLobbyDataResponse} CMsgClientMMSSetLobbyDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyDataResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSSetLobbyDataResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyDataResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSSetLobbyDataResponse} CMsgClientMMSSetLobbyDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyDataResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSSetLobbyDataResponse message.
         * @function verify
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSSetLobbyDataResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSSetLobbyDataResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSSetLobbyDataResponse} CMsgClientMMSSetLobbyDataResponse
         */
        CMsgClientMMSSetLobbyDataResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSSetLobbyDataResponse)
                return object;
            var message = new $root.CMsgClientMMSSetLobbyDataResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSSetLobbyDataResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @static
         * @param {CMsgClientMMSSetLobbyDataResponse} message CMsgClientMMSSetLobbyDataResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSSetLobbyDataResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.eresult = 2;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSSetLobbyDataResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSSetLobbyDataResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSSetLobbyDataResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSSetLobbyDataResponse;
    })();
    
    $root.CMsgClientMMSGetLobbyData = (function() {
    
        /**
         * Properties of a CMsgClientMMSGetLobbyData.
         * @exports ICMsgClientMMSGetLobbyData
         * @interface ICMsgClientMMSGetLobbyData
         * @property {number|null} [app_id] CMsgClientMMSGetLobbyData app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSGetLobbyData steam_id_lobby
         */
    
        /**
         * Constructs a new CMsgClientMMSGetLobbyData.
         * @exports CMsgClientMMSGetLobbyData
         * @classdesc Represents a CMsgClientMMSGetLobbyData.
         * @implements ICMsgClientMMSGetLobbyData
         * @constructor
         * @param {ICMsgClientMMSGetLobbyData=} [properties] Properties to set
         */
        function CMsgClientMMSGetLobbyData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSGetLobbyData app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSGetLobbyData
         * @instance
         */
        CMsgClientMMSGetLobbyData.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSGetLobbyData steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSGetLobbyData
         * @instance
         */
        CMsgClientMMSGetLobbyData.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientMMSGetLobbyData instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSGetLobbyData
         * @static
         * @param {ICMsgClientMMSGetLobbyData=} [properties] Properties to set
         * @returns {CMsgClientMMSGetLobbyData} CMsgClientMMSGetLobbyData instance
         */
        CMsgClientMMSGetLobbyData.create = function create(properties) {
            return new CMsgClientMMSGetLobbyData(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyData message. Does not implicitly {@link CMsgClientMMSGetLobbyData.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSGetLobbyData
         * @static
         * @param {ICMsgClientMMSGetLobbyData} message CMsgClientMMSGetLobbyData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyData message, length delimited. Does not implicitly {@link CMsgClientMMSGetLobbyData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSGetLobbyData
         * @static
         * @param {ICMsgClientMMSGetLobbyData} message CMsgClientMMSGetLobbyData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSGetLobbyData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSGetLobbyData} CMsgClientMMSGetLobbyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSGetLobbyData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSGetLobbyData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSGetLobbyData} CMsgClientMMSGetLobbyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSGetLobbyData message.
         * @function verify
         * @memberof CMsgClientMMSGetLobbyData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSGetLobbyData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSGetLobbyData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSGetLobbyData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSGetLobbyData} CMsgClientMMSGetLobbyData
         */
        CMsgClientMMSGetLobbyData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSGetLobbyData)
                return object;
            var message = new $root.CMsgClientMMSGetLobbyData();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSGetLobbyData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSGetLobbyData
         * @static
         * @param {CMsgClientMMSGetLobbyData} message CMsgClientMMSGetLobbyData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSGetLobbyData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSGetLobbyData to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSGetLobbyData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSGetLobbyData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSGetLobbyData;
    })();
    
    $root.CMsgClientMMSLobbyData = (function() {
    
        /**
         * Properties of a CMsgClientMMSLobbyData.
         * @exports ICMsgClientMMSLobbyData
         * @interface ICMsgClientMMSLobbyData
         * @property {number|null} [app_id] CMsgClientMMSLobbyData app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSLobbyData steam_id_lobby
         * @property {number|null} [num_members] CMsgClientMMSLobbyData num_members
         * @property {number|null} [max_members] CMsgClientMMSLobbyData max_members
         * @property {number|null} [lobby_type] CMsgClientMMSLobbyData lobby_type
         * @property {number|null} [lobby_flags] CMsgClientMMSLobbyData lobby_flags
         * @property {number|Long|null} [steam_id_owner] CMsgClientMMSLobbyData steam_id_owner
         * @property {Uint8Array|null} [metadata] CMsgClientMMSLobbyData metadata
         * @property {Array.<CMsgClientMMSLobbyData.IMember>|null} [members] CMsgClientMMSLobbyData members
         * @property {number|null} [lobby_cellid] CMsgClientMMSLobbyData lobby_cellid
         * @property {boolean|null} [owner_should_accept_changes] CMsgClientMMSLobbyData owner_should_accept_changes
         */
    
        /**
         * Constructs a new CMsgClientMMSLobbyData.
         * @exports CMsgClientMMSLobbyData
         * @classdesc Represents a CMsgClientMMSLobbyData.
         * @implements ICMsgClientMMSLobbyData
         * @constructor
         * @param {ICMsgClientMMSLobbyData=} [properties] Properties to set
         */
        function CMsgClientMMSLobbyData(properties) {
            this.members = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSLobbyData app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSLobbyData steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSLobbyData num_members.
         * @member {number} num_members
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.num_members = 0;
    
        /**
         * CMsgClientMMSLobbyData max_members.
         * @member {number} max_members
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.max_members = 0;
    
        /**
         * CMsgClientMMSLobbyData lobby_type.
         * @member {number} lobby_type
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.lobby_type = 0;
    
        /**
         * CMsgClientMMSLobbyData lobby_flags.
         * @member {number} lobby_flags
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.lobby_flags = 0;
    
        /**
         * CMsgClientMMSLobbyData steam_id_owner.
         * @member {number|Long} steam_id_owner
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.steam_id_owner = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSLobbyData metadata.
         * @member {Uint8Array} metadata
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.metadata = $util.newBuffer([]);
    
        /**
         * CMsgClientMMSLobbyData members.
         * @member {Array.<CMsgClientMMSLobbyData.IMember>} members
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.members = $util.emptyArray;
    
        /**
         * CMsgClientMMSLobbyData lobby_cellid.
         * @member {number} lobby_cellid
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.lobby_cellid = 0;
    
        /**
         * CMsgClientMMSLobbyData owner_should_accept_changes.
         * @member {boolean} owner_should_accept_changes
         * @memberof CMsgClientMMSLobbyData
         * @instance
         */
        CMsgClientMMSLobbyData.prototype.owner_should_accept_changes = false;
    
        /**
         * Creates a new CMsgClientMMSLobbyData instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSLobbyData
         * @static
         * @param {ICMsgClientMMSLobbyData=} [properties] Properties to set
         * @returns {CMsgClientMMSLobbyData} CMsgClientMMSLobbyData instance
         */
        CMsgClientMMSLobbyData.create = function create(properties) {
            return new CMsgClientMMSLobbyData(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSLobbyData message. Does not implicitly {@link CMsgClientMMSLobbyData.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSLobbyData
         * @static
         * @param {ICMsgClientMMSLobbyData} message CMsgClientMMSLobbyData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLobbyData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.num_members != null && Object.hasOwnProperty.call(message, "num_members"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.num_members);
            if (message.max_members != null && Object.hasOwnProperty.call(message, "max_members"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.max_members);
            if (message.lobby_type != null && Object.hasOwnProperty.call(message, "lobby_type"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.lobby_type);
            if (message.lobby_flags != null && Object.hasOwnProperty.call(message, "lobby_flags"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.lobby_flags);
            if (message.steam_id_owner != null && Object.hasOwnProperty.call(message, "steam_id_owner"))
                writer.uint32(/* id 7, wireType 1 =*/57).fixed64(message.steam_id_owner);
            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.metadata);
            if (message.members != null && message.members.length)
                for (var i = 0; i < message.members.length; ++i)
                    $root.CMsgClientMMSLobbyData.Member.encode(message.members[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            if (message.lobby_cellid != null && Object.hasOwnProperty.call(message, "lobby_cellid"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.lobby_cellid);
            if (message.owner_should_accept_changes != null && Object.hasOwnProperty.call(message, "owner_should_accept_changes"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.owner_should_accept_changes);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSLobbyData message, length delimited. Does not implicitly {@link CMsgClientMMSLobbyData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSLobbyData
         * @static
         * @param {ICMsgClientMMSLobbyData} message CMsgClientMMSLobbyData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLobbyData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSLobbyData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSLobbyData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSLobbyData} CMsgClientMMSLobbyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLobbyData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSLobbyData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.num_members = reader.int32();
                    break;
                case 4:
                    message.max_members = reader.int32();
                    break;
                case 5:
                    message.lobby_type = reader.int32();
                    break;
                case 6:
                    message.lobby_flags = reader.int32();
                    break;
                case 7:
                    message.steam_id_owner = reader.fixed64();
                    break;
                case 8:
                    message.metadata = reader.bytes();
                    break;
                case 9:
                    if (!(message.members && message.members.length))
                        message.members = [];
                    message.members.push($root.CMsgClientMMSLobbyData.Member.decode(reader, reader.uint32()));
                    break;
                case 10:
                    message.lobby_cellid = reader.uint32();
                    break;
                case 11:
                    message.owner_should_accept_changes = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSLobbyData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSLobbyData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSLobbyData} CMsgClientMMSLobbyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLobbyData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSLobbyData message.
         * @function verify
         * @memberof CMsgClientMMSLobbyData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSLobbyData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.num_members != null && message.hasOwnProperty("num_members"))
                if (!$util.isInteger(message.num_members))
                    return "num_members: integer expected";
            if (message.max_members != null && message.hasOwnProperty("max_members"))
                if (!$util.isInteger(message.max_members))
                    return "max_members: integer expected";
            if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                if (!$util.isInteger(message.lobby_type))
                    return "lobby_type: integer expected";
            if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                if (!$util.isInteger(message.lobby_flags))
                    return "lobby_flags: integer expected";
            if (message.steam_id_owner != null && message.hasOwnProperty("steam_id_owner"))
                if (!$util.isInteger(message.steam_id_owner) && !(message.steam_id_owner && $util.isInteger(message.steam_id_owner.low) && $util.isInteger(message.steam_id_owner.high)))
                    return "steam_id_owner: integer|Long expected";
            if (message.metadata != null && message.hasOwnProperty("metadata"))
                if (!(message.metadata && typeof message.metadata.length === "number" || $util.isString(message.metadata)))
                    return "metadata: buffer expected";
            if (message.members != null && message.hasOwnProperty("members")) {
                if (!Array.isArray(message.members))
                    return "members: array expected";
                for (var i = 0; i < message.members.length; ++i) {
                    var error = $root.CMsgClientMMSLobbyData.Member.verify(message.members[i]);
                    if (error)
                        return "members." + error;
                }
            }
            if (message.lobby_cellid != null && message.hasOwnProperty("lobby_cellid"))
                if (!$util.isInteger(message.lobby_cellid))
                    return "lobby_cellid: integer expected";
            if (message.owner_should_accept_changes != null && message.hasOwnProperty("owner_should_accept_changes"))
                if (typeof message.owner_should_accept_changes !== "boolean")
                    return "owner_should_accept_changes: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSLobbyData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSLobbyData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSLobbyData} CMsgClientMMSLobbyData
         */
        CMsgClientMMSLobbyData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSLobbyData)
                return object;
            var message = new $root.CMsgClientMMSLobbyData();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.num_members != null)
                message.num_members = object.num_members | 0;
            if (object.max_members != null)
                message.max_members = object.max_members | 0;
            if (object.lobby_type != null)
                message.lobby_type = object.lobby_type | 0;
            if (object.lobby_flags != null)
                message.lobby_flags = object.lobby_flags | 0;
            if (object.steam_id_owner != null)
                if ($util.Long)
                    (message.steam_id_owner = $util.Long.fromValue(object.steam_id_owner)).unsigned = false;
                else if (typeof object.steam_id_owner === "string")
                    message.steam_id_owner = parseInt(object.steam_id_owner, 10);
                else if (typeof object.steam_id_owner === "number")
                    message.steam_id_owner = object.steam_id_owner;
                else if (typeof object.steam_id_owner === "object")
                    message.steam_id_owner = new $util.LongBits(object.steam_id_owner.low >>> 0, object.steam_id_owner.high >>> 0).toNumber();
            if (object.metadata != null)
                if (typeof object.metadata === "string")
                    $util.base64.decode(object.metadata, message.metadata = $util.newBuffer($util.base64.length(object.metadata)), 0);
                else if (object.metadata.length)
                    message.metadata = object.metadata;
            if (object.members) {
                if (!Array.isArray(object.members))
                    throw TypeError(".CMsgClientMMSLobbyData.members: array expected");
                message.members = [];
                for (var i = 0; i < object.members.length; ++i) {
                    if (typeof object.members[i] !== "object")
                        throw TypeError(".CMsgClientMMSLobbyData.members: object expected");
                    message.members[i] = $root.CMsgClientMMSLobbyData.Member.fromObject(object.members[i]);
                }
            }
            if (object.lobby_cellid != null)
                message.lobby_cellid = object.lobby_cellid >>> 0;
            if (object.owner_should_accept_changes != null)
                message.owner_should_accept_changes = Boolean(object.owner_should_accept_changes);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSLobbyData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSLobbyData
         * @static
         * @param {CMsgClientMMSLobbyData} message CMsgClientMMSLobbyData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSLobbyData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.members = [];
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.num_members = 0;
                object.max_members = 0;
                object.lobby_type = 0;
                object.lobby_flags = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_owner = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_owner = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.metadata = "";
                else {
                    object.metadata = [];
                    if (options.bytes !== Array)
                        object.metadata = $util.newBuffer(object.metadata);
                }
                object.lobby_cellid = 0;
                object.owner_should_accept_changes = false;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.num_members != null && message.hasOwnProperty("num_members"))
                object.num_members = message.num_members;
            if (message.max_members != null && message.hasOwnProperty("max_members"))
                object.max_members = message.max_members;
            if (message.lobby_type != null && message.hasOwnProperty("lobby_type"))
                object.lobby_type = message.lobby_type;
            if (message.lobby_flags != null && message.hasOwnProperty("lobby_flags"))
                object.lobby_flags = message.lobby_flags;
            if (message.steam_id_owner != null && message.hasOwnProperty("steam_id_owner"))
                if (typeof message.steam_id_owner === "number")
                    object.steam_id_owner = options.longs === String ? String(message.steam_id_owner) : message.steam_id_owner;
                else
                    object.steam_id_owner = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_owner) : options.longs === Number ? new $util.LongBits(message.steam_id_owner.low >>> 0, message.steam_id_owner.high >>> 0).toNumber() : message.steam_id_owner;
            if (message.metadata != null && message.hasOwnProperty("metadata"))
                object.metadata = options.bytes === String ? $util.base64.encode(message.metadata, 0, message.metadata.length) : options.bytes === Array ? Array.prototype.slice.call(message.metadata) : message.metadata;
            if (message.members && message.members.length) {
                object.members = [];
                for (var j = 0; j < message.members.length; ++j)
                    object.members[j] = $root.CMsgClientMMSLobbyData.Member.toObject(message.members[j], options);
            }
            if (message.lobby_cellid != null && message.hasOwnProperty("lobby_cellid"))
                object.lobby_cellid = message.lobby_cellid;
            if (message.owner_should_accept_changes != null && message.hasOwnProperty("owner_should_accept_changes"))
                object.owner_should_accept_changes = message.owner_should_accept_changes;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSLobbyData to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSLobbyData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSLobbyData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientMMSLobbyData.Member = (function() {
    
            /**
             * Properties of a Member.
             * @memberof CMsgClientMMSLobbyData
             * @interface IMember
             * @property {number|Long|null} [steam_id] Member steam_id
             * @property {string|null} [persona_name] Member persona_name
             * @property {Uint8Array|null} [metadata] Member metadata
             */
    
            /**
             * Constructs a new Member.
             * @memberof CMsgClientMMSLobbyData
             * @classdesc Represents a Member.
             * @implements IMember
             * @constructor
             * @param {CMsgClientMMSLobbyData.IMember=} [properties] Properties to set
             */
            function Member(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Member steam_id.
             * @member {number|Long} steam_id
             * @memberof CMsgClientMMSLobbyData.Member
             * @instance
             */
            Member.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Member persona_name.
             * @member {string} persona_name
             * @memberof CMsgClientMMSLobbyData.Member
             * @instance
             */
            Member.prototype.persona_name = "";
    
            /**
             * Member metadata.
             * @member {Uint8Array} metadata
             * @memberof CMsgClientMMSLobbyData.Member
             * @instance
             */
            Member.prototype.metadata = $util.newBuffer([]);
    
            /**
             * Creates a new Member instance using the specified properties.
             * @function create
             * @memberof CMsgClientMMSLobbyData.Member
             * @static
             * @param {CMsgClientMMSLobbyData.IMember=} [properties] Properties to set
             * @returns {CMsgClientMMSLobbyData.Member} Member instance
             */
            Member.create = function create(properties) {
                return new Member(properties);
            };
    
            /**
             * Encodes the specified Member message. Does not implicitly {@link CMsgClientMMSLobbyData.Member.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientMMSLobbyData.Member
             * @static
             * @param {CMsgClientMMSLobbyData.IMember} message Member message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Member.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
                if (message.persona_name != null && Object.hasOwnProperty.call(message, "persona_name"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.persona_name);
                if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.metadata);
                return writer;
            };
    
            /**
             * Encodes the specified Member message, length delimited. Does not implicitly {@link CMsgClientMMSLobbyData.Member.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientMMSLobbyData.Member
             * @static
             * @param {CMsgClientMMSLobbyData.IMember} message Member message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Member.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Member message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientMMSLobbyData.Member
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientMMSLobbyData.Member} Member
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Member.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSLobbyData.Member();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.steam_id = reader.fixed64();
                        break;
                    case 2:
                        message.persona_name = reader.string();
                        break;
                    case 3:
                        message.metadata = reader.bytes();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Member message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientMMSLobbyData.Member
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientMMSLobbyData.Member} Member
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Member.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Member message.
             * @function verify
             * @memberof CMsgClientMMSLobbyData.Member
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Member.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                    if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                        return "steam_id: integer|Long expected";
                if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                    if (!$util.isString(message.persona_name))
                        return "persona_name: string expected";
                if (message.metadata != null && message.hasOwnProperty("metadata"))
                    if (!(message.metadata && typeof message.metadata.length === "number" || $util.isString(message.metadata)))
                        return "metadata: buffer expected";
                return null;
            };
    
            /**
             * Creates a Member message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientMMSLobbyData.Member
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientMMSLobbyData.Member} Member
             */
            Member.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientMMSLobbyData.Member)
                    return object;
                var message = new $root.CMsgClientMMSLobbyData.Member();
                if (object.steam_id != null)
                    if ($util.Long)
                        (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                    else if (typeof object.steam_id === "string")
                        message.steam_id = parseInt(object.steam_id, 10);
                    else if (typeof object.steam_id === "number")
                        message.steam_id = object.steam_id;
                    else if (typeof object.steam_id === "object")
                        message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
                if (object.persona_name != null)
                    message.persona_name = String(object.persona_name);
                if (object.metadata != null)
                    if (typeof object.metadata === "string")
                        $util.base64.decode(object.metadata, message.metadata = $util.newBuffer($util.base64.length(object.metadata)), 0);
                    else if (object.metadata.length)
                        message.metadata = object.metadata;
                return message;
            };
    
            /**
             * Creates a plain object from a Member message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientMMSLobbyData.Member
             * @static
             * @param {CMsgClientMMSLobbyData.Member} message Member
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Member.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steam_id = options.longs === String ? "0" : 0;
                    object.persona_name = "";
                    if (options.bytes === String)
                        object.metadata = "";
                    else {
                        object.metadata = [];
                        if (options.bytes !== Array)
                            object.metadata = $util.newBuffer(object.metadata);
                    }
                }
                if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                    if (typeof message.steam_id === "number")
                        object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                    else
                        object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
                if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                    object.persona_name = message.persona_name;
                if (message.metadata != null && message.hasOwnProperty("metadata"))
                    object.metadata = options.bytes === String ? $util.base64.encode(message.metadata, 0, message.metadata.length) : options.bytes === Array ? Array.prototype.slice.call(message.metadata) : message.metadata;
                return object;
            };
    
            /**
             * Converts this Member to JSON.
             * @function toJSON
             * @memberof CMsgClientMMSLobbyData.Member
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Member.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Member;
        })();
    
        return CMsgClientMMSLobbyData;
    })();
    
    $root.CMsgClientMMSSendLobbyChatMsg = (function() {
    
        /**
         * Properties of a CMsgClientMMSSendLobbyChatMsg.
         * @exports ICMsgClientMMSSendLobbyChatMsg
         * @interface ICMsgClientMMSSendLobbyChatMsg
         * @property {number|null} [app_id] CMsgClientMMSSendLobbyChatMsg app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSSendLobbyChatMsg steam_id_lobby
         * @property {number|Long|null} [steam_id_target] CMsgClientMMSSendLobbyChatMsg steam_id_target
         * @property {Uint8Array|null} [lobby_message] CMsgClientMMSSendLobbyChatMsg lobby_message
         */
    
        /**
         * Constructs a new CMsgClientMMSSendLobbyChatMsg.
         * @exports CMsgClientMMSSendLobbyChatMsg
         * @classdesc Represents a CMsgClientMMSSendLobbyChatMsg.
         * @implements ICMsgClientMMSSendLobbyChatMsg
         * @constructor
         * @param {ICMsgClientMMSSendLobbyChatMsg=} [properties] Properties to set
         */
        function CMsgClientMMSSendLobbyChatMsg(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSSendLobbyChatMsg app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @instance
         */
        CMsgClientMMSSendLobbyChatMsg.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSSendLobbyChatMsg steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @instance
         */
        CMsgClientMMSSendLobbyChatMsg.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSendLobbyChatMsg steam_id_target.
         * @member {number|Long} steam_id_target
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @instance
         */
        CMsgClientMMSSendLobbyChatMsg.prototype.steam_id_target = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSendLobbyChatMsg lobby_message.
         * @member {Uint8Array} lobby_message
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @instance
         */
        CMsgClientMMSSendLobbyChatMsg.prototype.lobby_message = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientMMSSendLobbyChatMsg instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @static
         * @param {ICMsgClientMMSSendLobbyChatMsg=} [properties] Properties to set
         * @returns {CMsgClientMMSSendLobbyChatMsg} CMsgClientMMSSendLobbyChatMsg instance
         */
        CMsgClientMMSSendLobbyChatMsg.create = function create(properties) {
            return new CMsgClientMMSSendLobbyChatMsg(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSSendLobbyChatMsg message. Does not implicitly {@link CMsgClientMMSSendLobbyChatMsg.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @static
         * @param {ICMsgClientMMSSendLobbyChatMsg} message CMsgClientMMSSendLobbyChatMsg message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSendLobbyChatMsg.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_target != null && Object.hasOwnProperty.call(message, "steam_id_target"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_target);
            if (message.lobby_message != null && Object.hasOwnProperty.call(message, "lobby_message"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.lobby_message);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSSendLobbyChatMsg message, length delimited. Does not implicitly {@link CMsgClientMMSSendLobbyChatMsg.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @static
         * @param {ICMsgClientMMSSendLobbyChatMsg} message CMsgClientMMSSendLobbyChatMsg message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSendLobbyChatMsg.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSSendLobbyChatMsg message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSSendLobbyChatMsg} CMsgClientMMSSendLobbyChatMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSendLobbyChatMsg.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSSendLobbyChatMsg();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_target = reader.fixed64();
                    break;
                case 4:
                    message.lobby_message = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSSendLobbyChatMsg message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSSendLobbyChatMsg} CMsgClientMMSSendLobbyChatMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSendLobbyChatMsg.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSSendLobbyChatMsg message.
         * @function verify
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSSendLobbyChatMsg.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_target != null && message.hasOwnProperty("steam_id_target"))
                if (!$util.isInteger(message.steam_id_target) && !(message.steam_id_target && $util.isInteger(message.steam_id_target.low) && $util.isInteger(message.steam_id_target.high)))
                    return "steam_id_target: integer|Long expected";
            if (message.lobby_message != null && message.hasOwnProperty("lobby_message"))
                if (!(message.lobby_message && typeof message.lobby_message.length === "number" || $util.isString(message.lobby_message)))
                    return "lobby_message: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSSendLobbyChatMsg message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSSendLobbyChatMsg} CMsgClientMMSSendLobbyChatMsg
         */
        CMsgClientMMSSendLobbyChatMsg.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSSendLobbyChatMsg)
                return object;
            var message = new $root.CMsgClientMMSSendLobbyChatMsg();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_target != null)
                if ($util.Long)
                    (message.steam_id_target = $util.Long.fromValue(object.steam_id_target)).unsigned = false;
                else if (typeof object.steam_id_target === "string")
                    message.steam_id_target = parseInt(object.steam_id_target, 10);
                else if (typeof object.steam_id_target === "number")
                    message.steam_id_target = object.steam_id_target;
                else if (typeof object.steam_id_target === "object")
                    message.steam_id_target = new $util.LongBits(object.steam_id_target.low >>> 0, object.steam_id_target.high >>> 0).toNumber();
            if (object.lobby_message != null)
                if (typeof object.lobby_message === "string")
                    $util.base64.decode(object.lobby_message, message.lobby_message = $util.newBuffer($util.base64.length(object.lobby_message)), 0);
                else if (object.lobby_message.length)
                    message.lobby_message = object.lobby_message;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSSendLobbyChatMsg message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @static
         * @param {CMsgClientMMSSendLobbyChatMsg} message CMsgClientMMSSendLobbyChatMsg
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSSendLobbyChatMsg.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_target = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_target = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.lobby_message = "";
                else {
                    object.lobby_message = [];
                    if (options.bytes !== Array)
                        object.lobby_message = $util.newBuffer(object.lobby_message);
                }
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_target != null && message.hasOwnProperty("steam_id_target"))
                if (typeof message.steam_id_target === "number")
                    object.steam_id_target = options.longs === String ? String(message.steam_id_target) : message.steam_id_target;
                else
                    object.steam_id_target = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_target) : options.longs === Number ? new $util.LongBits(message.steam_id_target.low >>> 0, message.steam_id_target.high >>> 0).toNumber() : message.steam_id_target;
            if (message.lobby_message != null && message.hasOwnProperty("lobby_message"))
                object.lobby_message = options.bytes === String ? $util.base64.encode(message.lobby_message, 0, message.lobby_message.length) : options.bytes === Array ? Array.prototype.slice.call(message.lobby_message) : message.lobby_message;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSSendLobbyChatMsg to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSSendLobbyChatMsg
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSSendLobbyChatMsg.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSSendLobbyChatMsg;
    })();
    
    $root.CMsgClientMMSLobbyChatMsg = (function() {
    
        /**
         * Properties of a CMsgClientMMSLobbyChatMsg.
         * @exports ICMsgClientMMSLobbyChatMsg
         * @interface ICMsgClientMMSLobbyChatMsg
         * @property {number|null} [app_id] CMsgClientMMSLobbyChatMsg app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSLobbyChatMsg steam_id_lobby
         * @property {number|Long|null} [steam_id_sender] CMsgClientMMSLobbyChatMsg steam_id_sender
         * @property {Uint8Array|null} [lobby_message] CMsgClientMMSLobbyChatMsg lobby_message
         */
    
        /**
         * Constructs a new CMsgClientMMSLobbyChatMsg.
         * @exports CMsgClientMMSLobbyChatMsg
         * @classdesc Represents a CMsgClientMMSLobbyChatMsg.
         * @implements ICMsgClientMMSLobbyChatMsg
         * @constructor
         * @param {ICMsgClientMMSLobbyChatMsg=} [properties] Properties to set
         */
        function CMsgClientMMSLobbyChatMsg(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSLobbyChatMsg app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSLobbyChatMsg
         * @instance
         */
        CMsgClientMMSLobbyChatMsg.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSLobbyChatMsg steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSLobbyChatMsg
         * @instance
         */
        CMsgClientMMSLobbyChatMsg.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSLobbyChatMsg steam_id_sender.
         * @member {number|Long} steam_id_sender
         * @memberof CMsgClientMMSLobbyChatMsg
         * @instance
         */
        CMsgClientMMSLobbyChatMsg.prototype.steam_id_sender = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSLobbyChatMsg lobby_message.
         * @member {Uint8Array} lobby_message
         * @memberof CMsgClientMMSLobbyChatMsg
         * @instance
         */
        CMsgClientMMSLobbyChatMsg.prototype.lobby_message = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientMMSLobbyChatMsg instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSLobbyChatMsg
         * @static
         * @param {ICMsgClientMMSLobbyChatMsg=} [properties] Properties to set
         * @returns {CMsgClientMMSLobbyChatMsg} CMsgClientMMSLobbyChatMsg instance
         */
        CMsgClientMMSLobbyChatMsg.create = function create(properties) {
            return new CMsgClientMMSLobbyChatMsg(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSLobbyChatMsg message. Does not implicitly {@link CMsgClientMMSLobbyChatMsg.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSLobbyChatMsg
         * @static
         * @param {ICMsgClientMMSLobbyChatMsg} message CMsgClientMMSLobbyChatMsg message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLobbyChatMsg.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_sender != null && Object.hasOwnProperty.call(message, "steam_id_sender"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_sender);
            if (message.lobby_message != null && Object.hasOwnProperty.call(message, "lobby_message"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.lobby_message);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSLobbyChatMsg message, length delimited. Does not implicitly {@link CMsgClientMMSLobbyChatMsg.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSLobbyChatMsg
         * @static
         * @param {ICMsgClientMMSLobbyChatMsg} message CMsgClientMMSLobbyChatMsg message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLobbyChatMsg.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSLobbyChatMsg message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSLobbyChatMsg
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSLobbyChatMsg} CMsgClientMMSLobbyChatMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLobbyChatMsg.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSLobbyChatMsg();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_sender = reader.fixed64();
                    break;
                case 4:
                    message.lobby_message = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSLobbyChatMsg message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSLobbyChatMsg
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSLobbyChatMsg} CMsgClientMMSLobbyChatMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLobbyChatMsg.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSLobbyChatMsg message.
         * @function verify
         * @memberof CMsgClientMMSLobbyChatMsg
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSLobbyChatMsg.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_sender != null && message.hasOwnProperty("steam_id_sender"))
                if (!$util.isInteger(message.steam_id_sender) && !(message.steam_id_sender && $util.isInteger(message.steam_id_sender.low) && $util.isInteger(message.steam_id_sender.high)))
                    return "steam_id_sender: integer|Long expected";
            if (message.lobby_message != null && message.hasOwnProperty("lobby_message"))
                if (!(message.lobby_message && typeof message.lobby_message.length === "number" || $util.isString(message.lobby_message)))
                    return "lobby_message: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSLobbyChatMsg message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSLobbyChatMsg
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSLobbyChatMsg} CMsgClientMMSLobbyChatMsg
         */
        CMsgClientMMSLobbyChatMsg.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSLobbyChatMsg)
                return object;
            var message = new $root.CMsgClientMMSLobbyChatMsg();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_sender != null)
                if ($util.Long)
                    (message.steam_id_sender = $util.Long.fromValue(object.steam_id_sender)).unsigned = false;
                else if (typeof object.steam_id_sender === "string")
                    message.steam_id_sender = parseInt(object.steam_id_sender, 10);
                else if (typeof object.steam_id_sender === "number")
                    message.steam_id_sender = object.steam_id_sender;
                else if (typeof object.steam_id_sender === "object")
                    message.steam_id_sender = new $util.LongBits(object.steam_id_sender.low >>> 0, object.steam_id_sender.high >>> 0).toNumber();
            if (object.lobby_message != null)
                if (typeof object.lobby_message === "string")
                    $util.base64.decode(object.lobby_message, message.lobby_message = $util.newBuffer($util.base64.length(object.lobby_message)), 0);
                else if (object.lobby_message.length)
                    message.lobby_message = object.lobby_message;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSLobbyChatMsg message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSLobbyChatMsg
         * @static
         * @param {CMsgClientMMSLobbyChatMsg} message CMsgClientMMSLobbyChatMsg
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSLobbyChatMsg.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_sender = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_sender = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.lobby_message = "";
                else {
                    object.lobby_message = [];
                    if (options.bytes !== Array)
                        object.lobby_message = $util.newBuffer(object.lobby_message);
                }
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_sender != null && message.hasOwnProperty("steam_id_sender"))
                if (typeof message.steam_id_sender === "number")
                    object.steam_id_sender = options.longs === String ? String(message.steam_id_sender) : message.steam_id_sender;
                else
                    object.steam_id_sender = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_sender) : options.longs === Number ? new $util.LongBits(message.steam_id_sender.low >>> 0, message.steam_id_sender.high >>> 0).toNumber() : message.steam_id_sender;
            if (message.lobby_message != null && message.hasOwnProperty("lobby_message"))
                object.lobby_message = options.bytes === String ? $util.base64.encode(message.lobby_message, 0, message.lobby_message.length) : options.bytes === Array ? Array.prototype.slice.call(message.lobby_message) : message.lobby_message;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSLobbyChatMsg to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSLobbyChatMsg
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSLobbyChatMsg.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSLobbyChatMsg;
    })();
    
    $root.CMsgClientMMSSetLobbyOwner = (function() {
    
        /**
         * Properties of a CMsgClientMMSSetLobbyOwner.
         * @exports ICMsgClientMMSSetLobbyOwner
         * @interface ICMsgClientMMSSetLobbyOwner
         * @property {number|null} [app_id] CMsgClientMMSSetLobbyOwner app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSSetLobbyOwner steam_id_lobby
         * @property {number|Long|null} [steam_id_new_owner] CMsgClientMMSSetLobbyOwner steam_id_new_owner
         */
    
        /**
         * Constructs a new CMsgClientMMSSetLobbyOwner.
         * @exports CMsgClientMMSSetLobbyOwner
         * @classdesc Represents a CMsgClientMMSSetLobbyOwner.
         * @implements ICMsgClientMMSSetLobbyOwner
         * @constructor
         * @param {ICMsgClientMMSSetLobbyOwner=} [properties] Properties to set
         */
        function CMsgClientMMSSetLobbyOwner(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSSetLobbyOwner app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSSetLobbyOwner
         * @instance
         */
        CMsgClientMMSSetLobbyOwner.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSSetLobbyOwner steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSSetLobbyOwner
         * @instance
         */
        CMsgClientMMSSetLobbyOwner.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSetLobbyOwner steam_id_new_owner.
         * @member {number|Long} steam_id_new_owner
         * @memberof CMsgClientMMSSetLobbyOwner
         * @instance
         */
        CMsgClientMMSSetLobbyOwner.prototype.steam_id_new_owner = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientMMSSetLobbyOwner instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSSetLobbyOwner
         * @static
         * @param {ICMsgClientMMSSetLobbyOwner=} [properties] Properties to set
         * @returns {CMsgClientMMSSetLobbyOwner} CMsgClientMMSSetLobbyOwner instance
         */
        CMsgClientMMSSetLobbyOwner.create = function create(properties) {
            return new CMsgClientMMSSetLobbyOwner(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyOwner message. Does not implicitly {@link CMsgClientMMSSetLobbyOwner.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSSetLobbyOwner
         * @static
         * @param {ICMsgClientMMSSetLobbyOwner} message CMsgClientMMSSetLobbyOwner message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyOwner.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_new_owner != null && Object.hasOwnProperty.call(message, "steam_id_new_owner"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_new_owner);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyOwner message, length delimited. Does not implicitly {@link CMsgClientMMSSetLobbyOwner.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSSetLobbyOwner
         * @static
         * @param {ICMsgClientMMSSetLobbyOwner} message CMsgClientMMSSetLobbyOwner message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyOwner.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyOwner message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSSetLobbyOwner
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSSetLobbyOwner} CMsgClientMMSSetLobbyOwner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyOwner.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSSetLobbyOwner();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_new_owner = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyOwner message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSSetLobbyOwner
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSSetLobbyOwner} CMsgClientMMSSetLobbyOwner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyOwner.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSSetLobbyOwner message.
         * @function verify
         * @memberof CMsgClientMMSSetLobbyOwner
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSSetLobbyOwner.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_new_owner != null && message.hasOwnProperty("steam_id_new_owner"))
                if (!$util.isInteger(message.steam_id_new_owner) && !(message.steam_id_new_owner && $util.isInteger(message.steam_id_new_owner.low) && $util.isInteger(message.steam_id_new_owner.high)))
                    return "steam_id_new_owner: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSSetLobbyOwner message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSSetLobbyOwner
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSSetLobbyOwner} CMsgClientMMSSetLobbyOwner
         */
        CMsgClientMMSSetLobbyOwner.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSSetLobbyOwner)
                return object;
            var message = new $root.CMsgClientMMSSetLobbyOwner();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_new_owner != null)
                if ($util.Long)
                    (message.steam_id_new_owner = $util.Long.fromValue(object.steam_id_new_owner)).unsigned = false;
                else if (typeof object.steam_id_new_owner === "string")
                    message.steam_id_new_owner = parseInt(object.steam_id_new_owner, 10);
                else if (typeof object.steam_id_new_owner === "number")
                    message.steam_id_new_owner = object.steam_id_new_owner;
                else if (typeof object.steam_id_new_owner === "object")
                    message.steam_id_new_owner = new $util.LongBits(object.steam_id_new_owner.low >>> 0, object.steam_id_new_owner.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSSetLobbyOwner message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSSetLobbyOwner
         * @static
         * @param {CMsgClientMMSSetLobbyOwner} message CMsgClientMMSSetLobbyOwner
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSSetLobbyOwner.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_new_owner = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_new_owner = options.longs === String ? "0" : 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_new_owner != null && message.hasOwnProperty("steam_id_new_owner"))
                if (typeof message.steam_id_new_owner === "number")
                    object.steam_id_new_owner = options.longs === String ? String(message.steam_id_new_owner) : message.steam_id_new_owner;
                else
                    object.steam_id_new_owner = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_new_owner) : options.longs === Number ? new $util.LongBits(message.steam_id_new_owner.low >>> 0, message.steam_id_new_owner.high >>> 0).toNumber() : message.steam_id_new_owner;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSSetLobbyOwner to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSSetLobbyOwner
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSSetLobbyOwner.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSSetLobbyOwner;
    })();
    
    $root.CMsgClientMMSSetLobbyOwnerResponse = (function() {
    
        /**
         * Properties of a CMsgClientMMSSetLobbyOwnerResponse.
         * @exports ICMsgClientMMSSetLobbyOwnerResponse
         * @interface ICMsgClientMMSSetLobbyOwnerResponse
         * @property {number|null} [app_id] CMsgClientMMSSetLobbyOwnerResponse app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSSetLobbyOwnerResponse steam_id_lobby
         * @property {number|null} [eresult] CMsgClientMMSSetLobbyOwnerResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientMMSSetLobbyOwnerResponse.
         * @exports CMsgClientMMSSetLobbyOwnerResponse
         * @classdesc Represents a CMsgClientMMSSetLobbyOwnerResponse.
         * @implements ICMsgClientMMSSetLobbyOwnerResponse
         * @constructor
         * @param {ICMsgClientMMSSetLobbyOwnerResponse=} [properties] Properties to set
         */
        function CMsgClientMMSSetLobbyOwnerResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSSetLobbyOwnerResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @instance
         */
        CMsgClientMMSSetLobbyOwnerResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSSetLobbyOwnerResponse steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @instance
         */
        CMsgClientMMSSetLobbyOwnerResponse.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSetLobbyOwnerResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @instance
         */
        CMsgClientMMSSetLobbyOwnerResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgClientMMSSetLobbyOwnerResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @static
         * @param {ICMsgClientMMSSetLobbyOwnerResponse=} [properties] Properties to set
         * @returns {CMsgClientMMSSetLobbyOwnerResponse} CMsgClientMMSSetLobbyOwnerResponse instance
         */
        CMsgClientMMSSetLobbyOwnerResponse.create = function create(properties) {
            return new CMsgClientMMSSetLobbyOwnerResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyOwnerResponse message. Does not implicitly {@link CMsgClientMMSSetLobbyOwnerResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @static
         * @param {ICMsgClientMMSSetLobbyOwnerResponse} message CMsgClientMMSSetLobbyOwnerResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyOwnerResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyOwnerResponse message, length delimited. Does not implicitly {@link CMsgClientMMSSetLobbyOwnerResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @static
         * @param {ICMsgClientMMSSetLobbyOwnerResponse} message CMsgClientMMSSetLobbyOwnerResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyOwnerResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyOwnerResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSSetLobbyOwnerResponse} CMsgClientMMSSetLobbyOwnerResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyOwnerResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSSetLobbyOwnerResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyOwnerResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSSetLobbyOwnerResponse} CMsgClientMMSSetLobbyOwnerResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyOwnerResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSSetLobbyOwnerResponse message.
         * @function verify
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSSetLobbyOwnerResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSSetLobbyOwnerResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSSetLobbyOwnerResponse} CMsgClientMMSSetLobbyOwnerResponse
         */
        CMsgClientMMSSetLobbyOwnerResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSSetLobbyOwnerResponse)
                return object;
            var message = new $root.CMsgClientMMSSetLobbyOwnerResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSSetLobbyOwnerResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @static
         * @param {CMsgClientMMSSetLobbyOwnerResponse} message CMsgClientMMSSetLobbyOwnerResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSSetLobbyOwnerResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.eresult = 2;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSSetLobbyOwnerResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSSetLobbyOwnerResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSSetLobbyOwnerResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSSetLobbyOwnerResponse;
    })();
    
    $root.CMsgClientMMSSetLobbyLinked = (function() {
    
        /**
         * Properties of a CMsgClientMMSSetLobbyLinked.
         * @exports ICMsgClientMMSSetLobbyLinked
         * @interface ICMsgClientMMSSetLobbyLinked
         * @property {number|null} [app_id] CMsgClientMMSSetLobbyLinked app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSSetLobbyLinked steam_id_lobby
         * @property {number|Long|null} [steam_id_lobby2] CMsgClientMMSSetLobbyLinked steam_id_lobby2
         */
    
        /**
         * Constructs a new CMsgClientMMSSetLobbyLinked.
         * @exports CMsgClientMMSSetLobbyLinked
         * @classdesc Represents a CMsgClientMMSSetLobbyLinked.
         * @implements ICMsgClientMMSSetLobbyLinked
         * @constructor
         * @param {ICMsgClientMMSSetLobbyLinked=} [properties] Properties to set
         */
        function CMsgClientMMSSetLobbyLinked(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSSetLobbyLinked app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSSetLobbyLinked
         * @instance
         */
        CMsgClientMMSSetLobbyLinked.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSSetLobbyLinked steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSSetLobbyLinked
         * @instance
         */
        CMsgClientMMSSetLobbyLinked.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSetLobbyLinked steam_id_lobby2.
         * @member {number|Long} steam_id_lobby2
         * @memberof CMsgClientMMSSetLobbyLinked
         * @instance
         */
        CMsgClientMMSSetLobbyLinked.prototype.steam_id_lobby2 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientMMSSetLobbyLinked instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSSetLobbyLinked
         * @static
         * @param {ICMsgClientMMSSetLobbyLinked=} [properties] Properties to set
         * @returns {CMsgClientMMSSetLobbyLinked} CMsgClientMMSSetLobbyLinked instance
         */
        CMsgClientMMSSetLobbyLinked.create = function create(properties) {
            return new CMsgClientMMSSetLobbyLinked(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyLinked message. Does not implicitly {@link CMsgClientMMSSetLobbyLinked.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSSetLobbyLinked
         * @static
         * @param {ICMsgClientMMSSetLobbyLinked} message CMsgClientMMSSetLobbyLinked message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyLinked.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_lobby2 != null && Object.hasOwnProperty.call(message, "steam_id_lobby2"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_lobby2);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyLinked message, length delimited. Does not implicitly {@link CMsgClientMMSSetLobbyLinked.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSSetLobbyLinked
         * @static
         * @param {ICMsgClientMMSSetLobbyLinked} message CMsgClientMMSSetLobbyLinked message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyLinked.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyLinked message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSSetLobbyLinked
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSSetLobbyLinked} CMsgClientMMSSetLobbyLinked
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyLinked.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSSetLobbyLinked();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_lobby2 = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyLinked message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSSetLobbyLinked
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSSetLobbyLinked} CMsgClientMMSSetLobbyLinked
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyLinked.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSSetLobbyLinked message.
         * @function verify
         * @memberof CMsgClientMMSSetLobbyLinked
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSSetLobbyLinked.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_lobby2 != null && message.hasOwnProperty("steam_id_lobby2"))
                if (!$util.isInteger(message.steam_id_lobby2) && !(message.steam_id_lobby2 && $util.isInteger(message.steam_id_lobby2.low) && $util.isInteger(message.steam_id_lobby2.high)))
                    return "steam_id_lobby2: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSSetLobbyLinked message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSSetLobbyLinked
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSSetLobbyLinked} CMsgClientMMSSetLobbyLinked
         */
        CMsgClientMMSSetLobbyLinked.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSSetLobbyLinked)
                return object;
            var message = new $root.CMsgClientMMSSetLobbyLinked();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_lobby2 != null)
                if ($util.Long)
                    (message.steam_id_lobby2 = $util.Long.fromValue(object.steam_id_lobby2)).unsigned = false;
                else if (typeof object.steam_id_lobby2 === "string")
                    message.steam_id_lobby2 = parseInt(object.steam_id_lobby2, 10);
                else if (typeof object.steam_id_lobby2 === "number")
                    message.steam_id_lobby2 = object.steam_id_lobby2;
                else if (typeof object.steam_id_lobby2 === "object")
                    message.steam_id_lobby2 = new $util.LongBits(object.steam_id_lobby2.low >>> 0, object.steam_id_lobby2.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSSetLobbyLinked message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSSetLobbyLinked
         * @static
         * @param {CMsgClientMMSSetLobbyLinked} message CMsgClientMMSSetLobbyLinked
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSSetLobbyLinked.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby2 = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby2 = options.longs === String ? "0" : 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_lobby2 != null && message.hasOwnProperty("steam_id_lobby2"))
                if (typeof message.steam_id_lobby2 === "number")
                    object.steam_id_lobby2 = options.longs === String ? String(message.steam_id_lobby2) : message.steam_id_lobby2;
                else
                    object.steam_id_lobby2 = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby2) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby2.low >>> 0, message.steam_id_lobby2.high >>> 0).toNumber() : message.steam_id_lobby2;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSSetLobbyLinked to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSSetLobbyLinked
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSSetLobbyLinked.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSSetLobbyLinked;
    })();
    
    $root.CMsgClientMMSSetLobbyGameServer = (function() {
    
        /**
         * Properties of a CMsgClientMMSSetLobbyGameServer.
         * @exports ICMsgClientMMSSetLobbyGameServer
         * @interface ICMsgClientMMSSetLobbyGameServer
         * @property {number|null} [app_id] CMsgClientMMSSetLobbyGameServer app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSSetLobbyGameServer steam_id_lobby
         * @property {number|null} [deprecated_game_server_ip] CMsgClientMMSSetLobbyGameServer deprecated_game_server_ip
         * @property {number|null} [game_server_port] CMsgClientMMSSetLobbyGameServer game_server_port
         * @property {number|Long|null} [game_server_steam_id] CMsgClientMMSSetLobbyGameServer game_server_steam_id
         * @property {ICMsgIPAddress|null} [game_server_ip] CMsgClientMMSSetLobbyGameServer game_server_ip
         */
    
        /**
         * Constructs a new CMsgClientMMSSetLobbyGameServer.
         * @exports CMsgClientMMSSetLobbyGameServer
         * @classdesc Represents a CMsgClientMMSSetLobbyGameServer.
         * @implements ICMsgClientMMSSetLobbyGameServer
         * @constructor
         * @param {ICMsgClientMMSSetLobbyGameServer=} [properties] Properties to set
         */
        function CMsgClientMMSSetLobbyGameServer(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSSetLobbyGameServer app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @instance
         */
        CMsgClientMMSSetLobbyGameServer.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSSetLobbyGameServer steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @instance
         */
        CMsgClientMMSSetLobbyGameServer.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSetLobbyGameServer deprecated_game_server_ip.
         * @member {number} deprecated_game_server_ip
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @instance
         */
        CMsgClientMMSSetLobbyGameServer.prototype.deprecated_game_server_ip = 0;
    
        /**
         * CMsgClientMMSSetLobbyGameServer game_server_port.
         * @member {number} game_server_port
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @instance
         */
        CMsgClientMMSSetLobbyGameServer.prototype.game_server_port = 0;
    
        /**
         * CMsgClientMMSSetLobbyGameServer game_server_steam_id.
         * @member {number|Long} game_server_steam_id
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @instance
         */
        CMsgClientMMSSetLobbyGameServer.prototype.game_server_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSSetLobbyGameServer game_server_ip.
         * @member {ICMsgIPAddress|null|undefined} game_server_ip
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @instance
         */
        CMsgClientMMSSetLobbyGameServer.prototype.game_server_ip = null;
    
        /**
         * Creates a new CMsgClientMMSSetLobbyGameServer instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @static
         * @param {ICMsgClientMMSSetLobbyGameServer=} [properties] Properties to set
         * @returns {CMsgClientMMSSetLobbyGameServer} CMsgClientMMSSetLobbyGameServer instance
         */
        CMsgClientMMSSetLobbyGameServer.create = function create(properties) {
            return new CMsgClientMMSSetLobbyGameServer(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyGameServer message. Does not implicitly {@link CMsgClientMMSSetLobbyGameServer.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @static
         * @param {ICMsgClientMMSSetLobbyGameServer} message CMsgClientMMSSetLobbyGameServer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyGameServer.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.deprecated_game_server_ip != null && Object.hasOwnProperty.call(message, "deprecated_game_server_ip"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.deprecated_game_server_ip);
            if (message.game_server_port != null && Object.hasOwnProperty.call(message, "game_server_port"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.game_server_port);
            if (message.game_server_steam_id != null && Object.hasOwnProperty.call(message, "game_server_steam_id"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.game_server_steam_id);
            if (message.game_server_ip != null && Object.hasOwnProperty.call(message, "game_server_ip"))
                $root.CMsgIPAddress.encode(message.game_server_ip, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSSetLobbyGameServer message, length delimited. Does not implicitly {@link CMsgClientMMSSetLobbyGameServer.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @static
         * @param {ICMsgClientMMSSetLobbyGameServer} message CMsgClientMMSSetLobbyGameServer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSSetLobbyGameServer.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyGameServer message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSSetLobbyGameServer} CMsgClientMMSSetLobbyGameServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyGameServer.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSSetLobbyGameServer();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.deprecated_game_server_ip = reader.uint32();
                    break;
                case 4:
                    message.game_server_port = reader.uint32();
                    break;
                case 5:
                    message.game_server_steam_id = reader.fixed64();
                    break;
                case 6:
                    message.game_server_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSSetLobbyGameServer message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSSetLobbyGameServer} CMsgClientMMSSetLobbyGameServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSSetLobbyGameServer.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSSetLobbyGameServer message.
         * @function verify
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSSetLobbyGameServer.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.deprecated_game_server_ip != null && message.hasOwnProperty("deprecated_game_server_ip"))
                if (!$util.isInteger(message.deprecated_game_server_ip))
                    return "deprecated_game_server_ip: integer expected";
            if (message.game_server_port != null && message.hasOwnProperty("game_server_port"))
                if (!$util.isInteger(message.game_server_port))
                    return "game_server_port: integer expected";
            if (message.game_server_steam_id != null && message.hasOwnProperty("game_server_steam_id"))
                if (!$util.isInteger(message.game_server_steam_id) && !(message.game_server_steam_id && $util.isInteger(message.game_server_steam_id.low) && $util.isInteger(message.game_server_steam_id.high)))
                    return "game_server_steam_id: integer|Long expected";
            if (message.game_server_ip != null && message.hasOwnProperty("game_server_ip")) {
                var error = $root.CMsgIPAddress.verify(message.game_server_ip);
                if (error)
                    return "game_server_ip." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSSetLobbyGameServer message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSSetLobbyGameServer} CMsgClientMMSSetLobbyGameServer
         */
        CMsgClientMMSSetLobbyGameServer.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSSetLobbyGameServer)
                return object;
            var message = new $root.CMsgClientMMSSetLobbyGameServer();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.deprecated_game_server_ip != null)
                message.deprecated_game_server_ip = object.deprecated_game_server_ip >>> 0;
            if (object.game_server_port != null)
                message.game_server_port = object.game_server_port >>> 0;
            if (object.game_server_steam_id != null)
                if ($util.Long)
                    (message.game_server_steam_id = $util.Long.fromValue(object.game_server_steam_id)).unsigned = false;
                else if (typeof object.game_server_steam_id === "string")
                    message.game_server_steam_id = parseInt(object.game_server_steam_id, 10);
                else if (typeof object.game_server_steam_id === "number")
                    message.game_server_steam_id = object.game_server_steam_id;
                else if (typeof object.game_server_steam_id === "object")
                    message.game_server_steam_id = new $util.LongBits(object.game_server_steam_id.low >>> 0, object.game_server_steam_id.high >>> 0).toNumber();
            if (object.game_server_ip != null) {
                if (typeof object.game_server_ip !== "object")
                    throw TypeError(".CMsgClientMMSSetLobbyGameServer.game_server_ip: object expected");
                message.game_server_ip = $root.CMsgIPAddress.fromObject(object.game_server_ip);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSSetLobbyGameServer message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @static
         * @param {CMsgClientMMSSetLobbyGameServer} message CMsgClientMMSSetLobbyGameServer
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSSetLobbyGameServer.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.deprecated_game_server_ip = 0;
                object.game_server_port = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_server_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_server_steam_id = options.longs === String ? "0" : 0;
                object.game_server_ip = null;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.deprecated_game_server_ip != null && message.hasOwnProperty("deprecated_game_server_ip"))
                object.deprecated_game_server_ip = message.deprecated_game_server_ip;
            if (message.game_server_port != null && message.hasOwnProperty("game_server_port"))
                object.game_server_port = message.game_server_port;
            if (message.game_server_steam_id != null && message.hasOwnProperty("game_server_steam_id"))
                if (typeof message.game_server_steam_id === "number")
                    object.game_server_steam_id = options.longs === String ? String(message.game_server_steam_id) : message.game_server_steam_id;
                else
                    object.game_server_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_server_steam_id) : options.longs === Number ? new $util.LongBits(message.game_server_steam_id.low >>> 0, message.game_server_steam_id.high >>> 0).toNumber() : message.game_server_steam_id;
            if (message.game_server_ip != null && message.hasOwnProperty("game_server_ip"))
                object.game_server_ip = $root.CMsgIPAddress.toObject(message.game_server_ip, options);
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSSetLobbyGameServer to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSSetLobbyGameServer
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSSetLobbyGameServer.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSSetLobbyGameServer;
    })();
    
    $root.CMsgClientMMSLobbyGameServerSet = (function() {
    
        /**
         * Properties of a CMsgClientMMSLobbyGameServerSet.
         * @exports ICMsgClientMMSLobbyGameServerSet
         * @interface ICMsgClientMMSLobbyGameServerSet
         * @property {number|null} [app_id] CMsgClientMMSLobbyGameServerSet app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSLobbyGameServerSet steam_id_lobby
         * @property {number|null} [deprecated_game_server_ip] CMsgClientMMSLobbyGameServerSet deprecated_game_server_ip
         * @property {number|null} [game_server_port] CMsgClientMMSLobbyGameServerSet game_server_port
         * @property {number|Long|null} [game_server_steam_id] CMsgClientMMSLobbyGameServerSet game_server_steam_id
         * @property {ICMsgIPAddress|null} [game_server_ip] CMsgClientMMSLobbyGameServerSet game_server_ip
         */
    
        /**
         * Constructs a new CMsgClientMMSLobbyGameServerSet.
         * @exports CMsgClientMMSLobbyGameServerSet
         * @classdesc Represents a CMsgClientMMSLobbyGameServerSet.
         * @implements ICMsgClientMMSLobbyGameServerSet
         * @constructor
         * @param {ICMsgClientMMSLobbyGameServerSet=} [properties] Properties to set
         */
        function CMsgClientMMSLobbyGameServerSet(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSLobbyGameServerSet app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @instance
         */
        CMsgClientMMSLobbyGameServerSet.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSLobbyGameServerSet steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @instance
         */
        CMsgClientMMSLobbyGameServerSet.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSLobbyGameServerSet deprecated_game_server_ip.
         * @member {number} deprecated_game_server_ip
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @instance
         */
        CMsgClientMMSLobbyGameServerSet.prototype.deprecated_game_server_ip = 0;
    
        /**
         * CMsgClientMMSLobbyGameServerSet game_server_port.
         * @member {number} game_server_port
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @instance
         */
        CMsgClientMMSLobbyGameServerSet.prototype.game_server_port = 0;
    
        /**
         * CMsgClientMMSLobbyGameServerSet game_server_steam_id.
         * @member {number|Long} game_server_steam_id
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @instance
         */
        CMsgClientMMSLobbyGameServerSet.prototype.game_server_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSLobbyGameServerSet game_server_ip.
         * @member {ICMsgIPAddress|null|undefined} game_server_ip
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @instance
         */
        CMsgClientMMSLobbyGameServerSet.prototype.game_server_ip = null;
    
        /**
         * Creates a new CMsgClientMMSLobbyGameServerSet instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @static
         * @param {ICMsgClientMMSLobbyGameServerSet=} [properties] Properties to set
         * @returns {CMsgClientMMSLobbyGameServerSet} CMsgClientMMSLobbyGameServerSet instance
         */
        CMsgClientMMSLobbyGameServerSet.create = function create(properties) {
            return new CMsgClientMMSLobbyGameServerSet(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSLobbyGameServerSet message. Does not implicitly {@link CMsgClientMMSLobbyGameServerSet.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @static
         * @param {ICMsgClientMMSLobbyGameServerSet} message CMsgClientMMSLobbyGameServerSet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLobbyGameServerSet.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.deprecated_game_server_ip != null && Object.hasOwnProperty.call(message, "deprecated_game_server_ip"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.deprecated_game_server_ip);
            if (message.game_server_port != null && Object.hasOwnProperty.call(message, "game_server_port"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.game_server_port);
            if (message.game_server_steam_id != null && Object.hasOwnProperty.call(message, "game_server_steam_id"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.game_server_steam_id);
            if (message.game_server_ip != null && Object.hasOwnProperty.call(message, "game_server_ip"))
                $root.CMsgIPAddress.encode(message.game_server_ip, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSLobbyGameServerSet message, length delimited. Does not implicitly {@link CMsgClientMMSLobbyGameServerSet.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @static
         * @param {ICMsgClientMMSLobbyGameServerSet} message CMsgClientMMSLobbyGameServerSet message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSLobbyGameServerSet.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSLobbyGameServerSet message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSLobbyGameServerSet} CMsgClientMMSLobbyGameServerSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLobbyGameServerSet.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSLobbyGameServerSet();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.deprecated_game_server_ip = reader.uint32();
                    break;
                case 4:
                    message.game_server_port = reader.uint32();
                    break;
                case 5:
                    message.game_server_steam_id = reader.fixed64();
                    break;
                case 6:
                    message.game_server_ip = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSLobbyGameServerSet message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSLobbyGameServerSet} CMsgClientMMSLobbyGameServerSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSLobbyGameServerSet.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSLobbyGameServerSet message.
         * @function verify
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSLobbyGameServerSet.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.deprecated_game_server_ip != null && message.hasOwnProperty("deprecated_game_server_ip"))
                if (!$util.isInteger(message.deprecated_game_server_ip))
                    return "deprecated_game_server_ip: integer expected";
            if (message.game_server_port != null && message.hasOwnProperty("game_server_port"))
                if (!$util.isInteger(message.game_server_port))
                    return "game_server_port: integer expected";
            if (message.game_server_steam_id != null && message.hasOwnProperty("game_server_steam_id"))
                if (!$util.isInteger(message.game_server_steam_id) && !(message.game_server_steam_id && $util.isInteger(message.game_server_steam_id.low) && $util.isInteger(message.game_server_steam_id.high)))
                    return "game_server_steam_id: integer|Long expected";
            if (message.game_server_ip != null && message.hasOwnProperty("game_server_ip")) {
                var error = $root.CMsgIPAddress.verify(message.game_server_ip);
                if (error)
                    return "game_server_ip." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSLobbyGameServerSet message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSLobbyGameServerSet} CMsgClientMMSLobbyGameServerSet
         */
        CMsgClientMMSLobbyGameServerSet.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSLobbyGameServerSet)
                return object;
            var message = new $root.CMsgClientMMSLobbyGameServerSet();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.deprecated_game_server_ip != null)
                message.deprecated_game_server_ip = object.deprecated_game_server_ip >>> 0;
            if (object.game_server_port != null)
                message.game_server_port = object.game_server_port >>> 0;
            if (object.game_server_steam_id != null)
                if ($util.Long)
                    (message.game_server_steam_id = $util.Long.fromValue(object.game_server_steam_id)).unsigned = false;
                else if (typeof object.game_server_steam_id === "string")
                    message.game_server_steam_id = parseInt(object.game_server_steam_id, 10);
                else if (typeof object.game_server_steam_id === "number")
                    message.game_server_steam_id = object.game_server_steam_id;
                else if (typeof object.game_server_steam_id === "object")
                    message.game_server_steam_id = new $util.LongBits(object.game_server_steam_id.low >>> 0, object.game_server_steam_id.high >>> 0).toNumber();
            if (object.game_server_ip != null) {
                if (typeof object.game_server_ip !== "object")
                    throw TypeError(".CMsgClientMMSLobbyGameServerSet.game_server_ip: object expected");
                message.game_server_ip = $root.CMsgIPAddress.fromObject(object.game_server_ip);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSLobbyGameServerSet message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @static
         * @param {CMsgClientMMSLobbyGameServerSet} message CMsgClientMMSLobbyGameServerSet
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSLobbyGameServerSet.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.deprecated_game_server_ip = 0;
                object.game_server_port = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_server_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_server_steam_id = options.longs === String ? "0" : 0;
                object.game_server_ip = null;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.deprecated_game_server_ip != null && message.hasOwnProperty("deprecated_game_server_ip"))
                object.deprecated_game_server_ip = message.deprecated_game_server_ip;
            if (message.game_server_port != null && message.hasOwnProperty("game_server_port"))
                object.game_server_port = message.game_server_port;
            if (message.game_server_steam_id != null && message.hasOwnProperty("game_server_steam_id"))
                if (typeof message.game_server_steam_id === "number")
                    object.game_server_steam_id = options.longs === String ? String(message.game_server_steam_id) : message.game_server_steam_id;
                else
                    object.game_server_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_server_steam_id) : options.longs === Number ? new $util.LongBits(message.game_server_steam_id.low >>> 0, message.game_server_steam_id.high >>> 0).toNumber() : message.game_server_steam_id;
            if (message.game_server_ip != null && message.hasOwnProperty("game_server_ip"))
                object.game_server_ip = $root.CMsgIPAddress.toObject(message.game_server_ip, options);
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSLobbyGameServerSet to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSLobbyGameServerSet
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSLobbyGameServerSet.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSLobbyGameServerSet;
    })();
    
    $root.CMsgClientMMSUserJoinedLobby = (function() {
    
        /**
         * Properties of a CMsgClientMMSUserJoinedLobby.
         * @exports ICMsgClientMMSUserJoinedLobby
         * @interface ICMsgClientMMSUserJoinedLobby
         * @property {number|null} [app_id] CMsgClientMMSUserJoinedLobby app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSUserJoinedLobby steam_id_lobby
         * @property {number|Long|null} [steam_id_user] CMsgClientMMSUserJoinedLobby steam_id_user
         * @property {string|null} [persona_name] CMsgClientMMSUserJoinedLobby persona_name
         */
    
        /**
         * Constructs a new CMsgClientMMSUserJoinedLobby.
         * @exports CMsgClientMMSUserJoinedLobby
         * @classdesc Represents a CMsgClientMMSUserJoinedLobby.
         * @implements ICMsgClientMMSUserJoinedLobby
         * @constructor
         * @param {ICMsgClientMMSUserJoinedLobby=} [properties] Properties to set
         */
        function CMsgClientMMSUserJoinedLobby(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSUserJoinedLobby app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSUserJoinedLobby
         * @instance
         */
        CMsgClientMMSUserJoinedLobby.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSUserJoinedLobby steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSUserJoinedLobby
         * @instance
         */
        CMsgClientMMSUserJoinedLobby.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSUserJoinedLobby steam_id_user.
         * @member {number|Long} steam_id_user
         * @memberof CMsgClientMMSUserJoinedLobby
         * @instance
         */
        CMsgClientMMSUserJoinedLobby.prototype.steam_id_user = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSUserJoinedLobby persona_name.
         * @member {string} persona_name
         * @memberof CMsgClientMMSUserJoinedLobby
         * @instance
         */
        CMsgClientMMSUserJoinedLobby.prototype.persona_name = "";
    
        /**
         * Creates a new CMsgClientMMSUserJoinedLobby instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSUserJoinedLobby
         * @static
         * @param {ICMsgClientMMSUserJoinedLobby=} [properties] Properties to set
         * @returns {CMsgClientMMSUserJoinedLobby} CMsgClientMMSUserJoinedLobby instance
         */
        CMsgClientMMSUserJoinedLobby.create = function create(properties) {
            return new CMsgClientMMSUserJoinedLobby(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSUserJoinedLobby message. Does not implicitly {@link CMsgClientMMSUserJoinedLobby.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSUserJoinedLobby
         * @static
         * @param {ICMsgClientMMSUserJoinedLobby} message CMsgClientMMSUserJoinedLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSUserJoinedLobby.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_user != null && Object.hasOwnProperty.call(message, "steam_id_user"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_user);
            if (message.persona_name != null && Object.hasOwnProperty.call(message, "persona_name"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.persona_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSUserJoinedLobby message, length delimited. Does not implicitly {@link CMsgClientMMSUserJoinedLobby.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSUserJoinedLobby
         * @static
         * @param {ICMsgClientMMSUserJoinedLobby} message CMsgClientMMSUserJoinedLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSUserJoinedLobby.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSUserJoinedLobby message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSUserJoinedLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSUserJoinedLobby} CMsgClientMMSUserJoinedLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSUserJoinedLobby.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSUserJoinedLobby();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_user = reader.fixed64();
                    break;
                case 4:
                    message.persona_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSUserJoinedLobby message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSUserJoinedLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSUserJoinedLobby} CMsgClientMMSUserJoinedLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSUserJoinedLobby.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSUserJoinedLobby message.
         * @function verify
         * @memberof CMsgClientMMSUserJoinedLobby
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSUserJoinedLobby.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_user != null && message.hasOwnProperty("steam_id_user"))
                if (!$util.isInteger(message.steam_id_user) && !(message.steam_id_user && $util.isInteger(message.steam_id_user.low) && $util.isInteger(message.steam_id_user.high)))
                    return "steam_id_user: integer|Long expected";
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                if (!$util.isString(message.persona_name))
                    return "persona_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSUserJoinedLobby message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSUserJoinedLobby
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSUserJoinedLobby} CMsgClientMMSUserJoinedLobby
         */
        CMsgClientMMSUserJoinedLobby.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSUserJoinedLobby)
                return object;
            var message = new $root.CMsgClientMMSUserJoinedLobby();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_user != null)
                if ($util.Long)
                    (message.steam_id_user = $util.Long.fromValue(object.steam_id_user)).unsigned = false;
                else if (typeof object.steam_id_user === "string")
                    message.steam_id_user = parseInt(object.steam_id_user, 10);
                else if (typeof object.steam_id_user === "number")
                    message.steam_id_user = object.steam_id_user;
                else if (typeof object.steam_id_user === "object")
                    message.steam_id_user = new $util.LongBits(object.steam_id_user.low >>> 0, object.steam_id_user.high >>> 0).toNumber();
            if (object.persona_name != null)
                message.persona_name = String(object.persona_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSUserJoinedLobby message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSUserJoinedLobby
         * @static
         * @param {CMsgClientMMSUserJoinedLobby} message CMsgClientMMSUserJoinedLobby
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSUserJoinedLobby.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_user = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_user = options.longs === String ? "0" : 0;
                object.persona_name = "";
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_user != null && message.hasOwnProperty("steam_id_user"))
                if (typeof message.steam_id_user === "number")
                    object.steam_id_user = options.longs === String ? String(message.steam_id_user) : message.steam_id_user;
                else
                    object.steam_id_user = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_user) : options.longs === Number ? new $util.LongBits(message.steam_id_user.low >>> 0, message.steam_id_user.high >>> 0).toNumber() : message.steam_id_user;
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                object.persona_name = message.persona_name;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSUserJoinedLobby to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSUserJoinedLobby
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSUserJoinedLobby.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSUserJoinedLobby;
    })();
    
    $root.CMsgClientMMSUserLeftLobby = (function() {
    
        /**
         * Properties of a CMsgClientMMSUserLeftLobby.
         * @exports ICMsgClientMMSUserLeftLobby
         * @interface ICMsgClientMMSUserLeftLobby
         * @property {number|null} [app_id] CMsgClientMMSUserLeftLobby app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSUserLeftLobby steam_id_lobby
         * @property {number|Long|null} [steam_id_user] CMsgClientMMSUserLeftLobby steam_id_user
         * @property {string|null} [persona_name] CMsgClientMMSUserLeftLobby persona_name
         */
    
        /**
         * Constructs a new CMsgClientMMSUserLeftLobby.
         * @exports CMsgClientMMSUserLeftLobby
         * @classdesc Represents a CMsgClientMMSUserLeftLobby.
         * @implements ICMsgClientMMSUserLeftLobby
         * @constructor
         * @param {ICMsgClientMMSUserLeftLobby=} [properties] Properties to set
         */
        function CMsgClientMMSUserLeftLobby(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSUserLeftLobby app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSUserLeftLobby
         * @instance
         */
        CMsgClientMMSUserLeftLobby.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSUserLeftLobby steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSUserLeftLobby
         * @instance
         */
        CMsgClientMMSUserLeftLobby.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSUserLeftLobby steam_id_user.
         * @member {number|Long} steam_id_user
         * @memberof CMsgClientMMSUserLeftLobby
         * @instance
         */
        CMsgClientMMSUserLeftLobby.prototype.steam_id_user = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSUserLeftLobby persona_name.
         * @member {string} persona_name
         * @memberof CMsgClientMMSUserLeftLobby
         * @instance
         */
        CMsgClientMMSUserLeftLobby.prototype.persona_name = "";
    
        /**
         * Creates a new CMsgClientMMSUserLeftLobby instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSUserLeftLobby
         * @static
         * @param {ICMsgClientMMSUserLeftLobby=} [properties] Properties to set
         * @returns {CMsgClientMMSUserLeftLobby} CMsgClientMMSUserLeftLobby instance
         */
        CMsgClientMMSUserLeftLobby.create = function create(properties) {
            return new CMsgClientMMSUserLeftLobby(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSUserLeftLobby message. Does not implicitly {@link CMsgClientMMSUserLeftLobby.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSUserLeftLobby
         * @static
         * @param {ICMsgClientMMSUserLeftLobby} message CMsgClientMMSUserLeftLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSUserLeftLobby.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_user != null && Object.hasOwnProperty.call(message, "steam_id_user"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_user);
            if (message.persona_name != null && Object.hasOwnProperty.call(message, "persona_name"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.persona_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSUserLeftLobby message, length delimited. Does not implicitly {@link CMsgClientMMSUserLeftLobby.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSUserLeftLobby
         * @static
         * @param {ICMsgClientMMSUserLeftLobby} message CMsgClientMMSUserLeftLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSUserLeftLobby.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSUserLeftLobby message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSUserLeftLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSUserLeftLobby} CMsgClientMMSUserLeftLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSUserLeftLobby.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSUserLeftLobby();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_user = reader.fixed64();
                    break;
                case 4:
                    message.persona_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSUserLeftLobby message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSUserLeftLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSUserLeftLobby} CMsgClientMMSUserLeftLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSUserLeftLobby.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSUserLeftLobby message.
         * @function verify
         * @memberof CMsgClientMMSUserLeftLobby
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSUserLeftLobby.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_user != null && message.hasOwnProperty("steam_id_user"))
                if (!$util.isInteger(message.steam_id_user) && !(message.steam_id_user && $util.isInteger(message.steam_id_user.low) && $util.isInteger(message.steam_id_user.high)))
                    return "steam_id_user: integer|Long expected";
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                if (!$util.isString(message.persona_name))
                    return "persona_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSUserLeftLobby message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSUserLeftLobby
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSUserLeftLobby} CMsgClientMMSUserLeftLobby
         */
        CMsgClientMMSUserLeftLobby.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSUserLeftLobby)
                return object;
            var message = new $root.CMsgClientMMSUserLeftLobby();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_user != null)
                if ($util.Long)
                    (message.steam_id_user = $util.Long.fromValue(object.steam_id_user)).unsigned = false;
                else if (typeof object.steam_id_user === "string")
                    message.steam_id_user = parseInt(object.steam_id_user, 10);
                else if (typeof object.steam_id_user === "number")
                    message.steam_id_user = object.steam_id_user;
                else if (typeof object.steam_id_user === "object")
                    message.steam_id_user = new $util.LongBits(object.steam_id_user.low >>> 0, object.steam_id_user.high >>> 0).toNumber();
            if (object.persona_name != null)
                message.persona_name = String(object.persona_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSUserLeftLobby message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSUserLeftLobby
         * @static
         * @param {CMsgClientMMSUserLeftLobby} message CMsgClientMMSUserLeftLobby
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSUserLeftLobby.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_user = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_user = options.longs === String ? "0" : 0;
                object.persona_name = "";
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_user != null && message.hasOwnProperty("steam_id_user"))
                if (typeof message.steam_id_user === "number")
                    object.steam_id_user = options.longs === String ? String(message.steam_id_user) : message.steam_id_user;
                else
                    object.steam_id_user = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_user) : options.longs === Number ? new $util.LongBits(message.steam_id_user.low >>> 0, message.steam_id_user.high >>> 0).toNumber() : message.steam_id_user;
            if (message.persona_name != null && message.hasOwnProperty("persona_name"))
                object.persona_name = message.persona_name;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSUserLeftLobby to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSUserLeftLobby
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSUserLeftLobby.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSUserLeftLobby;
    })();
    
    $root.CMsgClientMMSInviteToLobby = (function() {
    
        /**
         * Properties of a CMsgClientMMSInviteToLobby.
         * @exports ICMsgClientMMSInviteToLobby
         * @interface ICMsgClientMMSInviteToLobby
         * @property {number|null} [app_id] CMsgClientMMSInviteToLobby app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSInviteToLobby steam_id_lobby
         * @property {number|Long|null} [steam_id_user_invited] CMsgClientMMSInviteToLobby steam_id_user_invited
         */
    
        /**
         * Constructs a new CMsgClientMMSInviteToLobby.
         * @exports CMsgClientMMSInviteToLobby
         * @classdesc Represents a CMsgClientMMSInviteToLobby.
         * @implements ICMsgClientMMSInviteToLobby
         * @constructor
         * @param {ICMsgClientMMSInviteToLobby=} [properties] Properties to set
         */
        function CMsgClientMMSInviteToLobby(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSInviteToLobby app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSInviteToLobby
         * @instance
         */
        CMsgClientMMSInviteToLobby.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSInviteToLobby steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSInviteToLobby
         * @instance
         */
        CMsgClientMMSInviteToLobby.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSInviteToLobby steam_id_user_invited.
         * @member {number|Long} steam_id_user_invited
         * @memberof CMsgClientMMSInviteToLobby
         * @instance
         */
        CMsgClientMMSInviteToLobby.prototype.steam_id_user_invited = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientMMSInviteToLobby instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {ICMsgClientMMSInviteToLobby=} [properties] Properties to set
         * @returns {CMsgClientMMSInviteToLobby} CMsgClientMMSInviteToLobby instance
         */
        CMsgClientMMSInviteToLobby.create = function create(properties) {
            return new CMsgClientMMSInviteToLobby(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSInviteToLobby message. Does not implicitly {@link CMsgClientMMSInviteToLobby.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {ICMsgClientMMSInviteToLobby} message CMsgClientMMSInviteToLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSInviteToLobby.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.steam_id_user_invited != null && Object.hasOwnProperty.call(message, "steam_id_user_invited"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_user_invited);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSInviteToLobby message, length delimited. Does not implicitly {@link CMsgClientMMSInviteToLobby.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {ICMsgClientMMSInviteToLobby} message CMsgClientMMSInviteToLobby message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSInviteToLobby.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSInviteToLobby message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSInviteToLobby} CMsgClientMMSInviteToLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSInviteToLobby.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSInviteToLobby();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_user_invited = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSInviteToLobby message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSInviteToLobby} CMsgClientMMSInviteToLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSInviteToLobby.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSInviteToLobby message.
         * @function verify
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSInviteToLobby.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.steam_id_user_invited != null && message.hasOwnProperty("steam_id_user_invited"))
                if (!$util.isInteger(message.steam_id_user_invited) && !(message.steam_id_user_invited && $util.isInteger(message.steam_id_user_invited.low) && $util.isInteger(message.steam_id_user_invited.high)))
                    return "steam_id_user_invited: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSInviteToLobby message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSInviteToLobby} CMsgClientMMSInviteToLobby
         */
        CMsgClientMMSInviteToLobby.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSInviteToLobby)
                return object;
            var message = new $root.CMsgClientMMSInviteToLobby();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.steam_id_user_invited != null)
                if ($util.Long)
                    (message.steam_id_user_invited = $util.Long.fromValue(object.steam_id_user_invited)).unsigned = false;
                else if (typeof object.steam_id_user_invited === "string")
                    message.steam_id_user_invited = parseInt(object.steam_id_user_invited, 10);
                else if (typeof object.steam_id_user_invited === "number")
                    message.steam_id_user_invited = object.steam_id_user_invited;
                else if (typeof object.steam_id_user_invited === "object")
                    message.steam_id_user_invited = new $util.LongBits(object.steam_id_user_invited.low >>> 0, object.steam_id_user_invited.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSInviteToLobby message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSInviteToLobby
         * @static
         * @param {CMsgClientMMSInviteToLobby} message CMsgClientMMSInviteToLobby
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSInviteToLobby.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_user_invited = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_user_invited = options.longs === String ? "0" : 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.steam_id_user_invited != null && message.hasOwnProperty("steam_id_user_invited"))
                if (typeof message.steam_id_user_invited === "number")
                    object.steam_id_user_invited = options.longs === String ? String(message.steam_id_user_invited) : message.steam_id_user_invited;
                else
                    object.steam_id_user_invited = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_user_invited) : options.longs === Number ? new $util.LongBits(message.steam_id_user_invited.low >>> 0, message.steam_id_user_invited.high >>> 0).toNumber() : message.steam_id_user_invited;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSInviteToLobby to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSInviteToLobby
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSInviteToLobby.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSInviteToLobby;
    })();
    
    $root.CMsgClientMMSGetLobbyStatus = (function() {
    
        /**
         * Properties of a CMsgClientMMSGetLobbyStatus.
         * @exports ICMsgClientMMSGetLobbyStatus
         * @interface ICMsgClientMMSGetLobbyStatus
         * @property {number|null} [app_id] CMsgClientMMSGetLobbyStatus app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSGetLobbyStatus steam_id_lobby
         * @property {boolean|null} [claim_membership] CMsgClientMMSGetLobbyStatus claim_membership
         * @property {boolean|null} [claim_ownership] CMsgClientMMSGetLobbyStatus claim_ownership
         */
    
        /**
         * Constructs a new CMsgClientMMSGetLobbyStatus.
         * @exports CMsgClientMMSGetLobbyStatus
         * @classdesc Represents a CMsgClientMMSGetLobbyStatus.
         * @implements ICMsgClientMMSGetLobbyStatus
         * @constructor
         * @param {ICMsgClientMMSGetLobbyStatus=} [properties] Properties to set
         */
        function CMsgClientMMSGetLobbyStatus(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSGetLobbyStatus app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSGetLobbyStatus
         * @instance
         */
        CMsgClientMMSGetLobbyStatus.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSGetLobbyStatus steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSGetLobbyStatus
         * @instance
         */
        CMsgClientMMSGetLobbyStatus.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSGetLobbyStatus claim_membership.
         * @member {boolean} claim_membership
         * @memberof CMsgClientMMSGetLobbyStatus
         * @instance
         */
        CMsgClientMMSGetLobbyStatus.prototype.claim_membership = false;
    
        /**
         * CMsgClientMMSGetLobbyStatus claim_ownership.
         * @member {boolean} claim_ownership
         * @memberof CMsgClientMMSGetLobbyStatus
         * @instance
         */
        CMsgClientMMSGetLobbyStatus.prototype.claim_ownership = false;
    
        /**
         * Creates a new CMsgClientMMSGetLobbyStatus instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSGetLobbyStatus
         * @static
         * @param {ICMsgClientMMSGetLobbyStatus=} [properties] Properties to set
         * @returns {CMsgClientMMSGetLobbyStatus} CMsgClientMMSGetLobbyStatus instance
         */
        CMsgClientMMSGetLobbyStatus.create = function create(properties) {
            return new CMsgClientMMSGetLobbyStatus(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyStatus message. Does not implicitly {@link CMsgClientMMSGetLobbyStatus.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSGetLobbyStatus
         * @static
         * @param {ICMsgClientMMSGetLobbyStatus} message CMsgClientMMSGetLobbyStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyStatus.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.claim_membership != null && Object.hasOwnProperty.call(message, "claim_membership"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.claim_membership);
            if (message.claim_ownership != null && Object.hasOwnProperty.call(message, "claim_ownership"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.claim_ownership);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyStatus message, length delimited. Does not implicitly {@link CMsgClientMMSGetLobbyStatus.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSGetLobbyStatus
         * @static
         * @param {ICMsgClientMMSGetLobbyStatus} message CMsgClientMMSGetLobbyStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyStatus.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyStatus message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSGetLobbyStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSGetLobbyStatus} CMsgClientMMSGetLobbyStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyStatus.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSGetLobbyStatus();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.claim_membership = reader.bool();
                    break;
                case 4:
                    message.claim_ownership = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyStatus message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSGetLobbyStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSGetLobbyStatus} CMsgClientMMSGetLobbyStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyStatus.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSGetLobbyStatus message.
         * @function verify
         * @memberof CMsgClientMMSGetLobbyStatus
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSGetLobbyStatus.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.claim_membership != null && message.hasOwnProperty("claim_membership"))
                if (typeof message.claim_membership !== "boolean")
                    return "claim_membership: boolean expected";
            if (message.claim_ownership != null && message.hasOwnProperty("claim_ownership"))
                if (typeof message.claim_ownership !== "boolean")
                    return "claim_ownership: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSGetLobbyStatus message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSGetLobbyStatus
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSGetLobbyStatus} CMsgClientMMSGetLobbyStatus
         */
        CMsgClientMMSGetLobbyStatus.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSGetLobbyStatus)
                return object;
            var message = new $root.CMsgClientMMSGetLobbyStatus();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            if (object.claim_membership != null)
                message.claim_membership = Boolean(object.claim_membership);
            if (object.claim_ownership != null)
                message.claim_ownership = Boolean(object.claim_ownership);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSGetLobbyStatus message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSGetLobbyStatus
         * @static
         * @param {CMsgClientMMSGetLobbyStatus} message CMsgClientMMSGetLobbyStatus
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSGetLobbyStatus.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.claim_membership = false;
                object.claim_ownership = false;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.claim_membership != null && message.hasOwnProperty("claim_membership"))
                object.claim_membership = message.claim_membership;
            if (message.claim_ownership != null && message.hasOwnProperty("claim_ownership"))
                object.claim_ownership = message.claim_ownership;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSGetLobbyStatus to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSGetLobbyStatus
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSGetLobbyStatus.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSGetLobbyStatus;
    })();
    
    $root.CMsgClientMMSGetLobbyStatusResponse = (function() {
    
        /**
         * Properties of a CMsgClientMMSGetLobbyStatusResponse.
         * @exports ICMsgClientMMSGetLobbyStatusResponse
         * @interface ICMsgClientMMSGetLobbyStatusResponse
         * @property {number|null} [app_id] CMsgClientMMSGetLobbyStatusResponse app_id
         * @property {number|Long|null} [steam_id_lobby] CMsgClientMMSGetLobbyStatusResponse steam_id_lobby
         * @property {EMMSLobbyStatus|null} [lobby_status] CMsgClientMMSGetLobbyStatusResponse lobby_status
         */
    
        /**
         * Constructs a new CMsgClientMMSGetLobbyStatusResponse.
         * @exports CMsgClientMMSGetLobbyStatusResponse
         * @classdesc Represents a CMsgClientMMSGetLobbyStatusResponse.
         * @implements ICMsgClientMMSGetLobbyStatusResponse
         * @constructor
         * @param {ICMsgClientMMSGetLobbyStatusResponse=} [properties] Properties to set
         */
        function CMsgClientMMSGetLobbyStatusResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientMMSGetLobbyStatusResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @instance
         */
        CMsgClientMMSGetLobbyStatusResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientMMSGetLobbyStatusResponse steam_id_lobby.
         * @member {number|Long} steam_id_lobby
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @instance
         */
        CMsgClientMMSGetLobbyStatusResponse.prototype.steam_id_lobby = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientMMSGetLobbyStatusResponse lobby_status.
         * @member {EMMSLobbyStatus} lobby_status
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @instance
         */
        CMsgClientMMSGetLobbyStatusResponse.prototype.lobby_status = 0;
    
        /**
         * Creates a new CMsgClientMMSGetLobbyStatusResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @static
         * @param {ICMsgClientMMSGetLobbyStatusResponse=} [properties] Properties to set
         * @returns {CMsgClientMMSGetLobbyStatusResponse} CMsgClientMMSGetLobbyStatusResponse instance
         */
        CMsgClientMMSGetLobbyStatusResponse.create = function create(properties) {
            return new CMsgClientMMSGetLobbyStatusResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyStatusResponse message. Does not implicitly {@link CMsgClientMMSGetLobbyStatusResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @static
         * @param {ICMsgClientMMSGetLobbyStatusResponse} message CMsgClientMMSGetLobbyStatusResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyStatusResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.steam_id_lobby != null && Object.hasOwnProperty.call(message, "steam_id_lobby"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_lobby);
            if (message.lobby_status != null && Object.hasOwnProperty.call(message, "lobby_status"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.lobby_status);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientMMSGetLobbyStatusResponse message, length delimited. Does not implicitly {@link CMsgClientMMSGetLobbyStatusResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @static
         * @param {ICMsgClientMMSGetLobbyStatusResponse} message CMsgClientMMSGetLobbyStatusResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientMMSGetLobbyStatusResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyStatusResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientMMSGetLobbyStatusResponse} CMsgClientMMSGetLobbyStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyStatusResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientMMSGetLobbyStatusResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.steam_id_lobby = reader.fixed64();
                    break;
                case 3:
                    message.lobby_status = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientMMSGetLobbyStatusResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientMMSGetLobbyStatusResponse} CMsgClientMMSGetLobbyStatusResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientMMSGetLobbyStatusResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientMMSGetLobbyStatusResponse message.
         * @function verify
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientMMSGetLobbyStatusResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (!$util.isInteger(message.steam_id_lobby) && !(message.steam_id_lobby && $util.isInteger(message.steam_id_lobby.low) && $util.isInteger(message.steam_id_lobby.high)))
                    return "steam_id_lobby: integer|Long expected";
            if (message.lobby_status != null && message.hasOwnProperty("lobby_status"))
                switch (message.lobby_status) {
                default:
                    return "lobby_status: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                    break;
                }
            return null;
        };
    
        /**
         * Creates a CMsgClientMMSGetLobbyStatusResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientMMSGetLobbyStatusResponse} CMsgClientMMSGetLobbyStatusResponse
         */
        CMsgClientMMSGetLobbyStatusResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientMMSGetLobbyStatusResponse)
                return object;
            var message = new $root.CMsgClientMMSGetLobbyStatusResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.steam_id_lobby != null)
                if ($util.Long)
                    (message.steam_id_lobby = $util.Long.fromValue(object.steam_id_lobby)).unsigned = false;
                else if (typeof object.steam_id_lobby === "string")
                    message.steam_id_lobby = parseInt(object.steam_id_lobby, 10);
                else if (typeof object.steam_id_lobby === "number")
                    message.steam_id_lobby = object.steam_id_lobby;
                else if (typeof object.steam_id_lobby === "object")
                    message.steam_id_lobby = new $util.LongBits(object.steam_id_lobby.low >>> 0, object.steam_id_lobby.high >>> 0).toNumber();
            switch (object.lobby_status) {
            case "k_EMMSLobbyStatusInvalid":
            case 0:
                message.lobby_status = 0;
                break;
            case "k_EMMSLobbyStatusExists":
            case 1:
                message.lobby_status = 1;
                break;
            case "k_EMMSLobbyStatusDoesNotExist":
            case 2:
                message.lobby_status = 2;
                break;
            case "k_EMMSLobbyStatusNotAMember":
            case 3:
                message.lobby_status = 3;
                break;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientMMSGetLobbyStatusResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @static
         * @param {CMsgClientMMSGetLobbyStatusResponse} message CMsgClientMMSGetLobbyStatusResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientMMSGetLobbyStatusResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_lobby = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_lobby = options.longs === String ? "0" : 0;
                object.lobby_status = options.enums === String ? "k_EMMSLobbyStatusInvalid" : 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.steam_id_lobby != null && message.hasOwnProperty("steam_id_lobby"))
                if (typeof message.steam_id_lobby === "number")
                    object.steam_id_lobby = options.longs === String ? String(message.steam_id_lobby) : message.steam_id_lobby;
                else
                    object.steam_id_lobby = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_lobby) : options.longs === Number ? new $util.LongBits(message.steam_id_lobby.low >>> 0, message.steam_id_lobby.high >>> 0).toNumber() : message.steam_id_lobby;
            if (message.lobby_status != null && message.hasOwnProperty("lobby_status"))
                object.lobby_status = options.enums === String ? $root.EMMSLobbyStatus[message.lobby_status] : message.lobby_status;
            return object;
        };
    
        /**
         * Converts this CMsgClientMMSGetLobbyStatusResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientMMSGetLobbyStatusResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientMMSGetLobbyStatusResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientMMSGetLobbyStatusResponse;
    })();
    
    $root.CMsgClientInviteToGame = (function() {
    
        /**
         * Properties of a CMsgClientInviteToGame.
         * @exports ICMsgClientInviteToGame
         * @interface ICMsgClientInviteToGame
         * @property {number|Long|null} [steam_id_dest] CMsgClientInviteToGame steam_id_dest
         * @property {number|Long|null} [steam_id_src] CMsgClientInviteToGame steam_id_src
         * @property {string|null} [connect_string] CMsgClientInviteToGame connect_string
         * @property {string|null} [remote_play] CMsgClientInviteToGame remote_play
         */
    
        /**
         * Constructs a new CMsgClientInviteToGame.
         * @exports CMsgClientInviteToGame
         * @classdesc Represents a CMsgClientInviteToGame.
         * @implements ICMsgClientInviteToGame
         * @constructor
         * @param {ICMsgClientInviteToGame=} [properties] Properties to set
         */
        function CMsgClientInviteToGame(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientInviteToGame steam_id_dest.
         * @member {number|Long} steam_id_dest
         * @memberof CMsgClientInviteToGame
         * @instance
         */
        CMsgClientInviteToGame.prototype.steam_id_dest = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientInviteToGame steam_id_src.
         * @member {number|Long} steam_id_src
         * @memberof CMsgClientInviteToGame
         * @instance
         */
        CMsgClientInviteToGame.prototype.steam_id_src = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientInviteToGame connect_string.
         * @member {string} connect_string
         * @memberof CMsgClientInviteToGame
         * @instance
         */
        CMsgClientInviteToGame.prototype.connect_string = "";
    
        /**
         * CMsgClientInviteToGame remote_play.
         * @member {string} remote_play
         * @memberof CMsgClientInviteToGame
         * @instance
         */
        CMsgClientInviteToGame.prototype.remote_play = "";
    
        /**
         * Creates a new CMsgClientInviteToGame instance using the specified properties.
         * @function create
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {ICMsgClientInviteToGame=} [properties] Properties to set
         * @returns {CMsgClientInviteToGame} CMsgClientInviteToGame instance
         */
        CMsgClientInviteToGame.create = function create(properties) {
            return new CMsgClientInviteToGame(properties);
        };
    
        /**
         * Encodes the specified CMsgClientInviteToGame message. Does not implicitly {@link CMsgClientInviteToGame.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {ICMsgClientInviteToGame} message CMsgClientInviteToGame message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientInviteToGame.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id_dest != null && Object.hasOwnProperty.call(message, "steam_id_dest"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id_dest);
            if (message.steam_id_src != null && Object.hasOwnProperty.call(message, "steam_id_src"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_src);
            if (message.connect_string != null && Object.hasOwnProperty.call(message, "connect_string"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.connect_string);
            if (message.remote_play != null && Object.hasOwnProperty.call(message, "remote_play"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.remote_play);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientInviteToGame message, length delimited. Does not implicitly {@link CMsgClientInviteToGame.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {ICMsgClientInviteToGame} message CMsgClientInviteToGame message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientInviteToGame.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientInviteToGame message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientInviteToGame} CMsgClientInviteToGame
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientInviteToGame.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientInviteToGame();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id_dest = reader.fixed64();
                    break;
                case 2:
                    message.steam_id_src = reader.fixed64();
                    break;
                case 3:
                    message.connect_string = reader.string();
                    break;
                case 4:
                    message.remote_play = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientInviteToGame message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientInviteToGame} CMsgClientInviteToGame
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientInviteToGame.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientInviteToGame message.
         * @function verify
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientInviteToGame.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                if (!$util.isInteger(message.steam_id_dest) && !(message.steam_id_dest && $util.isInteger(message.steam_id_dest.low) && $util.isInteger(message.steam_id_dest.high)))
                    return "steam_id_dest: integer|Long expected";
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                if (!$util.isInteger(message.steam_id_src) && !(message.steam_id_src && $util.isInteger(message.steam_id_src.low) && $util.isInteger(message.steam_id_src.high)))
                    return "steam_id_src: integer|Long expected";
            if (message.connect_string != null && message.hasOwnProperty("connect_string"))
                if (!$util.isString(message.connect_string))
                    return "connect_string: string expected";
            if (message.remote_play != null && message.hasOwnProperty("remote_play"))
                if (!$util.isString(message.remote_play))
                    return "remote_play: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientInviteToGame message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientInviteToGame} CMsgClientInviteToGame
         */
        CMsgClientInviteToGame.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientInviteToGame)
                return object;
            var message = new $root.CMsgClientInviteToGame();
            if (object.steam_id_dest != null)
                if ($util.Long)
                    (message.steam_id_dest = $util.Long.fromValue(object.steam_id_dest)).unsigned = false;
                else if (typeof object.steam_id_dest === "string")
                    message.steam_id_dest = parseInt(object.steam_id_dest, 10);
                else if (typeof object.steam_id_dest === "number")
                    message.steam_id_dest = object.steam_id_dest;
                else if (typeof object.steam_id_dest === "object")
                    message.steam_id_dest = new $util.LongBits(object.steam_id_dest.low >>> 0, object.steam_id_dest.high >>> 0).toNumber();
            if (object.steam_id_src != null)
                if ($util.Long)
                    (message.steam_id_src = $util.Long.fromValue(object.steam_id_src)).unsigned = false;
                else if (typeof object.steam_id_src === "string")
                    message.steam_id_src = parseInt(object.steam_id_src, 10);
                else if (typeof object.steam_id_src === "number")
                    message.steam_id_src = object.steam_id_src;
                else if (typeof object.steam_id_src === "object")
                    message.steam_id_src = new $util.LongBits(object.steam_id_src.low >>> 0, object.steam_id_src.high >>> 0).toNumber();
            if (object.connect_string != null)
                message.connect_string = String(object.connect_string);
            if (object.remote_play != null)
                message.remote_play = String(object.remote_play);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientInviteToGame message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientInviteToGame
         * @static
         * @param {CMsgClientInviteToGame} message CMsgClientInviteToGame
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientInviteToGame.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_dest = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_dest = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_src = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_src = options.longs === String ? "0" : 0;
                object.connect_string = "";
                object.remote_play = "";
            }
            if (message.steam_id_dest != null && message.hasOwnProperty("steam_id_dest"))
                if (typeof message.steam_id_dest === "number")
                    object.steam_id_dest = options.longs === String ? String(message.steam_id_dest) : message.steam_id_dest;
                else
                    object.steam_id_dest = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_dest) : options.longs === Number ? new $util.LongBits(message.steam_id_dest.low >>> 0, message.steam_id_dest.high >>> 0).toNumber() : message.steam_id_dest;
            if (message.steam_id_src != null && message.hasOwnProperty("steam_id_src"))
                if (typeof message.steam_id_src === "number")
                    object.steam_id_src = options.longs === String ? String(message.steam_id_src) : message.steam_id_src;
                else
                    object.steam_id_src = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_src) : options.longs === Number ? new $util.LongBits(message.steam_id_src.low >>> 0, message.steam_id_src.high >>> 0).toNumber() : message.steam_id_src;
            if (message.connect_string != null && message.hasOwnProperty("connect_string"))
                object.connect_string = message.connect_string;
            if (message.remote_play != null && message.hasOwnProperty("remote_play"))
                object.remote_play = message.remote_play;
            return object;
        };
    
        /**
         * Converts this CMsgClientInviteToGame to JSON.
         * @function toJSON
         * @memberof CMsgClientInviteToGame
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientInviteToGame.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientInviteToGame;
    })();
    
    $root.CMsgClientChatInvite = (function() {
    
        /**
         * Properties of a CMsgClientChatInvite.
         * @exports ICMsgClientChatInvite
         * @interface ICMsgClientChatInvite
         * @property {number|Long|null} [steam_id_invited] CMsgClientChatInvite steam_id_invited
         * @property {number|Long|null} [steam_id_chat] CMsgClientChatInvite steam_id_chat
         * @property {number|Long|null} [steam_id_patron] CMsgClientChatInvite steam_id_patron
         * @property {number|null} [chatroom_type] CMsgClientChatInvite chatroom_type
         * @property {number|Long|null} [steam_id_friend_chat] CMsgClientChatInvite steam_id_friend_chat
         * @property {string|null} [chat_name] CMsgClientChatInvite chat_name
         * @property {number|Long|null} [game_id] CMsgClientChatInvite game_id
         */
    
        /**
         * Constructs a new CMsgClientChatInvite.
         * @exports CMsgClientChatInvite
         * @classdesc Represents a CMsgClientChatInvite.
         * @implements ICMsgClientChatInvite
         * @constructor
         * @param {ICMsgClientChatInvite=} [properties] Properties to set
         */
        function CMsgClientChatInvite(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientChatInvite steam_id_invited.
         * @member {number|Long} steam_id_invited
         * @memberof CMsgClientChatInvite
         * @instance
         */
        CMsgClientChatInvite.prototype.steam_id_invited = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientChatInvite steam_id_chat.
         * @member {number|Long} steam_id_chat
         * @memberof CMsgClientChatInvite
         * @instance
         */
        CMsgClientChatInvite.prototype.steam_id_chat = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientChatInvite steam_id_patron.
         * @member {number|Long} steam_id_patron
         * @memberof CMsgClientChatInvite
         * @instance
         */
        CMsgClientChatInvite.prototype.steam_id_patron = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientChatInvite chatroom_type.
         * @member {number} chatroom_type
         * @memberof CMsgClientChatInvite
         * @instance
         */
        CMsgClientChatInvite.prototype.chatroom_type = 0;
    
        /**
         * CMsgClientChatInvite steam_id_friend_chat.
         * @member {number|Long} steam_id_friend_chat
         * @memberof CMsgClientChatInvite
         * @instance
         */
        CMsgClientChatInvite.prototype.steam_id_friend_chat = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientChatInvite chat_name.
         * @member {string} chat_name
         * @memberof CMsgClientChatInvite
         * @instance
         */
        CMsgClientChatInvite.prototype.chat_name = "";
    
        /**
         * CMsgClientChatInvite game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientChatInvite
         * @instance
         */
        CMsgClientChatInvite.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientChatInvite instance using the specified properties.
         * @function create
         * @memberof CMsgClientChatInvite
         * @static
         * @param {ICMsgClientChatInvite=} [properties] Properties to set
         * @returns {CMsgClientChatInvite} CMsgClientChatInvite instance
         */
        CMsgClientChatInvite.create = function create(properties) {
            return new CMsgClientChatInvite(properties);
        };
    
        /**
         * Encodes the specified CMsgClientChatInvite message. Does not implicitly {@link CMsgClientChatInvite.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientChatInvite
         * @static
         * @param {ICMsgClientChatInvite} message CMsgClientChatInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChatInvite.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id_invited != null && Object.hasOwnProperty.call(message, "steam_id_invited"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id_invited);
            if (message.steam_id_chat != null && Object.hasOwnProperty.call(message, "steam_id_chat"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id_chat);
            if (message.steam_id_patron != null && Object.hasOwnProperty.call(message, "steam_id_patron"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steam_id_patron);
            if (message.chatroom_type != null && Object.hasOwnProperty.call(message, "chatroom_type"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.chatroom_type);
            if (message.steam_id_friend_chat != null && Object.hasOwnProperty.call(message, "steam_id_friend_chat"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.steam_id_friend_chat);
            if (message.chat_name != null && Object.hasOwnProperty.call(message, "chat_name"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.chat_name);
            if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                writer.uint32(/* id 7, wireType 1 =*/57).fixed64(message.game_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientChatInvite message, length delimited. Does not implicitly {@link CMsgClientChatInvite.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientChatInvite
         * @static
         * @param {ICMsgClientChatInvite} message CMsgClientChatInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientChatInvite.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientChatInvite message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientChatInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientChatInvite} CMsgClientChatInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChatInvite.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientChatInvite();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id_invited = reader.fixed64();
                    break;
                case 2:
                    message.steam_id_chat = reader.fixed64();
                    break;
                case 3:
                    message.steam_id_patron = reader.fixed64();
                    break;
                case 4:
                    message.chatroom_type = reader.int32();
                    break;
                case 5:
                    message.steam_id_friend_chat = reader.fixed64();
                    break;
                case 6:
                    message.chat_name = reader.string();
                    break;
                case 7:
                    message.game_id = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientChatInvite message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientChatInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientChatInvite} CMsgClientChatInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientChatInvite.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientChatInvite message.
         * @function verify
         * @memberof CMsgClientChatInvite
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientChatInvite.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id_invited != null && message.hasOwnProperty("steam_id_invited"))
                if (!$util.isInteger(message.steam_id_invited) && !(message.steam_id_invited && $util.isInteger(message.steam_id_invited.low) && $util.isInteger(message.steam_id_invited.high)))
                    return "steam_id_invited: integer|Long expected";
            if (message.steam_id_chat != null && message.hasOwnProperty("steam_id_chat"))
                if (!$util.isInteger(message.steam_id_chat) && !(message.steam_id_chat && $util.isInteger(message.steam_id_chat.low) && $util.isInteger(message.steam_id_chat.high)))
                    return "steam_id_chat: integer|Long expected";
            if (message.steam_id_patron != null && message.hasOwnProperty("steam_id_patron"))
                if (!$util.isInteger(message.steam_id_patron) && !(message.steam_id_patron && $util.isInteger(message.steam_id_patron.low) && $util.isInteger(message.steam_id_patron.high)))
                    return "steam_id_patron: integer|Long expected";
            if (message.chatroom_type != null && message.hasOwnProperty("chatroom_type"))
                if (!$util.isInteger(message.chatroom_type))
                    return "chatroom_type: integer expected";
            if (message.steam_id_friend_chat != null && message.hasOwnProperty("steam_id_friend_chat"))
                if (!$util.isInteger(message.steam_id_friend_chat) && !(message.steam_id_friend_chat && $util.isInteger(message.steam_id_friend_chat.low) && $util.isInteger(message.steam_id_friend_chat.high)))
                    return "steam_id_friend_chat: integer|Long expected";
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                if (!$util.isString(message.chat_name))
                    return "chat_name: string expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientChatInvite message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientChatInvite
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientChatInvite} CMsgClientChatInvite
         */
        CMsgClientChatInvite.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientChatInvite)
                return object;
            var message = new $root.CMsgClientChatInvite();
            if (object.steam_id_invited != null)
                if ($util.Long)
                    (message.steam_id_invited = $util.Long.fromValue(object.steam_id_invited)).unsigned = false;
                else if (typeof object.steam_id_invited === "string")
                    message.steam_id_invited = parseInt(object.steam_id_invited, 10);
                else if (typeof object.steam_id_invited === "number")
                    message.steam_id_invited = object.steam_id_invited;
                else if (typeof object.steam_id_invited === "object")
                    message.steam_id_invited = new $util.LongBits(object.steam_id_invited.low >>> 0, object.steam_id_invited.high >>> 0).toNumber();
            if (object.steam_id_chat != null)
                if ($util.Long)
                    (message.steam_id_chat = $util.Long.fromValue(object.steam_id_chat)).unsigned = false;
                else if (typeof object.steam_id_chat === "string")
                    message.steam_id_chat = parseInt(object.steam_id_chat, 10);
                else if (typeof object.steam_id_chat === "number")
                    message.steam_id_chat = object.steam_id_chat;
                else if (typeof object.steam_id_chat === "object")
                    message.steam_id_chat = new $util.LongBits(object.steam_id_chat.low >>> 0, object.steam_id_chat.high >>> 0).toNumber();
            if (object.steam_id_patron != null)
                if ($util.Long)
                    (message.steam_id_patron = $util.Long.fromValue(object.steam_id_patron)).unsigned = false;
                else if (typeof object.steam_id_patron === "string")
                    message.steam_id_patron = parseInt(object.steam_id_patron, 10);
                else if (typeof object.steam_id_patron === "number")
                    message.steam_id_patron = object.steam_id_patron;
                else if (typeof object.steam_id_patron === "object")
                    message.steam_id_patron = new $util.LongBits(object.steam_id_patron.low >>> 0, object.steam_id_patron.high >>> 0).toNumber();
            if (object.chatroom_type != null)
                message.chatroom_type = object.chatroom_type | 0;
            if (object.steam_id_friend_chat != null)
                if ($util.Long)
                    (message.steam_id_friend_chat = $util.Long.fromValue(object.steam_id_friend_chat)).unsigned = false;
                else if (typeof object.steam_id_friend_chat === "string")
                    message.steam_id_friend_chat = parseInt(object.steam_id_friend_chat, 10);
                else if (typeof object.steam_id_friend_chat === "number")
                    message.steam_id_friend_chat = object.steam_id_friend_chat;
                else if (typeof object.steam_id_friend_chat === "object")
                    message.steam_id_friend_chat = new $util.LongBits(object.steam_id_friend_chat.low >>> 0, object.steam_id_friend_chat.high >>> 0).toNumber();
            if (object.chat_name != null)
                message.chat_name = String(object.chat_name);
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientChatInvite message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientChatInvite
         * @static
         * @param {CMsgClientChatInvite} message CMsgClientChatInvite
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientChatInvite.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_invited = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_invited = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_chat = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_chat = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_patron = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_patron = options.longs === String ? "0" : 0;
                object.chatroom_type = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_friend_chat = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_friend_chat = options.longs === String ? "0" : 0;
                object.chat_name = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
            }
            if (message.steam_id_invited != null && message.hasOwnProperty("steam_id_invited"))
                if (typeof message.steam_id_invited === "number")
                    object.steam_id_invited = options.longs === String ? String(message.steam_id_invited) : message.steam_id_invited;
                else
                    object.steam_id_invited = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_invited) : options.longs === Number ? new $util.LongBits(message.steam_id_invited.low >>> 0, message.steam_id_invited.high >>> 0).toNumber() : message.steam_id_invited;
            if (message.steam_id_chat != null && message.hasOwnProperty("steam_id_chat"))
                if (typeof message.steam_id_chat === "number")
                    object.steam_id_chat = options.longs === String ? String(message.steam_id_chat) : message.steam_id_chat;
                else
                    object.steam_id_chat = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_chat) : options.longs === Number ? new $util.LongBits(message.steam_id_chat.low >>> 0, message.steam_id_chat.high >>> 0).toNumber() : message.steam_id_chat;
            if (message.steam_id_patron != null && message.hasOwnProperty("steam_id_patron"))
                if (typeof message.steam_id_patron === "number")
                    object.steam_id_patron = options.longs === String ? String(message.steam_id_patron) : message.steam_id_patron;
                else
                    object.steam_id_patron = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_patron) : options.longs === Number ? new $util.LongBits(message.steam_id_patron.low >>> 0, message.steam_id_patron.high >>> 0).toNumber() : message.steam_id_patron;
            if (message.chatroom_type != null && message.hasOwnProperty("chatroom_type"))
                object.chatroom_type = message.chatroom_type;
            if (message.steam_id_friend_chat != null && message.hasOwnProperty("steam_id_friend_chat"))
                if (typeof message.steam_id_friend_chat === "number")
                    object.steam_id_friend_chat = options.longs === String ? String(message.steam_id_friend_chat) : message.steam_id_friend_chat;
                else
                    object.steam_id_friend_chat = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_friend_chat) : options.longs === Number ? new $util.LongBits(message.steam_id_friend_chat.low >>> 0, message.steam_id_friend_chat.high >>> 0).toNumber() : message.steam_id_friend_chat;
            if (message.chat_name != null && message.hasOwnProperty("chat_name"))
                object.chat_name = message.chat_name;
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientChatInvite to JSON.
         * @function toJSON
         * @memberof CMsgClientChatInvite
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientChatInvite.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientChatInvite;
    })();
    
    $root.CMsgClientConnectionStats = (function() {
    
        /**
         * Properties of a CMsgClientConnectionStats.
         * @exports ICMsgClientConnectionStats
         * @interface ICMsgClientConnectionStats
         * @property {CMsgClientConnectionStats.IStats_Logon|null} [stats_logon] CMsgClientConnectionStats stats_logon
         * @property {CMsgClientConnectionStats.IStats_VConn|null} [stats_vconn] CMsgClientConnectionStats stats_vconn
         */
    
        /**
         * Constructs a new CMsgClientConnectionStats.
         * @exports CMsgClientConnectionStats
         * @classdesc Represents a CMsgClientConnectionStats.
         * @implements ICMsgClientConnectionStats
         * @constructor
         * @param {ICMsgClientConnectionStats=} [properties] Properties to set
         */
        function CMsgClientConnectionStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientConnectionStats stats_logon.
         * @member {CMsgClientConnectionStats.IStats_Logon|null|undefined} stats_logon
         * @memberof CMsgClientConnectionStats
         * @instance
         */
        CMsgClientConnectionStats.prototype.stats_logon = null;
    
        /**
         * CMsgClientConnectionStats stats_vconn.
         * @member {CMsgClientConnectionStats.IStats_VConn|null|undefined} stats_vconn
         * @memberof CMsgClientConnectionStats
         * @instance
         */
        CMsgClientConnectionStats.prototype.stats_vconn = null;
    
        /**
         * Creates a new CMsgClientConnectionStats instance using the specified properties.
         * @function create
         * @memberof CMsgClientConnectionStats
         * @static
         * @param {ICMsgClientConnectionStats=} [properties] Properties to set
         * @returns {CMsgClientConnectionStats} CMsgClientConnectionStats instance
         */
        CMsgClientConnectionStats.create = function create(properties) {
            return new CMsgClientConnectionStats(properties);
        };
    
        /**
         * Encodes the specified CMsgClientConnectionStats message. Does not implicitly {@link CMsgClientConnectionStats.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientConnectionStats
         * @static
         * @param {ICMsgClientConnectionStats} message CMsgClientConnectionStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientConnectionStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.stats_logon != null && Object.hasOwnProperty.call(message, "stats_logon"))
                $root.CMsgClientConnectionStats.Stats_Logon.encode(message.stats_logon, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.stats_vconn != null && Object.hasOwnProperty.call(message, "stats_vconn"))
                $root.CMsgClientConnectionStats.Stats_VConn.encode(message.stats_vconn, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientConnectionStats message, length delimited. Does not implicitly {@link CMsgClientConnectionStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientConnectionStats
         * @static
         * @param {ICMsgClientConnectionStats} message CMsgClientConnectionStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientConnectionStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientConnectionStats message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientConnectionStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientConnectionStats} CMsgClientConnectionStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientConnectionStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientConnectionStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.stats_logon = $root.CMsgClientConnectionStats.Stats_Logon.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.stats_vconn = $root.CMsgClientConnectionStats.Stats_VConn.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientConnectionStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientConnectionStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientConnectionStats} CMsgClientConnectionStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientConnectionStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientConnectionStats message.
         * @function verify
         * @memberof CMsgClientConnectionStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientConnectionStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.stats_logon != null && message.hasOwnProperty("stats_logon")) {
                var error = $root.CMsgClientConnectionStats.Stats_Logon.verify(message.stats_logon);
                if (error)
                    return "stats_logon." + error;
            }
            if (message.stats_vconn != null && message.hasOwnProperty("stats_vconn")) {
                var error = $root.CMsgClientConnectionStats.Stats_VConn.verify(message.stats_vconn);
                if (error)
                    return "stats_vconn." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientConnectionStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientConnectionStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientConnectionStats} CMsgClientConnectionStats
         */
        CMsgClientConnectionStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientConnectionStats)
                return object;
            var message = new $root.CMsgClientConnectionStats();
            if (object.stats_logon != null) {
                if (typeof object.stats_logon !== "object")
                    throw TypeError(".CMsgClientConnectionStats.stats_logon: object expected");
                message.stats_logon = $root.CMsgClientConnectionStats.Stats_Logon.fromObject(object.stats_logon);
            }
            if (object.stats_vconn != null) {
                if (typeof object.stats_vconn !== "object")
                    throw TypeError(".CMsgClientConnectionStats.stats_vconn: object expected");
                message.stats_vconn = $root.CMsgClientConnectionStats.Stats_VConn.fromObject(object.stats_vconn);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientConnectionStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientConnectionStats
         * @static
         * @param {CMsgClientConnectionStats} message CMsgClientConnectionStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientConnectionStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.stats_logon = null;
                object.stats_vconn = null;
            }
            if (message.stats_logon != null && message.hasOwnProperty("stats_logon"))
                object.stats_logon = $root.CMsgClientConnectionStats.Stats_Logon.toObject(message.stats_logon, options);
            if (message.stats_vconn != null && message.hasOwnProperty("stats_vconn"))
                object.stats_vconn = $root.CMsgClientConnectionStats.Stats_VConn.toObject(message.stats_vconn, options);
            return object;
        };
    
        /**
         * Converts this CMsgClientConnectionStats to JSON.
         * @function toJSON
         * @memberof CMsgClientConnectionStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientConnectionStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientConnectionStats.Stats_Logon = (function() {
    
            /**
             * Properties of a Stats_Logon.
             * @memberof CMsgClientConnectionStats
             * @interface IStats_Logon
             * @property {number|null} [connect_attempts] Stats_Logon connect_attempts
             * @property {number|null} [connect_successes] Stats_Logon connect_successes
             * @property {number|null} [connect_failures] Stats_Logon connect_failures
             * @property {number|null} [connections_dropped] Stats_Logon connections_dropped
             * @property {number|null} [seconds_running] Stats_Logon seconds_running
             * @property {number|null} [msec_tologonthistime] Stats_Logon msec_tologonthistime
             * @property {number|null} [count_bad_cms] Stats_Logon count_bad_cms
             */
    
            /**
             * Constructs a new Stats_Logon.
             * @memberof CMsgClientConnectionStats
             * @classdesc Represents a Stats_Logon.
             * @implements IStats_Logon
             * @constructor
             * @param {CMsgClientConnectionStats.IStats_Logon=} [properties] Properties to set
             */
            function Stats_Logon(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats_Logon connect_attempts.
             * @member {number} connect_attempts
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @instance
             */
            Stats_Logon.prototype.connect_attempts = 0;
    
            /**
             * Stats_Logon connect_successes.
             * @member {number} connect_successes
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @instance
             */
            Stats_Logon.prototype.connect_successes = 0;
    
            /**
             * Stats_Logon connect_failures.
             * @member {number} connect_failures
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @instance
             */
            Stats_Logon.prototype.connect_failures = 0;
    
            /**
             * Stats_Logon connections_dropped.
             * @member {number} connections_dropped
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @instance
             */
            Stats_Logon.prototype.connections_dropped = 0;
    
            /**
             * Stats_Logon seconds_running.
             * @member {number} seconds_running
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @instance
             */
            Stats_Logon.prototype.seconds_running = 0;
    
            /**
             * Stats_Logon msec_tologonthistime.
             * @member {number} msec_tologonthistime
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @instance
             */
            Stats_Logon.prototype.msec_tologonthistime = 0;
    
            /**
             * Stats_Logon count_bad_cms.
             * @member {number} count_bad_cms
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @instance
             */
            Stats_Logon.prototype.count_bad_cms = 0;
    
            /**
             * Creates a new Stats_Logon instance using the specified properties.
             * @function create
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @static
             * @param {CMsgClientConnectionStats.IStats_Logon=} [properties] Properties to set
             * @returns {CMsgClientConnectionStats.Stats_Logon} Stats_Logon instance
             */
            Stats_Logon.create = function create(properties) {
                return new Stats_Logon(properties);
            };
    
            /**
             * Encodes the specified Stats_Logon message. Does not implicitly {@link CMsgClientConnectionStats.Stats_Logon.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @static
             * @param {CMsgClientConnectionStats.IStats_Logon} message Stats_Logon message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_Logon.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.connect_attempts != null && Object.hasOwnProperty.call(message, "connect_attempts"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.connect_attempts);
                if (message.connect_successes != null && Object.hasOwnProperty.call(message, "connect_successes"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.connect_successes);
                if (message.connect_failures != null && Object.hasOwnProperty.call(message, "connect_failures"))
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.connect_failures);
                if (message.connections_dropped != null && Object.hasOwnProperty.call(message, "connections_dropped"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.connections_dropped);
                if (message.seconds_running != null && Object.hasOwnProperty.call(message, "seconds_running"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seconds_running);
                if (message.msec_tologonthistime != null && Object.hasOwnProperty.call(message, "msec_tologonthistime"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.msec_tologonthistime);
                if (message.count_bad_cms != null && Object.hasOwnProperty.call(message, "count_bad_cms"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.count_bad_cms);
                return writer;
            };
    
            /**
             * Encodes the specified Stats_Logon message, length delimited. Does not implicitly {@link CMsgClientConnectionStats.Stats_Logon.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @static
             * @param {CMsgClientConnectionStats.IStats_Logon} message Stats_Logon message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_Logon.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats_Logon message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientConnectionStats.Stats_Logon} Stats_Logon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_Logon.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientConnectionStats.Stats_Logon();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.connect_attempts = reader.int32();
                        break;
                    case 2:
                        message.connect_successes = reader.int32();
                        break;
                    case 3:
                        message.connect_failures = reader.int32();
                        break;
                    case 4:
                        message.connections_dropped = reader.int32();
                        break;
                    case 5:
                        message.seconds_running = reader.uint32();
                        break;
                    case 6:
                        message.msec_tologonthistime = reader.uint32();
                        break;
                    case 7:
                        message.count_bad_cms = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats_Logon message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientConnectionStats.Stats_Logon} Stats_Logon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_Logon.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats_Logon message.
             * @function verify
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats_Logon.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.connect_attempts != null && message.hasOwnProperty("connect_attempts"))
                    if (!$util.isInteger(message.connect_attempts))
                        return "connect_attempts: integer expected";
                if (message.connect_successes != null && message.hasOwnProperty("connect_successes"))
                    if (!$util.isInteger(message.connect_successes))
                        return "connect_successes: integer expected";
                if (message.connect_failures != null && message.hasOwnProperty("connect_failures"))
                    if (!$util.isInteger(message.connect_failures))
                        return "connect_failures: integer expected";
                if (message.connections_dropped != null && message.hasOwnProperty("connections_dropped"))
                    if (!$util.isInteger(message.connections_dropped))
                        return "connections_dropped: integer expected";
                if (message.seconds_running != null && message.hasOwnProperty("seconds_running"))
                    if (!$util.isInteger(message.seconds_running))
                        return "seconds_running: integer expected";
                if (message.msec_tologonthistime != null && message.hasOwnProperty("msec_tologonthistime"))
                    if (!$util.isInteger(message.msec_tologonthistime))
                        return "msec_tologonthistime: integer expected";
                if (message.count_bad_cms != null && message.hasOwnProperty("count_bad_cms"))
                    if (!$util.isInteger(message.count_bad_cms))
                        return "count_bad_cms: integer expected";
                return null;
            };
    
            /**
             * Creates a Stats_Logon message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientConnectionStats.Stats_Logon} Stats_Logon
             */
            Stats_Logon.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientConnectionStats.Stats_Logon)
                    return object;
                var message = new $root.CMsgClientConnectionStats.Stats_Logon();
                if (object.connect_attempts != null)
                    message.connect_attempts = object.connect_attempts | 0;
                if (object.connect_successes != null)
                    message.connect_successes = object.connect_successes | 0;
                if (object.connect_failures != null)
                    message.connect_failures = object.connect_failures | 0;
                if (object.connections_dropped != null)
                    message.connections_dropped = object.connections_dropped | 0;
                if (object.seconds_running != null)
                    message.seconds_running = object.seconds_running >>> 0;
                if (object.msec_tologonthistime != null)
                    message.msec_tologonthistime = object.msec_tologonthistime >>> 0;
                if (object.count_bad_cms != null)
                    message.count_bad_cms = object.count_bad_cms >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Stats_Logon message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @static
             * @param {CMsgClientConnectionStats.Stats_Logon} message Stats_Logon
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats_Logon.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.connect_attempts = 0;
                    object.connect_successes = 0;
                    object.connect_failures = 0;
                    object.connections_dropped = 0;
                    object.seconds_running = 0;
                    object.msec_tologonthistime = 0;
                    object.count_bad_cms = 0;
                }
                if (message.connect_attempts != null && message.hasOwnProperty("connect_attempts"))
                    object.connect_attempts = message.connect_attempts;
                if (message.connect_successes != null && message.hasOwnProperty("connect_successes"))
                    object.connect_successes = message.connect_successes;
                if (message.connect_failures != null && message.hasOwnProperty("connect_failures"))
                    object.connect_failures = message.connect_failures;
                if (message.connections_dropped != null && message.hasOwnProperty("connections_dropped"))
                    object.connections_dropped = message.connections_dropped;
                if (message.seconds_running != null && message.hasOwnProperty("seconds_running"))
                    object.seconds_running = message.seconds_running;
                if (message.msec_tologonthistime != null && message.hasOwnProperty("msec_tologonthistime"))
                    object.msec_tologonthistime = message.msec_tologonthistime;
                if (message.count_bad_cms != null && message.hasOwnProperty("count_bad_cms"))
                    object.count_bad_cms = message.count_bad_cms;
                return object;
            };
    
            /**
             * Converts this Stats_Logon to JSON.
             * @function toJSON
             * @memberof CMsgClientConnectionStats.Stats_Logon
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats_Logon.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Stats_Logon;
        })();
    
        CMsgClientConnectionStats.Stats_UDP = (function() {
    
            /**
             * Properties of a Stats_UDP.
             * @memberof CMsgClientConnectionStats
             * @interface IStats_UDP
             * @property {number|Long|null} [pkts_sent] Stats_UDP pkts_sent
             * @property {number|Long|null} [bytes_sent] Stats_UDP bytes_sent
             * @property {number|Long|null} [pkts_recv] Stats_UDP pkts_recv
             * @property {number|Long|null} [pkts_processed] Stats_UDP pkts_processed
             * @property {number|Long|null} [bytes_recv] Stats_UDP bytes_recv
             */
    
            /**
             * Constructs a new Stats_UDP.
             * @memberof CMsgClientConnectionStats
             * @classdesc Represents a Stats_UDP.
             * @implements IStats_UDP
             * @constructor
             * @param {CMsgClientConnectionStats.IStats_UDP=} [properties] Properties to set
             */
            function Stats_UDP(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats_UDP pkts_sent.
             * @member {number|Long} pkts_sent
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @instance
             */
            Stats_UDP.prototype.pkts_sent = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_UDP bytes_sent.
             * @member {number|Long} bytes_sent
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @instance
             */
            Stats_UDP.prototype.bytes_sent = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_UDP pkts_recv.
             * @member {number|Long} pkts_recv
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @instance
             */
            Stats_UDP.prototype.pkts_recv = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_UDP pkts_processed.
             * @member {number|Long} pkts_processed
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @instance
             */
            Stats_UDP.prototype.pkts_processed = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_UDP bytes_recv.
             * @member {number|Long} bytes_recv
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @instance
             */
            Stats_UDP.prototype.bytes_recv = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new Stats_UDP instance using the specified properties.
             * @function create
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @static
             * @param {CMsgClientConnectionStats.IStats_UDP=} [properties] Properties to set
             * @returns {CMsgClientConnectionStats.Stats_UDP} Stats_UDP instance
             */
            Stats_UDP.create = function create(properties) {
                return new Stats_UDP(properties);
            };
    
            /**
             * Encodes the specified Stats_UDP message. Does not implicitly {@link CMsgClientConnectionStats.Stats_UDP.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @static
             * @param {CMsgClientConnectionStats.IStats_UDP} message Stats_UDP message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_UDP.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.pkts_sent != null && Object.hasOwnProperty.call(message, "pkts_sent"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.pkts_sent);
                if (message.bytes_sent != null && Object.hasOwnProperty.call(message, "bytes_sent"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.bytes_sent);
                if (message.pkts_recv != null && Object.hasOwnProperty.call(message, "pkts_recv"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.pkts_recv);
                if (message.pkts_processed != null && Object.hasOwnProperty.call(message, "pkts_processed"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.pkts_processed);
                if (message.bytes_recv != null && Object.hasOwnProperty.call(message, "bytes_recv"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.bytes_recv);
                return writer;
            };
    
            /**
             * Encodes the specified Stats_UDP message, length delimited. Does not implicitly {@link CMsgClientConnectionStats.Stats_UDP.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @static
             * @param {CMsgClientConnectionStats.IStats_UDP} message Stats_UDP message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_UDP.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats_UDP message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientConnectionStats.Stats_UDP} Stats_UDP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_UDP.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientConnectionStats.Stats_UDP();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.pkts_sent = reader.uint64();
                        break;
                    case 2:
                        message.bytes_sent = reader.uint64();
                        break;
                    case 3:
                        message.pkts_recv = reader.uint64();
                        break;
                    case 4:
                        message.pkts_processed = reader.uint64();
                        break;
                    case 5:
                        message.bytes_recv = reader.uint64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats_UDP message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientConnectionStats.Stats_UDP} Stats_UDP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_UDP.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats_UDP message.
             * @function verify
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats_UDP.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.pkts_sent != null && message.hasOwnProperty("pkts_sent"))
                    if (!$util.isInteger(message.pkts_sent) && !(message.pkts_sent && $util.isInteger(message.pkts_sent.low) && $util.isInteger(message.pkts_sent.high)))
                        return "pkts_sent: integer|Long expected";
                if (message.bytes_sent != null && message.hasOwnProperty("bytes_sent"))
                    if (!$util.isInteger(message.bytes_sent) && !(message.bytes_sent && $util.isInteger(message.bytes_sent.low) && $util.isInteger(message.bytes_sent.high)))
                        return "bytes_sent: integer|Long expected";
                if (message.pkts_recv != null && message.hasOwnProperty("pkts_recv"))
                    if (!$util.isInteger(message.pkts_recv) && !(message.pkts_recv && $util.isInteger(message.pkts_recv.low) && $util.isInteger(message.pkts_recv.high)))
                        return "pkts_recv: integer|Long expected";
                if (message.pkts_processed != null && message.hasOwnProperty("pkts_processed"))
                    if (!$util.isInteger(message.pkts_processed) && !(message.pkts_processed && $util.isInteger(message.pkts_processed.low) && $util.isInteger(message.pkts_processed.high)))
                        return "pkts_processed: integer|Long expected";
                if (message.bytes_recv != null && message.hasOwnProperty("bytes_recv"))
                    if (!$util.isInteger(message.bytes_recv) && !(message.bytes_recv && $util.isInteger(message.bytes_recv.low) && $util.isInteger(message.bytes_recv.high)))
                        return "bytes_recv: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a Stats_UDP message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientConnectionStats.Stats_UDP} Stats_UDP
             */
            Stats_UDP.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientConnectionStats.Stats_UDP)
                    return object;
                var message = new $root.CMsgClientConnectionStats.Stats_UDP();
                if (object.pkts_sent != null)
                    if ($util.Long)
                        (message.pkts_sent = $util.Long.fromValue(object.pkts_sent)).unsigned = true;
                    else if (typeof object.pkts_sent === "string")
                        message.pkts_sent = parseInt(object.pkts_sent, 10);
                    else if (typeof object.pkts_sent === "number")
                        message.pkts_sent = object.pkts_sent;
                    else if (typeof object.pkts_sent === "object")
                        message.pkts_sent = new $util.LongBits(object.pkts_sent.low >>> 0, object.pkts_sent.high >>> 0).toNumber(true);
                if (object.bytes_sent != null)
                    if ($util.Long)
                        (message.bytes_sent = $util.Long.fromValue(object.bytes_sent)).unsigned = true;
                    else if (typeof object.bytes_sent === "string")
                        message.bytes_sent = parseInt(object.bytes_sent, 10);
                    else if (typeof object.bytes_sent === "number")
                        message.bytes_sent = object.bytes_sent;
                    else if (typeof object.bytes_sent === "object")
                        message.bytes_sent = new $util.LongBits(object.bytes_sent.low >>> 0, object.bytes_sent.high >>> 0).toNumber(true);
                if (object.pkts_recv != null)
                    if ($util.Long)
                        (message.pkts_recv = $util.Long.fromValue(object.pkts_recv)).unsigned = true;
                    else if (typeof object.pkts_recv === "string")
                        message.pkts_recv = parseInt(object.pkts_recv, 10);
                    else if (typeof object.pkts_recv === "number")
                        message.pkts_recv = object.pkts_recv;
                    else if (typeof object.pkts_recv === "object")
                        message.pkts_recv = new $util.LongBits(object.pkts_recv.low >>> 0, object.pkts_recv.high >>> 0).toNumber(true);
                if (object.pkts_processed != null)
                    if ($util.Long)
                        (message.pkts_processed = $util.Long.fromValue(object.pkts_processed)).unsigned = true;
                    else if (typeof object.pkts_processed === "string")
                        message.pkts_processed = parseInt(object.pkts_processed, 10);
                    else if (typeof object.pkts_processed === "number")
                        message.pkts_processed = object.pkts_processed;
                    else if (typeof object.pkts_processed === "object")
                        message.pkts_processed = new $util.LongBits(object.pkts_processed.low >>> 0, object.pkts_processed.high >>> 0).toNumber(true);
                if (object.bytes_recv != null)
                    if ($util.Long)
                        (message.bytes_recv = $util.Long.fromValue(object.bytes_recv)).unsigned = true;
                    else if (typeof object.bytes_recv === "string")
                        message.bytes_recv = parseInt(object.bytes_recv, 10);
                    else if (typeof object.bytes_recv === "number")
                        message.bytes_recv = object.bytes_recv;
                    else if (typeof object.bytes_recv === "object")
                        message.bytes_recv = new $util.LongBits(object.bytes_recv.low >>> 0, object.bytes_recv.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from a Stats_UDP message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @static
             * @param {CMsgClientConnectionStats.Stats_UDP} message Stats_UDP
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats_UDP.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.pkts_sent = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.pkts_sent = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.bytes_sent = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.bytes_sent = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.pkts_recv = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.pkts_recv = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.pkts_processed = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.pkts_processed = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.bytes_recv = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.bytes_recv = options.longs === String ? "0" : 0;
                }
                if (message.pkts_sent != null && message.hasOwnProperty("pkts_sent"))
                    if (typeof message.pkts_sent === "number")
                        object.pkts_sent = options.longs === String ? String(message.pkts_sent) : message.pkts_sent;
                    else
                        object.pkts_sent = options.longs === String ? $util.Long.prototype.toString.call(message.pkts_sent) : options.longs === Number ? new $util.LongBits(message.pkts_sent.low >>> 0, message.pkts_sent.high >>> 0).toNumber(true) : message.pkts_sent;
                if (message.bytes_sent != null && message.hasOwnProperty("bytes_sent"))
                    if (typeof message.bytes_sent === "number")
                        object.bytes_sent = options.longs === String ? String(message.bytes_sent) : message.bytes_sent;
                    else
                        object.bytes_sent = options.longs === String ? $util.Long.prototype.toString.call(message.bytes_sent) : options.longs === Number ? new $util.LongBits(message.bytes_sent.low >>> 0, message.bytes_sent.high >>> 0).toNumber(true) : message.bytes_sent;
                if (message.pkts_recv != null && message.hasOwnProperty("pkts_recv"))
                    if (typeof message.pkts_recv === "number")
                        object.pkts_recv = options.longs === String ? String(message.pkts_recv) : message.pkts_recv;
                    else
                        object.pkts_recv = options.longs === String ? $util.Long.prototype.toString.call(message.pkts_recv) : options.longs === Number ? new $util.LongBits(message.pkts_recv.low >>> 0, message.pkts_recv.high >>> 0).toNumber(true) : message.pkts_recv;
                if (message.pkts_processed != null && message.hasOwnProperty("pkts_processed"))
                    if (typeof message.pkts_processed === "number")
                        object.pkts_processed = options.longs === String ? String(message.pkts_processed) : message.pkts_processed;
                    else
                        object.pkts_processed = options.longs === String ? $util.Long.prototype.toString.call(message.pkts_processed) : options.longs === Number ? new $util.LongBits(message.pkts_processed.low >>> 0, message.pkts_processed.high >>> 0).toNumber(true) : message.pkts_processed;
                if (message.bytes_recv != null && message.hasOwnProperty("bytes_recv"))
                    if (typeof message.bytes_recv === "number")
                        object.bytes_recv = options.longs === String ? String(message.bytes_recv) : message.bytes_recv;
                    else
                        object.bytes_recv = options.longs === String ? $util.Long.prototype.toString.call(message.bytes_recv) : options.longs === Number ? new $util.LongBits(message.bytes_recv.low >>> 0, message.bytes_recv.high >>> 0).toNumber(true) : message.bytes_recv;
                return object;
            };
    
            /**
             * Converts this Stats_UDP to JSON.
             * @function toJSON
             * @memberof CMsgClientConnectionStats.Stats_UDP
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats_UDP.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Stats_UDP;
        })();
    
        CMsgClientConnectionStats.Stats_VConn = (function() {
    
            /**
             * Properties of a Stats_VConn.
             * @memberof CMsgClientConnectionStats
             * @interface IStats_VConn
             * @property {number|null} [connections_udp] Stats_VConn connections_udp
             * @property {number|null} [connections_tcp] Stats_VConn connections_tcp
             * @property {CMsgClientConnectionStats.IStats_UDP|null} [stats_udp] Stats_VConn stats_udp
             * @property {number|Long|null} [pkts_abandoned] Stats_VConn pkts_abandoned
             * @property {number|Long|null} [conn_req_received] Stats_VConn conn_req_received
             * @property {number|Long|null} [pkts_resent] Stats_VConn pkts_resent
             * @property {number|Long|null} [msgs_sent] Stats_VConn msgs_sent
             * @property {number|Long|null} [msgs_sent_failed] Stats_VConn msgs_sent_failed
             * @property {number|Long|null} [msgs_recv] Stats_VConn msgs_recv
             * @property {number|Long|null} [datagrams_sent] Stats_VConn datagrams_sent
             * @property {number|Long|null} [datagrams_recv] Stats_VConn datagrams_recv
             * @property {number|Long|null} [bad_pkts_recv] Stats_VConn bad_pkts_recv
             * @property {number|Long|null} [unknown_conn_pkts_recv] Stats_VConn unknown_conn_pkts_recv
             * @property {number|Long|null} [missed_pkts_recv] Stats_VConn missed_pkts_recv
             * @property {number|Long|null} [dup_pkts_recv] Stats_VConn dup_pkts_recv
             * @property {number|Long|null} [failed_connect_challenges] Stats_VConn failed_connect_challenges
             * @property {number|null} [micro_sec_avg_latency] Stats_VConn micro_sec_avg_latency
             * @property {number|null} [micro_sec_min_latency] Stats_VConn micro_sec_min_latency
             * @property {number|null} [micro_sec_max_latency] Stats_VConn micro_sec_max_latency
             * @property {number|null} [mem_pool_msg_in_use] Stats_VConn mem_pool_msg_in_use
             */
    
            /**
             * Constructs a new Stats_VConn.
             * @memberof CMsgClientConnectionStats
             * @classdesc Represents a Stats_VConn.
             * @implements IStats_VConn
             * @constructor
             * @param {CMsgClientConnectionStats.IStats_VConn=} [properties] Properties to set
             */
            function Stats_VConn(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats_VConn connections_udp.
             * @member {number} connections_udp
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.connections_udp = 0;
    
            /**
             * Stats_VConn connections_tcp.
             * @member {number} connections_tcp
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.connections_tcp = 0;
    
            /**
             * Stats_VConn stats_udp.
             * @member {CMsgClientConnectionStats.IStats_UDP|null|undefined} stats_udp
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.stats_udp = null;
    
            /**
             * Stats_VConn pkts_abandoned.
             * @member {number|Long} pkts_abandoned
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.pkts_abandoned = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn conn_req_received.
             * @member {number|Long} conn_req_received
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.conn_req_received = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn pkts_resent.
             * @member {number|Long} pkts_resent
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.pkts_resent = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn msgs_sent.
             * @member {number|Long} msgs_sent
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.msgs_sent = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn msgs_sent_failed.
             * @member {number|Long} msgs_sent_failed
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.msgs_sent_failed = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn msgs_recv.
             * @member {number|Long} msgs_recv
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.msgs_recv = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn datagrams_sent.
             * @member {number|Long} datagrams_sent
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.datagrams_sent = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn datagrams_recv.
             * @member {number|Long} datagrams_recv
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.datagrams_recv = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn bad_pkts_recv.
             * @member {number|Long} bad_pkts_recv
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.bad_pkts_recv = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn unknown_conn_pkts_recv.
             * @member {number|Long} unknown_conn_pkts_recv
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.unknown_conn_pkts_recv = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn missed_pkts_recv.
             * @member {number|Long} missed_pkts_recv
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.missed_pkts_recv = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn dup_pkts_recv.
             * @member {number|Long} dup_pkts_recv
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.dup_pkts_recv = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn failed_connect_challenges.
             * @member {number|Long} failed_connect_challenges
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.failed_connect_challenges = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Stats_VConn micro_sec_avg_latency.
             * @member {number} micro_sec_avg_latency
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.micro_sec_avg_latency = 0;
    
            /**
             * Stats_VConn micro_sec_min_latency.
             * @member {number} micro_sec_min_latency
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.micro_sec_min_latency = 0;
    
            /**
             * Stats_VConn micro_sec_max_latency.
             * @member {number} micro_sec_max_latency
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.micro_sec_max_latency = 0;
    
            /**
             * Stats_VConn mem_pool_msg_in_use.
             * @member {number} mem_pool_msg_in_use
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             */
            Stats_VConn.prototype.mem_pool_msg_in_use = 0;
    
            /**
             * Creates a new Stats_VConn instance using the specified properties.
             * @function create
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @static
             * @param {CMsgClientConnectionStats.IStats_VConn=} [properties] Properties to set
             * @returns {CMsgClientConnectionStats.Stats_VConn} Stats_VConn instance
             */
            Stats_VConn.create = function create(properties) {
                return new Stats_VConn(properties);
            };
    
            /**
             * Encodes the specified Stats_VConn message. Does not implicitly {@link CMsgClientConnectionStats.Stats_VConn.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @static
             * @param {CMsgClientConnectionStats.IStats_VConn} message Stats_VConn message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_VConn.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.connections_udp != null && Object.hasOwnProperty.call(message, "connections_udp"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.connections_udp);
                if (message.connections_tcp != null && Object.hasOwnProperty.call(message, "connections_tcp"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.connections_tcp);
                if (message.stats_udp != null && Object.hasOwnProperty.call(message, "stats_udp"))
                    $root.CMsgClientConnectionStats.Stats_UDP.encode(message.stats_udp, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.pkts_abandoned != null && Object.hasOwnProperty.call(message, "pkts_abandoned"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.pkts_abandoned);
                if (message.conn_req_received != null && Object.hasOwnProperty.call(message, "conn_req_received"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.conn_req_received);
                if (message.pkts_resent != null && Object.hasOwnProperty.call(message, "pkts_resent"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.pkts_resent);
                if (message.msgs_sent != null && Object.hasOwnProperty.call(message, "msgs_sent"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.msgs_sent);
                if (message.msgs_sent_failed != null && Object.hasOwnProperty.call(message, "msgs_sent_failed"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint64(message.msgs_sent_failed);
                if (message.msgs_recv != null && Object.hasOwnProperty.call(message, "msgs_recv"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint64(message.msgs_recv);
                if (message.datagrams_sent != null && Object.hasOwnProperty.call(message, "datagrams_sent"))
                    writer.uint32(/* id 10, wireType 0 =*/80).uint64(message.datagrams_sent);
                if (message.datagrams_recv != null && Object.hasOwnProperty.call(message, "datagrams_recv"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint64(message.datagrams_recv);
                if (message.bad_pkts_recv != null && Object.hasOwnProperty.call(message, "bad_pkts_recv"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint64(message.bad_pkts_recv);
                if (message.unknown_conn_pkts_recv != null && Object.hasOwnProperty.call(message, "unknown_conn_pkts_recv"))
                    writer.uint32(/* id 13, wireType 0 =*/104).uint64(message.unknown_conn_pkts_recv);
                if (message.missed_pkts_recv != null && Object.hasOwnProperty.call(message, "missed_pkts_recv"))
                    writer.uint32(/* id 14, wireType 0 =*/112).uint64(message.missed_pkts_recv);
                if (message.dup_pkts_recv != null && Object.hasOwnProperty.call(message, "dup_pkts_recv"))
                    writer.uint32(/* id 15, wireType 0 =*/120).uint64(message.dup_pkts_recv);
                if (message.failed_connect_challenges != null && Object.hasOwnProperty.call(message, "failed_connect_challenges"))
                    writer.uint32(/* id 16, wireType 0 =*/128).uint64(message.failed_connect_challenges);
                if (message.micro_sec_avg_latency != null && Object.hasOwnProperty.call(message, "micro_sec_avg_latency"))
                    writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.micro_sec_avg_latency);
                if (message.micro_sec_min_latency != null && Object.hasOwnProperty.call(message, "micro_sec_min_latency"))
                    writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.micro_sec_min_latency);
                if (message.micro_sec_max_latency != null && Object.hasOwnProperty.call(message, "micro_sec_max_latency"))
                    writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.micro_sec_max_latency);
                if (message.mem_pool_msg_in_use != null && Object.hasOwnProperty.call(message, "mem_pool_msg_in_use"))
                    writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.mem_pool_msg_in_use);
                return writer;
            };
    
            /**
             * Encodes the specified Stats_VConn message, length delimited. Does not implicitly {@link CMsgClientConnectionStats.Stats_VConn.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @static
             * @param {CMsgClientConnectionStats.IStats_VConn} message Stats_VConn message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_VConn.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats_VConn message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientConnectionStats.Stats_VConn} Stats_VConn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_VConn.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientConnectionStats.Stats_VConn();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.connections_udp = reader.uint32();
                        break;
                    case 2:
                        message.connections_tcp = reader.uint32();
                        break;
                    case 3:
                        message.stats_udp = $root.CMsgClientConnectionStats.Stats_UDP.decode(reader, reader.uint32());
                        break;
                    case 4:
                        message.pkts_abandoned = reader.uint64();
                        break;
                    case 5:
                        message.conn_req_received = reader.uint64();
                        break;
                    case 6:
                        message.pkts_resent = reader.uint64();
                        break;
                    case 7:
                        message.msgs_sent = reader.uint64();
                        break;
                    case 8:
                        message.msgs_sent_failed = reader.uint64();
                        break;
                    case 9:
                        message.msgs_recv = reader.uint64();
                        break;
                    case 10:
                        message.datagrams_sent = reader.uint64();
                        break;
                    case 11:
                        message.datagrams_recv = reader.uint64();
                        break;
                    case 12:
                        message.bad_pkts_recv = reader.uint64();
                        break;
                    case 13:
                        message.unknown_conn_pkts_recv = reader.uint64();
                        break;
                    case 14:
                        message.missed_pkts_recv = reader.uint64();
                        break;
                    case 15:
                        message.dup_pkts_recv = reader.uint64();
                        break;
                    case 16:
                        message.failed_connect_challenges = reader.uint64();
                        break;
                    case 17:
                        message.micro_sec_avg_latency = reader.uint32();
                        break;
                    case 18:
                        message.micro_sec_min_latency = reader.uint32();
                        break;
                    case 19:
                        message.micro_sec_max_latency = reader.uint32();
                        break;
                    case 20:
                        message.mem_pool_msg_in_use = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats_VConn message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientConnectionStats.Stats_VConn} Stats_VConn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_VConn.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats_VConn message.
             * @function verify
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats_VConn.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.connections_udp != null && message.hasOwnProperty("connections_udp"))
                    if (!$util.isInteger(message.connections_udp))
                        return "connections_udp: integer expected";
                if (message.connections_tcp != null && message.hasOwnProperty("connections_tcp"))
                    if (!$util.isInteger(message.connections_tcp))
                        return "connections_tcp: integer expected";
                if (message.stats_udp != null && message.hasOwnProperty("stats_udp")) {
                    var error = $root.CMsgClientConnectionStats.Stats_UDP.verify(message.stats_udp);
                    if (error)
                        return "stats_udp." + error;
                }
                if (message.pkts_abandoned != null && message.hasOwnProperty("pkts_abandoned"))
                    if (!$util.isInteger(message.pkts_abandoned) && !(message.pkts_abandoned && $util.isInteger(message.pkts_abandoned.low) && $util.isInteger(message.pkts_abandoned.high)))
                        return "pkts_abandoned: integer|Long expected";
                if (message.conn_req_received != null && message.hasOwnProperty("conn_req_received"))
                    if (!$util.isInteger(message.conn_req_received) && !(message.conn_req_received && $util.isInteger(message.conn_req_received.low) && $util.isInteger(message.conn_req_received.high)))
                        return "conn_req_received: integer|Long expected";
                if (message.pkts_resent != null && message.hasOwnProperty("pkts_resent"))
                    if (!$util.isInteger(message.pkts_resent) && !(message.pkts_resent && $util.isInteger(message.pkts_resent.low) && $util.isInteger(message.pkts_resent.high)))
                        return "pkts_resent: integer|Long expected";
                if (message.msgs_sent != null && message.hasOwnProperty("msgs_sent"))
                    if (!$util.isInteger(message.msgs_sent) && !(message.msgs_sent && $util.isInteger(message.msgs_sent.low) && $util.isInteger(message.msgs_sent.high)))
                        return "msgs_sent: integer|Long expected";
                if (message.msgs_sent_failed != null && message.hasOwnProperty("msgs_sent_failed"))
                    if (!$util.isInteger(message.msgs_sent_failed) && !(message.msgs_sent_failed && $util.isInteger(message.msgs_sent_failed.low) && $util.isInteger(message.msgs_sent_failed.high)))
                        return "msgs_sent_failed: integer|Long expected";
                if (message.msgs_recv != null && message.hasOwnProperty("msgs_recv"))
                    if (!$util.isInteger(message.msgs_recv) && !(message.msgs_recv && $util.isInteger(message.msgs_recv.low) && $util.isInteger(message.msgs_recv.high)))
                        return "msgs_recv: integer|Long expected";
                if (message.datagrams_sent != null && message.hasOwnProperty("datagrams_sent"))
                    if (!$util.isInteger(message.datagrams_sent) && !(message.datagrams_sent && $util.isInteger(message.datagrams_sent.low) && $util.isInteger(message.datagrams_sent.high)))
                        return "datagrams_sent: integer|Long expected";
                if (message.datagrams_recv != null && message.hasOwnProperty("datagrams_recv"))
                    if (!$util.isInteger(message.datagrams_recv) && !(message.datagrams_recv && $util.isInteger(message.datagrams_recv.low) && $util.isInteger(message.datagrams_recv.high)))
                        return "datagrams_recv: integer|Long expected";
                if (message.bad_pkts_recv != null && message.hasOwnProperty("bad_pkts_recv"))
                    if (!$util.isInteger(message.bad_pkts_recv) && !(message.bad_pkts_recv && $util.isInteger(message.bad_pkts_recv.low) && $util.isInteger(message.bad_pkts_recv.high)))
                        return "bad_pkts_recv: integer|Long expected";
                if (message.unknown_conn_pkts_recv != null && message.hasOwnProperty("unknown_conn_pkts_recv"))
                    if (!$util.isInteger(message.unknown_conn_pkts_recv) && !(message.unknown_conn_pkts_recv && $util.isInteger(message.unknown_conn_pkts_recv.low) && $util.isInteger(message.unknown_conn_pkts_recv.high)))
                        return "unknown_conn_pkts_recv: integer|Long expected";
                if (message.missed_pkts_recv != null && message.hasOwnProperty("missed_pkts_recv"))
                    if (!$util.isInteger(message.missed_pkts_recv) && !(message.missed_pkts_recv && $util.isInteger(message.missed_pkts_recv.low) && $util.isInteger(message.missed_pkts_recv.high)))
                        return "missed_pkts_recv: integer|Long expected";
                if (message.dup_pkts_recv != null && message.hasOwnProperty("dup_pkts_recv"))
                    if (!$util.isInteger(message.dup_pkts_recv) && !(message.dup_pkts_recv && $util.isInteger(message.dup_pkts_recv.low) && $util.isInteger(message.dup_pkts_recv.high)))
                        return "dup_pkts_recv: integer|Long expected";
                if (message.failed_connect_challenges != null && message.hasOwnProperty("failed_connect_challenges"))
                    if (!$util.isInteger(message.failed_connect_challenges) && !(message.failed_connect_challenges && $util.isInteger(message.failed_connect_challenges.low) && $util.isInteger(message.failed_connect_challenges.high)))
                        return "failed_connect_challenges: integer|Long expected";
                if (message.micro_sec_avg_latency != null && message.hasOwnProperty("micro_sec_avg_latency"))
                    if (!$util.isInteger(message.micro_sec_avg_latency))
                        return "micro_sec_avg_latency: integer expected";
                if (message.micro_sec_min_latency != null && message.hasOwnProperty("micro_sec_min_latency"))
                    if (!$util.isInteger(message.micro_sec_min_latency))
                        return "micro_sec_min_latency: integer expected";
                if (message.micro_sec_max_latency != null && message.hasOwnProperty("micro_sec_max_latency"))
                    if (!$util.isInteger(message.micro_sec_max_latency))
                        return "micro_sec_max_latency: integer expected";
                if (message.mem_pool_msg_in_use != null && message.hasOwnProperty("mem_pool_msg_in_use"))
                    if (!$util.isInteger(message.mem_pool_msg_in_use))
                        return "mem_pool_msg_in_use: integer expected";
                return null;
            };
    
            /**
             * Creates a Stats_VConn message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientConnectionStats.Stats_VConn} Stats_VConn
             */
            Stats_VConn.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientConnectionStats.Stats_VConn)
                    return object;
                var message = new $root.CMsgClientConnectionStats.Stats_VConn();
                if (object.connections_udp != null)
                    message.connections_udp = object.connections_udp >>> 0;
                if (object.connections_tcp != null)
                    message.connections_tcp = object.connections_tcp >>> 0;
                if (object.stats_udp != null) {
                    if (typeof object.stats_udp !== "object")
                        throw TypeError(".CMsgClientConnectionStats.Stats_VConn.stats_udp: object expected");
                    message.stats_udp = $root.CMsgClientConnectionStats.Stats_UDP.fromObject(object.stats_udp);
                }
                if (object.pkts_abandoned != null)
                    if ($util.Long)
                        (message.pkts_abandoned = $util.Long.fromValue(object.pkts_abandoned)).unsigned = true;
                    else if (typeof object.pkts_abandoned === "string")
                        message.pkts_abandoned = parseInt(object.pkts_abandoned, 10);
                    else if (typeof object.pkts_abandoned === "number")
                        message.pkts_abandoned = object.pkts_abandoned;
                    else if (typeof object.pkts_abandoned === "object")
                        message.pkts_abandoned = new $util.LongBits(object.pkts_abandoned.low >>> 0, object.pkts_abandoned.high >>> 0).toNumber(true);
                if (object.conn_req_received != null)
                    if ($util.Long)
                        (message.conn_req_received = $util.Long.fromValue(object.conn_req_received)).unsigned = true;
                    else if (typeof object.conn_req_received === "string")
                        message.conn_req_received = parseInt(object.conn_req_received, 10);
                    else if (typeof object.conn_req_received === "number")
                        message.conn_req_received = object.conn_req_received;
                    else if (typeof object.conn_req_received === "object")
                        message.conn_req_received = new $util.LongBits(object.conn_req_received.low >>> 0, object.conn_req_received.high >>> 0).toNumber(true);
                if (object.pkts_resent != null)
                    if ($util.Long)
                        (message.pkts_resent = $util.Long.fromValue(object.pkts_resent)).unsigned = true;
                    else if (typeof object.pkts_resent === "string")
                        message.pkts_resent = parseInt(object.pkts_resent, 10);
                    else if (typeof object.pkts_resent === "number")
                        message.pkts_resent = object.pkts_resent;
                    else if (typeof object.pkts_resent === "object")
                        message.pkts_resent = new $util.LongBits(object.pkts_resent.low >>> 0, object.pkts_resent.high >>> 0).toNumber(true);
                if (object.msgs_sent != null)
                    if ($util.Long)
                        (message.msgs_sent = $util.Long.fromValue(object.msgs_sent)).unsigned = true;
                    else if (typeof object.msgs_sent === "string")
                        message.msgs_sent = parseInt(object.msgs_sent, 10);
                    else if (typeof object.msgs_sent === "number")
                        message.msgs_sent = object.msgs_sent;
                    else if (typeof object.msgs_sent === "object")
                        message.msgs_sent = new $util.LongBits(object.msgs_sent.low >>> 0, object.msgs_sent.high >>> 0).toNumber(true);
                if (object.msgs_sent_failed != null)
                    if ($util.Long)
                        (message.msgs_sent_failed = $util.Long.fromValue(object.msgs_sent_failed)).unsigned = true;
                    else if (typeof object.msgs_sent_failed === "string")
                        message.msgs_sent_failed = parseInt(object.msgs_sent_failed, 10);
                    else if (typeof object.msgs_sent_failed === "number")
                        message.msgs_sent_failed = object.msgs_sent_failed;
                    else if (typeof object.msgs_sent_failed === "object")
                        message.msgs_sent_failed = new $util.LongBits(object.msgs_sent_failed.low >>> 0, object.msgs_sent_failed.high >>> 0).toNumber(true);
                if (object.msgs_recv != null)
                    if ($util.Long)
                        (message.msgs_recv = $util.Long.fromValue(object.msgs_recv)).unsigned = true;
                    else if (typeof object.msgs_recv === "string")
                        message.msgs_recv = parseInt(object.msgs_recv, 10);
                    else if (typeof object.msgs_recv === "number")
                        message.msgs_recv = object.msgs_recv;
                    else if (typeof object.msgs_recv === "object")
                        message.msgs_recv = new $util.LongBits(object.msgs_recv.low >>> 0, object.msgs_recv.high >>> 0).toNumber(true);
                if (object.datagrams_sent != null)
                    if ($util.Long)
                        (message.datagrams_sent = $util.Long.fromValue(object.datagrams_sent)).unsigned = true;
                    else if (typeof object.datagrams_sent === "string")
                        message.datagrams_sent = parseInt(object.datagrams_sent, 10);
                    else if (typeof object.datagrams_sent === "number")
                        message.datagrams_sent = object.datagrams_sent;
                    else if (typeof object.datagrams_sent === "object")
                        message.datagrams_sent = new $util.LongBits(object.datagrams_sent.low >>> 0, object.datagrams_sent.high >>> 0).toNumber(true);
                if (object.datagrams_recv != null)
                    if ($util.Long)
                        (message.datagrams_recv = $util.Long.fromValue(object.datagrams_recv)).unsigned = true;
                    else if (typeof object.datagrams_recv === "string")
                        message.datagrams_recv = parseInt(object.datagrams_recv, 10);
                    else if (typeof object.datagrams_recv === "number")
                        message.datagrams_recv = object.datagrams_recv;
                    else if (typeof object.datagrams_recv === "object")
                        message.datagrams_recv = new $util.LongBits(object.datagrams_recv.low >>> 0, object.datagrams_recv.high >>> 0).toNumber(true);
                if (object.bad_pkts_recv != null)
                    if ($util.Long)
                        (message.bad_pkts_recv = $util.Long.fromValue(object.bad_pkts_recv)).unsigned = true;
                    else if (typeof object.bad_pkts_recv === "string")
                        message.bad_pkts_recv = parseInt(object.bad_pkts_recv, 10);
                    else if (typeof object.bad_pkts_recv === "number")
                        message.bad_pkts_recv = object.bad_pkts_recv;
                    else if (typeof object.bad_pkts_recv === "object")
                        message.bad_pkts_recv = new $util.LongBits(object.bad_pkts_recv.low >>> 0, object.bad_pkts_recv.high >>> 0).toNumber(true);
                if (object.unknown_conn_pkts_recv != null)
                    if ($util.Long)
                        (message.unknown_conn_pkts_recv = $util.Long.fromValue(object.unknown_conn_pkts_recv)).unsigned = true;
                    else if (typeof object.unknown_conn_pkts_recv === "string")
                        message.unknown_conn_pkts_recv = parseInt(object.unknown_conn_pkts_recv, 10);
                    else if (typeof object.unknown_conn_pkts_recv === "number")
                        message.unknown_conn_pkts_recv = object.unknown_conn_pkts_recv;
                    else if (typeof object.unknown_conn_pkts_recv === "object")
                        message.unknown_conn_pkts_recv = new $util.LongBits(object.unknown_conn_pkts_recv.low >>> 0, object.unknown_conn_pkts_recv.high >>> 0).toNumber(true);
                if (object.missed_pkts_recv != null)
                    if ($util.Long)
                        (message.missed_pkts_recv = $util.Long.fromValue(object.missed_pkts_recv)).unsigned = true;
                    else if (typeof object.missed_pkts_recv === "string")
                        message.missed_pkts_recv = parseInt(object.missed_pkts_recv, 10);
                    else if (typeof object.missed_pkts_recv === "number")
                        message.missed_pkts_recv = object.missed_pkts_recv;
                    else if (typeof object.missed_pkts_recv === "object")
                        message.missed_pkts_recv = new $util.LongBits(object.missed_pkts_recv.low >>> 0, object.missed_pkts_recv.high >>> 0).toNumber(true);
                if (object.dup_pkts_recv != null)
                    if ($util.Long)
                        (message.dup_pkts_recv = $util.Long.fromValue(object.dup_pkts_recv)).unsigned = true;
                    else if (typeof object.dup_pkts_recv === "string")
                        message.dup_pkts_recv = parseInt(object.dup_pkts_recv, 10);
                    else if (typeof object.dup_pkts_recv === "number")
                        message.dup_pkts_recv = object.dup_pkts_recv;
                    else if (typeof object.dup_pkts_recv === "object")
                        message.dup_pkts_recv = new $util.LongBits(object.dup_pkts_recv.low >>> 0, object.dup_pkts_recv.high >>> 0).toNumber(true);
                if (object.failed_connect_challenges != null)
                    if ($util.Long)
                        (message.failed_connect_challenges = $util.Long.fromValue(object.failed_connect_challenges)).unsigned = true;
                    else if (typeof object.failed_connect_challenges === "string")
                        message.failed_connect_challenges = parseInt(object.failed_connect_challenges, 10);
                    else if (typeof object.failed_connect_challenges === "number")
                        message.failed_connect_challenges = object.failed_connect_challenges;
                    else if (typeof object.failed_connect_challenges === "object")
                        message.failed_connect_challenges = new $util.LongBits(object.failed_connect_challenges.low >>> 0, object.failed_connect_challenges.high >>> 0).toNumber(true);
                if (object.micro_sec_avg_latency != null)
                    message.micro_sec_avg_latency = object.micro_sec_avg_latency >>> 0;
                if (object.micro_sec_min_latency != null)
                    message.micro_sec_min_latency = object.micro_sec_min_latency >>> 0;
                if (object.micro_sec_max_latency != null)
                    message.micro_sec_max_latency = object.micro_sec_max_latency >>> 0;
                if (object.mem_pool_msg_in_use != null)
                    message.mem_pool_msg_in_use = object.mem_pool_msg_in_use >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Stats_VConn message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @static
             * @param {CMsgClientConnectionStats.Stats_VConn} message Stats_VConn
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats_VConn.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.connections_udp = 0;
                    object.connections_tcp = 0;
                    object.stats_udp = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.pkts_abandoned = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.pkts_abandoned = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.conn_req_received = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.conn_req_received = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.pkts_resent = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.pkts_resent = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.msgs_sent = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.msgs_sent = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.msgs_sent_failed = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.msgs_sent_failed = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.msgs_recv = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.msgs_recv = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.datagrams_sent = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.datagrams_sent = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.datagrams_recv = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.datagrams_recv = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.bad_pkts_recv = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.bad_pkts_recv = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.unknown_conn_pkts_recv = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.unknown_conn_pkts_recv = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.missed_pkts_recv = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.missed_pkts_recv = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.dup_pkts_recv = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.dup_pkts_recv = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.failed_connect_challenges = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.failed_connect_challenges = options.longs === String ? "0" : 0;
                    object.micro_sec_avg_latency = 0;
                    object.micro_sec_min_latency = 0;
                    object.micro_sec_max_latency = 0;
                    object.mem_pool_msg_in_use = 0;
                }
                if (message.connections_udp != null && message.hasOwnProperty("connections_udp"))
                    object.connections_udp = message.connections_udp;
                if (message.connections_tcp != null && message.hasOwnProperty("connections_tcp"))
                    object.connections_tcp = message.connections_tcp;
                if (message.stats_udp != null && message.hasOwnProperty("stats_udp"))
                    object.stats_udp = $root.CMsgClientConnectionStats.Stats_UDP.toObject(message.stats_udp, options);
                if (message.pkts_abandoned != null && message.hasOwnProperty("pkts_abandoned"))
                    if (typeof message.pkts_abandoned === "number")
                        object.pkts_abandoned = options.longs === String ? String(message.pkts_abandoned) : message.pkts_abandoned;
                    else
                        object.pkts_abandoned = options.longs === String ? $util.Long.prototype.toString.call(message.pkts_abandoned) : options.longs === Number ? new $util.LongBits(message.pkts_abandoned.low >>> 0, message.pkts_abandoned.high >>> 0).toNumber(true) : message.pkts_abandoned;
                if (message.conn_req_received != null && message.hasOwnProperty("conn_req_received"))
                    if (typeof message.conn_req_received === "number")
                        object.conn_req_received = options.longs === String ? String(message.conn_req_received) : message.conn_req_received;
                    else
                        object.conn_req_received = options.longs === String ? $util.Long.prototype.toString.call(message.conn_req_received) : options.longs === Number ? new $util.LongBits(message.conn_req_received.low >>> 0, message.conn_req_received.high >>> 0).toNumber(true) : message.conn_req_received;
                if (message.pkts_resent != null && message.hasOwnProperty("pkts_resent"))
                    if (typeof message.pkts_resent === "number")
                        object.pkts_resent = options.longs === String ? String(message.pkts_resent) : message.pkts_resent;
                    else
                        object.pkts_resent = options.longs === String ? $util.Long.prototype.toString.call(message.pkts_resent) : options.longs === Number ? new $util.LongBits(message.pkts_resent.low >>> 0, message.pkts_resent.high >>> 0).toNumber(true) : message.pkts_resent;
                if (message.msgs_sent != null && message.hasOwnProperty("msgs_sent"))
                    if (typeof message.msgs_sent === "number")
                        object.msgs_sent = options.longs === String ? String(message.msgs_sent) : message.msgs_sent;
                    else
                        object.msgs_sent = options.longs === String ? $util.Long.prototype.toString.call(message.msgs_sent) : options.longs === Number ? new $util.LongBits(message.msgs_sent.low >>> 0, message.msgs_sent.high >>> 0).toNumber(true) : message.msgs_sent;
                if (message.msgs_sent_failed != null && message.hasOwnProperty("msgs_sent_failed"))
                    if (typeof message.msgs_sent_failed === "number")
                        object.msgs_sent_failed = options.longs === String ? String(message.msgs_sent_failed) : message.msgs_sent_failed;
                    else
                        object.msgs_sent_failed = options.longs === String ? $util.Long.prototype.toString.call(message.msgs_sent_failed) : options.longs === Number ? new $util.LongBits(message.msgs_sent_failed.low >>> 0, message.msgs_sent_failed.high >>> 0).toNumber(true) : message.msgs_sent_failed;
                if (message.msgs_recv != null && message.hasOwnProperty("msgs_recv"))
                    if (typeof message.msgs_recv === "number")
                        object.msgs_recv = options.longs === String ? String(message.msgs_recv) : message.msgs_recv;
                    else
                        object.msgs_recv = options.longs === String ? $util.Long.prototype.toString.call(message.msgs_recv) : options.longs === Number ? new $util.LongBits(message.msgs_recv.low >>> 0, message.msgs_recv.high >>> 0).toNumber(true) : message.msgs_recv;
                if (message.datagrams_sent != null && message.hasOwnProperty("datagrams_sent"))
                    if (typeof message.datagrams_sent === "number")
                        object.datagrams_sent = options.longs === String ? String(message.datagrams_sent) : message.datagrams_sent;
                    else
                        object.datagrams_sent = options.longs === String ? $util.Long.prototype.toString.call(message.datagrams_sent) : options.longs === Number ? new $util.LongBits(message.datagrams_sent.low >>> 0, message.datagrams_sent.high >>> 0).toNumber(true) : message.datagrams_sent;
                if (message.datagrams_recv != null && message.hasOwnProperty("datagrams_recv"))
                    if (typeof message.datagrams_recv === "number")
                        object.datagrams_recv = options.longs === String ? String(message.datagrams_recv) : message.datagrams_recv;
                    else
                        object.datagrams_recv = options.longs === String ? $util.Long.prototype.toString.call(message.datagrams_recv) : options.longs === Number ? new $util.LongBits(message.datagrams_recv.low >>> 0, message.datagrams_recv.high >>> 0).toNumber(true) : message.datagrams_recv;
                if (message.bad_pkts_recv != null && message.hasOwnProperty("bad_pkts_recv"))
                    if (typeof message.bad_pkts_recv === "number")
                        object.bad_pkts_recv = options.longs === String ? String(message.bad_pkts_recv) : message.bad_pkts_recv;
                    else
                        object.bad_pkts_recv = options.longs === String ? $util.Long.prototype.toString.call(message.bad_pkts_recv) : options.longs === Number ? new $util.LongBits(message.bad_pkts_recv.low >>> 0, message.bad_pkts_recv.high >>> 0).toNumber(true) : message.bad_pkts_recv;
                if (message.unknown_conn_pkts_recv != null && message.hasOwnProperty("unknown_conn_pkts_recv"))
                    if (typeof message.unknown_conn_pkts_recv === "number")
                        object.unknown_conn_pkts_recv = options.longs === String ? String(message.unknown_conn_pkts_recv) : message.unknown_conn_pkts_recv;
                    else
                        object.unknown_conn_pkts_recv = options.longs === String ? $util.Long.prototype.toString.call(message.unknown_conn_pkts_recv) : options.longs === Number ? new $util.LongBits(message.unknown_conn_pkts_recv.low >>> 0, message.unknown_conn_pkts_recv.high >>> 0).toNumber(true) : message.unknown_conn_pkts_recv;
                if (message.missed_pkts_recv != null && message.hasOwnProperty("missed_pkts_recv"))
                    if (typeof message.missed_pkts_recv === "number")
                        object.missed_pkts_recv = options.longs === String ? String(message.missed_pkts_recv) : message.missed_pkts_recv;
                    else
                        object.missed_pkts_recv = options.longs === String ? $util.Long.prototype.toString.call(message.missed_pkts_recv) : options.longs === Number ? new $util.LongBits(message.missed_pkts_recv.low >>> 0, message.missed_pkts_recv.high >>> 0).toNumber(true) : message.missed_pkts_recv;
                if (message.dup_pkts_recv != null && message.hasOwnProperty("dup_pkts_recv"))
                    if (typeof message.dup_pkts_recv === "number")
                        object.dup_pkts_recv = options.longs === String ? String(message.dup_pkts_recv) : message.dup_pkts_recv;
                    else
                        object.dup_pkts_recv = options.longs === String ? $util.Long.prototype.toString.call(message.dup_pkts_recv) : options.longs === Number ? new $util.LongBits(message.dup_pkts_recv.low >>> 0, message.dup_pkts_recv.high >>> 0).toNumber(true) : message.dup_pkts_recv;
                if (message.failed_connect_challenges != null && message.hasOwnProperty("failed_connect_challenges"))
                    if (typeof message.failed_connect_challenges === "number")
                        object.failed_connect_challenges = options.longs === String ? String(message.failed_connect_challenges) : message.failed_connect_challenges;
                    else
                        object.failed_connect_challenges = options.longs === String ? $util.Long.prototype.toString.call(message.failed_connect_challenges) : options.longs === Number ? new $util.LongBits(message.failed_connect_challenges.low >>> 0, message.failed_connect_challenges.high >>> 0).toNumber(true) : message.failed_connect_challenges;
                if (message.micro_sec_avg_latency != null && message.hasOwnProperty("micro_sec_avg_latency"))
                    object.micro_sec_avg_latency = message.micro_sec_avg_latency;
                if (message.micro_sec_min_latency != null && message.hasOwnProperty("micro_sec_min_latency"))
                    object.micro_sec_min_latency = message.micro_sec_min_latency;
                if (message.micro_sec_max_latency != null && message.hasOwnProperty("micro_sec_max_latency"))
                    object.micro_sec_max_latency = message.micro_sec_max_latency;
                if (message.mem_pool_msg_in_use != null && message.hasOwnProperty("mem_pool_msg_in_use"))
                    object.mem_pool_msg_in_use = message.mem_pool_msg_in_use;
                return object;
            };
    
            /**
             * Converts this Stats_VConn to JSON.
             * @function toJSON
             * @memberof CMsgClientConnectionStats.Stats_VConn
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats_VConn.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Stats_VConn;
        })();
    
        return CMsgClientConnectionStats;
    })();
    
    $root.CMsgClientServersAvailable = (function() {
    
        /**
         * Properties of a CMsgClientServersAvailable.
         * @exports ICMsgClientServersAvailable
         * @interface ICMsgClientServersAvailable
         * @property {Array.<CMsgClientServersAvailable.IServer_Types_Available>|null} [server_types_available] CMsgClientServersAvailable server_types_available
         * @property {number|null} [server_type_for_auth_services] CMsgClientServersAvailable server_type_for_auth_services
         */
    
        /**
         * Constructs a new CMsgClientServersAvailable.
         * @exports CMsgClientServersAvailable
         * @classdesc Represents a CMsgClientServersAvailable.
         * @implements ICMsgClientServersAvailable
         * @constructor
         * @param {ICMsgClientServersAvailable=} [properties] Properties to set
         */
        function CMsgClientServersAvailable(properties) {
            this.server_types_available = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientServersAvailable server_types_available.
         * @member {Array.<CMsgClientServersAvailable.IServer_Types_Available>} server_types_available
         * @memberof CMsgClientServersAvailable
         * @instance
         */
        CMsgClientServersAvailable.prototype.server_types_available = $util.emptyArray;
    
        /**
         * CMsgClientServersAvailable server_type_for_auth_services.
         * @member {number} server_type_for_auth_services
         * @memberof CMsgClientServersAvailable
         * @instance
         */
        CMsgClientServersAvailable.prototype.server_type_for_auth_services = 0;
    
        /**
         * Creates a new CMsgClientServersAvailable instance using the specified properties.
         * @function create
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {ICMsgClientServersAvailable=} [properties] Properties to set
         * @returns {CMsgClientServersAvailable} CMsgClientServersAvailable instance
         */
        CMsgClientServersAvailable.create = function create(properties) {
            return new CMsgClientServersAvailable(properties);
        };
    
        /**
         * Encodes the specified CMsgClientServersAvailable message. Does not implicitly {@link CMsgClientServersAvailable.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {ICMsgClientServersAvailable} message CMsgClientServersAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServersAvailable.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.server_types_available != null && message.server_types_available.length)
                for (var i = 0; i < message.server_types_available.length; ++i)
                    $root.CMsgClientServersAvailable.Server_Types_Available.encode(message.server_types_available[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.server_type_for_auth_services != null && Object.hasOwnProperty.call(message, "server_type_for_auth_services"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.server_type_for_auth_services);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientServersAvailable message, length delimited. Does not implicitly {@link CMsgClientServersAvailable.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {ICMsgClientServersAvailable} message CMsgClientServersAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientServersAvailable.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientServersAvailable message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientServersAvailable} CMsgClientServersAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServersAvailable.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServersAvailable();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.server_types_available && message.server_types_available.length))
                        message.server_types_available = [];
                    message.server_types_available.push($root.CMsgClientServersAvailable.Server_Types_Available.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.server_type_for_auth_services = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientServersAvailable message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientServersAvailable} CMsgClientServersAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientServersAvailable.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientServersAvailable message.
         * @function verify
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientServersAvailable.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.server_types_available != null && message.hasOwnProperty("server_types_available")) {
                if (!Array.isArray(message.server_types_available))
                    return "server_types_available: array expected";
                for (var i = 0; i < message.server_types_available.length; ++i) {
                    var error = $root.CMsgClientServersAvailable.Server_Types_Available.verify(message.server_types_available[i]);
                    if (error)
                        return "server_types_available." + error;
                }
            }
            if (message.server_type_for_auth_services != null && message.hasOwnProperty("server_type_for_auth_services"))
                if (!$util.isInteger(message.server_type_for_auth_services))
                    return "server_type_for_auth_services: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientServersAvailable message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientServersAvailable} CMsgClientServersAvailable
         */
        CMsgClientServersAvailable.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientServersAvailable)
                return object;
            var message = new $root.CMsgClientServersAvailable();
            if (object.server_types_available) {
                if (!Array.isArray(object.server_types_available))
                    throw TypeError(".CMsgClientServersAvailable.server_types_available: array expected");
                message.server_types_available = [];
                for (var i = 0; i < object.server_types_available.length; ++i) {
                    if (typeof object.server_types_available[i] !== "object")
                        throw TypeError(".CMsgClientServersAvailable.server_types_available: object expected");
                    message.server_types_available[i] = $root.CMsgClientServersAvailable.Server_Types_Available.fromObject(object.server_types_available[i]);
                }
            }
            if (object.server_type_for_auth_services != null)
                message.server_type_for_auth_services = object.server_type_for_auth_services >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientServersAvailable message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientServersAvailable
         * @static
         * @param {CMsgClientServersAvailable} message CMsgClientServersAvailable
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientServersAvailable.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.server_types_available = [];
            if (options.defaults)
                object.server_type_for_auth_services = 0;
            if (message.server_types_available && message.server_types_available.length) {
                object.server_types_available = [];
                for (var j = 0; j < message.server_types_available.length; ++j)
                    object.server_types_available[j] = $root.CMsgClientServersAvailable.Server_Types_Available.toObject(message.server_types_available[j], options);
            }
            if (message.server_type_for_auth_services != null && message.hasOwnProperty("server_type_for_auth_services"))
                object.server_type_for_auth_services = message.server_type_for_auth_services;
            return object;
        };
    
        /**
         * Converts this CMsgClientServersAvailable to JSON.
         * @function toJSON
         * @memberof CMsgClientServersAvailable
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientServersAvailable.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientServersAvailable.Server_Types_Available = (function() {
    
            /**
             * Properties of a Server_Types_Available.
             * @memberof CMsgClientServersAvailable
             * @interface IServer_Types_Available
             * @property {number|null} [server] Server_Types_Available server
             * @property {boolean|null} [changed] Server_Types_Available changed
             */
    
            /**
             * Constructs a new Server_Types_Available.
             * @memberof CMsgClientServersAvailable
             * @classdesc Represents a Server_Types_Available.
             * @implements IServer_Types_Available
             * @constructor
             * @param {CMsgClientServersAvailable.IServer_Types_Available=} [properties] Properties to set
             */
            function Server_Types_Available(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Server_Types_Available server.
             * @member {number} server
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @instance
             */
            Server_Types_Available.prototype.server = 0;
    
            /**
             * Server_Types_Available changed.
             * @member {boolean} changed
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @instance
             */
            Server_Types_Available.prototype.changed = false;
    
            /**
             * Creates a new Server_Types_Available instance using the specified properties.
             * @function create
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @static
             * @param {CMsgClientServersAvailable.IServer_Types_Available=} [properties] Properties to set
             * @returns {CMsgClientServersAvailable.Server_Types_Available} Server_Types_Available instance
             */
            Server_Types_Available.create = function create(properties) {
                return new Server_Types_Available(properties);
            };
    
            /**
             * Encodes the specified Server_Types_Available message. Does not implicitly {@link CMsgClientServersAvailable.Server_Types_Available.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @static
             * @param {CMsgClientServersAvailable.IServer_Types_Available} message Server_Types_Available message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Server_Types_Available.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.server != null && Object.hasOwnProperty.call(message, "server"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.server);
                if (message.changed != null && Object.hasOwnProperty.call(message, "changed"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.changed);
                return writer;
            };
    
            /**
             * Encodes the specified Server_Types_Available message, length delimited. Does not implicitly {@link CMsgClientServersAvailable.Server_Types_Available.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @static
             * @param {CMsgClientServersAvailable.IServer_Types_Available} message Server_Types_Available message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Server_Types_Available.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Server_Types_Available message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientServersAvailable.Server_Types_Available} Server_Types_Available
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Server_Types_Available.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientServersAvailable.Server_Types_Available();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.server = reader.uint32();
                        break;
                    case 2:
                        message.changed = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Server_Types_Available message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientServersAvailable.Server_Types_Available} Server_Types_Available
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Server_Types_Available.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Server_Types_Available message.
             * @function verify
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Server_Types_Available.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.server != null && message.hasOwnProperty("server"))
                    if (!$util.isInteger(message.server))
                        return "server: integer expected";
                if (message.changed != null && message.hasOwnProperty("changed"))
                    if (typeof message.changed !== "boolean")
                        return "changed: boolean expected";
                return null;
            };
    
            /**
             * Creates a Server_Types_Available message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientServersAvailable.Server_Types_Available} Server_Types_Available
             */
            Server_Types_Available.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientServersAvailable.Server_Types_Available)
                    return object;
                var message = new $root.CMsgClientServersAvailable.Server_Types_Available();
                if (object.server != null)
                    message.server = object.server >>> 0;
                if (object.changed != null)
                    message.changed = Boolean(object.changed);
                return message;
            };
    
            /**
             * Creates a plain object from a Server_Types_Available message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @static
             * @param {CMsgClientServersAvailable.Server_Types_Available} message Server_Types_Available
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Server_Types_Available.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.server = 0;
                    object.changed = false;
                }
                if (message.server != null && message.hasOwnProperty("server"))
                    object.server = message.server;
                if (message.changed != null && message.hasOwnProperty("changed"))
                    object.changed = message.changed;
                return object;
            };
    
            /**
             * Converts this Server_Types_Available to JSON.
             * @function toJSON
             * @memberof CMsgClientServersAvailable.Server_Types_Available
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Server_Types_Available.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Server_Types_Available;
        })();
    
        return CMsgClientServersAvailable;
    })();
    
    $root.CMsgClientGetUserStats = (function() {
    
        /**
         * Properties of a CMsgClientGetUserStats.
         * @exports ICMsgClientGetUserStats
         * @interface ICMsgClientGetUserStats
         * @property {number|Long|null} [game_id] CMsgClientGetUserStats game_id
         * @property {number|null} [crc_stats] CMsgClientGetUserStats crc_stats
         * @property {number|null} [schema_local_version] CMsgClientGetUserStats schema_local_version
         * @property {number|Long|null} [steam_id_for_user] CMsgClientGetUserStats steam_id_for_user
         */
    
        /**
         * Constructs a new CMsgClientGetUserStats.
         * @exports CMsgClientGetUserStats
         * @classdesc Represents a CMsgClientGetUserStats.
         * @implements ICMsgClientGetUserStats
         * @constructor
         * @param {ICMsgClientGetUserStats=} [properties] Properties to set
         */
        function CMsgClientGetUserStats(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetUserStats game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientGetUserStats
         * @instance
         */
        CMsgClientGetUserStats.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientGetUserStats crc_stats.
         * @member {number} crc_stats
         * @memberof CMsgClientGetUserStats
         * @instance
         */
        CMsgClientGetUserStats.prototype.crc_stats = 0;
    
        /**
         * CMsgClientGetUserStats schema_local_version.
         * @member {number} schema_local_version
         * @memberof CMsgClientGetUserStats
         * @instance
         */
        CMsgClientGetUserStats.prototype.schema_local_version = 0;
    
        /**
         * CMsgClientGetUserStats steam_id_for_user.
         * @member {number|Long} steam_id_for_user
         * @memberof CMsgClientGetUserStats
         * @instance
         */
        CMsgClientGetUserStats.prototype.steam_id_for_user = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientGetUserStats instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetUserStats
         * @static
         * @param {ICMsgClientGetUserStats=} [properties] Properties to set
         * @returns {CMsgClientGetUserStats} CMsgClientGetUserStats instance
         */
        CMsgClientGetUserStats.create = function create(properties) {
            return new CMsgClientGetUserStats(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetUserStats message. Does not implicitly {@link CMsgClientGetUserStats.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetUserStats
         * @static
         * @param {ICMsgClientGetUserStats} message CMsgClientGetUserStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetUserStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.game_id);
            if (message.crc_stats != null && Object.hasOwnProperty.call(message, "crc_stats"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.crc_stats);
            if (message.schema_local_version != null && Object.hasOwnProperty.call(message, "schema_local_version"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.schema_local_version);
            if (message.steam_id_for_user != null && Object.hasOwnProperty.call(message, "steam_id_for_user"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.steam_id_for_user);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetUserStats message, length delimited. Does not implicitly {@link CMsgClientGetUserStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetUserStats
         * @static
         * @param {ICMsgClientGetUserStats} message CMsgClientGetUserStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetUserStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetUserStats message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetUserStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetUserStats} CMsgClientGetUserStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetUserStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetUserStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.game_id = reader.fixed64();
                    break;
                case 2:
                    message.crc_stats = reader.uint32();
                    break;
                case 3:
                    message.schema_local_version = reader.int32();
                    break;
                case 4:
                    message.steam_id_for_user = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetUserStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetUserStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetUserStats} CMsgClientGetUserStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetUserStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetUserStats message.
         * @function verify
         * @memberof CMsgClientGetUserStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetUserStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                if (!$util.isInteger(message.crc_stats))
                    return "crc_stats: integer expected";
            if (message.schema_local_version != null && message.hasOwnProperty("schema_local_version"))
                if (!$util.isInteger(message.schema_local_version))
                    return "schema_local_version: integer expected";
            if (message.steam_id_for_user != null && message.hasOwnProperty("steam_id_for_user"))
                if (!$util.isInteger(message.steam_id_for_user) && !(message.steam_id_for_user && $util.isInteger(message.steam_id_for_user.low) && $util.isInteger(message.steam_id_for_user.high)))
                    return "steam_id_for_user: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetUserStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetUserStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetUserStats} CMsgClientGetUserStats
         */
        CMsgClientGetUserStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetUserStats)
                return object;
            var message = new $root.CMsgClientGetUserStats();
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            if (object.crc_stats != null)
                message.crc_stats = object.crc_stats >>> 0;
            if (object.schema_local_version != null)
                message.schema_local_version = object.schema_local_version | 0;
            if (object.steam_id_for_user != null)
                if ($util.Long)
                    (message.steam_id_for_user = $util.Long.fromValue(object.steam_id_for_user)).unsigned = false;
                else if (typeof object.steam_id_for_user === "string")
                    message.steam_id_for_user = parseInt(object.steam_id_for_user, 10);
                else if (typeof object.steam_id_for_user === "number")
                    message.steam_id_for_user = object.steam_id_for_user;
                else if (typeof object.steam_id_for_user === "object")
                    message.steam_id_for_user = new $util.LongBits(object.steam_id_for_user.low >>> 0, object.steam_id_for_user.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetUserStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetUserStats
         * @static
         * @param {CMsgClientGetUserStats} message CMsgClientGetUserStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetUserStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
                object.crc_stats = 0;
                object.schema_local_version = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id_for_user = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id_for_user = options.longs === String ? "0" : 0;
            }
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                object.crc_stats = message.crc_stats;
            if (message.schema_local_version != null && message.hasOwnProperty("schema_local_version"))
                object.schema_local_version = message.schema_local_version;
            if (message.steam_id_for_user != null && message.hasOwnProperty("steam_id_for_user"))
                if (typeof message.steam_id_for_user === "number")
                    object.steam_id_for_user = options.longs === String ? String(message.steam_id_for_user) : message.steam_id_for_user;
                else
                    object.steam_id_for_user = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id_for_user) : options.longs === Number ? new $util.LongBits(message.steam_id_for_user.low >>> 0, message.steam_id_for_user.high >>> 0).toNumber() : message.steam_id_for_user;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetUserStats to JSON.
         * @function toJSON
         * @memberof CMsgClientGetUserStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetUserStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetUserStats;
    })();
    
    $root.CMsgClientGetUserStatsResponse = (function() {
    
        /**
         * Properties of a CMsgClientGetUserStatsResponse.
         * @exports ICMsgClientGetUserStatsResponse
         * @interface ICMsgClientGetUserStatsResponse
         * @property {number|Long|null} [game_id] CMsgClientGetUserStatsResponse game_id
         * @property {number|null} [eresult] CMsgClientGetUserStatsResponse eresult
         * @property {number|null} [crc_stats] CMsgClientGetUserStatsResponse crc_stats
         * @property {Uint8Array|null} [schema] CMsgClientGetUserStatsResponse schema
         * @property {Array.<CMsgClientGetUserStatsResponse.IStats>|null} [stats] CMsgClientGetUserStatsResponse stats
         * @property {Array.<CMsgClientGetUserStatsResponse.IAchievement_Blocks>|null} [achievement_blocks] CMsgClientGetUserStatsResponse achievement_blocks
         */
    
        /**
         * Constructs a new CMsgClientGetUserStatsResponse.
         * @exports CMsgClientGetUserStatsResponse
         * @classdesc Represents a CMsgClientGetUserStatsResponse.
         * @implements ICMsgClientGetUserStatsResponse
         * @constructor
         * @param {ICMsgClientGetUserStatsResponse=} [properties] Properties to set
         */
        function CMsgClientGetUserStatsResponse(properties) {
            this.stats = [];
            this.achievement_blocks = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetUserStatsResponse game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientGetUserStatsResponse
         * @instance
         */
        CMsgClientGetUserStatsResponse.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientGetUserStatsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientGetUserStatsResponse
         * @instance
         */
        CMsgClientGetUserStatsResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientGetUserStatsResponse crc_stats.
         * @member {number} crc_stats
         * @memberof CMsgClientGetUserStatsResponse
         * @instance
         */
        CMsgClientGetUserStatsResponse.prototype.crc_stats = 0;
    
        /**
         * CMsgClientGetUserStatsResponse schema.
         * @member {Uint8Array} schema
         * @memberof CMsgClientGetUserStatsResponse
         * @instance
         */
        CMsgClientGetUserStatsResponse.prototype.schema = $util.newBuffer([]);
    
        /**
         * CMsgClientGetUserStatsResponse stats.
         * @member {Array.<CMsgClientGetUserStatsResponse.IStats>} stats
         * @memberof CMsgClientGetUserStatsResponse
         * @instance
         */
        CMsgClientGetUserStatsResponse.prototype.stats = $util.emptyArray;
    
        /**
         * CMsgClientGetUserStatsResponse achievement_blocks.
         * @member {Array.<CMsgClientGetUserStatsResponse.IAchievement_Blocks>} achievement_blocks
         * @memberof CMsgClientGetUserStatsResponse
         * @instance
         */
        CMsgClientGetUserStatsResponse.prototype.achievement_blocks = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientGetUserStatsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetUserStatsResponse
         * @static
         * @param {ICMsgClientGetUserStatsResponse=} [properties] Properties to set
         * @returns {CMsgClientGetUserStatsResponse} CMsgClientGetUserStatsResponse instance
         */
        CMsgClientGetUserStatsResponse.create = function create(properties) {
            return new CMsgClientGetUserStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetUserStatsResponse message. Does not implicitly {@link CMsgClientGetUserStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetUserStatsResponse
         * @static
         * @param {ICMsgClientGetUserStatsResponse} message CMsgClientGetUserStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetUserStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.game_id);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.eresult);
            if (message.crc_stats != null && Object.hasOwnProperty.call(message, "crc_stats"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.crc_stats);
            if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.schema);
            if (message.stats != null && message.stats.length)
                for (var i = 0; i < message.stats.length; ++i)
                    $root.CMsgClientGetUserStatsResponse.Stats.encode(message.stats[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.achievement_blocks != null && message.achievement_blocks.length)
                for (var i = 0; i < message.achievement_blocks.length; ++i)
                    $root.CMsgClientGetUserStatsResponse.Achievement_Blocks.encode(message.achievement_blocks[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetUserStatsResponse message, length delimited. Does not implicitly {@link CMsgClientGetUserStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetUserStatsResponse
         * @static
         * @param {ICMsgClientGetUserStatsResponse} message CMsgClientGetUserStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetUserStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetUserStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetUserStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetUserStatsResponse} CMsgClientGetUserStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetUserStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetUserStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.game_id = reader.fixed64();
                    break;
                case 2:
                    message.eresult = reader.int32();
                    break;
                case 3:
                    message.crc_stats = reader.uint32();
                    break;
                case 4:
                    message.schema = reader.bytes();
                    break;
                case 5:
                    if (!(message.stats && message.stats.length))
                        message.stats = [];
                    message.stats.push($root.CMsgClientGetUserStatsResponse.Stats.decode(reader, reader.uint32()));
                    break;
                case 6:
                    if (!(message.achievement_blocks && message.achievement_blocks.length))
                        message.achievement_blocks = [];
                    message.achievement_blocks.push($root.CMsgClientGetUserStatsResponse.Achievement_Blocks.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetUserStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetUserStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetUserStatsResponse} CMsgClientGetUserStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetUserStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetUserStatsResponse message.
         * @function verify
         * @memberof CMsgClientGetUserStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetUserStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                if (!$util.isInteger(message.crc_stats))
                    return "crc_stats: integer expected";
            if (message.schema != null && message.hasOwnProperty("schema"))
                if (!(message.schema && typeof message.schema.length === "number" || $util.isString(message.schema)))
                    return "schema: buffer expected";
            if (message.stats != null && message.hasOwnProperty("stats")) {
                if (!Array.isArray(message.stats))
                    return "stats: array expected";
                for (var i = 0; i < message.stats.length; ++i) {
                    var error = $root.CMsgClientGetUserStatsResponse.Stats.verify(message.stats[i]);
                    if (error)
                        return "stats." + error;
                }
            }
            if (message.achievement_blocks != null && message.hasOwnProperty("achievement_blocks")) {
                if (!Array.isArray(message.achievement_blocks))
                    return "achievement_blocks: array expected";
                for (var i = 0; i < message.achievement_blocks.length; ++i) {
                    var error = $root.CMsgClientGetUserStatsResponse.Achievement_Blocks.verify(message.achievement_blocks[i]);
                    if (error)
                        return "achievement_blocks." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientGetUserStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetUserStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetUserStatsResponse} CMsgClientGetUserStatsResponse
         */
        CMsgClientGetUserStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetUserStatsResponse)
                return object;
            var message = new $root.CMsgClientGetUserStatsResponse();
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.crc_stats != null)
                message.crc_stats = object.crc_stats >>> 0;
            if (object.schema != null)
                if (typeof object.schema === "string")
                    $util.base64.decode(object.schema, message.schema = $util.newBuffer($util.base64.length(object.schema)), 0);
                else if (object.schema.length)
                    message.schema = object.schema;
            if (object.stats) {
                if (!Array.isArray(object.stats))
                    throw TypeError(".CMsgClientGetUserStatsResponse.stats: array expected");
                message.stats = [];
                for (var i = 0; i < object.stats.length; ++i) {
                    if (typeof object.stats[i] !== "object")
                        throw TypeError(".CMsgClientGetUserStatsResponse.stats: object expected");
                    message.stats[i] = $root.CMsgClientGetUserStatsResponse.Stats.fromObject(object.stats[i]);
                }
            }
            if (object.achievement_blocks) {
                if (!Array.isArray(object.achievement_blocks))
                    throw TypeError(".CMsgClientGetUserStatsResponse.achievement_blocks: array expected");
                message.achievement_blocks = [];
                for (var i = 0; i < object.achievement_blocks.length; ++i) {
                    if (typeof object.achievement_blocks[i] !== "object")
                        throw TypeError(".CMsgClientGetUserStatsResponse.achievement_blocks: object expected");
                    message.achievement_blocks[i] = $root.CMsgClientGetUserStatsResponse.Achievement_Blocks.fromObject(object.achievement_blocks[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetUserStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetUserStatsResponse
         * @static
         * @param {CMsgClientGetUserStatsResponse} message CMsgClientGetUserStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetUserStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.stats = [];
                object.achievement_blocks = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
                object.eresult = 2;
                object.crc_stats = 0;
                if (options.bytes === String)
                    object.schema = "";
                else {
                    object.schema = [];
                    if (options.bytes !== Array)
                        object.schema = $util.newBuffer(object.schema);
                }
            }
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                object.crc_stats = message.crc_stats;
            if (message.schema != null && message.hasOwnProperty("schema"))
                object.schema = options.bytes === String ? $util.base64.encode(message.schema, 0, message.schema.length) : options.bytes === Array ? Array.prototype.slice.call(message.schema) : message.schema;
            if (message.stats && message.stats.length) {
                object.stats = [];
                for (var j = 0; j < message.stats.length; ++j)
                    object.stats[j] = $root.CMsgClientGetUserStatsResponse.Stats.toObject(message.stats[j], options);
            }
            if (message.achievement_blocks && message.achievement_blocks.length) {
                object.achievement_blocks = [];
                for (var j = 0; j < message.achievement_blocks.length; ++j)
                    object.achievement_blocks[j] = $root.CMsgClientGetUserStatsResponse.Achievement_Blocks.toObject(message.achievement_blocks[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientGetUserStatsResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientGetUserStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetUserStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientGetUserStatsResponse.Stats = (function() {
    
            /**
             * Properties of a Stats.
             * @memberof CMsgClientGetUserStatsResponse
             * @interface IStats
             * @property {number|null} [stat_id] Stats stat_id
             * @property {number|null} [stat_value] Stats stat_value
             */
    
            /**
             * Constructs a new Stats.
             * @memberof CMsgClientGetUserStatsResponse
             * @classdesc Represents a Stats.
             * @implements IStats
             * @constructor
             * @param {CMsgClientGetUserStatsResponse.IStats=} [properties] Properties to set
             */
            function Stats(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats stat_id.
             * @member {number} stat_id
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @instance
             */
            Stats.prototype.stat_id = 0;
    
            /**
             * Stats stat_value.
             * @member {number} stat_value
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @instance
             */
            Stats.prototype.stat_value = 0;
    
            /**
             * Creates a new Stats instance using the specified properties.
             * @function create
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @static
             * @param {CMsgClientGetUserStatsResponse.IStats=} [properties] Properties to set
             * @returns {CMsgClientGetUserStatsResponse.Stats} Stats instance
             */
            Stats.create = function create(properties) {
                return new Stats(properties);
            };
    
            /**
             * Encodes the specified Stats message. Does not implicitly {@link CMsgClientGetUserStatsResponse.Stats.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @static
             * @param {CMsgClientGetUserStatsResponse.IStats} message Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.stat_id != null && Object.hasOwnProperty.call(message, "stat_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.stat_id);
                if (message.stat_value != null && Object.hasOwnProperty.call(message, "stat_value"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.stat_value);
                return writer;
            };
    
            /**
             * Encodes the specified Stats message, length delimited. Does not implicitly {@link CMsgClientGetUserStatsResponse.Stats.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @static
             * @param {CMsgClientGetUserStatsResponse.IStats} message Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientGetUserStatsResponse.Stats} Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetUserStatsResponse.Stats();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.stat_id = reader.uint32();
                        break;
                    case 2:
                        message.stat_value = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientGetUserStatsResponse.Stats} Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats message.
             * @function verify
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    if (!$util.isInteger(message.stat_id))
                        return "stat_id: integer expected";
                if (message.stat_value != null && message.hasOwnProperty("stat_value"))
                    if (!$util.isInteger(message.stat_value))
                        return "stat_value: integer expected";
                return null;
            };
    
            /**
             * Creates a Stats message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientGetUserStatsResponse.Stats} Stats
             */
            Stats.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientGetUserStatsResponse.Stats)
                    return object;
                var message = new $root.CMsgClientGetUserStatsResponse.Stats();
                if (object.stat_id != null)
                    message.stat_id = object.stat_id >>> 0;
                if (object.stat_value != null)
                    message.stat_value = object.stat_value >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Stats message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @static
             * @param {CMsgClientGetUserStatsResponse.Stats} message Stats
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.stat_id = 0;
                    object.stat_value = 0;
                }
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    object.stat_id = message.stat_id;
                if (message.stat_value != null && message.hasOwnProperty("stat_value"))
                    object.stat_value = message.stat_value;
                return object;
            };
    
            /**
             * Converts this Stats to JSON.
             * @function toJSON
             * @memberof CMsgClientGetUserStatsResponse.Stats
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Stats;
        })();
    
        CMsgClientGetUserStatsResponse.Achievement_Blocks = (function() {
    
            /**
             * Properties of an Achievement_Blocks.
             * @memberof CMsgClientGetUserStatsResponse
             * @interface IAchievement_Blocks
             * @property {number|null} [achievement_id] Achievement_Blocks achievement_id
             * @property {Array.<number>|null} [unlock_time] Achievement_Blocks unlock_time
             */
    
            /**
             * Constructs a new Achievement_Blocks.
             * @memberof CMsgClientGetUserStatsResponse
             * @classdesc Represents an Achievement_Blocks.
             * @implements IAchievement_Blocks
             * @constructor
             * @param {CMsgClientGetUserStatsResponse.IAchievement_Blocks=} [properties] Properties to set
             */
            function Achievement_Blocks(properties) {
                this.unlock_time = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Achievement_Blocks achievement_id.
             * @member {number} achievement_id
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @instance
             */
            Achievement_Blocks.prototype.achievement_id = 0;
    
            /**
             * Achievement_Blocks unlock_time.
             * @member {Array.<number>} unlock_time
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @instance
             */
            Achievement_Blocks.prototype.unlock_time = $util.emptyArray;
    
            /**
             * Creates a new Achievement_Blocks instance using the specified properties.
             * @function create
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgClientGetUserStatsResponse.IAchievement_Blocks=} [properties] Properties to set
             * @returns {CMsgClientGetUserStatsResponse.Achievement_Blocks} Achievement_Blocks instance
             */
            Achievement_Blocks.create = function create(properties) {
                return new Achievement_Blocks(properties);
            };
    
            /**
             * Encodes the specified Achievement_Blocks message. Does not implicitly {@link CMsgClientGetUserStatsResponse.Achievement_Blocks.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgClientGetUserStatsResponse.IAchievement_Blocks} message Achievement_Blocks message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Achievement_Blocks.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.achievement_id != null && Object.hasOwnProperty.call(message, "achievement_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.achievement_id);
                if (message.unlock_time != null && message.unlock_time.length)
                    for (var i = 0; i < message.unlock_time.length; ++i)
                        writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.unlock_time[i]);
                return writer;
            };
    
            /**
             * Encodes the specified Achievement_Blocks message, length delimited. Does not implicitly {@link CMsgClientGetUserStatsResponse.Achievement_Blocks.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgClientGetUserStatsResponse.IAchievement_Blocks} message Achievement_Blocks message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Achievement_Blocks.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Achievement_Blocks message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientGetUserStatsResponse.Achievement_Blocks} Achievement_Blocks
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Achievement_Blocks.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetUserStatsResponse.Achievement_Blocks();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.achievement_id = reader.uint32();
                        break;
                    case 2:
                        if (!(message.unlock_time && message.unlock_time.length))
                            message.unlock_time = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.unlock_time.push(reader.fixed32());
                        } else
                            message.unlock_time.push(reader.fixed32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Achievement_Blocks message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientGetUserStatsResponse.Achievement_Blocks} Achievement_Blocks
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Achievement_Blocks.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Achievement_Blocks message.
             * @function verify
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Achievement_Blocks.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.achievement_id != null && message.hasOwnProperty("achievement_id"))
                    if (!$util.isInteger(message.achievement_id))
                        return "achievement_id: integer expected";
                if (message.unlock_time != null && message.hasOwnProperty("unlock_time")) {
                    if (!Array.isArray(message.unlock_time))
                        return "unlock_time: array expected";
                    for (var i = 0; i < message.unlock_time.length; ++i)
                        if (!$util.isInteger(message.unlock_time[i]))
                            return "unlock_time: integer[] expected";
                }
                return null;
            };
    
            /**
             * Creates an Achievement_Blocks message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientGetUserStatsResponse.Achievement_Blocks} Achievement_Blocks
             */
            Achievement_Blocks.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientGetUserStatsResponse.Achievement_Blocks)
                    return object;
                var message = new $root.CMsgClientGetUserStatsResponse.Achievement_Blocks();
                if (object.achievement_id != null)
                    message.achievement_id = object.achievement_id >>> 0;
                if (object.unlock_time) {
                    if (!Array.isArray(object.unlock_time))
                        throw TypeError(".CMsgClientGetUserStatsResponse.Achievement_Blocks.unlock_time: array expected");
                    message.unlock_time = [];
                    for (var i = 0; i < object.unlock_time.length; ++i)
                        message.unlock_time[i] = object.unlock_time[i] >>> 0;
                }
                return message;
            };
    
            /**
             * Creates a plain object from an Achievement_Blocks message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @static
             * @param {CMsgClientGetUserStatsResponse.Achievement_Blocks} message Achievement_Blocks
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Achievement_Blocks.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.unlock_time = [];
                if (options.defaults)
                    object.achievement_id = 0;
                if (message.achievement_id != null && message.hasOwnProperty("achievement_id"))
                    object.achievement_id = message.achievement_id;
                if (message.unlock_time && message.unlock_time.length) {
                    object.unlock_time = [];
                    for (var j = 0; j < message.unlock_time.length; ++j)
                        object.unlock_time[j] = message.unlock_time[j];
                }
                return object;
            };
    
            /**
             * Converts this Achievement_Blocks to JSON.
             * @function toJSON
             * @memberof CMsgClientGetUserStatsResponse.Achievement_Blocks
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Achievement_Blocks.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Achievement_Blocks;
        })();
    
        return CMsgClientGetUserStatsResponse;
    })();
    
    $root.CMsgClientStoreUserStatsResponse = (function() {
    
        /**
         * Properties of a CMsgClientStoreUserStatsResponse.
         * @exports ICMsgClientStoreUserStatsResponse
         * @interface ICMsgClientStoreUserStatsResponse
         * @property {number|Long|null} [game_id] CMsgClientStoreUserStatsResponse game_id
         * @property {number|null} [eresult] CMsgClientStoreUserStatsResponse eresult
         * @property {number|null} [crc_stats] CMsgClientStoreUserStatsResponse crc_stats
         * @property {Array.<CMsgClientStoreUserStatsResponse.IStats_Failed_Validation>|null} [stats_failed_validation] CMsgClientStoreUserStatsResponse stats_failed_validation
         * @property {boolean|null} [stats_out_of_date] CMsgClientStoreUserStatsResponse stats_out_of_date
         */
    
        /**
         * Constructs a new CMsgClientStoreUserStatsResponse.
         * @exports CMsgClientStoreUserStatsResponse
         * @classdesc Represents a CMsgClientStoreUserStatsResponse.
         * @implements ICMsgClientStoreUserStatsResponse
         * @constructor
         * @param {ICMsgClientStoreUserStatsResponse=} [properties] Properties to set
         */
        function CMsgClientStoreUserStatsResponse(properties) {
            this.stats_failed_validation = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientStoreUserStatsResponse game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientStoreUserStatsResponse
         * @instance
         */
        CMsgClientStoreUserStatsResponse.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientStoreUserStatsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientStoreUserStatsResponse
         * @instance
         */
        CMsgClientStoreUserStatsResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientStoreUserStatsResponse crc_stats.
         * @member {number} crc_stats
         * @memberof CMsgClientStoreUserStatsResponse
         * @instance
         */
        CMsgClientStoreUserStatsResponse.prototype.crc_stats = 0;
    
        /**
         * CMsgClientStoreUserStatsResponse stats_failed_validation.
         * @member {Array.<CMsgClientStoreUserStatsResponse.IStats_Failed_Validation>} stats_failed_validation
         * @memberof CMsgClientStoreUserStatsResponse
         * @instance
         */
        CMsgClientStoreUserStatsResponse.prototype.stats_failed_validation = $util.emptyArray;
    
        /**
         * CMsgClientStoreUserStatsResponse stats_out_of_date.
         * @member {boolean} stats_out_of_date
         * @memberof CMsgClientStoreUserStatsResponse
         * @instance
         */
        CMsgClientStoreUserStatsResponse.prototype.stats_out_of_date = false;
    
        /**
         * Creates a new CMsgClientStoreUserStatsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientStoreUserStatsResponse
         * @static
         * @param {ICMsgClientStoreUserStatsResponse=} [properties] Properties to set
         * @returns {CMsgClientStoreUserStatsResponse} CMsgClientStoreUserStatsResponse instance
         */
        CMsgClientStoreUserStatsResponse.create = function create(properties) {
            return new CMsgClientStoreUserStatsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientStoreUserStatsResponse message. Does not implicitly {@link CMsgClientStoreUserStatsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientStoreUserStatsResponse
         * @static
         * @param {ICMsgClientStoreUserStatsResponse} message CMsgClientStoreUserStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStoreUserStatsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.game_id);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.eresult);
            if (message.crc_stats != null && Object.hasOwnProperty.call(message, "crc_stats"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.crc_stats);
            if (message.stats_failed_validation != null && message.stats_failed_validation.length)
                for (var i = 0; i < message.stats_failed_validation.length; ++i)
                    $root.CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.encode(message.stats_failed_validation[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.stats_out_of_date != null && Object.hasOwnProperty.call(message, "stats_out_of_date"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.stats_out_of_date);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientStoreUserStatsResponse message, length delimited. Does not implicitly {@link CMsgClientStoreUserStatsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientStoreUserStatsResponse
         * @static
         * @param {ICMsgClientStoreUserStatsResponse} message CMsgClientStoreUserStatsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStoreUserStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientStoreUserStatsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientStoreUserStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientStoreUserStatsResponse} CMsgClientStoreUserStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStoreUserStatsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStoreUserStatsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.game_id = reader.fixed64();
                    break;
                case 2:
                    message.eresult = reader.int32();
                    break;
                case 3:
                    message.crc_stats = reader.uint32();
                    break;
                case 4:
                    if (!(message.stats_failed_validation && message.stats_failed_validation.length))
                        message.stats_failed_validation = [];
                    message.stats_failed_validation.push($root.CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.stats_out_of_date = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientStoreUserStatsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientStoreUserStatsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientStoreUserStatsResponse} CMsgClientStoreUserStatsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStoreUserStatsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientStoreUserStatsResponse message.
         * @function verify
         * @memberof CMsgClientStoreUserStatsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientStoreUserStatsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                if (!$util.isInteger(message.crc_stats))
                    return "crc_stats: integer expected";
            if (message.stats_failed_validation != null && message.hasOwnProperty("stats_failed_validation")) {
                if (!Array.isArray(message.stats_failed_validation))
                    return "stats_failed_validation: array expected";
                for (var i = 0; i < message.stats_failed_validation.length; ++i) {
                    var error = $root.CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.verify(message.stats_failed_validation[i]);
                    if (error)
                        return "stats_failed_validation." + error;
                }
            }
            if (message.stats_out_of_date != null && message.hasOwnProperty("stats_out_of_date"))
                if (typeof message.stats_out_of_date !== "boolean")
                    return "stats_out_of_date: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientStoreUserStatsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientStoreUserStatsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientStoreUserStatsResponse} CMsgClientStoreUserStatsResponse
         */
        CMsgClientStoreUserStatsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientStoreUserStatsResponse)
                return object;
            var message = new $root.CMsgClientStoreUserStatsResponse();
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.crc_stats != null)
                message.crc_stats = object.crc_stats >>> 0;
            if (object.stats_failed_validation) {
                if (!Array.isArray(object.stats_failed_validation))
                    throw TypeError(".CMsgClientStoreUserStatsResponse.stats_failed_validation: array expected");
                message.stats_failed_validation = [];
                for (var i = 0; i < object.stats_failed_validation.length; ++i) {
                    if (typeof object.stats_failed_validation[i] !== "object")
                        throw TypeError(".CMsgClientStoreUserStatsResponse.stats_failed_validation: object expected");
                    message.stats_failed_validation[i] = $root.CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.fromObject(object.stats_failed_validation[i]);
                }
            }
            if (object.stats_out_of_date != null)
                message.stats_out_of_date = Boolean(object.stats_out_of_date);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientStoreUserStatsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientStoreUserStatsResponse
         * @static
         * @param {CMsgClientStoreUserStatsResponse} message CMsgClientStoreUserStatsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientStoreUserStatsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stats_failed_validation = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
                object.eresult = 2;
                object.crc_stats = 0;
                object.stats_out_of_date = false;
            }
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                object.crc_stats = message.crc_stats;
            if (message.stats_failed_validation && message.stats_failed_validation.length) {
                object.stats_failed_validation = [];
                for (var j = 0; j < message.stats_failed_validation.length; ++j)
                    object.stats_failed_validation[j] = $root.CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.toObject(message.stats_failed_validation[j], options);
            }
            if (message.stats_out_of_date != null && message.hasOwnProperty("stats_out_of_date"))
                object.stats_out_of_date = message.stats_out_of_date;
            return object;
        };
    
        /**
         * Converts this CMsgClientStoreUserStatsResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientStoreUserStatsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientStoreUserStatsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientStoreUserStatsResponse.Stats_Failed_Validation = (function() {
    
            /**
             * Properties of a Stats_Failed_Validation.
             * @memberof CMsgClientStoreUserStatsResponse
             * @interface IStats_Failed_Validation
             * @property {number|null} [stat_id] Stats_Failed_Validation stat_id
             * @property {number|null} [reverted_stat_value] Stats_Failed_Validation reverted_stat_value
             */
    
            /**
             * Constructs a new Stats_Failed_Validation.
             * @memberof CMsgClientStoreUserStatsResponse
             * @classdesc Represents a Stats_Failed_Validation.
             * @implements IStats_Failed_Validation
             * @constructor
             * @param {CMsgClientStoreUserStatsResponse.IStats_Failed_Validation=} [properties] Properties to set
             */
            function Stats_Failed_Validation(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats_Failed_Validation stat_id.
             * @member {number} stat_id
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @instance
             */
            Stats_Failed_Validation.prototype.stat_id = 0;
    
            /**
             * Stats_Failed_Validation reverted_stat_value.
             * @member {number} reverted_stat_value
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @instance
             */
            Stats_Failed_Validation.prototype.reverted_stat_value = 0;
    
            /**
             * Creates a new Stats_Failed_Validation instance using the specified properties.
             * @function create
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @static
             * @param {CMsgClientStoreUserStatsResponse.IStats_Failed_Validation=} [properties] Properties to set
             * @returns {CMsgClientStoreUserStatsResponse.Stats_Failed_Validation} Stats_Failed_Validation instance
             */
            Stats_Failed_Validation.create = function create(properties) {
                return new Stats_Failed_Validation(properties);
            };
    
            /**
             * Encodes the specified Stats_Failed_Validation message. Does not implicitly {@link CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @static
             * @param {CMsgClientStoreUserStatsResponse.IStats_Failed_Validation} message Stats_Failed_Validation message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_Failed_Validation.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.stat_id != null && Object.hasOwnProperty.call(message, "stat_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.stat_id);
                if (message.reverted_stat_value != null && Object.hasOwnProperty.call(message, "reverted_stat_value"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.reverted_stat_value);
                return writer;
            };
    
            /**
             * Encodes the specified Stats_Failed_Validation message, length delimited. Does not implicitly {@link CMsgClientStoreUserStatsResponse.Stats_Failed_Validation.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @static
             * @param {CMsgClientStoreUserStatsResponse.IStats_Failed_Validation} message Stats_Failed_Validation message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_Failed_Validation.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats_Failed_Validation message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientStoreUserStatsResponse.Stats_Failed_Validation} Stats_Failed_Validation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_Failed_Validation.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStoreUserStatsResponse.Stats_Failed_Validation();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.stat_id = reader.uint32();
                        break;
                    case 2:
                        message.reverted_stat_value = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats_Failed_Validation message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientStoreUserStatsResponse.Stats_Failed_Validation} Stats_Failed_Validation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_Failed_Validation.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats_Failed_Validation message.
             * @function verify
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats_Failed_Validation.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    if (!$util.isInteger(message.stat_id))
                        return "stat_id: integer expected";
                if (message.reverted_stat_value != null && message.hasOwnProperty("reverted_stat_value"))
                    if (!$util.isInteger(message.reverted_stat_value))
                        return "reverted_stat_value: integer expected";
                return null;
            };
    
            /**
             * Creates a Stats_Failed_Validation message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientStoreUserStatsResponse.Stats_Failed_Validation} Stats_Failed_Validation
             */
            Stats_Failed_Validation.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientStoreUserStatsResponse.Stats_Failed_Validation)
                    return object;
                var message = new $root.CMsgClientStoreUserStatsResponse.Stats_Failed_Validation();
                if (object.stat_id != null)
                    message.stat_id = object.stat_id >>> 0;
                if (object.reverted_stat_value != null)
                    message.reverted_stat_value = object.reverted_stat_value >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Stats_Failed_Validation message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @static
             * @param {CMsgClientStoreUserStatsResponse.Stats_Failed_Validation} message Stats_Failed_Validation
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats_Failed_Validation.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.stat_id = 0;
                    object.reverted_stat_value = 0;
                }
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    object.stat_id = message.stat_id;
                if (message.reverted_stat_value != null && message.hasOwnProperty("reverted_stat_value"))
                    object.reverted_stat_value = message.reverted_stat_value;
                return object;
            };
    
            /**
             * Converts this Stats_Failed_Validation to JSON.
             * @function toJSON
             * @memberof CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats_Failed_Validation.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Stats_Failed_Validation;
        })();
    
        return CMsgClientStoreUserStatsResponse;
    })();
    
    $root.CMsgClientStoreUserStats2 = (function() {
    
        /**
         * Properties of a CMsgClientStoreUserStats2.
         * @exports ICMsgClientStoreUserStats2
         * @interface ICMsgClientStoreUserStats2
         * @property {number|Long|null} [game_id] CMsgClientStoreUserStats2 game_id
         * @property {number|Long|null} [settor_steam_id] CMsgClientStoreUserStats2 settor_steam_id
         * @property {number|Long|null} [settee_steam_id] CMsgClientStoreUserStats2 settee_steam_id
         * @property {number|null} [crc_stats] CMsgClientStoreUserStats2 crc_stats
         * @property {boolean|null} [explicit_reset] CMsgClientStoreUserStats2 explicit_reset
         * @property {Array.<CMsgClientStoreUserStats2.IStats>|null} [stats] CMsgClientStoreUserStats2 stats
         */
    
        /**
         * Constructs a new CMsgClientStoreUserStats2.
         * @exports CMsgClientStoreUserStats2
         * @classdesc Represents a CMsgClientStoreUserStats2.
         * @implements ICMsgClientStoreUserStats2
         * @constructor
         * @param {ICMsgClientStoreUserStats2=} [properties] Properties to set
         */
        function CMsgClientStoreUserStats2(properties) {
            this.stats = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientStoreUserStats2 game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientStoreUserStats2
         * @instance
         */
        CMsgClientStoreUserStats2.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientStoreUserStats2 settor_steam_id.
         * @member {number|Long} settor_steam_id
         * @memberof CMsgClientStoreUserStats2
         * @instance
         */
        CMsgClientStoreUserStats2.prototype.settor_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientStoreUserStats2 settee_steam_id.
         * @member {number|Long} settee_steam_id
         * @memberof CMsgClientStoreUserStats2
         * @instance
         */
        CMsgClientStoreUserStats2.prototype.settee_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientStoreUserStats2 crc_stats.
         * @member {number} crc_stats
         * @memberof CMsgClientStoreUserStats2
         * @instance
         */
        CMsgClientStoreUserStats2.prototype.crc_stats = 0;
    
        /**
         * CMsgClientStoreUserStats2 explicit_reset.
         * @member {boolean} explicit_reset
         * @memberof CMsgClientStoreUserStats2
         * @instance
         */
        CMsgClientStoreUserStats2.prototype.explicit_reset = false;
    
        /**
         * CMsgClientStoreUserStats2 stats.
         * @member {Array.<CMsgClientStoreUserStats2.IStats>} stats
         * @memberof CMsgClientStoreUserStats2
         * @instance
         */
        CMsgClientStoreUserStats2.prototype.stats = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientStoreUserStats2 instance using the specified properties.
         * @function create
         * @memberof CMsgClientStoreUserStats2
         * @static
         * @param {ICMsgClientStoreUserStats2=} [properties] Properties to set
         * @returns {CMsgClientStoreUserStats2} CMsgClientStoreUserStats2 instance
         */
        CMsgClientStoreUserStats2.create = function create(properties) {
            return new CMsgClientStoreUserStats2(properties);
        };
    
        /**
         * Encodes the specified CMsgClientStoreUserStats2 message. Does not implicitly {@link CMsgClientStoreUserStats2.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientStoreUserStats2
         * @static
         * @param {ICMsgClientStoreUserStats2} message CMsgClientStoreUserStats2 message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStoreUserStats2.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.game_id);
            if (message.settor_steam_id != null && Object.hasOwnProperty.call(message, "settor_steam_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.settor_steam_id);
            if (message.settee_steam_id != null && Object.hasOwnProperty.call(message, "settee_steam_id"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.settee_steam_id);
            if (message.crc_stats != null && Object.hasOwnProperty.call(message, "crc_stats"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.crc_stats);
            if (message.explicit_reset != null && Object.hasOwnProperty.call(message, "explicit_reset"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.explicit_reset);
            if (message.stats != null && message.stats.length)
                for (var i = 0; i < message.stats.length; ++i)
                    $root.CMsgClientStoreUserStats2.Stats.encode(message.stats[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientStoreUserStats2 message, length delimited. Does not implicitly {@link CMsgClientStoreUserStats2.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientStoreUserStats2
         * @static
         * @param {ICMsgClientStoreUserStats2} message CMsgClientStoreUserStats2 message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStoreUserStats2.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientStoreUserStats2 message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientStoreUserStats2
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientStoreUserStats2} CMsgClientStoreUserStats2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStoreUserStats2.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStoreUserStats2();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.game_id = reader.fixed64();
                    break;
                case 2:
                    message.settor_steam_id = reader.fixed64();
                    break;
                case 3:
                    message.settee_steam_id = reader.fixed64();
                    break;
                case 4:
                    message.crc_stats = reader.uint32();
                    break;
                case 5:
                    message.explicit_reset = reader.bool();
                    break;
                case 6:
                    if (!(message.stats && message.stats.length))
                        message.stats = [];
                    message.stats.push($root.CMsgClientStoreUserStats2.Stats.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientStoreUserStats2 message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientStoreUserStats2
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientStoreUserStats2} CMsgClientStoreUserStats2
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStoreUserStats2.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientStoreUserStats2 message.
         * @function verify
         * @memberof CMsgClientStoreUserStats2
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientStoreUserStats2.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            if (message.settor_steam_id != null && message.hasOwnProperty("settor_steam_id"))
                if (!$util.isInteger(message.settor_steam_id) && !(message.settor_steam_id && $util.isInteger(message.settor_steam_id.low) && $util.isInteger(message.settor_steam_id.high)))
                    return "settor_steam_id: integer|Long expected";
            if (message.settee_steam_id != null && message.hasOwnProperty("settee_steam_id"))
                if (!$util.isInteger(message.settee_steam_id) && !(message.settee_steam_id && $util.isInteger(message.settee_steam_id.low) && $util.isInteger(message.settee_steam_id.high)))
                    return "settee_steam_id: integer|Long expected";
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                if (!$util.isInteger(message.crc_stats))
                    return "crc_stats: integer expected";
            if (message.explicit_reset != null && message.hasOwnProperty("explicit_reset"))
                if (typeof message.explicit_reset !== "boolean")
                    return "explicit_reset: boolean expected";
            if (message.stats != null && message.hasOwnProperty("stats")) {
                if (!Array.isArray(message.stats))
                    return "stats: array expected";
                for (var i = 0; i < message.stats.length; ++i) {
                    var error = $root.CMsgClientStoreUserStats2.Stats.verify(message.stats[i]);
                    if (error)
                        return "stats." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientStoreUserStats2 message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientStoreUserStats2
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientStoreUserStats2} CMsgClientStoreUserStats2
         */
        CMsgClientStoreUserStats2.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientStoreUserStats2)
                return object;
            var message = new $root.CMsgClientStoreUserStats2();
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            if (object.settor_steam_id != null)
                if ($util.Long)
                    (message.settor_steam_id = $util.Long.fromValue(object.settor_steam_id)).unsigned = false;
                else if (typeof object.settor_steam_id === "string")
                    message.settor_steam_id = parseInt(object.settor_steam_id, 10);
                else if (typeof object.settor_steam_id === "number")
                    message.settor_steam_id = object.settor_steam_id;
                else if (typeof object.settor_steam_id === "object")
                    message.settor_steam_id = new $util.LongBits(object.settor_steam_id.low >>> 0, object.settor_steam_id.high >>> 0).toNumber();
            if (object.settee_steam_id != null)
                if ($util.Long)
                    (message.settee_steam_id = $util.Long.fromValue(object.settee_steam_id)).unsigned = false;
                else if (typeof object.settee_steam_id === "string")
                    message.settee_steam_id = parseInt(object.settee_steam_id, 10);
                else if (typeof object.settee_steam_id === "number")
                    message.settee_steam_id = object.settee_steam_id;
                else if (typeof object.settee_steam_id === "object")
                    message.settee_steam_id = new $util.LongBits(object.settee_steam_id.low >>> 0, object.settee_steam_id.high >>> 0).toNumber();
            if (object.crc_stats != null)
                message.crc_stats = object.crc_stats >>> 0;
            if (object.explicit_reset != null)
                message.explicit_reset = Boolean(object.explicit_reset);
            if (object.stats) {
                if (!Array.isArray(object.stats))
                    throw TypeError(".CMsgClientStoreUserStats2.stats: array expected");
                message.stats = [];
                for (var i = 0; i < object.stats.length; ++i) {
                    if (typeof object.stats[i] !== "object")
                        throw TypeError(".CMsgClientStoreUserStats2.stats: object expected");
                    message.stats[i] = $root.CMsgClientStoreUserStats2.Stats.fromObject(object.stats[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientStoreUserStats2 message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientStoreUserStats2
         * @static
         * @param {CMsgClientStoreUserStats2} message CMsgClientStoreUserStats2
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientStoreUserStats2.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stats = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.settor_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.settor_steam_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.settee_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.settee_steam_id = options.longs === String ? "0" : 0;
                object.crc_stats = 0;
                object.explicit_reset = false;
            }
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            if (message.settor_steam_id != null && message.hasOwnProperty("settor_steam_id"))
                if (typeof message.settor_steam_id === "number")
                    object.settor_steam_id = options.longs === String ? String(message.settor_steam_id) : message.settor_steam_id;
                else
                    object.settor_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.settor_steam_id) : options.longs === Number ? new $util.LongBits(message.settor_steam_id.low >>> 0, message.settor_steam_id.high >>> 0).toNumber() : message.settor_steam_id;
            if (message.settee_steam_id != null && message.hasOwnProperty("settee_steam_id"))
                if (typeof message.settee_steam_id === "number")
                    object.settee_steam_id = options.longs === String ? String(message.settee_steam_id) : message.settee_steam_id;
                else
                    object.settee_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.settee_steam_id) : options.longs === Number ? new $util.LongBits(message.settee_steam_id.low >>> 0, message.settee_steam_id.high >>> 0).toNumber() : message.settee_steam_id;
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                object.crc_stats = message.crc_stats;
            if (message.explicit_reset != null && message.hasOwnProperty("explicit_reset"))
                object.explicit_reset = message.explicit_reset;
            if (message.stats && message.stats.length) {
                object.stats = [];
                for (var j = 0; j < message.stats.length; ++j)
                    object.stats[j] = $root.CMsgClientStoreUserStats2.Stats.toObject(message.stats[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientStoreUserStats2 to JSON.
         * @function toJSON
         * @memberof CMsgClientStoreUserStats2
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientStoreUserStats2.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientStoreUserStats2.Stats = (function() {
    
            /**
             * Properties of a Stats.
             * @memberof CMsgClientStoreUserStats2
             * @interface IStats
             * @property {number|null} [stat_id] Stats stat_id
             * @property {number|null} [stat_value] Stats stat_value
             */
    
            /**
             * Constructs a new Stats.
             * @memberof CMsgClientStoreUserStats2
             * @classdesc Represents a Stats.
             * @implements IStats
             * @constructor
             * @param {CMsgClientStoreUserStats2.IStats=} [properties] Properties to set
             */
            function Stats(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats stat_id.
             * @member {number} stat_id
             * @memberof CMsgClientStoreUserStats2.Stats
             * @instance
             */
            Stats.prototype.stat_id = 0;
    
            /**
             * Stats stat_value.
             * @member {number} stat_value
             * @memberof CMsgClientStoreUserStats2.Stats
             * @instance
             */
            Stats.prototype.stat_value = 0;
    
            /**
             * Creates a new Stats instance using the specified properties.
             * @function create
             * @memberof CMsgClientStoreUserStats2.Stats
             * @static
             * @param {CMsgClientStoreUserStats2.IStats=} [properties] Properties to set
             * @returns {CMsgClientStoreUserStats2.Stats} Stats instance
             */
            Stats.create = function create(properties) {
                return new Stats(properties);
            };
    
            /**
             * Encodes the specified Stats message. Does not implicitly {@link CMsgClientStoreUserStats2.Stats.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientStoreUserStats2.Stats
             * @static
             * @param {CMsgClientStoreUserStats2.IStats} message Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.stat_id != null && Object.hasOwnProperty.call(message, "stat_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.stat_id);
                if (message.stat_value != null && Object.hasOwnProperty.call(message, "stat_value"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.stat_value);
                return writer;
            };
    
            /**
             * Encodes the specified Stats message, length delimited. Does not implicitly {@link CMsgClientStoreUserStats2.Stats.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientStoreUserStats2.Stats
             * @static
             * @param {CMsgClientStoreUserStats2.IStats} message Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientStoreUserStats2.Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientStoreUserStats2.Stats} Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStoreUserStats2.Stats();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.stat_id = reader.uint32();
                        break;
                    case 2:
                        message.stat_value = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientStoreUserStats2.Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientStoreUserStats2.Stats} Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats message.
             * @function verify
             * @memberof CMsgClientStoreUserStats2.Stats
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    if (!$util.isInteger(message.stat_id))
                        return "stat_id: integer expected";
                if (message.stat_value != null && message.hasOwnProperty("stat_value"))
                    if (!$util.isInteger(message.stat_value))
                        return "stat_value: integer expected";
                return null;
            };
    
            /**
             * Creates a Stats message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientStoreUserStats2.Stats
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientStoreUserStats2.Stats} Stats
             */
            Stats.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientStoreUserStats2.Stats)
                    return object;
                var message = new $root.CMsgClientStoreUserStats2.Stats();
                if (object.stat_id != null)
                    message.stat_id = object.stat_id >>> 0;
                if (object.stat_value != null)
                    message.stat_value = object.stat_value >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Stats message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientStoreUserStats2.Stats
             * @static
             * @param {CMsgClientStoreUserStats2.Stats} message Stats
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.stat_id = 0;
                    object.stat_value = 0;
                }
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    object.stat_id = message.stat_id;
                if (message.stat_value != null && message.hasOwnProperty("stat_value"))
                    object.stat_value = message.stat_value;
                return object;
            };
    
            /**
             * Converts this Stats to JSON.
             * @function toJSON
             * @memberof CMsgClientStoreUserStats2.Stats
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Stats;
        })();
    
        return CMsgClientStoreUserStats2;
    })();
    
    $root.CMsgClientStatsUpdated = (function() {
    
        /**
         * Properties of a CMsgClientStatsUpdated.
         * @exports ICMsgClientStatsUpdated
         * @interface ICMsgClientStatsUpdated
         * @property {number|Long|null} [steam_id] CMsgClientStatsUpdated steam_id
         * @property {number|Long|null} [game_id] CMsgClientStatsUpdated game_id
         * @property {number|null} [crc_stats] CMsgClientStatsUpdated crc_stats
         * @property {Array.<CMsgClientStatsUpdated.IUpdated_Stats>|null} [updated_stats] CMsgClientStatsUpdated updated_stats
         */
    
        /**
         * Constructs a new CMsgClientStatsUpdated.
         * @exports CMsgClientStatsUpdated
         * @classdesc Represents a CMsgClientStatsUpdated.
         * @implements ICMsgClientStatsUpdated
         * @constructor
         * @param {ICMsgClientStatsUpdated=} [properties] Properties to set
         */
        function CMsgClientStatsUpdated(properties) {
            this.updated_stats = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientStatsUpdated steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgClientStatsUpdated
         * @instance
         */
        CMsgClientStatsUpdated.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientStatsUpdated game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientStatsUpdated
         * @instance
         */
        CMsgClientStatsUpdated.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientStatsUpdated crc_stats.
         * @member {number} crc_stats
         * @memberof CMsgClientStatsUpdated
         * @instance
         */
        CMsgClientStatsUpdated.prototype.crc_stats = 0;
    
        /**
         * CMsgClientStatsUpdated updated_stats.
         * @member {Array.<CMsgClientStatsUpdated.IUpdated_Stats>} updated_stats
         * @memberof CMsgClientStatsUpdated
         * @instance
         */
        CMsgClientStatsUpdated.prototype.updated_stats = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientStatsUpdated instance using the specified properties.
         * @function create
         * @memberof CMsgClientStatsUpdated
         * @static
         * @param {ICMsgClientStatsUpdated=} [properties] Properties to set
         * @returns {CMsgClientStatsUpdated} CMsgClientStatsUpdated instance
         */
        CMsgClientStatsUpdated.create = function create(properties) {
            return new CMsgClientStatsUpdated(properties);
        };
    
        /**
         * Encodes the specified CMsgClientStatsUpdated message. Does not implicitly {@link CMsgClientStatsUpdated.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientStatsUpdated
         * @static
         * @param {ICMsgClientStatsUpdated} message CMsgClientStatsUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStatsUpdated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.game_id);
            if (message.crc_stats != null && Object.hasOwnProperty.call(message, "crc_stats"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.crc_stats);
            if (message.updated_stats != null && message.updated_stats.length)
                for (var i = 0; i < message.updated_stats.length; ++i)
                    $root.CMsgClientStatsUpdated.Updated_Stats.encode(message.updated_stats[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientStatsUpdated message, length delimited. Does not implicitly {@link CMsgClientStatsUpdated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientStatsUpdated
         * @static
         * @param {ICMsgClientStatsUpdated} message CMsgClientStatsUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStatsUpdated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientStatsUpdated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientStatsUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientStatsUpdated} CMsgClientStatsUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStatsUpdated.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStatsUpdated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steam_id = reader.fixed64();
                    break;
                case 2:
                    message.game_id = reader.fixed64();
                    break;
                case 3:
                    message.crc_stats = reader.uint32();
                    break;
                case 4:
                    if (!(message.updated_stats && message.updated_stats.length))
                        message.updated_stats = [];
                    message.updated_stats.push($root.CMsgClientStatsUpdated.Updated_Stats.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientStatsUpdated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientStatsUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientStatsUpdated} CMsgClientStatsUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStatsUpdated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientStatsUpdated message.
         * @function verify
         * @memberof CMsgClientStatsUpdated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientStatsUpdated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                if (!$util.isInteger(message.crc_stats))
                    return "crc_stats: integer expected";
            if (message.updated_stats != null && message.hasOwnProperty("updated_stats")) {
                if (!Array.isArray(message.updated_stats))
                    return "updated_stats: array expected";
                for (var i = 0; i < message.updated_stats.length; ++i) {
                    var error = $root.CMsgClientStatsUpdated.Updated_Stats.verify(message.updated_stats[i]);
                    if (error)
                        return "updated_stats." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientStatsUpdated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientStatsUpdated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientStatsUpdated} CMsgClientStatsUpdated
         */
        CMsgClientStatsUpdated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientStatsUpdated)
                return object;
            var message = new $root.CMsgClientStatsUpdated();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            if (object.crc_stats != null)
                message.crc_stats = object.crc_stats >>> 0;
            if (object.updated_stats) {
                if (!Array.isArray(object.updated_stats))
                    throw TypeError(".CMsgClientStatsUpdated.updated_stats: array expected");
                message.updated_stats = [];
                for (var i = 0; i < object.updated_stats.length; ++i) {
                    if (typeof object.updated_stats[i] !== "object")
                        throw TypeError(".CMsgClientStatsUpdated.updated_stats: object expected");
                    message.updated_stats[i] = $root.CMsgClientStatsUpdated.Updated_Stats.fromObject(object.updated_stats[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientStatsUpdated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientStatsUpdated
         * @static
         * @param {CMsgClientStatsUpdated} message CMsgClientStatsUpdated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientStatsUpdated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.updated_stats = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
                object.crc_stats = 0;
            }
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            if (message.crc_stats != null && message.hasOwnProperty("crc_stats"))
                object.crc_stats = message.crc_stats;
            if (message.updated_stats && message.updated_stats.length) {
                object.updated_stats = [];
                for (var j = 0; j < message.updated_stats.length; ++j)
                    object.updated_stats[j] = $root.CMsgClientStatsUpdated.Updated_Stats.toObject(message.updated_stats[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientStatsUpdated to JSON.
         * @function toJSON
         * @memberof CMsgClientStatsUpdated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientStatsUpdated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientStatsUpdated.Updated_Stats = (function() {
    
            /**
             * Properties of an Updated_Stats.
             * @memberof CMsgClientStatsUpdated
             * @interface IUpdated_Stats
             * @property {number|null} [stat_id] Updated_Stats stat_id
             * @property {number|null} [stat_value] Updated_Stats stat_value
             */
    
            /**
             * Constructs a new Updated_Stats.
             * @memberof CMsgClientStatsUpdated
             * @classdesc Represents an Updated_Stats.
             * @implements IUpdated_Stats
             * @constructor
             * @param {CMsgClientStatsUpdated.IUpdated_Stats=} [properties] Properties to set
             */
            function Updated_Stats(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Updated_Stats stat_id.
             * @member {number} stat_id
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @instance
             */
            Updated_Stats.prototype.stat_id = 0;
    
            /**
             * Updated_Stats stat_value.
             * @member {number} stat_value
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @instance
             */
            Updated_Stats.prototype.stat_value = 0;
    
            /**
             * Creates a new Updated_Stats instance using the specified properties.
             * @function create
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @static
             * @param {CMsgClientStatsUpdated.IUpdated_Stats=} [properties] Properties to set
             * @returns {CMsgClientStatsUpdated.Updated_Stats} Updated_Stats instance
             */
            Updated_Stats.create = function create(properties) {
                return new Updated_Stats(properties);
            };
    
            /**
             * Encodes the specified Updated_Stats message. Does not implicitly {@link CMsgClientStatsUpdated.Updated_Stats.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @static
             * @param {CMsgClientStatsUpdated.IUpdated_Stats} message Updated_Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Updated_Stats.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.stat_id != null && Object.hasOwnProperty.call(message, "stat_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.stat_id);
                if (message.stat_value != null && Object.hasOwnProperty.call(message, "stat_value"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.stat_value);
                return writer;
            };
    
            /**
             * Encodes the specified Updated_Stats message, length delimited. Does not implicitly {@link CMsgClientStatsUpdated.Updated_Stats.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @static
             * @param {CMsgClientStatsUpdated.IUpdated_Stats} message Updated_Stats message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Updated_Stats.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Updated_Stats message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientStatsUpdated.Updated_Stats} Updated_Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Updated_Stats.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStatsUpdated.Updated_Stats();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.stat_id = reader.uint32();
                        break;
                    case 2:
                        message.stat_value = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Updated_Stats message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientStatsUpdated.Updated_Stats} Updated_Stats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Updated_Stats.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Updated_Stats message.
             * @function verify
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Updated_Stats.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    if (!$util.isInteger(message.stat_id))
                        return "stat_id: integer expected";
                if (message.stat_value != null && message.hasOwnProperty("stat_value"))
                    if (!$util.isInteger(message.stat_value))
                        return "stat_value: integer expected";
                return null;
            };
    
            /**
             * Creates an Updated_Stats message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientStatsUpdated.Updated_Stats} Updated_Stats
             */
            Updated_Stats.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientStatsUpdated.Updated_Stats)
                    return object;
                var message = new $root.CMsgClientStatsUpdated.Updated_Stats();
                if (object.stat_id != null)
                    message.stat_id = object.stat_id >>> 0;
                if (object.stat_value != null)
                    message.stat_value = object.stat_value >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from an Updated_Stats message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @static
             * @param {CMsgClientStatsUpdated.Updated_Stats} message Updated_Stats
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Updated_Stats.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.stat_id = 0;
                    object.stat_value = 0;
                }
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    object.stat_id = message.stat_id;
                if (message.stat_value != null && message.hasOwnProperty("stat_value"))
                    object.stat_value = message.stat_value;
                return object;
            };
    
            /**
             * Converts this Updated_Stats to JSON.
             * @function toJSON
             * @memberof CMsgClientStatsUpdated.Updated_Stats
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Updated_Stats.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Updated_Stats;
        })();
    
        return CMsgClientStatsUpdated;
    })();
    
    $root.CMsgClientStoreUserStats = (function() {
    
        /**
         * Properties of a CMsgClientStoreUserStats.
         * @exports ICMsgClientStoreUserStats
         * @interface ICMsgClientStoreUserStats
         * @property {number|Long|null} [game_id] CMsgClientStoreUserStats game_id
         * @property {boolean|null} [explicit_reset] CMsgClientStoreUserStats explicit_reset
         * @property {Array.<CMsgClientStoreUserStats.IStats_To_Store>|null} [stats_to_store] CMsgClientStoreUserStats stats_to_store
         */
    
        /**
         * Constructs a new CMsgClientStoreUserStats.
         * @exports CMsgClientStoreUserStats
         * @classdesc Represents a CMsgClientStoreUserStats.
         * @implements ICMsgClientStoreUserStats
         * @constructor
         * @param {ICMsgClientStoreUserStats=} [properties] Properties to set
         */
        function CMsgClientStoreUserStats(properties) {
            this.stats_to_store = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientStoreUserStats game_id.
         * @member {number|Long} game_id
         * @memberof CMsgClientStoreUserStats
         * @instance
         */
        CMsgClientStoreUserStats.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientStoreUserStats explicit_reset.
         * @member {boolean} explicit_reset
         * @memberof CMsgClientStoreUserStats
         * @instance
         */
        CMsgClientStoreUserStats.prototype.explicit_reset = false;
    
        /**
         * CMsgClientStoreUserStats stats_to_store.
         * @member {Array.<CMsgClientStoreUserStats.IStats_To_Store>} stats_to_store
         * @memberof CMsgClientStoreUserStats
         * @instance
         */
        CMsgClientStoreUserStats.prototype.stats_to_store = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientStoreUserStats instance using the specified properties.
         * @function create
         * @memberof CMsgClientStoreUserStats
         * @static
         * @param {ICMsgClientStoreUserStats=} [properties] Properties to set
         * @returns {CMsgClientStoreUserStats} CMsgClientStoreUserStats instance
         */
        CMsgClientStoreUserStats.create = function create(properties) {
            return new CMsgClientStoreUserStats(properties);
        };
    
        /**
         * Encodes the specified CMsgClientStoreUserStats message. Does not implicitly {@link CMsgClientStoreUserStats.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientStoreUserStats
         * @static
         * @param {ICMsgClientStoreUserStats} message CMsgClientStoreUserStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStoreUserStats.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.game_id);
            if (message.explicit_reset != null && Object.hasOwnProperty.call(message, "explicit_reset"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.explicit_reset);
            if (message.stats_to_store != null && message.stats_to_store.length)
                for (var i = 0; i < message.stats_to_store.length; ++i)
                    $root.CMsgClientStoreUserStats.Stats_To_Store.encode(message.stats_to_store[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientStoreUserStats message, length delimited. Does not implicitly {@link CMsgClientStoreUserStats.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientStoreUserStats
         * @static
         * @param {ICMsgClientStoreUserStats} message CMsgClientStoreUserStats message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientStoreUserStats.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientStoreUserStats message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientStoreUserStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientStoreUserStats} CMsgClientStoreUserStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStoreUserStats.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStoreUserStats();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.game_id = reader.fixed64();
                    break;
                case 2:
                    message.explicit_reset = reader.bool();
                    break;
                case 3:
                    if (!(message.stats_to_store && message.stats_to_store.length))
                        message.stats_to_store = [];
                    message.stats_to_store.push($root.CMsgClientStoreUserStats.Stats_To_Store.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientStoreUserStats message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientStoreUserStats
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientStoreUserStats} CMsgClientStoreUserStats
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientStoreUserStats.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientStoreUserStats message.
         * @function verify
         * @memberof CMsgClientStoreUserStats
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientStoreUserStats.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                    return "game_id: integer|Long expected";
            if (message.explicit_reset != null && message.hasOwnProperty("explicit_reset"))
                if (typeof message.explicit_reset !== "boolean")
                    return "explicit_reset: boolean expected";
            if (message.stats_to_store != null && message.hasOwnProperty("stats_to_store")) {
                if (!Array.isArray(message.stats_to_store))
                    return "stats_to_store: array expected";
                for (var i = 0; i < message.stats_to_store.length; ++i) {
                    var error = $root.CMsgClientStoreUserStats.Stats_To_Store.verify(message.stats_to_store[i]);
                    if (error)
                        return "stats_to_store." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientStoreUserStats message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientStoreUserStats
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientStoreUserStats} CMsgClientStoreUserStats
         */
        CMsgClientStoreUserStats.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientStoreUserStats)
                return object;
            var message = new $root.CMsgClientStoreUserStats();
            if (object.game_id != null)
                if ($util.Long)
                    (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                else if (typeof object.game_id === "string")
                    message.game_id = parseInt(object.game_id, 10);
                else if (typeof object.game_id === "number")
                    message.game_id = object.game_id;
                else if (typeof object.game_id === "object")
                    message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
            if (object.explicit_reset != null)
                message.explicit_reset = Boolean(object.explicit_reset);
            if (object.stats_to_store) {
                if (!Array.isArray(object.stats_to_store))
                    throw TypeError(".CMsgClientStoreUserStats.stats_to_store: array expected");
                message.stats_to_store = [];
                for (var i = 0; i < object.stats_to_store.length; ++i) {
                    if (typeof object.stats_to_store[i] !== "object")
                        throw TypeError(".CMsgClientStoreUserStats.stats_to_store: object expected");
                    message.stats_to_store[i] = $root.CMsgClientStoreUserStats.Stats_To_Store.fromObject(object.stats_to_store[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientStoreUserStats message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientStoreUserStats
         * @static
         * @param {CMsgClientStoreUserStats} message CMsgClientStoreUserStats
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientStoreUserStats.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.stats_to_store = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.game_id = options.longs === String ? "0" : 0;
                object.explicit_reset = false;
            }
            if (message.game_id != null && message.hasOwnProperty("game_id"))
                if (typeof message.game_id === "number")
                    object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                else
                    object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
            if (message.explicit_reset != null && message.hasOwnProperty("explicit_reset"))
                object.explicit_reset = message.explicit_reset;
            if (message.stats_to_store && message.stats_to_store.length) {
                object.stats_to_store = [];
                for (var j = 0; j < message.stats_to_store.length; ++j)
                    object.stats_to_store[j] = $root.CMsgClientStoreUserStats.Stats_To_Store.toObject(message.stats_to_store[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientStoreUserStats to JSON.
         * @function toJSON
         * @memberof CMsgClientStoreUserStats
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientStoreUserStats.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientStoreUserStats.Stats_To_Store = (function() {
    
            /**
             * Properties of a Stats_To_Store.
             * @memberof CMsgClientStoreUserStats
             * @interface IStats_To_Store
             * @property {number|null} [stat_id] Stats_To_Store stat_id
             * @property {number|null} [stat_value] Stats_To_Store stat_value
             */
    
            /**
             * Constructs a new Stats_To_Store.
             * @memberof CMsgClientStoreUserStats
             * @classdesc Represents a Stats_To_Store.
             * @implements IStats_To_Store
             * @constructor
             * @param {CMsgClientStoreUserStats.IStats_To_Store=} [properties] Properties to set
             */
            function Stats_To_Store(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Stats_To_Store stat_id.
             * @member {number} stat_id
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @instance
             */
            Stats_To_Store.prototype.stat_id = 0;
    
            /**
             * Stats_To_Store stat_value.
             * @member {number} stat_value
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @instance
             */
            Stats_To_Store.prototype.stat_value = 0;
    
            /**
             * Creates a new Stats_To_Store instance using the specified properties.
             * @function create
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @static
             * @param {CMsgClientStoreUserStats.IStats_To_Store=} [properties] Properties to set
             * @returns {CMsgClientStoreUserStats.Stats_To_Store} Stats_To_Store instance
             */
            Stats_To_Store.create = function create(properties) {
                return new Stats_To_Store(properties);
            };
    
            /**
             * Encodes the specified Stats_To_Store message. Does not implicitly {@link CMsgClientStoreUserStats.Stats_To_Store.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @static
             * @param {CMsgClientStoreUserStats.IStats_To_Store} message Stats_To_Store message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_To_Store.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.stat_id != null && Object.hasOwnProperty.call(message, "stat_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.stat_id);
                if (message.stat_value != null && Object.hasOwnProperty.call(message, "stat_value"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.stat_value);
                return writer;
            };
    
            /**
             * Encodes the specified Stats_To_Store message, length delimited. Does not implicitly {@link CMsgClientStoreUserStats.Stats_To_Store.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @static
             * @param {CMsgClientStoreUserStats.IStats_To_Store} message Stats_To_Store message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Stats_To_Store.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Stats_To_Store message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientStoreUserStats.Stats_To_Store} Stats_To_Store
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_To_Store.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientStoreUserStats.Stats_To_Store();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.stat_id = reader.uint32();
                        break;
                    case 2:
                        message.stat_value = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Stats_To_Store message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientStoreUserStats.Stats_To_Store} Stats_To_Store
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Stats_To_Store.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Stats_To_Store message.
             * @function verify
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Stats_To_Store.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    if (!$util.isInteger(message.stat_id))
                        return "stat_id: integer expected";
                if (message.stat_value != null && message.hasOwnProperty("stat_value"))
                    if (!$util.isInteger(message.stat_value))
                        return "stat_value: integer expected";
                return null;
            };
    
            /**
             * Creates a Stats_To_Store message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientStoreUserStats.Stats_To_Store} Stats_To_Store
             */
            Stats_To_Store.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientStoreUserStats.Stats_To_Store)
                    return object;
                var message = new $root.CMsgClientStoreUserStats.Stats_To_Store();
                if (object.stat_id != null)
                    message.stat_id = object.stat_id >>> 0;
                if (object.stat_value != null)
                    message.stat_value = object.stat_value >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Stats_To_Store message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @static
             * @param {CMsgClientStoreUserStats.Stats_To_Store} message Stats_To_Store
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Stats_To_Store.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.stat_id = 0;
                    object.stat_value = 0;
                }
                if (message.stat_id != null && message.hasOwnProperty("stat_id"))
                    object.stat_id = message.stat_id;
                if (message.stat_value != null && message.hasOwnProperty("stat_value"))
                    object.stat_value = message.stat_value;
                return object;
            };
    
            /**
             * Converts this Stats_To_Store to JSON.
             * @function toJSON
             * @memberof CMsgClientStoreUserStats.Stats_To_Store
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Stats_To_Store.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Stats_To_Store;
        })();
    
        return CMsgClientStoreUserStats;
    })();
    
    $root.CMsgClientGetClientDetails = (function() {
    
        /**
         * Properties of a CMsgClientGetClientDetails.
         * @exports ICMsgClientGetClientDetails
         * @interface ICMsgClientGetClientDetails
         */
    
        /**
         * Constructs a new CMsgClientGetClientDetails.
         * @exports CMsgClientGetClientDetails
         * @classdesc Represents a CMsgClientGetClientDetails.
         * @implements ICMsgClientGetClientDetails
         * @constructor
         * @param {ICMsgClientGetClientDetails=} [properties] Properties to set
         */
        function CMsgClientGetClientDetails(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientGetClientDetails instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetClientDetails
         * @static
         * @param {ICMsgClientGetClientDetails=} [properties] Properties to set
         * @returns {CMsgClientGetClientDetails} CMsgClientGetClientDetails instance
         */
        CMsgClientGetClientDetails.create = function create(properties) {
            return new CMsgClientGetClientDetails(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetClientDetails message. Does not implicitly {@link CMsgClientGetClientDetails.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetClientDetails
         * @static
         * @param {ICMsgClientGetClientDetails} message CMsgClientGetClientDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClientDetails.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetClientDetails message, length delimited. Does not implicitly {@link CMsgClientGetClientDetails.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetClientDetails
         * @static
         * @param {ICMsgClientGetClientDetails} message CMsgClientGetClientDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClientDetails.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetClientDetails message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetClientDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetClientDetails} CMsgClientGetClientDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClientDetails.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClientDetails();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetClientDetails message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetClientDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetClientDetails} CMsgClientGetClientDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClientDetails.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetClientDetails message.
         * @function verify
         * @memberof CMsgClientGetClientDetails
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetClientDetails.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetClientDetails message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetClientDetails
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetClientDetails} CMsgClientGetClientDetails
         */
        CMsgClientGetClientDetails.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetClientDetails)
                return object;
            return new $root.CMsgClientGetClientDetails();
        };
    
        /**
         * Creates a plain object from a CMsgClientGetClientDetails message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetClientDetails
         * @static
         * @param {CMsgClientGetClientDetails} message CMsgClientGetClientDetails
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetClientDetails.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientGetClientDetails to JSON.
         * @function toJSON
         * @memberof CMsgClientGetClientDetails
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetClientDetails.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetClientDetails;
    })();
    
    $root.CMsgClientReportOverlayDetourFailure = (function() {
    
        /**
         * Properties of a CMsgClientReportOverlayDetourFailure.
         * @exports ICMsgClientReportOverlayDetourFailure
         * @interface ICMsgClientReportOverlayDetourFailure
         * @property {Array.<string>|null} [failure_strings] CMsgClientReportOverlayDetourFailure failure_strings
         */
    
        /**
         * Constructs a new CMsgClientReportOverlayDetourFailure.
         * @exports CMsgClientReportOverlayDetourFailure
         * @classdesc Represents a CMsgClientReportOverlayDetourFailure.
         * @implements ICMsgClientReportOverlayDetourFailure
         * @constructor
         * @param {ICMsgClientReportOverlayDetourFailure=} [properties] Properties to set
         */
        function CMsgClientReportOverlayDetourFailure(properties) {
            this.failure_strings = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientReportOverlayDetourFailure failure_strings.
         * @member {Array.<string>} failure_strings
         * @memberof CMsgClientReportOverlayDetourFailure
         * @instance
         */
        CMsgClientReportOverlayDetourFailure.prototype.failure_strings = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientReportOverlayDetourFailure instance using the specified properties.
         * @function create
         * @memberof CMsgClientReportOverlayDetourFailure
         * @static
         * @param {ICMsgClientReportOverlayDetourFailure=} [properties] Properties to set
         * @returns {CMsgClientReportOverlayDetourFailure} CMsgClientReportOverlayDetourFailure instance
         */
        CMsgClientReportOverlayDetourFailure.create = function create(properties) {
            return new CMsgClientReportOverlayDetourFailure(properties);
        };
    
        /**
         * Encodes the specified CMsgClientReportOverlayDetourFailure message. Does not implicitly {@link CMsgClientReportOverlayDetourFailure.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientReportOverlayDetourFailure
         * @static
         * @param {ICMsgClientReportOverlayDetourFailure} message CMsgClientReportOverlayDetourFailure message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientReportOverlayDetourFailure.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.failure_strings != null && message.failure_strings.length)
                for (var i = 0; i < message.failure_strings.length; ++i)
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.failure_strings[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientReportOverlayDetourFailure message, length delimited. Does not implicitly {@link CMsgClientReportOverlayDetourFailure.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientReportOverlayDetourFailure
         * @static
         * @param {ICMsgClientReportOverlayDetourFailure} message CMsgClientReportOverlayDetourFailure message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientReportOverlayDetourFailure.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientReportOverlayDetourFailure message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientReportOverlayDetourFailure
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientReportOverlayDetourFailure} CMsgClientReportOverlayDetourFailure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientReportOverlayDetourFailure.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientReportOverlayDetourFailure();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.failure_strings && message.failure_strings.length))
                        message.failure_strings = [];
                    message.failure_strings.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientReportOverlayDetourFailure message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientReportOverlayDetourFailure
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientReportOverlayDetourFailure} CMsgClientReportOverlayDetourFailure
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientReportOverlayDetourFailure.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientReportOverlayDetourFailure message.
         * @function verify
         * @memberof CMsgClientReportOverlayDetourFailure
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientReportOverlayDetourFailure.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.failure_strings != null && message.hasOwnProperty("failure_strings")) {
                if (!Array.isArray(message.failure_strings))
                    return "failure_strings: array expected";
                for (var i = 0; i < message.failure_strings.length; ++i)
                    if (!$util.isString(message.failure_strings[i]))
                        return "failure_strings: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientReportOverlayDetourFailure message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientReportOverlayDetourFailure
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientReportOverlayDetourFailure} CMsgClientReportOverlayDetourFailure
         */
        CMsgClientReportOverlayDetourFailure.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientReportOverlayDetourFailure)
                return object;
            var message = new $root.CMsgClientReportOverlayDetourFailure();
            if (object.failure_strings) {
                if (!Array.isArray(object.failure_strings))
                    throw TypeError(".CMsgClientReportOverlayDetourFailure.failure_strings: array expected");
                message.failure_strings = [];
                for (var i = 0; i < object.failure_strings.length; ++i)
                    message.failure_strings[i] = String(object.failure_strings[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientReportOverlayDetourFailure message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientReportOverlayDetourFailure
         * @static
         * @param {CMsgClientReportOverlayDetourFailure} message CMsgClientReportOverlayDetourFailure
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientReportOverlayDetourFailure.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.failure_strings = [];
            if (message.failure_strings && message.failure_strings.length) {
                object.failure_strings = [];
                for (var j = 0; j < message.failure_strings.length; ++j)
                    object.failure_strings[j] = message.failure_strings[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientReportOverlayDetourFailure to JSON.
         * @function toJSON
         * @memberof CMsgClientReportOverlayDetourFailure
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientReportOverlayDetourFailure.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientReportOverlayDetourFailure;
    })();
    
    $root.CMsgClientGetClientDetailsResponse = (function() {
    
        /**
         * Properties of a CMsgClientGetClientDetailsResponse.
         * @exports ICMsgClientGetClientDetailsResponse
         * @interface ICMsgClientGetClientDetailsResponse
         * @property {number|null} [package_version] CMsgClientGetClientDetailsResponse package_version
         * @property {number|null} [protocol_version] CMsgClientGetClientDetailsResponse protocol_version
         * @property {string|null} [os] CMsgClientGetClientDetailsResponse os
         * @property {string|null} [machine_name] CMsgClientGetClientDetailsResponse machine_name
         * @property {string|null} [ip_public] CMsgClientGetClientDetailsResponse ip_public
         * @property {string|null} [ip_private] CMsgClientGetClientDetailsResponse ip_private
         * @property {number|Long|null} [bytes_available] CMsgClientGetClientDetailsResponse bytes_available
         * @property {Array.<CMsgClientGetClientDetailsResponse.IGame>|null} [games_running] CMsgClientGetClientDetailsResponse games_running
         */
    
        /**
         * Constructs a new CMsgClientGetClientDetailsResponse.
         * @exports CMsgClientGetClientDetailsResponse
         * @classdesc Represents a CMsgClientGetClientDetailsResponse.
         * @implements ICMsgClientGetClientDetailsResponse
         * @constructor
         * @param {ICMsgClientGetClientDetailsResponse=} [properties] Properties to set
         */
        function CMsgClientGetClientDetailsResponse(properties) {
            this.games_running = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetClientDetailsResponse package_version.
         * @member {number} package_version
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         */
        CMsgClientGetClientDetailsResponse.prototype.package_version = 0;
    
        /**
         * CMsgClientGetClientDetailsResponse protocol_version.
         * @member {number} protocol_version
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         */
        CMsgClientGetClientDetailsResponse.prototype.protocol_version = 0;
    
        /**
         * CMsgClientGetClientDetailsResponse os.
         * @member {string} os
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         */
        CMsgClientGetClientDetailsResponse.prototype.os = "";
    
        /**
         * CMsgClientGetClientDetailsResponse machine_name.
         * @member {string} machine_name
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         */
        CMsgClientGetClientDetailsResponse.prototype.machine_name = "";
    
        /**
         * CMsgClientGetClientDetailsResponse ip_public.
         * @member {string} ip_public
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         */
        CMsgClientGetClientDetailsResponse.prototype.ip_public = "";
    
        /**
         * CMsgClientGetClientDetailsResponse ip_private.
         * @member {string} ip_private
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         */
        CMsgClientGetClientDetailsResponse.prototype.ip_private = "";
    
        /**
         * CMsgClientGetClientDetailsResponse bytes_available.
         * @member {number|Long} bytes_available
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         */
        CMsgClientGetClientDetailsResponse.prototype.bytes_available = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientGetClientDetailsResponse games_running.
         * @member {Array.<CMsgClientGetClientDetailsResponse.IGame>} games_running
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         */
        CMsgClientGetClientDetailsResponse.prototype.games_running = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientGetClientDetailsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetClientDetailsResponse
         * @static
         * @param {ICMsgClientGetClientDetailsResponse=} [properties] Properties to set
         * @returns {CMsgClientGetClientDetailsResponse} CMsgClientGetClientDetailsResponse instance
         */
        CMsgClientGetClientDetailsResponse.create = function create(properties) {
            return new CMsgClientGetClientDetailsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetClientDetailsResponse message. Does not implicitly {@link CMsgClientGetClientDetailsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetClientDetailsResponse
         * @static
         * @param {ICMsgClientGetClientDetailsResponse} message CMsgClientGetClientDetailsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClientDetailsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.package_version != null && Object.hasOwnProperty.call(message, "package_version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.package_version);
            if (message.os != null && Object.hasOwnProperty.call(message, "os"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.os);
            if (message.machine_name != null && Object.hasOwnProperty.call(message, "machine_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.machine_name);
            if (message.ip_public != null && Object.hasOwnProperty.call(message, "ip_public"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.ip_public);
            if (message.ip_private != null && Object.hasOwnProperty.call(message, "ip_private"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.ip_private);
            if (message.games_running != null && message.games_running.length)
                for (var i = 0; i < message.games_running.length; ++i)
                    $root.CMsgClientGetClientDetailsResponse.Game.encode(message.games_running[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.bytes_available != null && Object.hasOwnProperty.call(message, "bytes_available"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.bytes_available);
            if (message.protocol_version != null && Object.hasOwnProperty.call(message, "protocol_version"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.protocol_version);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetClientDetailsResponse message, length delimited. Does not implicitly {@link CMsgClientGetClientDetailsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetClientDetailsResponse
         * @static
         * @param {ICMsgClientGetClientDetailsResponse} message CMsgClientGetClientDetailsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClientDetailsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetClientDetailsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetClientDetailsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetClientDetailsResponse} CMsgClientGetClientDetailsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClientDetailsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClientDetailsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.package_version = reader.uint32();
                    break;
                case 8:
                    message.protocol_version = reader.uint32();
                    break;
                case 2:
                    message.os = reader.string();
                    break;
                case 3:
                    message.machine_name = reader.string();
                    break;
                case 4:
                    message.ip_public = reader.string();
                    break;
                case 5:
                    message.ip_private = reader.string();
                    break;
                case 7:
                    message.bytes_available = reader.uint64();
                    break;
                case 6:
                    if (!(message.games_running && message.games_running.length))
                        message.games_running = [];
                    message.games_running.push($root.CMsgClientGetClientDetailsResponse.Game.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetClientDetailsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetClientDetailsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetClientDetailsResponse} CMsgClientGetClientDetailsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClientDetailsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetClientDetailsResponse message.
         * @function verify
         * @memberof CMsgClientGetClientDetailsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetClientDetailsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.package_version != null && message.hasOwnProperty("package_version"))
                if (!$util.isInteger(message.package_version))
                    return "package_version: integer expected";
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                if (!$util.isInteger(message.protocol_version))
                    return "protocol_version: integer expected";
            if (message.os != null && message.hasOwnProperty("os"))
                if (!$util.isString(message.os))
                    return "os: string expected";
            if (message.machine_name != null && message.hasOwnProperty("machine_name"))
                if (!$util.isString(message.machine_name))
                    return "machine_name: string expected";
            if (message.ip_public != null && message.hasOwnProperty("ip_public"))
                if (!$util.isString(message.ip_public))
                    return "ip_public: string expected";
            if (message.ip_private != null && message.hasOwnProperty("ip_private"))
                if (!$util.isString(message.ip_private))
                    return "ip_private: string expected";
            if (message.bytes_available != null && message.hasOwnProperty("bytes_available"))
                if (!$util.isInteger(message.bytes_available) && !(message.bytes_available && $util.isInteger(message.bytes_available.low) && $util.isInteger(message.bytes_available.high)))
                    return "bytes_available: integer|Long expected";
            if (message.games_running != null && message.hasOwnProperty("games_running")) {
                if (!Array.isArray(message.games_running))
                    return "games_running: array expected";
                for (var i = 0; i < message.games_running.length; ++i) {
                    var error = $root.CMsgClientGetClientDetailsResponse.Game.verify(message.games_running[i]);
                    if (error)
                        return "games_running." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientGetClientDetailsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetClientDetailsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetClientDetailsResponse} CMsgClientGetClientDetailsResponse
         */
        CMsgClientGetClientDetailsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetClientDetailsResponse)
                return object;
            var message = new $root.CMsgClientGetClientDetailsResponse();
            if (object.package_version != null)
                message.package_version = object.package_version >>> 0;
            if (object.protocol_version != null)
                message.protocol_version = object.protocol_version >>> 0;
            if (object.os != null)
                message.os = String(object.os);
            if (object.machine_name != null)
                message.machine_name = String(object.machine_name);
            if (object.ip_public != null)
                message.ip_public = String(object.ip_public);
            if (object.ip_private != null)
                message.ip_private = String(object.ip_private);
            if (object.bytes_available != null)
                if ($util.Long)
                    (message.bytes_available = $util.Long.fromValue(object.bytes_available)).unsigned = true;
                else if (typeof object.bytes_available === "string")
                    message.bytes_available = parseInt(object.bytes_available, 10);
                else if (typeof object.bytes_available === "number")
                    message.bytes_available = object.bytes_available;
                else if (typeof object.bytes_available === "object")
                    message.bytes_available = new $util.LongBits(object.bytes_available.low >>> 0, object.bytes_available.high >>> 0).toNumber(true);
            if (object.games_running) {
                if (!Array.isArray(object.games_running))
                    throw TypeError(".CMsgClientGetClientDetailsResponse.games_running: array expected");
                message.games_running = [];
                for (var i = 0; i < object.games_running.length; ++i) {
                    if (typeof object.games_running[i] !== "object")
                        throw TypeError(".CMsgClientGetClientDetailsResponse.games_running: object expected");
                    message.games_running[i] = $root.CMsgClientGetClientDetailsResponse.Game.fromObject(object.games_running[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetClientDetailsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetClientDetailsResponse
         * @static
         * @param {CMsgClientGetClientDetailsResponse} message CMsgClientGetClientDetailsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetClientDetailsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.games_running = [];
            if (options.defaults) {
                object.package_version = 0;
                object.os = "";
                object.machine_name = "";
                object.ip_public = "";
                object.ip_private = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytes_available = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytes_available = options.longs === String ? "0" : 0;
                object.protocol_version = 0;
            }
            if (message.package_version != null && message.hasOwnProperty("package_version"))
                object.package_version = message.package_version;
            if (message.os != null && message.hasOwnProperty("os"))
                object.os = message.os;
            if (message.machine_name != null && message.hasOwnProperty("machine_name"))
                object.machine_name = message.machine_name;
            if (message.ip_public != null && message.hasOwnProperty("ip_public"))
                object.ip_public = message.ip_public;
            if (message.ip_private != null && message.hasOwnProperty("ip_private"))
                object.ip_private = message.ip_private;
            if (message.games_running && message.games_running.length) {
                object.games_running = [];
                for (var j = 0; j < message.games_running.length; ++j)
                    object.games_running[j] = $root.CMsgClientGetClientDetailsResponse.Game.toObject(message.games_running[j], options);
            }
            if (message.bytes_available != null && message.hasOwnProperty("bytes_available"))
                if (typeof message.bytes_available === "number")
                    object.bytes_available = options.longs === String ? String(message.bytes_available) : message.bytes_available;
                else
                    object.bytes_available = options.longs === String ? $util.Long.prototype.toString.call(message.bytes_available) : options.longs === Number ? new $util.LongBits(message.bytes_available.low >>> 0, message.bytes_available.high >>> 0).toNumber(true) : message.bytes_available;
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                object.protocol_version = message.protocol_version;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetClientDetailsResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientGetClientDetailsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetClientDetailsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientGetClientDetailsResponse.Game = (function() {
    
            /**
             * Properties of a Game.
             * @memberof CMsgClientGetClientDetailsResponse
             * @interface IGame
             * @property {number|null} [appid] Game appid
             * @property {string|null} [extra_info] Game extra_info
             * @property {number|null} [time_running_sec] Game time_running_sec
             */
    
            /**
             * Constructs a new Game.
             * @memberof CMsgClientGetClientDetailsResponse
             * @classdesc Represents a Game.
             * @implements IGame
             * @constructor
             * @param {CMsgClientGetClientDetailsResponse.IGame=} [properties] Properties to set
             */
            function Game(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Game appid.
             * @member {number} appid
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @instance
             */
            Game.prototype.appid = 0;
    
            /**
             * Game extra_info.
             * @member {string} extra_info
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @instance
             */
            Game.prototype.extra_info = "";
    
            /**
             * Game time_running_sec.
             * @member {number} time_running_sec
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @instance
             */
            Game.prototype.time_running_sec = 0;
    
            /**
             * Creates a new Game instance using the specified properties.
             * @function create
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @static
             * @param {CMsgClientGetClientDetailsResponse.IGame=} [properties] Properties to set
             * @returns {CMsgClientGetClientDetailsResponse.Game} Game instance
             */
            Game.create = function create(properties) {
                return new Game(properties);
            };
    
            /**
             * Encodes the specified Game message. Does not implicitly {@link CMsgClientGetClientDetailsResponse.Game.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @static
             * @param {CMsgClientGetClientDetailsResponse.IGame} message Game message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Game.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
                if (message.extra_info != null && Object.hasOwnProperty.call(message, "extra_info"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.extra_info);
                if (message.time_running_sec != null && Object.hasOwnProperty.call(message, "time_running_sec"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_running_sec);
                return writer;
            };
    
            /**
             * Encodes the specified Game message, length delimited. Does not implicitly {@link CMsgClientGetClientDetailsResponse.Game.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @static
             * @param {CMsgClientGetClientDetailsResponse.IGame} message Game message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Game.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Game message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientGetClientDetailsResponse.Game} Game
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Game.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClientDetailsResponse.Game();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.appid = reader.uint32();
                        break;
                    case 2:
                        message.extra_info = reader.string();
                        break;
                    case 3:
                        message.time_running_sec = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Game message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientGetClientDetailsResponse.Game} Game
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Game.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Game message.
             * @function verify
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Game.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appid != null && message.hasOwnProperty("appid"))
                    if (!$util.isInteger(message.appid))
                        return "appid: integer expected";
                if (message.extra_info != null && message.hasOwnProperty("extra_info"))
                    if (!$util.isString(message.extra_info))
                        return "extra_info: string expected";
                if (message.time_running_sec != null && message.hasOwnProperty("time_running_sec"))
                    if (!$util.isInteger(message.time_running_sec))
                        return "time_running_sec: integer expected";
                return null;
            };
    
            /**
             * Creates a Game message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientGetClientDetailsResponse.Game} Game
             */
            Game.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientGetClientDetailsResponse.Game)
                    return object;
                var message = new $root.CMsgClientGetClientDetailsResponse.Game();
                if (object.appid != null)
                    message.appid = object.appid >>> 0;
                if (object.extra_info != null)
                    message.extra_info = String(object.extra_info);
                if (object.time_running_sec != null)
                    message.time_running_sec = object.time_running_sec >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Game message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @static
             * @param {CMsgClientGetClientDetailsResponse.Game} message Game
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Game.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.appid = 0;
                    object.extra_info = "";
                    object.time_running_sec = 0;
                }
                if (message.appid != null && message.hasOwnProperty("appid"))
                    object.appid = message.appid;
                if (message.extra_info != null && message.hasOwnProperty("extra_info"))
                    object.extra_info = message.extra_info;
                if (message.time_running_sec != null && message.hasOwnProperty("time_running_sec"))
                    object.time_running_sec = message.time_running_sec;
                return object;
            };
    
            /**
             * Converts this Game to JSON.
             * @function toJSON
             * @memberof CMsgClientGetClientDetailsResponse.Game
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Game.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Game;
        })();
    
        return CMsgClientGetClientDetailsResponse;
    })();
    
    $root.CMsgClientGetClientAppList = (function() {
    
        /**
         * Properties of a CMsgClientGetClientAppList.
         * @exports ICMsgClientGetClientAppList
         * @interface ICMsgClientGetClientAppList
         * @property {boolean|null} [media] CMsgClientGetClientAppList media
         * @property {boolean|null} [tools] CMsgClientGetClientAppList tools
         * @property {boolean|null} [games] CMsgClientGetClientAppList games
         * @property {boolean|null} [only_installed] CMsgClientGetClientAppList only_installed
         * @property {boolean|null} [only_changing] CMsgClientGetClientAppList only_changing
         * @property {boolean|null} [comics] CMsgClientGetClientAppList comics
         */
    
        /**
         * Constructs a new CMsgClientGetClientAppList.
         * @exports CMsgClientGetClientAppList
         * @classdesc Represents a CMsgClientGetClientAppList.
         * @implements ICMsgClientGetClientAppList
         * @constructor
         * @param {ICMsgClientGetClientAppList=} [properties] Properties to set
         */
        function CMsgClientGetClientAppList(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetClientAppList media.
         * @member {boolean} media
         * @memberof CMsgClientGetClientAppList
         * @instance
         */
        CMsgClientGetClientAppList.prototype.media = false;
    
        /**
         * CMsgClientGetClientAppList tools.
         * @member {boolean} tools
         * @memberof CMsgClientGetClientAppList
         * @instance
         */
        CMsgClientGetClientAppList.prototype.tools = false;
    
        /**
         * CMsgClientGetClientAppList games.
         * @member {boolean} games
         * @memberof CMsgClientGetClientAppList
         * @instance
         */
        CMsgClientGetClientAppList.prototype.games = false;
    
        /**
         * CMsgClientGetClientAppList only_installed.
         * @member {boolean} only_installed
         * @memberof CMsgClientGetClientAppList
         * @instance
         */
        CMsgClientGetClientAppList.prototype.only_installed = false;
    
        /**
         * CMsgClientGetClientAppList only_changing.
         * @member {boolean} only_changing
         * @memberof CMsgClientGetClientAppList
         * @instance
         */
        CMsgClientGetClientAppList.prototype.only_changing = false;
    
        /**
         * CMsgClientGetClientAppList comics.
         * @member {boolean} comics
         * @memberof CMsgClientGetClientAppList
         * @instance
         */
        CMsgClientGetClientAppList.prototype.comics = false;
    
        /**
         * Creates a new CMsgClientGetClientAppList instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetClientAppList
         * @static
         * @param {ICMsgClientGetClientAppList=} [properties] Properties to set
         * @returns {CMsgClientGetClientAppList} CMsgClientGetClientAppList instance
         */
        CMsgClientGetClientAppList.create = function create(properties) {
            return new CMsgClientGetClientAppList(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetClientAppList message. Does not implicitly {@link CMsgClientGetClientAppList.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetClientAppList
         * @static
         * @param {ICMsgClientGetClientAppList} message CMsgClientGetClientAppList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClientAppList.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.media != null && Object.hasOwnProperty.call(message, "media"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.media);
            if (message.tools != null && Object.hasOwnProperty.call(message, "tools"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.tools);
            if (message.games != null && Object.hasOwnProperty.call(message, "games"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.games);
            if (message.only_installed != null && Object.hasOwnProperty.call(message, "only_installed"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.only_installed);
            if (message.only_changing != null && Object.hasOwnProperty.call(message, "only_changing"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.only_changing);
            if (message.comics != null && Object.hasOwnProperty.call(message, "comics"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.comics);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetClientAppList message, length delimited. Does not implicitly {@link CMsgClientGetClientAppList.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetClientAppList
         * @static
         * @param {ICMsgClientGetClientAppList} message CMsgClientGetClientAppList message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClientAppList.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetClientAppList message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetClientAppList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetClientAppList} CMsgClientGetClientAppList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClientAppList.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClientAppList();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.media = reader.bool();
                    break;
                case 2:
                    message.tools = reader.bool();
                    break;
                case 3:
                    message.games = reader.bool();
                    break;
                case 4:
                    message.only_installed = reader.bool();
                    break;
                case 5:
                    message.only_changing = reader.bool();
                    break;
                case 6:
                    message.comics = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetClientAppList message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetClientAppList
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetClientAppList} CMsgClientGetClientAppList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClientAppList.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetClientAppList message.
         * @function verify
         * @memberof CMsgClientGetClientAppList
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetClientAppList.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.media != null && message.hasOwnProperty("media"))
                if (typeof message.media !== "boolean")
                    return "media: boolean expected";
            if (message.tools != null && message.hasOwnProperty("tools"))
                if (typeof message.tools !== "boolean")
                    return "tools: boolean expected";
            if (message.games != null && message.hasOwnProperty("games"))
                if (typeof message.games !== "boolean")
                    return "games: boolean expected";
            if (message.only_installed != null && message.hasOwnProperty("only_installed"))
                if (typeof message.only_installed !== "boolean")
                    return "only_installed: boolean expected";
            if (message.only_changing != null && message.hasOwnProperty("only_changing"))
                if (typeof message.only_changing !== "boolean")
                    return "only_changing: boolean expected";
            if (message.comics != null && message.hasOwnProperty("comics"))
                if (typeof message.comics !== "boolean")
                    return "comics: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetClientAppList message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetClientAppList
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetClientAppList} CMsgClientGetClientAppList
         */
        CMsgClientGetClientAppList.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetClientAppList)
                return object;
            var message = new $root.CMsgClientGetClientAppList();
            if (object.media != null)
                message.media = Boolean(object.media);
            if (object.tools != null)
                message.tools = Boolean(object.tools);
            if (object.games != null)
                message.games = Boolean(object.games);
            if (object.only_installed != null)
                message.only_installed = Boolean(object.only_installed);
            if (object.only_changing != null)
                message.only_changing = Boolean(object.only_changing);
            if (object.comics != null)
                message.comics = Boolean(object.comics);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetClientAppList message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetClientAppList
         * @static
         * @param {CMsgClientGetClientAppList} message CMsgClientGetClientAppList
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetClientAppList.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.media = false;
                object.tools = false;
                object.games = false;
                object.only_installed = false;
                object.only_changing = false;
                object.comics = false;
            }
            if (message.media != null && message.hasOwnProperty("media"))
                object.media = message.media;
            if (message.tools != null && message.hasOwnProperty("tools"))
                object.tools = message.tools;
            if (message.games != null && message.hasOwnProperty("games"))
                object.games = message.games;
            if (message.only_installed != null && message.hasOwnProperty("only_installed"))
                object.only_installed = message.only_installed;
            if (message.only_changing != null && message.hasOwnProperty("only_changing"))
                object.only_changing = message.only_changing;
            if (message.comics != null && message.hasOwnProperty("comics"))
                object.comics = message.comics;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetClientAppList to JSON.
         * @function toJSON
         * @memberof CMsgClientGetClientAppList
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetClientAppList.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientGetClientAppList;
    })();
    
    $root.CMsgClientGetClientAppListResponse = (function() {
    
        /**
         * Properties of a CMsgClientGetClientAppListResponse.
         * @exports ICMsgClientGetClientAppListResponse
         * @interface ICMsgClientGetClientAppListResponse
         * @property {Array.<CMsgClientGetClientAppListResponse.IApp>|null} [apps] CMsgClientGetClientAppListResponse apps
         * @property {number|Long|null} [bytes_available] CMsgClientGetClientAppListResponse bytes_available
         */
    
        /**
         * Constructs a new CMsgClientGetClientAppListResponse.
         * @exports CMsgClientGetClientAppListResponse
         * @classdesc Represents a CMsgClientGetClientAppListResponse.
         * @implements ICMsgClientGetClientAppListResponse
         * @constructor
         * @param {ICMsgClientGetClientAppListResponse=} [properties] Properties to set
         */
        function CMsgClientGetClientAppListResponse(properties) {
            this.apps = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientGetClientAppListResponse apps.
         * @member {Array.<CMsgClientGetClientAppListResponse.IApp>} apps
         * @memberof CMsgClientGetClientAppListResponse
         * @instance
         */
        CMsgClientGetClientAppListResponse.prototype.apps = $util.emptyArray;
    
        /**
         * CMsgClientGetClientAppListResponse bytes_available.
         * @member {number|Long} bytes_available
         * @memberof CMsgClientGetClientAppListResponse
         * @instance
         */
        CMsgClientGetClientAppListResponse.prototype.bytes_available = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgClientGetClientAppListResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientGetClientAppListResponse
         * @static
         * @param {ICMsgClientGetClientAppListResponse=} [properties] Properties to set
         * @returns {CMsgClientGetClientAppListResponse} CMsgClientGetClientAppListResponse instance
         */
        CMsgClientGetClientAppListResponse.create = function create(properties) {
            return new CMsgClientGetClientAppListResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientGetClientAppListResponse message. Does not implicitly {@link CMsgClientGetClientAppListResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientGetClientAppListResponse
         * @static
         * @param {ICMsgClientGetClientAppListResponse} message CMsgClientGetClientAppListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClientAppListResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.apps != null && message.apps.length)
                for (var i = 0; i < message.apps.length; ++i)
                    $root.CMsgClientGetClientAppListResponse.App.encode(message.apps[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.bytes_available != null && Object.hasOwnProperty.call(message, "bytes_available"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.bytes_available);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientGetClientAppListResponse message, length delimited. Does not implicitly {@link CMsgClientGetClientAppListResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientGetClientAppListResponse
         * @static
         * @param {ICMsgClientGetClientAppListResponse} message CMsgClientGetClientAppListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientGetClientAppListResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientGetClientAppListResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientGetClientAppListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientGetClientAppListResponse} CMsgClientGetClientAppListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClientAppListResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClientAppListResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.apps && message.apps.length))
                        message.apps = [];
                    message.apps.push($root.CMsgClientGetClientAppListResponse.App.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.bytes_available = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientGetClientAppListResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientGetClientAppListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientGetClientAppListResponse} CMsgClientGetClientAppListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientGetClientAppListResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientGetClientAppListResponse message.
         * @function verify
         * @memberof CMsgClientGetClientAppListResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientGetClientAppListResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.apps != null && message.hasOwnProperty("apps")) {
                if (!Array.isArray(message.apps))
                    return "apps: array expected";
                for (var i = 0; i < message.apps.length; ++i) {
                    var error = $root.CMsgClientGetClientAppListResponse.App.verify(message.apps[i]);
                    if (error)
                        return "apps." + error;
                }
            }
            if (message.bytes_available != null && message.hasOwnProperty("bytes_available"))
                if (!$util.isInteger(message.bytes_available) && !(message.bytes_available && $util.isInteger(message.bytes_available.low) && $util.isInteger(message.bytes_available.high)))
                    return "bytes_available: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientGetClientAppListResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientGetClientAppListResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientGetClientAppListResponse} CMsgClientGetClientAppListResponse
         */
        CMsgClientGetClientAppListResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientGetClientAppListResponse)
                return object;
            var message = new $root.CMsgClientGetClientAppListResponse();
            if (object.apps) {
                if (!Array.isArray(object.apps))
                    throw TypeError(".CMsgClientGetClientAppListResponse.apps: array expected");
                message.apps = [];
                for (var i = 0; i < object.apps.length; ++i) {
                    if (typeof object.apps[i] !== "object")
                        throw TypeError(".CMsgClientGetClientAppListResponse.apps: object expected");
                    message.apps[i] = $root.CMsgClientGetClientAppListResponse.App.fromObject(object.apps[i]);
                }
            }
            if (object.bytes_available != null)
                if ($util.Long)
                    (message.bytes_available = $util.Long.fromValue(object.bytes_available)).unsigned = true;
                else if (typeof object.bytes_available === "string")
                    message.bytes_available = parseInt(object.bytes_available, 10);
                else if (typeof object.bytes_available === "number")
                    message.bytes_available = object.bytes_available;
                else if (typeof object.bytes_available === "object")
                    message.bytes_available = new $util.LongBits(object.bytes_available.low >>> 0, object.bytes_available.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientGetClientAppListResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientGetClientAppListResponse
         * @static
         * @param {CMsgClientGetClientAppListResponse} message CMsgClientGetClientAppListResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientGetClientAppListResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.apps = [];
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.bytes_available = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bytes_available = options.longs === String ? "0" : 0;
            if (message.apps && message.apps.length) {
                object.apps = [];
                for (var j = 0; j < message.apps.length; ++j)
                    object.apps[j] = $root.CMsgClientGetClientAppListResponse.App.toObject(message.apps[j], options);
            }
            if (message.bytes_available != null && message.hasOwnProperty("bytes_available"))
                if (typeof message.bytes_available === "number")
                    object.bytes_available = options.longs === String ? String(message.bytes_available) : message.bytes_available;
                else
                    object.bytes_available = options.longs === String ? $util.Long.prototype.toString.call(message.bytes_available) : options.longs === Number ? new $util.LongBits(message.bytes_available.low >>> 0, message.bytes_available.high >>> 0).toNumber(true) : message.bytes_available;
            return object;
        };
    
        /**
         * Converts this CMsgClientGetClientAppListResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientGetClientAppListResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientGetClientAppListResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientGetClientAppListResponse.App = (function() {
    
            /**
             * Properties of an App.
             * @memberof CMsgClientGetClientAppListResponse
             * @interface IApp
             * @property {number|null} [appid] App appid
             * @property {string|null} [category] App category
             * @property {string|null} [app_type] App app_type
             * @property {boolean|null} [favorite] App favorite
             * @property {boolean|null} [installed] App installed
             * @property {boolean|null} [auto_update] App auto_update
             * @property {number|Long|null} [bytes_downloaded] App bytes_downloaded
             * @property {number|Long|null} [bytes_needed] App bytes_needed
             * @property {number|null} [bytes_download_rate] App bytes_download_rate
             * @property {boolean|null} [download_paused] App download_paused
             * @property {number|null} [num_downloading] App num_downloading
             * @property {number|null} [num_paused] App num_paused
             * @property {boolean|null} [changing] App changing
             * @property {boolean|null} [available_on_platform] App available_on_platform
             * @property {Array.<CMsgClientGetClientAppListResponse.App.IDLC>|null} [dlcs] App dlcs
             */
    
            /**
             * Constructs a new App.
             * @memberof CMsgClientGetClientAppListResponse
             * @classdesc Represents an App.
             * @implements IApp
             * @constructor
             * @param {CMsgClientGetClientAppListResponse.IApp=} [properties] Properties to set
             */
            function App(properties) {
                this.dlcs = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * App appid.
             * @member {number} appid
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.appid = 0;
    
            /**
             * App category.
             * @member {string} category
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.category = "";
    
            /**
             * App app_type.
             * @member {string} app_type
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.app_type = "";
    
            /**
             * App favorite.
             * @member {boolean} favorite
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.favorite = false;
    
            /**
             * App installed.
             * @member {boolean} installed
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.installed = false;
    
            /**
             * App auto_update.
             * @member {boolean} auto_update
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.auto_update = false;
    
            /**
             * App bytes_downloaded.
             * @member {number|Long} bytes_downloaded
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.bytes_downloaded = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * App bytes_needed.
             * @member {number|Long} bytes_needed
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.bytes_needed = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * App bytes_download_rate.
             * @member {number} bytes_download_rate
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.bytes_download_rate = 0;
    
            /**
             * App download_paused.
             * @member {boolean} download_paused
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.download_paused = false;
    
            /**
             * App num_downloading.
             * @member {number} num_downloading
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.num_downloading = 0;
    
            /**
             * App num_paused.
             * @member {number} num_paused
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.num_paused = 0;
    
            /**
             * App changing.
             * @member {boolean} changing
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.changing = false;
    
            /**
             * App available_on_platform.
             * @member {boolean} available_on_platform
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.available_on_platform = false;
    
            /**
             * App dlcs.
             * @member {Array.<CMsgClientGetClientAppListResponse.App.IDLC>} dlcs
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             */
            App.prototype.dlcs = $util.emptyArray;
    
            /**
             * Creates a new App instance using the specified properties.
             * @function create
             * @memberof CMsgClientGetClientAppListResponse.App
             * @static
             * @param {CMsgClientGetClientAppListResponse.IApp=} [properties] Properties to set
             * @returns {CMsgClientGetClientAppListResponse.App} App instance
             */
            App.create = function create(properties) {
                return new App(properties);
            };
    
            /**
             * Encodes the specified App message. Does not implicitly {@link CMsgClientGetClientAppListResponse.App.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientGetClientAppListResponse.App
             * @static
             * @param {CMsgClientGetClientAppListResponse.IApp} message App message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            App.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
                if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.category);
                if (message.favorite != null && Object.hasOwnProperty.call(message, "favorite"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.favorite);
                if (message.installed != null && Object.hasOwnProperty.call(message, "installed"))
                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.installed);
                if (message.auto_update != null && Object.hasOwnProperty.call(message, "auto_update"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.auto_update);
                if (message.bytes_downloaded != null && Object.hasOwnProperty.call(message, "bytes_downloaded"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.bytes_downloaded);
                if (message.bytes_needed != null && Object.hasOwnProperty.call(message, "bytes_needed"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.bytes_needed);
                if (message.bytes_download_rate != null && Object.hasOwnProperty.call(message, "bytes_download_rate"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.bytes_download_rate);
                if (message.dlcs != null && message.dlcs.length)
                    for (var i = 0; i < message.dlcs.length; ++i)
                        $root.CMsgClientGetClientAppListResponse.App.DLC.encode(message.dlcs[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                if (message.app_type != null && Object.hasOwnProperty.call(message, "app_type"))
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.app_type);
                if (message.download_paused != null && Object.hasOwnProperty.call(message, "download_paused"))
                    writer.uint32(/* id 11, wireType 0 =*/88).bool(message.download_paused);
                if (message.num_downloading != null && Object.hasOwnProperty.call(message, "num_downloading"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.num_downloading);
                if (message.num_paused != null && Object.hasOwnProperty.call(message, "num_paused"))
                    writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.num_paused);
                if (message.changing != null && Object.hasOwnProperty.call(message, "changing"))
                    writer.uint32(/* id 14, wireType 0 =*/112).bool(message.changing);
                if (message.available_on_platform != null && Object.hasOwnProperty.call(message, "available_on_platform"))
                    writer.uint32(/* id 15, wireType 0 =*/120).bool(message.available_on_platform);
                return writer;
            };
    
            /**
             * Encodes the specified App message, length delimited. Does not implicitly {@link CMsgClientGetClientAppListResponse.App.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientGetClientAppListResponse.App
             * @static
             * @param {CMsgClientGetClientAppListResponse.IApp} message App message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            App.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an App message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientGetClientAppListResponse.App
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientGetClientAppListResponse.App} App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            App.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClientAppListResponse.App();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.appid = reader.uint32();
                        break;
                    case 2:
                        message.category = reader.string();
                        break;
                    case 10:
                        message.app_type = reader.string();
                        break;
                    case 3:
                        message.favorite = reader.bool();
                        break;
                    case 4:
                        message.installed = reader.bool();
                        break;
                    case 5:
                        message.auto_update = reader.bool();
                        break;
                    case 6:
                        message.bytes_downloaded = reader.uint64();
                        break;
                    case 7:
                        message.bytes_needed = reader.uint64();
                        break;
                    case 8:
                        message.bytes_download_rate = reader.uint32();
                        break;
                    case 11:
                        message.download_paused = reader.bool();
                        break;
                    case 12:
                        message.num_downloading = reader.uint32();
                        break;
                    case 13:
                        message.num_paused = reader.uint32();
                        break;
                    case 14:
                        message.changing = reader.bool();
                        break;
                    case 15:
                        message.available_on_platform = reader.bool();
                        break;
                    case 9:
                        if (!(message.dlcs && message.dlcs.length))
                            message.dlcs = [];
                        message.dlcs.push($root.CMsgClientGetClientAppListResponse.App.DLC.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an App message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientGetClientAppListResponse.App
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientGetClientAppListResponse.App} App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            App.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an App message.
             * @function verify
             * @memberof CMsgClientGetClientAppListResponse.App
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            App.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appid != null && message.hasOwnProperty("appid"))
                    if (!$util.isInteger(message.appid))
                        return "appid: integer expected";
                if (message.category != null && message.hasOwnProperty("category"))
                    if (!$util.isString(message.category))
                        return "category: string expected";
                if (message.app_type != null && message.hasOwnProperty("app_type"))
                    if (!$util.isString(message.app_type))
                        return "app_type: string expected";
                if (message.favorite != null && message.hasOwnProperty("favorite"))
                    if (typeof message.favorite !== "boolean")
                        return "favorite: boolean expected";
                if (message.installed != null && message.hasOwnProperty("installed"))
                    if (typeof message.installed !== "boolean")
                        return "installed: boolean expected";
                if (message.auto_update != null && message.hasOwnProperty("auto_update"))
                    if (typeof message.auto_update !== "boolean")
                        return "auto_update: boolean expected";
                if (message.bytes_downloaded != null && message.hasOwnProperty("bytes_downloaded"))
                    if (!$util.isInteger(message.bytes_downloaded) && !(message.bytes_downloaded && $util.isInteger(message.bytes_downloaded.low) && $util.isInteger(message.bytes_downloaded.high)))
                        return "bytes_downloaded: integer|Long expected";
                if (message.bytes_needed != null && message.hasOwnProperty("bytes_needed"))
                    if (!$util.isInteger(message.bytes_needed) && !(message.bytes_needed && $util.isInteger(message.bytes_needed.low) && $util.isInteger(message.bytes_needed.high)))
                        return "bytes_needed: integer|Long expected";
                if (message.bytes_download_rate != null && message.hasOwnProperty("bytes_download_rate"))
                    if (!$util.isInteger(message.bytes_download_rate))
                        return "bytes_download_rate: integer expected";
                if (message.download_paused != null && message.hasOwnProperty("download_paused"))
                    if (typeof message.download_paused !== "boolean")
                        return "download_paused: boolean expected";
                if (message.num_downloading != null && message.hasOwnProperty("num_downloading"))
                    if (!$util.isInteger(message.num_downloading))
                        return "num_downloading: integer expected";
                if (message.num_paused != null && message.hasOwnProperty("num_paused"))
                    if (!$util.isInteger(message.num_paused))
                        return "num_paused: integer expected";
                if (message.changing != null && message.hasOwnProperty("changing"))
                    if (typeof message.changing !== "boolean")
                        return "changing: boolean expected";
                if (message.available_on_platform != null && message.hasOwnProperty("available_on_platform"))
                    if (typeof message.available_on_platform !== "boolean")
                        return "available_on_platform: boolean expected";
                if (message.dlcs != null && message.hasOwnProperty("dlcs")) {
                    if (!Array.isArray(message.dlcs))
                        return "dlcs: array expected";
                    for (var i = 0; i < message.dlcs.length; ++i) {
                        var error = $root.CMsgClientGetClientAppListResponse.App.DLC.verify(message.dlcs[i]);
                        if (error)
                            return "dlcs." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates an App message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientGetClientAppListResponse.App
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientGetClientAppListResponse.App} App
             */
            App.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientGetClientAppListResponse.App)
                    return object;
                var message = new $root.CMsgClientGetClientAppListResponse.App();
                if (object.appid != null)
                    message.appid = object.appid >>> 0;
                if (object.category != null)
                    message.category = String(object.category);
                if (object.app_type != null)
                    message.app_type = String(object.app_type);
                if (object.favorite != null)
                    message.favorite = Boolean(object.favorite);
                if (object.installed != null)
                    message.installed = Boolean(object.installed);
                if (object.auto_update != null)
                    message.auto_update = Boolean(object.auto_update);
                if (object.bytes_downloaded != null)
                    if ($util.Long)
                        (message.bytes_downloaded = $util.Long.fromValue(object.bytes_downloaded)).unsigned = true;
                    else if (typeof object.bytes_downloaded === "string")
                        message.bytes_downloaded = parseInt(object.bytes_downloaded, 10);
                    else if (typeof object.bytes_downloaded === "number")
                        message.bytes_downloaded = object.bytes_downloaded;
                    else if (typeof object.bytes_downloaded === "object")
                        message.bytes_downloaded = new $util.LongBits(object.bytes_downloaded.low >>> 0, object.bytes_downloaded.high >>> 0).toNumber(true);
                if (object.bytes_needed != null)
                    if ($util.Long)
                        (message.bytes_needed = $util.Long.fromValue(object.bytes_needed)).unsigned = true;
                    else if (typeof object.bytes_needed === "string")
                        message.bytes_needed = parseInt(object.bytes_needed, 10);
                    else if (typeof object.bytes_needed === "number")
                        message.bytes_needed = object.bytes_needed;
                    else if (typeof object.bytes_needed === "object")
                        message.bytes_needed = new $util.LongBits(object.bytes_needed.low >>> 0, object.bytes_needed.high >>> 0).toNumber(true);
                if (object.bytes_download_rate != null)
                    message.bytes_download_rate = object.bytes_download_rate >>> 0;
                if (object.download_paused != null)
                    message.download_paused = Boolean(object.download_paused);
                if (object.num_downloading != null)
                    message.num_downloading = object.num_downloading >>> 0;
                if (object.num_paused != null)
                    message.num_paused = object.num_paused >>> 0;
                if (object.changing != null)
                    message.changing = Boolean(object.changing);
                if (object.available_on_platform != null)
                    message.available_on_platform = Boolean(object.available_on_platform);
                if (object.dlcs) {
                    if (!Array.isArray(object.dlcs))
                        throw TypeError(".CMsgClientGetClientAppListResponse.App.dlcs: array expected");
                    message.dlcs = [];
                    for (var i = 0; i < object.dlcs.length; ++i) {
                        if (typeof object.dlcs[i] !== "object")
                            throw TypeError(".CMsgClientGetClientAppListResponse.App.dlcs: object expected");
                        message.dlcs[i] = $root.CMsgClientGetClientAppListResponse.App.DLC.fromObject(object.dlcs[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from an App message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientGetClientAppListResponse.App
             * @static
             * @param {CMsgClientGetClientAppListResponse.App} message App
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            App.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.dlcs = [];
                if (options.defaults) {
                    object.appid = 0;
                    object.category = "";
                    object.favorite = false;
                    object.installed = false;
                    object.auto_update = false;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.bytes_downloaded = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.bytes_downloaded = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.bytes_needed = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.bytes_needed = options.longs === String ? "0" : 0;
                    object.bytes_download_rate = 0;
                    object.app_type = "";
                    object.download_paused = false;
                    object.num_downloading = 0;
                    object.num_paused = 0;
                    object.changing = false;
                    object.available_on_platform = false;
                }
                if (message.appid != null && message.hasOwnProperty("appid"))
                    object.appid = message.appid;
                if (message.category != null && message.hasOwnProperty("category"))
                    object.category = message.category;
                if (message.favorite != null && message.hasOwnProperty("favorite"))
                    object.favorite = message.favorite;
                if (message.installed != null && message.hasOwnProperty("installed"))
                    object.installed = message.installed;
                if (message.auto_update != null && message.hasOwnProperty("auto_update"))
                    object.auto_update = message.auto_update;
                if (message.bytes_downloaded != null && message.hasOwnProperty("bytes_downloaded"))
                    if (typeof message.bytes_downloaded === "number")
                        object.bytes_downloaded = options.longs === String ? String(message.bytes_downloaded) : message.bytes_downloaded;
                    else
                        object.bytes_downloaded = options.longs === String ? $util.Long.prototype.toString.call(message.bytes_downloaded) : options.longs === Number ? new $util.LongBits(message.bytes_downloaded.low >>> 0, message.bytes_downloaded.high >>> 0).toNumber(true) : message.bytes_downloaded;
                if (message.bytes_needed != null && message.hasOwnProperty("bytes_needed"))
                    if (typeof message.bytes_needed === "number")
                        object.bytes_needed = options.longs === String ? String(message.bytes_needed) : message.bytes_needed;
                    else
                        object.bytes_needed = options.longs === String ? $util.Long.prototype.toString.call(message.bytes_needed) : options.longs === Number ? new $util.LongBits(message.bytes_needed.low >>> 0, message.bytes_needed.high >>> 0).toNumber(true) : message.bytes_needed;
                if (message.bytes_download_rate != null && message.hasOwnProperty("bytes_download_rate"))
                    object.bytes_download_rate = message.bytes_download_rate;
                if (message.dlcs && message.dlcs.length) {
                    object.dlcs = [];
                    for (var j = 0; j < message.dlcs.length; ++j)
                        object.dlcs[j] = $root.CMsgClientGetClientAppListResponse.App.DLC.toObject(message.dlcs[j], options);
                }
                if (message.app_type != null && message.hasOwnProperty("app_type"))
                    object.app_type = message.app_type;
                if (message.download_paused != null && message.hasOwnProperty("download_paused"))
                    object.download_paused = message.download_paused;
                if (message.num_downloading != null && message.hasOwnProperty("num_downloading"))
                    object.num_downloading = message.num_downloading;
                if (message.num_paused != null && message.hasOwnProperty("num_paused"))
                    object.num_paused = message.num_paused;
                if (message.changing != null && message.hasOwnProperty("changing"))
                    object.changing = message.changing;
                if (message.available_on_platform != null && message.hasOwnProperty("available_on_platform"))
                    object.available_on_platform = message.available_on_platform;
                return object;
            };
    
            /**
             * Converts this App to JSON.
             * @function toJSON
             * @memberof CMsgClientGetClientAppListResponse.App
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            App.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            App.DLC = (function() {
    
                /**
                 * Properties of a DLC.
                 * @memberof CMsgClientGetClientAppListResponse.App
                 * @interface IDLC
                 * @property {number|null} [appid] DLC appid
                 * @property {boolean|null} [installed] DLC installed
                 */
    
                /**
                 * Constructs a new DLC.
                 * @memberof CMsgClientGetClientAppListResponse.App
                 * @classdesc Represents a DLC.
                 * @implements IDLC
                 * @constructor
                 * @param {CMsgClientGetClientAppListResponse.App.IDLC=} [properties] Properties to set
                 */
                function DLC(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DLC appid.
                 * @member {number} appid
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @instance
                 */
                DLC.prototype.appid = 0;
    
                /**
                 * DLC installed.
                 * @member {boolean} installed
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @instance
                 */
                DLC.prototype.installed = false;
    
                /**
                 * Creates a new DLC instance using the specified properties.
                 * @function create
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @static
                 * @param {CMsgClientGetClientAppListResponse.App.IDLC=} [properties] Properties to set
                 * @returns {CMsgClientGetClientAppListResponse.App.DLC} DLC instance
                 */
                DLC.create = function create(properties) {
                    return new DLC(properties);
                };
    
                /**
                 * Encodes the specified DLC message. Does not implicitly {@link CMsgClientGetClientAppListResponse.App.DLC.verify|verify} messages.
                 * @function encode
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @static
                 * @param {CMsgClientGetClientAppListResponse.App.IDLC} message DLC message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DLC.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
                    if (message.installed != null && Object.hasOwnProperty.call(message, "installed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.installed);
                    return writer;
                };
    
                /**
                 * Encodes the specified DLC message, length delimited. Does not implicitly {@link CMsgClientGetClientAppListResponse.App.DLC.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @static
                 * @param {CMsgClientGetClientAppListResponse.App.IDLC} message DLC message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DLC.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DLC message from the specified reader or buffer.
                 * @function decode
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {CMsgClientGetClientAppListResponse.App.DLC} DLC
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DLC.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientGetClientAppListResponse.App.DLC();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.appid = reader.uint32();
                            break;
                        case 2:
                            message.installed = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DLC message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {CMsgClientGetClientAppListResponse.App.DLC} DLC
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DLC.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DLC message.
                 * @function verify
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DLC.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.appid != null && message.hasOwnProperty("appid"))
                        if (!$util.isInteger(message.appid))
                            return "appid: integer expected";
                    if (message.installed != null && message.hasOwnProperty("installed"))
                        if (typeof message.installed !== "boolean")
                            return "installed: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a DLC message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {CMsgClientGetClientAppListResponse.App.DLC} DLC
                 */
                DLC.fromObject = function fromObject(object) {
                    if (object instanceof $root.CMsgClientGetClientAppListResponse.App.DLC)
                        return object;
                    var message = new $root.CMsgClientGetClientAppListResponse.App.DLC();
                    if (object.appid != null)
                        message.appid = object.appid >>> 0;
                    if (object.installed != null)
                        message.installed = Boolean(object.installed);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DLC message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @static
                 * @param {CMsgClientGetClientAppListResponse.App.DLC} message DLC
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DLC.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.appid = 0;
                        object.installed = false;
                    }
                    if (message.appid != null && message.hasOwnProperty("appid"))
                        object.appid = message.appid;
                    if (message.installed != null && message.hasOwnProperty("installed"))
                        object.installed = message.installed;
                    return object;
                };
    
                /**
                 * Converts this DLC to JSON.
                 * @function toJSON
                 * @memberof CMsgClientGetClientAppListResponse.App.DLC
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DLC.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return DLC;
            })();
    
            return App;
        })();
    
        return CMsgClientGetClientAppListResponse;
    })();
    
    $root.CMsgClientInstallClientApp = (function() {
    
        /**
         * Properties of a CMsgClientInstallClientApp.
         * @exports ICMsgClientInstallClientApp
         * @interface ICMsgClientInstallClientApp
         * @property {number|null} [appid] CMsgClientInstallClientApp appid
         */
    
        /**
         * Constructs a new CMsgClientInstallClientApp.
         * @exports CMsgClientInstallClientApp
         * @classdesc Represents a CMsgClientInstallClientApp.
         * @implements ICMsgClientInstallClientApp
         * @constructor
         * @param {ICMsgClientInstallClientApp=} [properties] Properties to set
         */
        function CMsgClientInstallClientApp(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientInstallClientApp appid.
         * @member {number} appid
         * @memberof CMsgClientInstallClientApp
         * @instance
         */
        CMsgClientInstallClientApp.prototype.appid = 0;
    
        /**
         * Creates a new CMsgClientInstallClientApp instance using the specified properties.
         * @function create
         * @memberof CMsgClientInstallClientApp
         * @static
         * @param {ICMsgClientInstallClientApp=} [properties] Properties to set
         * @returns {CMsgClientInstallClientApp} CMsgClientInstallClientApp instance
         */
        CMsgClientInstallClientApp.create = function create(properties) {
            return new CMsgClientInstallClientApp(properties);
        };
    
        /**
         * Encodes the specified CMsgClientInstallClientApp message. Does not implicitly {@link CMsgClientInstallClientApp.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientInstallClientApp
         * @static
         * @param {ICMsgClientInstallClientApp} message CMsgClientInstallClientApp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientInstallClientApp.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientInstallClientApp message, length delimited. Does not implicitly {@link CMsgClientInstallClientApp.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientInstallClientApp
         * @static
         * @param {ICMsgClientInstallClientApp} message CMsgClientInstallClientApp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientInstallClientApp.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientInstallClientApp message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientInstallClientApp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientInstallClientApp} CMsgClientInstallClientApp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientInstallClientApp.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientInstallClientApp();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientInstallClientApp message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientInstallClientApp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientInstallClientApp} CMsgClientInstallClientApp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientInstallClientApp.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientInstallClientApp message.
         * @function verify
         * @memberof CMsgClientInstallClientApp
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientInstallClientApp.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientInstallClientApp message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientInstallClientApp
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientInstallClientApp} CMsgClientInstallClientApp
         */
        CMsgClientInstallClientApp.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientInstallClientApp)
                return object;
            var message = new $root.CMsgClientInstallClientApp();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientInstallClientApp message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientInstallClientApp
         * @static
         * @param {CMsgClientInstallClientApp} message CMsgClientInstallClientApp
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientInstallClientApp.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.appid = 0;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            return object;
        };
    
        /**
         * Converts this CMsgClientInstallClientApp to JSON.
         * @function toJSON
         * @memberof CMsgClientInstallClientApp
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientInstallClientApp.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientInstallClientApp;
    })();
    
    $root.CMsgClientInstallClientAppResponse = (function() {
    
        /**
         * Properties of a CMsgClientInstallClientAppResponse.
         * @exports ICMsgClientInstallClientAppResponse
         * @interface ICMsgClientInstallClientAppResponse
         * @property {number|null} [result] CMsgClientInstallClientAppResponse result
         */
    
        /**
         * Constructs a new CMsgClientInstallClientAppResponse.
         * @exports CMsgClientInstallClientAppResponse
         * @classdesc Represents a CMsgClientInstallClientAppResponse.
         * @implements ICMsgClientInstallClientAppResponse
         * @constructor
         * @param {ICMsgClientInstallClientAppResponse=} [properties] Properties to set
         */
        function CMsgClientInstallClientAppResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientInstallClientAppResponse result.
         * @member {number} result
         * @memberof CMsgClientInstallClientAppResponse
         * @instance
         */
        CMsgClientInstallClientAppResponse.prototype.result = 0;
    
        /**
         * Creates a new CMsgClientInstallClientAppResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientInstallClientAppResponse
         * @static
         * @param {ICMsgClientInstallClientAppResponse=} [properties] Properties to set
         * @returns {CMsgClientInstallClientAppResponse} CMsgClientInstallClientAppResponse instance
         */
        CMsgClientInstallClientAppResponse.create = function create(properties) {
            return new CMsgClientInstallClientAppResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientInstallClientAppResponse message. Does not implicitly {@link CMsgClientInstallClientAppResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientInstallClientAppResponse
         * @static
         * @param {ICMsgClientInstallClientAppResponse} message CMsgClientInstallClientAppResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientInstallClientAppResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientInstallClientAppResponse message, length delimited. Does not implicitly {@link CMsgClientInstallClientAppResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientInstallClientAppResponse
         * @static
         * @param {ICMsgClientInstallClientAppResponse} message CMsgClientInstallClientAppResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientInstallClientAppResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientInstallClientAppResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientInstallClientAppResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientInstallClientAppResponse} CMsgClientInstallClientAppResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientInstallClientAppResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientInstallClientAppResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.result = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientInstallClientAppResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientInstallClientAppResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientInstallClientAppResponse} CMsgClientInstallClientAppResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientInstallClientAppResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientInstallClientAppResponse message.
         * @function verify
         * @memberof CMsgClientInstallClientAppResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientInstallClientAppResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientInstallClientAppResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientInstallClientAppResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientInstallClientAppResponse} CMsgClientInstallClientAppResponse
         */
        CMsgClientInstallClientAppResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientInstallClientAppResponse)
                return object;
            var message = new $root.CMsgClientInstallClientAppResponse();
            if (object.result != null)
                message.result = object.result >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientInstallClientAppResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientInstallClientAppResponse
         * @static
         * @param {CMsgClientInstallClientAppResponse} message CMsgClientInstallClientAppResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientInstallClientAppResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.result = 0;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            return object;
        };
    
        /**
         * Converts this CMsgClientInstallClientAppResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientInstallClientAppResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientInstallClientAppResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientInstallClientAppResponse;
    })();
    
    $root.CMsgClientUninstallClientApp = (function() {
    
        /**
         * Properties of a CMsgClientUninstallClientApp.
         * @exports ICMsgClientUninstallClientApp
         * @interface ICMsgClientUninstallClientApp
         * @property {number|null} [appid] CMsgClientUninstallClientApp appid
         */
    
        /**
         * Constructs a new CMsgClientUninstallClientApp.
         * @exports CMsgClientUninstallClientApp
         * @classdesc Represents a CMsgClientUninstallClientApp.
         * @implements ICMsgClientUninstallClientApp
         * @constructor
         * @param {ICMsgClientUninstallClientApp=} [properties] Properties to set
         */
        function CMsgClientUninstallClientApp(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUninstallClientApp appid.
         * @member {number} appid
         * @memberof CMsgClientUninstallClientApp
         * @instance
         */
        CMsgClientUninstallClientApp.prototype.appid = 0;
    
        /**
         * Creates a new CMsgClientUninstallClientApp instance using the specified properties.
         * @function create
         * @memberof CMsgClientUninstallClientApp
         * @static
         * @param {ICMsgClientUninstallClientApp=} [properties] Properties to set
         * @returns {CMsgClientUninstallClientApp} CMsgClientUninstallClientApp instance
         */
        CMsgClientUninstallClientApp.create = function create(properties) {
            return new CMsgClientUninstallClientApp(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUninstallClientApp message. Does not implicitly {@link CMsgClientUninstallClientApp.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUninstallClientApp
         * @static
         * @param {ICMsgClientUninstallClientApp} message CMsgClientUninstallClientApp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUninstallClientApp.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUninstallClientApp message, length delimited. Does not implicitly {@link CMsgClientUninstallClientApp.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUninstallClientApp
         * @static
         * @param {ICMsgClientUninstallClientApp} message CMsgClientUninstallClientApp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUninstallClientApp.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUninstallClientApp message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUninstallClientApp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUninstallClientApp} CMsgClientUninstallClientApp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUninstallClientApp.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUninstallClientApp();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUninstallClientApp message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUninstallClientApp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUninstallClientApp} CMsgClientUninstallClientApp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUninstallClientApp.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUninstallClientApp message.
         * @function verify
         * @memberof CMsgClientUninstallClientApp
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUninstallClientApp.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUninstallClientApp message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUninstallClientApp
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUninstallClientApp} CMsgClientUninstallClientApp
         */
        CMsgClientUninstallClientApp.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUninstallClientApp)
                return object;
            var message = new $root.CMsgClientUninstallClientApp();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUninstallClientApp message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUninstallClientApp
         * @static
         * @param {CMsgClientUninstallClientApp} message CMsgClientUninstallClientApp
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUninstallClientApp.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.appid = 0;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            return object;
        };
    
        /**
         * Converts this CMsgClientUninstallClientApp to JSON.
         * @function toJSON
         * @memberof CMsgClientUninstallClientApp
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUninstallClientApp.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUninstallClientApp;
    })();
    
    $root.CMsgClientUninstallClientAppResponse = (function() {
    
        /**
         * Properties of a CMsgClientUninstallClientAppResponse.
         * @exports ICMsgClientUninstallClientAppResponse
         * @interface ICMsgClientUninstallClientAppResponse
         * @property {number|null} [result] CMsgClientUninstallClientAppResponse result
         */
    
        /**
         * Constructs a new CMsgClientUninstallClientAppResponse.
         * @exports CMsgClientUninstallClientAppResponse
         * @classdesc Represents a CMsgClientUninstallClientAppResponse.
         * @implements ICMsgClientUninstallClientAppResponse
         * @constructor
         * @param {ICMsgClientUninstallClientAppResponse=} [properties] Properties to set
         */
        function CMsgClientUninstallClientAppResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUninstallClientAppResponse result.
         * @member {number} result
         * @memberof CMsgClientUninstallClientAppResponse
         * @instance
         */
        CMsgClientUninstallClientAppResponse.prototype.result = 0;
    
        /**
         * Creates a new CMsgClientUninstallClientAppResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUninstallClientAppResponse
         * @static
         * @param {ICMsgClientUninstallClientAppResponse=} [properties] Properties to set
         * @returns {CMsgClientUninstallClientAppResponse} CMsgClientUninstallClientAppResponse instance
         */
        CMsgClientUninstallClientAppResponse.create = function create(properties) {
            return new CMsgClientUninstallClientAppResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUninstallClientAppResponse message. Does not implicitly {@link CMsgClientUninstallClientAppResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUninstallClientAppResponse
         * @static
         * @param {ICMsgClientUninstallClientAppResponse} message CMsgClientUninstallClientAppResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUninstallClientAppResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUninstallClientAppResponse message, length delimited. Does not implicitly {@link CMsgClientUninstallClientAppResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUninstallClientAppResponse
         * @static
         * @param {ICMsgClientUninstallClientAppResponse} message CMsgClientUninstallClientAppResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUninstallClientAppResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUninstallClientAppResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUninstallClientAppResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUninstallClientAppResponse} CMsgClientUninstallClientAppResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUninstallClientAppResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUninstallClientAppResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.result = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUninstallClientAppResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUninstallClientAppResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUninstallClientAppResponse} CMsgClientUninstallClientAppResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUninstallClientAppResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUninstallClientAppResponse message.
         * @function verify
         * @memberof CMsgClientUninstallClientAppResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUninstallClientAppResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUninstallClientAppResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUninstallClientAppResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUninstallClientAppResponse} CMsgClientUninstallClientAppResponse
         */
        CMsgClientUninstallClientAppResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUninstallClientAppResponse)
                return object;
            var message = new $root.CMsgClientUninstallClientAppResponse();
            if (object.result != null)
                message.result = object.result >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUninstallClientAppResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUninstallClientAppResponse
         * @static
         * @param {CMsgClientUninstallClientAppResponse} message CMsgClientUninstallClientAppResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUninstallClientAppResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.result = 0;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            return object;
        };
    
        /**
         * Converts this CMsgClientUninstallClientAppResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUninstallClientAppResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUninstallClientAppResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUninstallClientAppResponse;
    })();
    
    $root.CMsgClientSetClientAppUpdateState = (function() {
    
        /**
         * Properties of a CMsgClientSetClientAppUpdateState.
         * @exports ICMsgClientSetClientAppUpdateState
         * @interface ICMsgClientSetClientAppUpdateState
         * @property {number|null} [appid] CMsgClientSetClientAppUpdateState appid
         * @property {boolean|null} [update] CMsgClientSetClientAppUpdateState update
         */
    
        /**
         * Constructs a new CMsgClientSetClientAppUpdateState.
         * @exports CMsgClientSetClientAppUpdateState
         * @classdesc Represents a CMsgClientSetClientAppUpdateState.
         * @implements ICMsgClientSetClientAppUpdateState
         * @constructor
         * @param {ICMsgClientSetClientAppUpdateState=} [properties] Properties to set
         */
        function CMsgClientSetClientAppUpdateState(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientSetClientAppUpdateState appid.
         * @member {number} appid
         * @memberof CMsgClientSetClientAppUpdateState
         * @instance
         */
        CMsgClientSetClientAppUpdateState.prototype.appid = 0;
    
        /**
         * CMsgClientSetClientAppUpdateState update.
         * @member {boolean} update
         * @memberof CMsgClientSetClientAppUpdateState
         * @instance
         */
        CMsgClientSetClientAppUpdateState.prototype.update = false;
    
        /**
         * Creates a new CMsgClientSetClientAppUpdateState instance using the specified properties.
         * @function create
         * @memberof CMsgClientSetClientAppUpdateState
         * @static
         * @param {ICMsgClientSetClientAppUpdateState=} [properties] Properties to set
         * @returns {CMsgClientSetClientAppUpdateState} CMsgClientSetClientAppUpdateState instance
         */
        CMsgClientSetClientAppUpdateState.create = function create(properties) {
            return new CMsgClientSetClientAppUpdateState(properties);
        };
    
        /**
         * Encodes the specified CMsgClientSetClientAppUpdateState message. Does not implicitly {@link CMsgClientSetClientAppUpdateState.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientSetClientAppUpdateState
         * @static
         * @param {ICMsgClientSetClientAppUpdateState} message CMsgClientSetClientAppUpdateState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSetClientAppUpdateState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.update != null && Object.hasOwnProperty.call(message, "update"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.update);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientSetClientAppUpdateState message, length delimited. Does not implicitly {@link CMsgClientSetClientAppUpdateState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientSetClientAppUpdateState
         * @static
         * @param {ICMsgClientSetClientAppUpdateState} message CMsgClientSetClientAppUpdateState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSetClientAppUpdateState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientSetClientAppUpdateState message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientSetClientAppUpdateState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientSetClientAppUpdateState} CMsgClientSetClientAppUpdateState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSetClientAppUpdateState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSetClientAppUpdateState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                case 2:
                    message.update = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientSetClientAppUpdateState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientSetClientAppUpdateState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientSetClientAppUpdateState} CMsgClientSetClientAppUpdateState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSetClientAppUpdateState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientSetClientAppUpdateState message.
         * @function verify
         * @memberof CMsgClientSetClientAppUpdateState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientSetClientAppUpdateState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.update != null && message.hasOwnProperty("update"))
                if (typeof message.update !== "boolean")
                    return "update: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientSetClientAppUpdateState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientSetClientAppUpdateState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientSetClientAppUpdateState} CMsgClientSetClientAppUpdateState
         */
        CMsgClientSetClientAppUpdateState.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientSetClientAppUpdateState)
                return object;
            var message = new $root.CMsgClientSetClientAppUpdateState();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.update != null)
                message.update = Boolean(object.update);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientSetClientAppUpdateState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientSetClientAppUpdateState
         * @static
         * @param {CMsgClientSetClientAppUpdateState} message CMsgClientSetClientAppUpdateState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientSetClientAppUpdateState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.update = false;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.update != null && message.hasOwnProperty("update"))
                object.update = message.update;
            return object;
        };
    
        /**
         * Converts this CMsgClientSetClientAppUpdateState to JSON.
         * @function toJSON
         * @memberof CMsgClientSetClientAppUpdateState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientSetClientAppUpdateState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientSetClientAppUpdateState;
    })();
    
    $root.CMsgClientSetClientAppUpdateStateResponse = (function() {
    
        /**
         * Properties of a CMsgClientSetClientAppUpdateStateResponse.
         * @exports ICMsgClientSetClientAppUpdateStateResponse
         * @interface ICMsgClientSetClientAppUpdateStateResponse
         * @property {number|null} [result] CMsgClientSetClientAppUpdateStateResponse result
         */
    
        /**
         * Constructs a new CMsgClientSetClientAppUpdateStateResponse.
         * @exports CMsgClientSetClientAppUpdateStateResponse
         * @classdesc Represents a CMsgClientSetClientAppUpdateStateResponse.
         * @implements ICMsgClientSetClientAppUpdateStateResponse
         * @constructor
         * @param {ICMsgClientSetClientAppUpdateStateResponse=} [properties] Properties to set
         */
        function CMsgClientSetClientAppUpdateStateResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientSetClientAppUpdateStateResponse result.
         * @member {number} result
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @instance
         */
        CMsgClientSetClientAppUpdateStateResponse.prototype.result = 0;
    
        /**
         * Creates a new CMsgClientSetClientAppUpdateStateResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @static
         * @param {ICMsgClientSetClientAppUpdateStateResponse=} [properties] Properties to set
         * @returns {CMsgClientSetClientAppUpdateStateResponse} CMsgClientSetClientAppUpdateStateResponse instance
         */
        CMsgClientSetClientAppUpdateStateResponse.create = function create(properties) {
            return new CMsgClientSetClientAppUpdateStateResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientSetClientAppUpdateStateResponse message. Does not implicitly {@link CMsgClientSetClientAppUpdateStateResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @static
         * @param {ICMsgClientSetClientAppUpdateStateResponse} message CMsgClientSetClientAppUpdateStateResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSetClientAppUpdateStateResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientSetClientAppUpdateStateResponse message, length delimited. Does not implicitly {@link CMsgClientSetClientAppUpdateStateResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @static
         * @param {ICMsgClientSetClientAppUpdateStateResponse} message CMsgClientSetClientAppUpdateStateResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientSetClientAppUpdateStateResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientSetClientAppUpdateStateResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientSetClientAppUpdateStateResponse} CMsgClientSetClientAppUpdateStateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSetClientAppUpdateStateResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientSetClientAppUpdateStateResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.result = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientSetClientAppUpdateStateResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientSetClientAppUpdateStateResponse} CMsgClientSetClientAppUpdateStateResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientSetClientAppUpdateStateResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientSetClientAppUpdateStateResponse message.
         * @function verify
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientSetClientAppUpdateStateResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientSetClientAppUpdateStateResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientSetClientAppUpdateStateResponse} CMsgClientSetClientAppUpdateStateResponse
         */
        CMsgClientSetClientAppUpdateStateResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientSetClientAppUpdateStateResponse)
                return object;
            var message = new $root.CMsgClientSetClientAppUpdateStateResponse();
            if (object.result != null)
                message.result = object.result >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientSetClientAppUpdateStateResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @static
         * @param {CMsgClientSetClientAppUpdateStateResponse} message CMsgClientSetClientAppUpdateStateResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientSetClientAppUpdateStateResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.result = 0;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            return object;
        };
    
        /**
         * Converts this CMsgClientSetClientAppUpdateStateResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientSetClientAppUpdateStateResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientSetClientAppUpdateStateResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientSetClientAppUpdateStateResponse;
    })();
    
    $root.CMsgClientUFSUploadFileRequest = (function() {
    
        /**
         * Properties of a CMsgClientUFSUploadFileRequest.
         * @exports ICMsgClientUFSUploadFileRequest
         * @interface ICMsgClientUFSUploadFileRequest
         * @property {number|null} [app_id] CMsgClientUFSUploadFileRequest app_id
         * @property {number|null} [file_size] CMsgClientUFSUploadFileRequest file_size
         * @property {number|null} [raw_file_size] CMsgClientUFSUploadFileRequest raw_file_size
         * @property {Uint8Array|null} [sha_file] CMsgClientUFSUploadFileRequest sha_file
         * @property {number|Long|null} [time_stamp] CMsgClientUFSUploadFileRequest time_stamp
         * @property {string|null} [file_name] CMsgClientUFSUploadFileRequest file_name
         * @property {number|null} [platforms_to_sync_deprecated] CMsgClientUFSUploadFileRequest platforms_to_sync_deprecated
         * @property {number|null} [platforms_to_sync] CMsgClientUFSUploadFileRequest platforms_to_sync
         * @property {number|null} [cell_id] CMsgClientUFSUploadFileRequest cell_id
         * @property {boolean|null} [can_encrypt] CMsgClientUFSUploadFileRequest can_encrypt
         */
    
        /**
         * Constructs a new CMsgClientUFSUploadFileRequest.
         * @exports CMsgClientUFSUploadFileRequest
         * @classdesc Represents a CMsgClientUFSUploadFileRequest.
         * @implements ICMsgClientUFSUploadFileRequest
         * @constructor
         * @param {ICMsgClientUFSUploadFileRequest=} [properties] Properties to set
         */
        function CMsgClientUFSUploadFileRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSUploadFileRequest app_id.
         * @member {number} app_id
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.app_id = 0;
    
        /**
         * CMsgClientUFSUploadFileRequest file_size.
         * @member {number} file_size
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.file_size = 0;
    
        /**
         * CMsgClientUFSUploadFileRequest raw_file_size.
         * @member {number} raw_file_size
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.raw_file_size = 0;
    
        /**
         * CMsgClientUFSUploadFileRequest sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * CMsgClientUFSUploadFileRequest time_stamp.
         * @member {number|Long} time_stamp
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.time_stamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUFSUploadFileRequest file_name.
         * @member {string} file_name
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.file_name = "";
    
        /**
         * CMsgClientUFSUploadFileRequest platforms_to_sync_deprecated.
         * @member {number} platforms_to_sync_deprecated
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.platforms_to_sync_deprecated = 0;
    
        /**
         * CMsgClientUFSUploadFileRequest platforms_to_sync.
         * @member {number} platforms_to_sync
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.platforms_to_sync = 4294967295;
    
        /**
         * CMsgClientUFSUploadFileRequest cell_id.
         * @member {number} cell_id
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.cell_id = 0;
    
        /**
         * CMsgClientUFSUploadFileRequest can_encrypt.
         * @member {boolean} can_encrypt
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         */
        CMsgClientUFSUploadFileRequest.prototype.can_encrypt = false;
    
        /**
         * Creates a new CMsgClientUFSUploadFileRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSUploadFileRequest
         * @static
         * @param {ICMsgClientUFSUploadFileRequest=} [properties] Properties to set
         * @returns {CMsgClientUFSUploadFileRequest} CMsgClientUFSUploadFileRequest instance
         */
        CMsgClientUFSUploadFileRequest.create = function create(properties) {
            return new CMsgClientUFSUploadFileRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadFileRequest message. Does not implicitly {@link CMsgClientUFSUploadFileRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSUploadFileRequest
         * @static
         * @param {ICMsgClientUFSUploadFileRequest} message CMsgClientUFSUploadFileRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadFileRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.file_size != null && Object.hasOwnProperty.call(message, "file_size"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.file_size);
            if (message.raw_file_size != null && Object.hasOwnProperty.call(message, "raw_file_size"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.raw_file_size);
            if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.sha_file);
            if (message.time_stamp != null && Object.hasOwnProperty.call(message, "time_stamp"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.time_stamp);
            if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.file_name);
            if (message.platforms_to_sync_deprecated != null && Object.hasOwnProperty.call(message, "platforms_to_sync_deprecated"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.platforms_to_sync_deprecated);
            if (message.platforms_to_sync != null && Object.hasOwnProperty.call(message, "platforms_to_sync"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.platforms_to_sync);
            if (message.cell_id != null && Object.hasOwnProperty.call(message, "cell_id"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.cell_id);
            if (message.can_encrypt != null && Object.hasOwnProperty.call(message, "can_encrypt"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.can_encrypt);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadFileRequest message, length delimited. Does not implicitly {@link CMsgClientUFSUploadFileRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSUploadFileRequest
         * @static
         * @param {ICMsgClientUFSUploadFileRequest} message CMsgClientUFSUploadFileRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSUploadFileRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSUploadFileRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSUploadFileRequest} CMsgClientUFSUploadFileRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadFileRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSUploadFileRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.file_size = reader.uint32();
                    break;
                case 3:
                    message.raw_file_size = reader.uint32();
                    break;
                case 4:
                    message.sha_file = reader.bytes();
                    break;
                case 5:
                    message.time_stamp = reader.uint64();
                    break;
                case 6:
                    message.file_name = reader.string();
                    break;
                case 7:
                    message.platforms_to_sync_deprecated = reader.uint32();
                    break;
                case 8:
                    message.platforms_to_sync = reader.uint32();
                    break;
                case 9:
                    message.cell_id = reader.uint32();
                    break;
                case 10:
                    message.can_encrypt = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSUploadFileRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSUploadFileRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSUploadFileRequest} CMsgClientUFSUploadFileRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadFileRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSUploadFileRequest message.
         * @function verify
         * @memberof CMsgClientUFSUploadFileRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSUploadFileRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.file_size != null && message.hasOwnProperty("file_size"))
                if (!$util.isInteger(message.file_size))
                    return "file_size: integer expected";
            if (message.raw_file_size != null && message.hasOwnProperty("raw_file_size"))
                if (!$util.isInteger(message.raw_file_size))
                    return "raw_file_size: integer expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            if (message.time_stamp != null && message.hasOwnProperty("time_stamp"))
                if (!$util.isInteger(message.time_stamp) && !(message.time_stamp && $util.isInteger(message.time_stamp.low) && $util.isInteger(message.time_stamp.high)))
                    return "time_stamp: integer|Long expected";
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                if (!$util.isString(message.file_name))
                    return "file_name: string expected";
            if (message.platforms_to_sync_deprecated != null && message.hasOwnProperty("platforms_to_sync_deprecated"))
                if (!$util.isInteger(message.platforms_to_sync_deprecated))
                    return "platforms_to_sync_deprecated: integer expected";
            if (message.platforms_to_sync != null && message.hasOwnProperty("platforms_to_sync"))
                if (!$util.isInteger(message.platforms_to_sync))
                    return "platforms_to_sync: integer expected";
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                if (!$util.isInteger(message.cell_id))
                    return "cell_id: integer expected";
            if (message.can_encrypt != null && message.hasOwnProperty("can_encrypt"))
                if (typeof message.can_encrypt !== "boolean")
                    return "can_encrypt: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSUploadFileRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSUploadFileRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSUploadFileRequest} CMsgClientUFSUploadFileRequest
         */
        CMsgClientUFSUploadFileRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSUploadFileRequest)
                return object;
            var message = new $root.CMsgClientUFSUploadFileRequest();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.file_size != null)
                message.file_size = object.file_size >>> 0;
            if (object.raw_file_size != null)
                message.raw_file_size = object.raw_file_size >>> 0;
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            if (object.time_stamp != null)
                if ($util.Long)
                    (message.time_stamp = $util.Long.fromValue(object.time_stamp)).unsigned = true;
                else if (typeof object.time_stamp === "string")
                    message.time_stamp = parseInt(object.time_stamp, 10);
                else if (typeof object.time_stamp === "number")
                    message.time_stamp = object.time_stamp;
                else if (typeof object.time_stamp === "object")
                    message.time_stamp = new $util.LongBits(object.time_stamp.low >>> 0, object.time_stamp.high >>> 0).toNumber(true);
            if (object.file_name != null)
                message.file_name = String(object.file_name);
            if (object.platforms_to_sync_deprecated != null)
                message.platforms_to_sync_deprecated = object.platforms_to_sync_deprecated >>> 0;
            if (object.platforms_to_sync != null)
                message.platforms_to_sync = object.platforms_to_sync >>> 0;
            if (object.cell_id != null)
                message.cell_id = object.cell_id >>> 0;
            if (object.can_encrypt != null)
                message.can_encrypt = Boolean(object.can_encrypt);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSUploadFileRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSUploadFileRequest
         * @static
         * @param {CMsgClientUFSUploadFileRequest} message CMsgClientUFSUploadFileRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSUploadFileRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.file_size = 0;
                object.raw_file_size = 0;
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.time_stamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.time_stamp = options.longs === String ? "0" : 0;
                object.file_name = "";
                object.platforms_to_sync_deprecated = 0;
                object.platforms_to_sync = 4294967295;
                object.cell_id = 0;
                object.can_encrypt = false;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.file_size != null && message.hasOwnProperty("file_size"))
                object.file_size = message.file_size;
            if (message.raw_file_size != null && message.hasOwnProperty("raw_file_size"))
                object.raw_file_size = message.raw_file_size;
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            if (message.time_stamp != null && message.hasOwnProperty("time_stamp"))
                if (typeof message.time_stamp === "number")
                    object.time_stamp = options.longs === String ? String(message.time_stamp) : message.time_stamp;
                else
                    object.time_stamp = options.longs === String ? $util.Long.prototype.toString.call(message.time_stamp) : options.longs === Number ? new $util.LongBits(message.time_stamp.low >>> 0, message.time_stamp.high >>> 0).toNumber(true) : message.time_stamp;
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                object.file_name = message.file_name;
            if (message.platforms_to_sync_deprecated != null && message.hasOwnProperty("platforms_to_sync_deprecated"))
                object.platforms_to_sync_deprecated = message.platforms_to_sync_deprecated;
            if (message.platforms_to_sync != null && message.hasOwnProperty("platforms_to_sync"))
                object.platforms_to_sync = message.platforms_to_sync;
            if (message.cell_id != null && message.hasOwnProperty("cell_id"))
                object.cell_id = message.cell_id;
            if (message.can_encrypt != null && message.hasOwnProperty("can_encrypt"))
                object.can_encrypt = message.can_encrypt;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSUploadFileRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSUploadFileRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSUploadFileRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSUploadFileRequest;
    })();
    
    $root.CMsgClientUFSUploadFileResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSUploadFileResponse.
         * @exports ICMsgClientUFSUploadFileResponse
         * @interface ICMsgClientUFSUploadFileResponse
         * @property {number|null} [eresult] CMsgClientUFSUploadFileResponse eresult
         * @property {Uint8Array|null} [sha_file] CMsgClientUFSUploadFileResponse sha_file
         * @property {boolean|null} [use_http] CMsgClientUFSUploadFileResponse use_http
         * @property {string|null} [http_host] CMsgClientUFSUploadFileResponse http_host
         * @property {string|null} [http_url] CMsgClientUFSUploadFileResponse http_url
         * @property {Uint8Array|null} [kv_headers] CMsgClientUFSUploadFileResponse kv_headers
         * @property {boolean|null} [use_https] CMsgClientUFSUploadFileResponse use_https
         * @property {boolean|null} [encrypt_file] CMsgClientUFSUploadFileResponse encrypt_file
         */
    
        /**
         * Constructs a new CMsgClientUFSUploadFileResponse.
         * @exports CMsgClientUFSUploadFileResponse
         * @classdesc Represents a CMsgClientUFSUploadFileResponse.
         * @implements ICMsgClientUFSUploadFileResponse
         * @constructor
         * @param {ICMsgClientUFSUploadFileResponse=} [properties] Properties to set
         */
        function CMsgClientUFSUploadFileResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSUploadFileResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         */
        CMsgClientUFSUploadFileResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientUFSUploadFileResponse sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         */
        CMsgClientUFSUploadFileResponse.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * CMsgClientUFSUploadFileResponse use_http.
         * @member {boolean} use_http
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         */
        CMsgClientUFSUploadFileResponse.prototype.use_http = false;
    
        /**
         * CMsgClientUFSUploadFileResponse http_host.
         * @member {string} http_host
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         */
        CMsgClientUFSUploadFileResponse.prototype.http_host = "";
    
        /**
         * CMsgClientUFSUploadFileResponse http_url.
         * @member {string} http_url
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         */
        CMsgClientUFSUploadFileResponse.prototype.http_url = "";
    
        /**
         * CMsgClientUFSUploadFileResponse kv_headers.
         * @member {Uint8Array} kv_headers
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         */
        CMsgClientUFSUploadFileResponse.prototype.kv_headers = $util.newBuffer([]);
    
        /**
         * CMsgClientUFSUploadFileResponse use_https.
         * @member {boolean} use_https
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         */
        CMsgClientUFSUploadFileResponse.prototype.use_https = false;
    
        /**
         * CMsgClientUFSUploadFileResponse encrypt_file.
         * @member {boolean} encrypt_file
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         */
        CMsgClientUFSUploadFileResponse.prototype.encrypt_file = false;
    
        /**
         * Creates a new CMsgClientUFSUploadFileResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSUploadFileResponse
         * @static
         * @param {ICMsgClientUFSUploadFileResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSUploadFileResponse} CMsgClientUFSUploadFileResponse instance
         */
        CMsgClientUFSUploadFileResponse.create = function create(properties) {
            return new CMsgClientUFSUploadFileResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadFileResponse message. Does not implicitly {@link CMsgClientUFSUploadFileResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSUploadFileResponse
         * @static
         * @param {ICMsgClientUFSUploadFileResponse} message CMsgClientUFSUploadFileResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadFileResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.sha_file);
            if (message.use_http != null && Object.hasOwnProperty.call(message, "use_http"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.use_http);
            if (message.http_host != null && Object.hasOwnProperty.call(message, "http_host"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.http_host);
            if (message.http_url != null && Object.hasOwnProperty.call(message, "http_url"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.http_url);
            if (message.kv_headers != null && Object.hasOwnProperty.call(message, "kv_headers"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.kv_headers);
            if (message.use_https != null && Object.hasOwnProperty.call(message, "use_https"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.use_https);
            if (message.encrypt_file != null && Object.hasOwnProperty.call(message, "encrypt_file"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.encrypt_file);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadFileResponse message, length delimited. Does not implicitly {@link CMsgClientUFSUploadFileResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSUploadFileResponse
         * @static
         * @param {ICMsgClientUFSUploadFileResponse} message CMsgClientUFSUploadFileResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadFileResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSUploadFileResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSUploadFileResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSUploadFileResponse} CMsgClientUFSUploadFileResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadFileResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSUploadFileResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.sha_file = reader.bytes();
                    break;
                case 3:
                    message.use_http = reader.bool();
                    break;
                case 4:
                    message.http_host = reader.string();
                    break;
                case 5:
                    message.http_url = reader.string();
                    break;
                case 6:
                    message.kv_headers = reader.bytes();
                    break;
                case 7:
                    message.use_https = reader.bool();
                    break;
                case 8:
                    message.encrypt_file = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSUploadFileResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSUploadFileResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSUploadFileResponse} CMsgClientUFSUploadFileResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadFileResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSUploadFileResponse message.
         * @function verify
         * @memberof CMsgClientUFSUploadFileResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSUploadFileResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            if (message.use_http != null && message.hasOwnProperty("use_http"))
                if (typeof message.use_http !== "boolean")
                    return "use_http: boolean expected";
            if (message.http_host != null && message.hasOwnProperty("http_host"))
                if (!$util.isString(message.http_host))
                    return "http_host: string expected";
            if (message.http_url != null && message.hasOwnProperty("http_url"))
                if (!$util.isString(message.http_url))
                    return "http_url: string expected";
            if (message.kv_headers != null && message.hasOwnProperty("kv_headers"))
                if (!(message.kv_headers && typeof message.kv_headers.length === "number" || $util.isString(message.kv_headers)))
                    return "kv_headers: buffer expected";
            if (message.use_https != null && message.hasOwnProperty("use_https"))
                if (typeof message.use_https !== "boolean")
                    return "use_https: boolean expected";
            if (message.encrypt_file != null && message.hasOwnProperty("encrypt_file"))
                if (typeof message.encrypt_file !== "boolean")
                    return "encrypt_file: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSUploadFileResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSUploadFileResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSUploadFileResponse} CMsgClientUFSUploadFileResponse
         */
        CMsgClientUFSUploadFileResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSUploadFileResponse)
                return object;
            var message = new $root.CMsgClientUFSUploadFileResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            if (object.use_http != null)
                message.use_http = Boolean(object.use_http);
            if (object.http_host != null)
                message.http_host = String(object.http_host);
            if (object.http_url != null)
                message.http_url = String(object.http_url);
            if (object.kv_headers != null)
                if (typeof object.kv_headers === "string")
                    $util.base64.decode(object.kv_headers, message.kv_headers = $util.newBuffer($util.base64.length(object.kv_headers)), 0);
                else if (object.kv_headers.length)
                    message.kv_headers = object.kv_headers;
            if (object.use_https != null)
                message.use_https = Boolean(object.use_https);
            if (object.encrypt_file != null)
                message.encrypt_file = Boolean(object.encrypt_file);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSUploadFileResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSUploadFileResponse
         * @static
         * @param {CMsgClientUFSUploadFileResponse} message CMsgClientUFSUploadFileResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSUploadFileResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
                object.use_http = false;
                object.http_host = "";
                object.http_url = "";
                if (options.bytes === String)
                    object.kv_headers = "";
                else {
                    object.kv_headers = [];
                    if (options.bytes !== Array)
                        object.kv_headers = $util.newBuffer(object.kv_headers);
                }
                object.use_https = false;
                object.encrypt_file = false;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            if (message.use_http != null && message.hasOwnProperty("use_http"))
                object.use_http = message.use_http;
            if (message.http_host != null && message.hasOwnProperty("http_host"))
                object.http_host = message.http_host;
            if (message.http_url != null && message.hasOwnProperty("http_url"))
                object.http_url = message.http_url;
            if (message.kv_headers != null && message.hasOwnProperty("kv_headers"))
                object.kv_headers = options.bytes === String ? $util.base64.encode(message.kv_headers, 0, message.kv_headers.length) : options.bytes === Array ? Array.prototype.slice.call(message.kv_headers) : message.kv_headers;
            if (message.use_https != null && message.hasOwnProperty("use_https"))
                object.use_https = message.use_https;
            if (message.encrypt_file != null && message.hasOwnProperty("encrypt_file"))
                object.encrypt_file = message.encrypt_file;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSUploadFileResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSUploadFileResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSUploadFileResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSUploadFileResponse;
    })();
    
    $root.CMsgClientUFSUploadCommit = (function() {
    
        /**
         * Properties of a CMsgClientUFSUploadCommit.
         * @exports ICMsgClientUFSUploadCommit
         * @interface ICMsgClientUFSUploadCommit
         * @property {Array.<CMsgClientUFSUploadCommit.IFile>|null} [files] CMsgClientUFSUploadCommit files
         */
    
        /**
         * Constructs a new CMsgClientUFSUploadCommit.
         * @exports CMsgClientUFSUploadCommit
         * @classdesc Represents a CMsgClientUFSUploadCommit.
         * @implements ICMsgClientUFSUploadCommit
         * @constructor
         * @param {ICMsgClientUFSUploadCommit=} [properties] Properties to set
         */
        function CMsgClientUFSUploadCommit(properties) {
            this.files = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSUploadCommit files.
         * @member {Array.<CMsgClientUFSUploadCommit.IFile>} files
         * @memberof CMsgClientUFSUploadCommit
         * @instance
         */
        CMsgClientUFSUploadCommit.prototype.files = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientUFSUploadCommit instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSUploadCommit
         * @static
         * @param {ICMsgClientUFSUploadCommit=} [properties] Properties to set
         * @returns {CMsgClientUFSUploadCommit} CMsgClientUFSUploadCommit instance
         */
        CMsgClientUFSUploadCommit.create = function create(properties) {
            return new CMsgClientUFSUploadCommit(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadCommit message. Does not implicitly {@link CMsgClientUFSUploadCommit.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSUploadCommit
         * @static
         * @param {ICMsgClientUFSUploadCommit} message CMsgClientUFSUploadCommit message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadCommit.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.files != null && message.files.length)
                for (var i = 0; i < message.files.length; ++i)
                    $root.CMsgClientUFSUploadCommit.File.encode(message.files[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadCommit message, length delimited. Does not implicitly {@link CMsgClientUFSUploadCommit.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSUploadCommit
         * @static
         * @param {ICMsgClientUFSUploadCommit} message CMsgClientUFSUploadCommit message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadCommit.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSUploadCommit message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSUploadCommit
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSUploadCommit} CMsgClientUFSUploadCommit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadCommit.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSUploadCommit();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.files && message.files.length))
                        message.files = [];
                    message.files.push($root.CMsgClientUFSUploadCommit.File.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSUploadCommit message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSUploadCommit
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSUploadCommit} CMsgClientUFSUploadCommit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadCommit.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSUploadCommit message.
         * @function verify
         * @memberof CMsgClientUFSUploadCommit
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSUploadCommit.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.files != null && message.hasOwnProperty("files")) {
                if (!Array.isArray(message.files))
                    return "files: array expected";
                for (var i = 0; i < message.files.length; ++i) {
                    var error = $root.CMsgClientUFSUploadCommit.File.verify(message.files[i]);
                    if (error)
                        return "files." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSUploadCommit message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSUploadCommit
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSUploadCommit} CMsgClientUFSUploadCommit
         */
        CMsgClientUFSUploadCommit.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSUploadCommit)
                return object;
            var message = new $root.CMsgClientUFSUploadCommit();
            if (object.files) {
                if (!Array.isArray(object.files))
                    throw TypeError(".CMsgClientUFSUploadCommit.files: array expected");
                message.files = [];
                for (var i = 0; i < object.files.length; ++i) {
                    if (typeof object.files[i] !== "object")
                        throw TypeError(".CMsgClientUFSUploadCommit.files: object expected");
                    message.files[i] = $root.CMsgClientUFSUploadCommit.File.fromObject(object.files[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSUploadCommit message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSUploadCommit
         * @static
         * @param {CMsgClientUFSUploadCommit} message CMsgClientUFSUploadCommit
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSUploadCommit.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.files = [];
            if (message.files && message.files.length) {
                object.files = [];
                for (var j = 0; j < message.files.length; ++j)
                    object.files[j] = $root.CMsgClientUFSUploadCommit.File.toObject(message.files[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSUploadCommit to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSUploadCommit
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSUploadCommit.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientUFSUploadCommit.File = (function() {
    
            /**
             * Properties of a File.
             * @memberof CMsgClientUFSUploadCommit
             * @interface IFile
             * @property {number|null} [eresult] File eresult
             * @property {number|null} [app_id] File app_id
             * @property {Uint8Array|null} [sha_file] File sha_file
             * @property {number|null} [cub_file] File cub_file
             * @property {string|null} [file_name] File file_name
             */
    
            /**
             * Constructs a new File.
             * @memberof CMsgClientUFSUploadCommit
             * @classdesc Represents a File.
             * @implements IFile
             * @constructor
             * @param {CMsgClientUFSUploadCommit.IFile=} [properties] Properties to set
             */
            function File(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * File eresult.
             * @member {number} eresult
             * @memberof CMsgClientUFSUploadCommit.File
             * @instance
             */
            File.prototype.eresult = 2;
    
            /**
             * File app_id.
             * @member {number} app_id
             * @memberof CMsgClientUFSUploadCommit.File
             * @instance
             */
            File.prototype.app_id = 0;
    
            /**
             * File sha_file.
             * @member {Uint8Array} sha_file
             * @memberof CMsgClientUFSUploadCommit.File
             * @instance
             */
            File.prototype.sha_file = $util.newBuffer([]);
    
            /**
             * File cub_file.
             * @member {number} cub_file
             * @memberof CMsgClientUFSUploadCommit.File
             * @instance
             */
            File.prototype.cub_file = 0;
    
            /**
             * File file_name.
             * @member {string} file_name
             * @memberof CMsgClientUFSUploadCommit.File
             * @instance
             */
            File.prototype.file_name = "";
    
            /**
             * Creates a new File instance using the specified properties.
             * @function create
             * @memberof CMsgClientUFSUploadCommit.File
             * @static
             * @param {CMsgClientUFSUploadCommit.IFile=} [properties] Properties to set
             * @returns {CMsgClientUFSUploadCommit.File} File instance
             */
            File.create = function create(properties) {
                return new File(properties);
            };
    
            /**
             * Encodes the specified File message. Does not implicitly {@link CMsgClientUFSUploadCommit.File.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientUFSUploadCommit.File
             * @static
             * @param {CMsgClientUFSUploadCommit.IFile} message File message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            File.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
                if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
                if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.sha_file);
                if (message.cub_file != null && Object.hasOwnProperty.call(message, "cub_file"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.cub_file);
                if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.file_name);
                return writer;
            };
    
            /**
             * Encodes the specified File message, length delimited. Does not implicitly {@link CMsgClientUFSUploadCommit.File.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientUFSUploadCommit.File
             * @static
             * @param {CMsgClientUFSUploadCommit.IFile} message File message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            File.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a File message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientUFSUploadCommit.File
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientUFSUploadCommit.File} File
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            File.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSUploadCommit.File();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.eresult = reader.int32();
                        break;
                    case 2:
                        message.app_id = reader.uint32();
                        break;
                    case 3:
                        message.sha_file = reader.bytes();
                        break;
                    case 4:
                        message.cub_file = reader.uint32();
                        break;
                    case 5:
                        message.file_name = reader.string();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a File message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientUFSUploadCommit.File
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientUFSUploadCommit.File} File
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            File.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a File message.
             * @function verify
             * @memberof CMsgClientUFSUploadCommit.File
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            File.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.eresult != null && message.hasOwnProperty("eresult"))
                    if (!$util.isInteger(message.eresult))
                        return "eresult: integer expected";
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    if (!$util.isInteger(message.app_id))
                        return "app_id: integer expected";
                if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                    if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                        return "sha_file: buffer expected";
                if (message.cub_file != null && message.hasOwnProperty("cub_file"))
                    if (!$util.isInteger(message.cub_file))
                        return "cub_file: integer expected";
                if (message.file_name != null && message.hasOwnProperty("file_name"))
                    if (!$util.isString(message.file_name))
                        return "file_name: string expected";
                return null;
            };
    
            /**
             * Creates a File message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientUFSUploadCommit.File
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientUFSUploadCommit.File} File
             */
            File.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientUFSUploadCommit.File)
                    return object;
                var message = new $root.CMsgClientUFSUploadCommit.File();
                if (object.eresult != null)
                    message.eresult = object.eresult | 0;
                if (object.app_id != null)
                    message.app_id = object.app_id >>> 0;
                if (object.sha_file != null)
                    if (typeof object.sha_file === "string")
                        $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                    else if (object.sha_file.length)
                        message.sha_file = object.sha_file;
                if (object.cub_file != null)
                    message.cub_file = object.cub_file >>> 0;
                if (object.file_name != null)
                    message.file_name = String(object.file_name);
                return message;
            };
    
            /**
             * Creates a plain object from a File message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientUFSUploadCommit.File
             * @static
             * @param {CMsgClientUFSUploadCommit.File} message File
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            File.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.eresult = 2;
                    object.app_id = 0;
                    if (options.bytes === String)
                        object.sha_file = "";
                    else {
                        object.sha_file = [];
                        if (options.bytes !== Array)
                            object.sha_file = $util.newBuffer(object.sha_file);
                    }
                    object.cub_file = 0;
                    object.file_name = "";
                }
                if (message.eresult != null && message.hasOwnProperty("eresult"))
                    object.eresult = message.eresult;
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    object.app_id = message.app_id;
                if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                    object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
                if (message.cub_file != null && message.hasOwnProperty("cub_file"))
                    object.cub_file = message.cub_file;
                if (message.file_name != null && message.hasOwnProperty("file_name"))
                    object.file_name = message.file_name;
                return object;
            };
    
            /**
             * Converts this File to JSON.
             * @function toJSON
             * @memberof CMsgClientUFSUploadCommit.File
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            File.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return File;
        })();
    
        return CMsgClientUFSUploadCommit;
    })();
    
    $root.CMsgClientUFSUploadCommitResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSUploadCommitResponse.
         * @exports ICMsgClientUFSUploadCommitResponse
         * @interface ICMsgClientUFSUploadCommitResponse
         * @property {Array.<CMsgClientUFSUploadCommitResponse.IFile>|null} [files] CMsgClientUFSUploadCommitResponse files
         */
    
        /**
         * Constructs a new CMsgClientUFSUploadCommitResponse.
         * @exports CMsgClientUFSUploadCommitResponse
         * @classdesc Represents a CMsgClientUFSUploadCommitResponse.
         * @implements ICMsgClientUFSUploadCommitResponse
         * @constructor
         * @param {ICMsgClientUFSUploadCommitResponse=} [properties] Properties to set
         */
        function CMsgClientUFSUploadCommitResponse(properties) {
            this.files = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSUploadCommitResponse files.
         * @member {Array.<CMsgClientUFSUploadCommitResponse.IFile>} files
         * @memberof CMsgClientUFSUploadCommitResponse
         * @instance
         */
        CMsgClientUFSUploadCommitResponse.prototype.files = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientUFSUploadCommitResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSUploadCommitResponse
         * @static
         * @param {ICMsgClientUFSUploadCommitResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSUploadCommitResponse} CMsgClientUFSUploadCommitResponse instance
         */
        CMsgClientUFSUploadCommitResponse.create = function create(properties) {
            return new CMsgClientUFSUploadCommitResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadCommitResponse message. Does not implicitly {@link CMsgClientUFSUploadCommitResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSUploadCommitResponse
         * @static
         * @param {ICMsgClientUFSUploadCommitResponse} message CMsgClientUFSUploadCommitResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadCommitResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.files != null && message.files.length)
                for (var i = 0; i < message.files.length; ++i)
                    $root.CMsgClientUFSUploadCommitResponse.File.encode(message.files[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadCommitResponse message, length delimited. Does not implicitly {@link CMsgClientUFSUploadCommitResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSUploadCommitResponse
         * @static
         * @param {ICMsgClientUFSUploadCommitResponse} message CMsgClientUFSUploadCommitResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadCommitResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSUploadCommitResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSUploadCommitResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSUploadCommitResponse} CMsgClientUFSUploadCommitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadCommitResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSUploadCommitResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.files && message.files.length))
                        message.files = [];
                    message.files.push($root.CMsgClientUFSUploadCommitResponse.File.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSUploadCommitResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSUploadCommitResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSUploadCommitResponse} CMsgClientUFSUploadCommitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadCommitResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSUploadCommitResponse message.
         * @function verify
         * @memberof CMsgClientUFSUploadCommitResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSUploadCommitResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.files != null && message.hasOwnProperty("files")) {
                if (!Array.isArray(message.files))
                    return "files: array expected";
                for (var i = 0; i < message.files.length; ++i) {
                    var error = $root.CMsgClientUFSUploadCommitResponse.File.verify(message.files[i]);
                    if (error)
                        return "files." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSUploadCommitResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSUploadCommitResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSUploadCommitResponse} CMsgClientUFSUploadCommitResponse
         */
        CMsgClientUFSUploadCommitResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSUploadCommitResponse)
                return object;
            var message = new $root.CMsgClientUFSUploadCommitResponse();
            if (object.files) {
                if (!Array.isArray(object.files))
                    throw TypeError(".CMsgClientUFSUploadCommitResponse.files: array expected");
                message.files = [];
                for (var i = 0; i < object.files.length; ++i) {
                    if (typeof object.files[i] !== "object")
                        throw TypeError(".CMsgClientUFSUploadCommitResponse.files: object expected");
                    message.files[i] = $root.CMsgClientUFSUploadCommitResponse.File.fromObject(object.files[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSUploadCommitResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSUploadCommitResponse
         * @static
         * @param {CMsgClientUFSUploadCommitResponse} message CMsgClientUFSUploadCommitResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSUploadCommitResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.files = [];
            if (message.files && message.files.length) {
                object.files = [];
                for (var j = 0; j < message.files.length; ++j)
                    object.files[j] = $root.CMsgClientUFSUploadCommitResponse.File.toObject(message.files[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSUploadCommitResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSUploadCommitResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSUploadCommitResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientUFSUploadCommitResponse.File = (function() {
    
            /**
             * Properties of a File.
             * @memberof CMsgClientUFSUploadCommitResponse
             * @interface IFile
             * @property {number|null} [eresult] File eresult
             * @property {number|null} [app_id] File app_id
             * @property {Uint8Array|null} [sha_file] File sha_file
             */
    
            /**
             * Constructs a new File.
             * @memberof CMsgClientUFSUploadCommitResponse
             * @classdesc Represents a File.
             * @implements IFile
             * @constructor
             * @param {CMsgClientUFSUploadCommitResponse.IFile=} [properties] Properties to set
             */
            function File(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * File eresult.
             * @member {number} eresult
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @instance
             */
            File.prototype.eresult = 2;
    
            /**
             * File app_id.
             * @member {number} app_id
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @instance
             */
            File.prototype.app_id = 0;
    
            /**
             * File sha_file.
             * @member {Uint8Array} sha_file
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @instance
             */
            File.prototype.sha_file = $util.newBuffer([]);
    
            /**
             * Creates a new File instance using the specified properties.
             * @function create
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @static
             * @param {CMsgClientUFSUploadCommitResponse.IFile=} [properties] Properties to set
             * @returns {CMsgClientUFSUploadCommitResponse.File} File instance
             */
            File.create = function create(properties) {
                return new File(properties);
            };
    
            /**
             * Encodes the specified File message. Does not implicitly {@link CMsgClientUFSUploadCommitResponse.File.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @static
             * @param {CMsgClientUFSUploadCommitResponse.IFile} message File message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            File.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
                if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
                if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.sha_file);
                return writer;
            };
    
            /**
             * Encodes the specified File message, length delimited. Does not implicitly {@link CMsgClientUFSUploadCommitResponse.File.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @static
             * @param {CMsgClientUFSUploadCommitResponse.IFile} message File message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            File.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a File message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientUFSUploadCommitResponse.File} File
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            File.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSUploadCommitResponse.File();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.eresult = reader.int32();
                        break;
                    case 2:
                        message.app_id = reader.uint32();
                        break;
                    case 3:
                        message.sha_file = reader.bytes();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a File message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientUFSUploadCommitResponse.File} File
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            File.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a File message.
             * @function verify
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            File.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.eresult != null && message.hasOwnProperty("eresult"))
                    if (!$util.isInteger(message.eresult))
                        return "eresult: integer expected";
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    if (!$util.isInteger(message.app_id))
                        return "app_id: integer expected";
                if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                    if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                        return "sha_file: buffer expected";
                return null;
            };
    
            /**
             * Creates a File message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientUFSUploadCommitResponse.File} File
             */
            File.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientUFSUploadCommitResponse.File)
                    return object;
                var message = new $root.CMsgClientUFSUploadCommitResponse.File();
                if (object.eresult != null)
                    message.eresult = object.eresult | 0;
                if (object.app_id != null)
                    message.app_id = object.app_id >>> 0;
                if (object.sha_file != null)
                    if (typeof object.sha_file === "string")
                        $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                    else if (object.sha_file.length)
                        message.sha_file = object.sha_file;
                return message;
            };
    
            /**
             * Creates a plain object from a File message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @static
             * @param {CMsgClientUFSUploadCommitResponse.File} message File
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            File.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.eresult = 2;
                    object.app_id = 0;
                    if (options.bytes === String)
                        object.sha_file = "";
                    else {
                        object.sha_file = [];
                        if (options.bytes !== Array)
                            object.sha_file = $util.newBuffer(object.sha_file);
                    }
                }
                if (message.eresult != null && message.hasOwnProperty("eresult"))
                    object.eresult = message.eresult;
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    object.app_id = message.app_id;
                if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                    object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
                return object;
            };
    
            /**
             * Converts this File to JSON.
             * @function toJSON
             * @memberof CMsgClientUFSUploadCommitResponse.File
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            File.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return File;
        })();
    
        return CMsgClientUFSUploadCommitResponse;
    })();
    
    $root.CMsgClientUFSFileChunk = (function() {
    
        /**
         * Properties of a CMsgClientUFSFileChunk.
         * @exports ICMsgClientUFSFileChunk
         * @interface ICMsgClientUFSFileChunk
         * @property {Uint8Array|null} [sha_file] CMsgClientUFSFileChunk sha_file
         * @property {number|null} [file_start] CMsgClientUFSFileChunk file_start
         * @property {Uint8Array|null} [data] CMsgClientUFSFileChunk data
         */
    
        /**
         * Constructs a new CMsgClientUFSFileChunk.
         * @exports CMsgClientUFSFileChunk
         * @classdesc Represents a CMsgClientUFSFileChunk.
         * @implements ICMsgClientUFSFileChunk
         * @constructor
         * @param {ICMsgClientUFSFileChunk=} [properties] Properties to set
         */
        function CMsgClientUFSFileChunk(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSFileChunk sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientUFSFileChunk
         * @instance
         */
        CMsgClientUFSFileChunk.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * CMsgClientUFSFileChunk file_start.
         * @member {number} file_start
         * @memberof CMsgClientUFSFileChunk
         * @instance
         */
        CMsgClientUFSFileChunk.prototype.file_start = 0;
    
        /**
         * CMsgClientUFSFileChunk data.
         * @member {Uint8Array} data
         * @memberof CMsgClientUFSFileChunk
         * @instance
         */
        CMsgClientUFSFileChunk.prototype.data = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientUFSFileChunk instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSFileChunk
         * @static
         * @param {ICMsgClientUFSFileChunk=} [properties] Properties to set
         * @returns {CMsgClientUFSFileChunk} CMsgClientUFSFileChunk instance
         */
        CMsgClientUFSFileChunk.create = function create(properties) {
            return new CMsgClientUFSFileChunk(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSFileChunk message. Does not implicitly {@link CMsgClientUFSFileChunk.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSFileChunk
         * @static
         * @param {ICMsgClientUFSFileChunk} message CMsgClientUFSFileChunk message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSFileChunk.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.sha_file);
            if (message.file_start != null && Object.hasOwnProperty.call(message, "file_start"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.file_start);
            if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.data);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSFileChunk message, length delimited. Does not implicitly {@link CMsgClientUFSFileChunk.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSFileChunk
         * @static
         * @param {ICMsgClientUFSFileChunk} message CMsgClientUFSFileChunk message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSFileChunk.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSFileChunk message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSFileChunk
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSFileChunk} CMsgClientUFSFileChunk
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSFileChunk.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSFileChunk();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.sha_file = reader.bytes();
                    break;
                case 2:
                    message.file_start = reader.uint32();
                    break;
                case 3:
                    message.data = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSFileChunk message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSFileChunk
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSFileChunk} CMsgClientUFSFileChunk
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSFileChunk.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSFileChunk message.
         * @function verify
         * @memberof CMsgClientUFSFileChunk
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSFileChunk.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            if (message.file_start != null && message.hasOwnProperty("file_start"))
                if (!$util.isInteger(message.file_start))
                    return "file_start: integer expected";
            if (message.data != null && message.hasOwnProperty("data"))
                if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                    return "data: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSFileChunk message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSFileChunk
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSFileChunk} CMsgClientUFSFileChunk
         */
        CMsgClientUFSFileChunk.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSFileChunk)
                return object;
            var message = new $root.CMsgClientUFSFileChunk();
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            if (object.file_start != null)
                message.file_start = object.file_start >>> 0;
            if (object.data != null)
                if (typeof object.data === "string")
                    $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                else if (object.data.length)
                    message.data = object.data;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSFileChunk message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSFileChunk
         * @static
         * @param {CMsgClientUFSFileChunk} message CMsgClientUFSFileChunk
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSFileChunk.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
                object.file_start = 0;
                if (options.bytes === String)
                    object.data = "";
                else {
                    object.data = [];
                    if (options.bytes !== Array)
                        object.data = $util.newBuffer(object.data);
                }
            }
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            if (message.file_start != null && message.hasOwnProperty("file_start"))
                object.file_start = message.file_start;
            if (message.data != null && message.hasOwnProperty("data"))
                object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSFileChunk to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSFileChunk
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSFileChunk.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSFileChunk;
    })();
    
    $root.CMsgClientUFSTransferHeartbeat = (function() {
    
        /**
         * Properties of a CMsgClientUFSTransferHeartbeat.
         * @exports ICMsgClientUFSTransferHeartbeat
         * @interface ICMsgClientUFSTransferHeartbeat
         */
    
        /**
         * Constructs a new CMsgClientUFSTransferHeartbeat.
         * @exports CMsgClientUFSTransferHeartbeat
         * @classdesc Represents a CMsgClientUFSTransferHeartbeat.
         * @implements ICMsgClientUFSTransferHeartbeat
         * @constructor
         * @param {ICMsgClientUFSTransferHeartbeat=} [properties] Properties to set
         */
        function CMsgClientUFSTransferHeartbeat(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgClientUFSTransferHeartbeat instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSTransferHeartbeat
         * @static
         * @param {ICMsgClientUFSTransferHeartbeat=} [properties] Properties to set
         * @returns {CMsgClientUFSTransferHeartbeat} CMsgClientUFSTransferHeartbeat instance
         */
        CMsgClientUFSTransferHeartbeat.create = function create(properties) {
            return new CMsgClientUFSTransferHeartbeat(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSTransferHeartbeat message. Does not implicitly {@link CMsgClientUFSTransferHeartbeat.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSTransferHeartbeat
         * @static
         * @param {ICMsgClientUFSTransferHeartbeat} message CMsgClientUFSTransferHeartbeat message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSTransferHeartbeat.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSTransferHeartbeat message, length delimited. Does not implicitly {@link CMsgClientUFSTransferHeartbeat.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSTransferHeartbeat
         * @static
         * @param {ICMsgClientUFSTransferHeartbeat} message CMsgClientUFSTransferHeartbeat message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSTransferHeartbeat.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSTransferHeartbeat message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSTransferHeartbeat
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSTransferHeartbeat} CMsgClientUFSTransferHeartbeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSTransferHeartbeat.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSTransferHeartbeat();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSTransferHeartbeat message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSTransferHeartbeat
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSTransferHeartbeat} CMsgClientUFSTransferHeartbeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSTransferHeartbeat.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSTransferHeartbeat message.
         * @function verify
         * @memberof CMsgClientUFSTransferHeartbeat
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSTransferHeartbeat.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSTransferHeartbeat message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSTransferHeartbeat
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSTransferHeartbeat} CMsgClientUFSTransferHeartbeat
         */
        CMsgClientUFSTransferHeartbeat.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSTransferHeartbeat)
                return object;
            return new $root.CMsgClientUFSTransferHeartbeat();
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSTransferHeartbeat message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSTransferHeartbeat
         * @static
         * @param {CMsgClientUFSTransferHeartbeat} message CMsgClientUFSTransferHeartbeat
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSTransferHeartbeat.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgClientUFSTransferHeartbeat to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSTransferHeartbeat
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSTransferHeartbeat.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSTransferHeartbeat;
    })();
    
    $root.CMsgClientUFSUploadFileFinished = (function() {
    
        /**
         * Properties of a CMsgClientUFSUploadFileFinished.
         * @exports ICMsgClientUFSUploadFileFinished
         * @interface ICMsgClientUFSUploadFileFinished
         * @property {number|null} [eresult] CMsgClientUFSUploadFileFinished eresult
         * @property {Uint8Array|null} [sha_file] CMsgClientUFSUploadFileFinished sha_file
         */
    
        /**
         * Constructs a new CMsgClientUFSUploadFileFinished.
         * @exports CMsgClientUFSUploadFileFinished
         * @classdesc Represents a CMsgClientUFSUploadFileFinished.
         * @implements ICMsgClientUFSUploadFileFinished
         * @constructor
         * @param {ICMsgClientUFSUploadFileFinished=} [properties] Properties to set
         */
        function CMsgClientUFSUploadFileFinished(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSUploadFileFinished eresult.
         * @member {number} eresult
         * @memberof CMsgClientUFSUploadFileFinished
         * @instance
         */
        CMsgClientUFSUploadFileFinished.prototype.eresult = 2;
    
        /**
         * CMsgClientUFSUploadFileFinished sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientUFSUploadFileFinished
         * @instance
         */
        CMsgClientUFSUploadFileFinished.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientUFSUploadFileFinished instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSUploadFileFinished
         * @static
         * @param {ICMsgClientUFSUploadFileFinished=} [properties] Properties to set
         * @returns {CMsgClientUFSUploadFileFinished} CMsgClientUFSUploadFileFinished instance
         */
        CMsgClientUFSUploadFileFinished.create = function create(properties) {
            return new CMsgClientUFSUploadFileFinished(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadFileFinished message. Does not implicitly {@link CMsgClientUFSUploadFileFinished.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSUploadFileFinished
         * @static
         * @param {ICMsgClientUFSUploadFileFinished} message CMsgClientUFSUploadFileFinished message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadFileFinished.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.sha_file);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSUploadFileFinished message, length delimited. Does not implicitly {@link CMsgClientUFSUploadFileFinished.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSUploadFileFinished
         * @static
         * @param {ICMsgClientUFSUploadFileFinished} message CMsgClientUFSUploadFileFinished message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSUploadFileFinished.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSUploadFileFinished message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSUploadFileFinished
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSUploadFileFinished} CMsgClientUFSUploadFileFinished
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadFileFinished.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSUploadFileFinished();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.sha_file = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSUploadFileFinished message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSUploadFileFinished
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSUploadFileFinished} CMsgClientUFSUploadFileFinished
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSUploadFileFinished.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSUploadFileFinished message.
         * @function verify
         * @memberof CMsgClientUFSUploadFileFinished
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSUploadFileFinished.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSUploadFileFinished message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSUploadFileFinished
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSUploadFileFinished} CMsgClientUFSUploadFileFinished
         */
        CMsgClientUFSUploadFileFinished.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSUploadFileFinished)
                return object;
            var message = new $root.CMsgClientUFSUploadFileFinished();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSUploadFileFinished message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSUploadFileFinished
         * @static
         * @param {CMsgClientUFSUploadFileFinished} message CMsgClientUFSUploadFileFinished
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSUploadFileFinished.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSUploadFileFinished to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSUploadFileFinished
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSUploadFileFinished.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSUploadFileFinished;
    })();
    
    $root.CMsgClientUFSDeleteFileRequest = (function() {
    
        /**
         * Properties of a CMsgClientUFSDeleteFileRequest.
         * @exports ICMsgClientUFSDeleteFileRequest
         * @interface ICMsgClientUFSDeleteFileRequest
         * @property {number|null} [app_id] CMsgClientUFSDeleteFileRequest app_id
         * @property {string|null} [file_name] CMsgClientUFSDeleteFileRequest file_name
         * @property {boolean|null} [is_explicit_delete] CMsgClientUFSDeleteFileRequest is_explicit_delete
         */
    
        /**
         * Constructs a new CMsgClientUFSDeleteFileRequest.
         * @exports CMsgClientUFSDeleteFileRequest
         * @classdesc Represents a CMsgClientUFSDeleteFileRequest.
         * @implements ICMsgClientUFSDeleteFileRequest
         * @constructor
         * @param {ICMsgClientUFSDeleteFileRequest=} [properties] Properties to set
         */
        function CMsgClientUFSDeleteFileRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSDeleteFileRequest app_id.
         * @member {number} app_id
         * @memberof CMsgClientUFSDeleteFileRequest
         * @instance
         */
        CMsgClientUFSDeleteFileRequest.prototype.app_id = 0;
    
        /**
         * CMsgClientUFSDeleteFileRequest file_name.
         * @member {string} file_name
         * @memberof CMsgClientUFSDeleteFileRequest
         * @instance
         */
        CMsgClientUFSDeleteFileRequest.prototype.file_name = "";
    
        /**
         * CMsgClientUFSDeleteFileRequest is_explicit_delete.
         * @member {boolean} is_explicit_delete
         * @memberof CMsgClientUFSDeleteFileRequest
         * @instance
         */
        CMsgClientUFSDeleteFileRequest.prototype.is_explicit_delete = false;
    
        /**
         * Creates a new CMsgClientUFSDeleteFileRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSDeleteFileRequest
         * @static
         * @param {ICMsgClientUFSDeleteFileRequest=} [properties] Properties to set
         * @returns {CMsgClientUFSDeleteFileRequest} CMsgClientUFSDeleteFileRequest instance
         */
        CMsgClientUFSDeleteFileRequest.create = function create(properties) {
            return new CMsgClientUFSDeleteFileRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSDeleteFileRequest message. Does not implicitly {@link CMsgClientUFSDeleteFileRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSDeleteFileRequest
         * @static
         * @param {ICMsgClientUFSDeleteFileRequest} message CMsgClientUFSDeleteFileRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSDeleteFileRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.file_name);
            if (message.is_explicit_delete != null && Object.hasOwnProperty.call(message, "is_explicit_delete"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.is_explicit_delete);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSDeleteFileRequest message, length delimited. Does not implicitly {@link CMsgClientUFSDeleteFileRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSDeleteFileRequest
         * @static
         * @param {ICMsgClientUFSDeleteFileRequest} message CMsgClientUFSDeleteFileRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSDeleteFileRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSDeleteFileRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSDeleteFileRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSDeleteFileRequest} CMsgClientUFSDeleteFileRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSDeleteFileRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSDeleteFileRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.file_name = reader.string();
                    break;
                case 3:
                    message.is_explicit_delete = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSDeleteFileRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSDeleteFileRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSDeleteFileRequest} CMsgClientUFSDeleteFileRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSDeleteFileRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSDeleteFileRequest message.
         * @function verify
         * @memberof CMsgClientUFSDeleteFileRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSDeleteFileRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                if (!$util.isString(message.file_name))
                    return "file_name: string expected";
            if (message.is_explicit_delete != null && message.hasOwnProperty("is_explicit_delete"))
                if (typeof message.is_explicit_delete !== "boolean")
                    return "is_explicit_delete: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSDeleteFileRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSDeleteFileRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSDeleteFileRequest} CMsgClientUFSDeleteFileRequest
         */
        CMsgClientUFSDeleteFileRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSDeleteFileRequest)
                return object;
            var message = new $root.CMsgClientUFSDeleteFileRequest();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.file_name != null)
                message.file_name = String(object.file_name);
            if (object.is_explicit_delete != null)
                message.is_explicit_delete = Boolean(object.is_explicit_delete);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSDeleteFileRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSDeleteFileRequest
         * @static
         * @param {CMsgClientUFSDeleteFileRequest} message CMsgClientUFSDeleteFileRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSDeleteFileRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.file_name = "";
                object.is_explicit_delete = false;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                object.file_name = message.file_name;
            if (message.is_explicit_delete != null && message.hasOwnProperty("is_explicit_delete"))
                object.is_explicit_delete = message.is_explicit_delete;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSDeleteFileRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSDeleteFileRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSDeleteFileRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSDeleteFileRequest;
    })();
    
    $root.CMsgClientUFSDeleteFileResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSDeleteFileResponse.
         * @exports ICMsgClientUFSDeleteFileResponse
         * @interface ICMsgClientUFSDeleteFileResponse
         * @property {number|null} [eresult] CMsgClientUFSDeleteFileResponse eresult
         * @property {string|null} [file_name] CMsgClientUFSDeleteFileResponse file_name
         */
    
        /**
         * Constructs a new CMsgClientUFSDeleteFileResponse.
         * @exports CMsgClientUFSDeleteFileResponse
         * @classdesc Represents a CMsgClientUFSDeleteFileResponse.
         * @implements ICMsgClientUFSDeleteFileResponse
         * @constructor
         * @param {ICMsgClientUFSDeleteFileResponse=} [properties] Properties to set
         */
        function CMsgClientUFSDeleteFileResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSDeleteFileResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUFSDeleteFileResponse
         * @instance
         */
        CMsgClientUFSDeleteFileResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientUFSDeleteFileResponse file_name.
         * @member {string} file_name
         * @memberof CMsgClientUFSDeleteFileResponse
         * @instance
         */
        CMsgClientUFSDeleteFileResponse.prototype.file_name = "";
    
        /**
         * Creates a new CMsgClientUFSDeleteFileResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSDeleteFileResponse
         * @static
         * @param {ICMsgClientUFSDeleteFileResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSDeleteFileResponse} CMsgClientUFSDeleteFileResponse instance
         */
        CMsgClientUFSDeleteFileResponse.create = function create(properties) {
            return new CMsgClientUFSDeleteFileResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSDeleteFileResponse message. Does not implicitly {@link CMsgClientUFSDeleteFileResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSDeleteFileResponse
         * @static
         * @param {ICMsgClientUFSDeleteFileResponse} message CMsgClientUFSDeleteFileResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSDeleteFileResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.file_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSDeleteFileResponse message, length delimited. Does not implicitly {@link CMsgClientUFSDeleteFileResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSDeleteFileResponse
         * @static
         * @param {ICMsgClientUFSDeleteFileResponse} message CMsgClientUFSDeleteFileResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSDeleteFileResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSDeleteFileResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSDeleteFileResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSDeleteFileResponse} CMsgClientUFSDeleteFileResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSDeleteFileResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSDeleteFileResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.file_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSDeleteFileResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSDeleteFileResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSDeleteFileResponse} CMsgClientUFSDeleteFileResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSDeleteFileResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSDeleteFileResponse message.
         * @function verify
         * @memberof CMsgClientUFSDeleteFileResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSDeleteFileResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                if (!$util.isString(message.file_name))
                    return "file_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSDeleteFileResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSDeleteFileResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSDeleteFileResponse} CMsgClientUFSDeleteFileResponse
         */
        CMsgClientUFSDeleteFileResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSDeleteFileResponse)
                return object;
            var message = new $root.CMsgClientUFSDeleteFileResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.file_name != null)
                message.file_name = String(object.file_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSDeleteFileResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSDeleteFileResponse
         * @static
         * @param {CMsgClientUFSDeleteFileResponse} message CMsgClientUFSDeleteFileResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSDeleteFileResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.file_name = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                object.file_name = message.file_name;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSDeleteFileResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSDeleteFileResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSDeleteFileResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSDeleteFileResponse;
    })();
    
    $root.CMsgClientUFSGetFileListForApp = (function() {
    
        /**
         * Properties of a CMsgClientUFSGetFileListForApp.
         * @exports ICMsgClientUFSGetFileListForApp
         * @interface ICMsgClientUFSGetFileListForApp
         * @property {Array.<number>|null} [apps_to_query] CMsgClientUFSGetFileListForApp apps_to_query
         * @property {boolean|null} [send_path_prefixes] CMsgClientUFSGetFileListForApp send_path_prefixes
         */
    
        /**
         * Constructs a new CMsgClientUFSGetFileListForApp.
         * @exports CMsgClientUFSGetFileListForApp
         * @classdesc Represents a CMsgClientUFSGetFileListForApp.
         * @implements ICMsgClientUFSGetFileListForApp
         * @constructor
         * @param {ICMsgClientUFSGetFileListForApp=} [properties] Properties to set
         */
        function CMsgClientUFSGetFileListForApp(properties) {
            this.apps_to_query = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSGetFileListForApp apps_to_query.
         * @member {Array.<number>} apps_to_query
         * @memberof CMsgClientUFSGetFileListForApp
         * @instance
         */
        CMsgClientUFSGetFileListForApp.prototype.apps_to_query = $util.emptyArray;
    
        /**
         * CMsgClientUFSGetFileListForApp send_path_prefixes.
         * @member {boolean} send_path_prefixes
         * @memberof CMsgClientUFSGetFileListForApp
         * @instance
         */
        CMsgClientUFSGetFileListForApp.prototype.send_path_prefixes = false;
    
        /**
         * Creates a new CMsgClientUFSGetFileListForApp instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSGetFileListForApp
         * @static
         * @param {ICMsgClientUFSGetFileListForApp=} [properties] Properties to set
         * @returns {CMsgClientUFSGetFileListForApp} CMsgClientUFSGetFileListForApp instance
         */
        CMsgClientUFSGetFileListForApp.create = function create(properties) {
            return new CMsgClientUFSGetFileListForApp(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetFileListForApp message. Does not implicitly {@link CMsgClientUFSGetFileListForApp.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSGetFileListForApp
         * @static
         * @param {ICMsgClientUFSGetFileListForApp} message CMsgClientUFSGetFileListForApp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetFileListForApp.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.apps_to_query != null && message.apps_to_query.length)
                for (var i = 0; i < message.apps_to_query.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.apps_to_query[i]);
            if (message.send_path_prefixes != null && Object.hasOwnProperty.call(message, "send_path_prefixes"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.send_path_prefixes);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetFileListForApp message, length delimited. Does not implicitly {@link CMsgClientUFSGetFileListForApp.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSGetFileListForApp
         * @static
         * @param {ICMsgClientUFSGetFileListForApp} message CMsgClientUFSGetFileListForApp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetFileListForApp.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSGetFileListForApp message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSGetFileListForApp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSGetFileListForApp} CMsgClientUFSGetFileListForApp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetFileListForApp.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSGetFileListForApp();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.apps_to_query && message.apps_to_query.length))
                        message.apps_to_query = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.apps_to_query.push(reader.uint32());
                    } else
                        message.apps_to_query.push(reader.uint32());
                    break;
                case 2:
                    message.send_path_prefixes = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSGetFileListForApp message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSGetFileListForApp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSGetFileListForApp} CMsgClientUFSGetFileListForApp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetFileListForApp.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSGetFileListForApp message.
         * @function verify
         * @memberof CMsgClientUFSGetFileListForApp
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSGetFileListForApp.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.apps_to_query != null && message.hasOwnProperty("apps_to_query")) {
                if (!Array.isArray(message.apps_to_query))
                    return "apps_to_query: array expected";
                for (var i = 0; i < message.apps_to_query.length; ++i)
                    if (!$util.isInteger(message.apps_to_query[i]))
                        return "apps_to_query: integer[] expected";
            }
            if (message.send_path_prefixes != null && message.hasOwnProperty("send_path_prefixes"))
                if (typeof message.send_path_prefixes !== "boolean")
                    return "send_path_prefixes: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSGetFileListForApp message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSGetFileListForApp
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSGetFileListForApp} CMsgClientUFSGetFileListForApp
         */
        CMsgClientUFSGetFileListForApp.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSGetFileListForApp)
                return object;
            var message = new $root.CMsgClientUFSGetFileListForApp();
            if (object.apps_to_query) {
                if (!Array.isArray(object.apps_to_query))
                    throw TypeError(".CMsgClientUFSGetFileListForApp.apps_to_query: array expected");
                message.apps_to_query = [];
                for (var i = 0; i < object.apps_to_query.length; ++i)
                    message.apps_to_query[i] = object.apps_to_query[i] >>> 0;
            }
            if (object.send_path_prefixes != null)
                message.send_path_prefixes = Boolean(object.send_path_prefixes);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSGetFileListForApp message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSGetFileListForApp
         * @static
         * @param {CMsgClientUFSGetFileListForApp} message CMsgClientUFSGetFileListForApp
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSGetFileListForApp.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.apps_to_query = [];
            if (options.defaults)
                object.send_path_prefixes = false;
            if (message.apps_to_query && message.apps_to_query.length) {
                object.apps_to_query = [];
                for (var j = 0; j < message.apps_to_query.length; ++j)
                    object.apps_to_query[j] = message.apps_to_query[j];
            }
            if (message.send_path_prefixes != null && message.hasOwnProperty("send_path_prefixes"))
                object.send_path_prefixes = message.send_path_prefixes;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSGetFileListForApp to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSGetFileListForApp
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSGetFileListForApp.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSGetFileListForApp;
    })();
    
    $root.CMsgClientUFSGetFileListForAppResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSGetFileListForAppResponse.
         * @exports ICMsgClientUFSGetFileListForAppResponse
         * @interface ICMsgClientUFSGetFileListForAppResponse
         * @property {Array.<CMsgClientUFSGetFileListForAppResponse.IFile>|null} [files] CMsgClientUFSGetFileListForAppResponse files
         * @property {Array.<string>|null} [path_prefixes] CMsgClientUFSGetFileListForAppResponse path_prefixes
         */
    
        /**
         * Constructs a new CMsgClientUFSGetFileListForAppResponse.
         * @exports CMsgClientUFSGetFileListForAppResponse
         * @classdesc Represents a CMsgClientUFSGetFileListForAppResponse.
         * @implements ICMsgClientUFSGetFileListForAppResponse
         * @constructor
         * @param {ICMsgClientUFSGetFileListForAppResponse=} [properties] Properties to set
         */
        function CMsgClientUFSGetFileListForAppResponse(properties) {
            this.files = [];
            this.path_prefixes = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSGetFileListForAppResponse files.
         * @member {Array.<CMsgClientUFSGetFileListForAppResponse.IFile>} files
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @instance
         */
        CMsgClientUFSGetFileListForAppResponse.prototype.files = $util.emptyArray;
    
        /**
         * CMsgClientUFSGetFileListForAppResponse path_prefixes.
         * @member {Array.<string>} path_prefixes
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @instance
         */
        CMsgClientUFSGetFileListForAppResponse.prototype.path_prefixes = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientUFSGetFileListForAppResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @static
         * @param {ICMsgClientUFSGetFileListForAppResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSGetFileListForAppResponse} CMsgClientUFSGetFileListForAppResponse instance
         */
        CMsgClientUFSGetFileListForAppResponse.create = function create(properties) {
            return new CMsgClientUFSGetFileListForAppResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetFileListForAppResponse message. Does not implicitly {@link CMsgClientUFSGetFileListForAppResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @static
         * @param {ICMsgClientUFSGetFileListForAppResponse} message CMsgClientUFSGetFileListForAppResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetFileListForAppResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.files != null && message.files.length)
                for (var i = 0; i < message.files.length; ++i)
                    $root.CMsgClientUFSGetFileListForAppResponse.File.encode(message.files[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.path_prefixes != null && message.path_prefixes.length)
                for (var i = 0; i < message.path_prefixes.length; ++i)
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.path_prefixes[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetFileListForAppResponse message, length delimited. Does not implicitly {@link CMsgClientUFSGetFileListForAppResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @static
         * @param {ICMsgClientUFSGetFileListForAppResponse} message CMsgClientUFSGetFileListForAppResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetFileListForAppResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSGetFileListForAppResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSGetFileListForAppResponse} CMsgClientUFSGetFileListForAppResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetFileListForAppResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSGetFileListForAppResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.files && message.files.length))
                        message.files = [];
                    message.files.push($root.CMsgClientUFSGetFileListForAppResponse.File.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.path_prefixes && message.path_prefixes.length))
                        message.path_prefixes = [];
                    message.path_prefixes.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSGetFileListForAppResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSGetFileListForAppResponse} CMsgClientUFSGetFileListForAppResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetFileListForAppResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSGetFileListForAppResponse message.
         * @function verify
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSGetFileListForAppResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.files != null && message.hasOwnProperty("files")) {
                if (!Array.isArray(message.files))
                    return "files: array expected";
                for (var i = 0; i < message.files.length; ++i) {
                    var error = $root.CMsgClientUFSGetFileListForAppResponse.File.verify(message.files[i]);
                    if (error)
                        return "files." + error;
                }
            }
            if (message.path_prefixes != null && message.hasOwnProperty("path_prefixes")) {
                if (!Array.isArray(message.path_prefixes))
                    return "path_prefixes: array expected";
                for (var i = 0; i < message.path_prefixes.length; ++i)
                    if (!$util.isString(message.path_prefixes[i]))
                        return "path_prefixes: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSGetFileListForAppResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSGetFileListForAppResponse} CMsgClientUFSGetFileListForAppResponse
         */
        CMsgClientUFSGetFileListForAppResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSGetFileListForAppResponse)
                return object;
            var message = new $root.CMsgClientUFSGetFileListForAppResponse();
            if (object.files) {
                if (!Array.isArray(object.files))
                    throw TypeError(".CMsgClientUFSGetFileListForAppResponse.files: array expected");
                message.files = [];
                for (var i = 0; i < object.files.length; ++i) {
                    if (typeof object.files[i] !== "object")
                        throw TypeError(".CMsgClientUFSGetFileListForAppResponse.files: object expected");
                    message.files[i] = $root.CMsgClientUFSGetFileListForAppResponse.File.fromObject(object.files[i]);
                }
            }
            if (object.path_prefixes) {
                if (!Array.isArray(object.path_prefixes))
                    throw TypeError(".CMsgClientUFSGetFileListForAppResponse.path_prefixes: array expected");
                message.path_prefixes = [];
                for (var i = 0; i < object.path_prefixes.length; ++i)
                    message.path_prefixes[i] = String(object.path_prefixes[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSGetFileListForAppResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @static
         * @param {CMsgClientUFSGetFileListForAppResponse} message CMsgClientUFSGetFileListForAppResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSGetFileListForAppResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.files = [];
                object.path_prefixes = [];
            }
            if (message.files && message.files.length) {
                object.files = [];
                for (var j = 0; j < message.files.length; ++j)
                    object.files[j] = $root.CMsgClientUFSGetFileListForAppResponse.File.toObject(message.files[j], options);
            }
            if (message.path_prefixes && message.path_prefixes.length) {
                object.path_prefixes = [];
                for (var j = 0; j < message.path_prefixes.length; ++j)
                    object.path_prefixes[j] = message.path_prefixes[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSGetFileListForAppResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSGetFileListForAppResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSGetFileListForAppResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientUFSGetFileListForAppResponse.File = (function() {
    
            /**
             * Properties of a File.
             * @memberof CMsgClientUFSGetFileListForAppResponse
             * @interface IFile
             * @property {number|null} [app_id] File app_id
             * @property {string|null} [file_name] File file_name
             * @property {Uint8Array|null} [sha_file] File sha_file
             * @property {number|Long|null} [time_stamp] File time_stamp
             * @property {number|null} [raw_file_size] File raw_file_size
             * @property {boolean|null} [is_explicit_delete] File is_explicit_delete
             * @property {number|null} [platforms_to_sync] File platforms_to_sync
             * @property {number|null} [path_prefix_index] File path_prefix_index
             */
    
            /**
             * Constructs a new File.
             * @memberof CMsgClientUFSGetFileListForAppResponse
             * @classdesc Represents a File.
             * @implements IFile
             * @constructor
             * @param {CMsgClientUFSGetFileListForAppResponse.IFile=} [properties] Properties to set
             */
            function File(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * File app_id.
             * @member {number} app_id
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             */
            File.prototype.app_id = 0;
    
            /**
             * File file_name.
             * @member {string} file_name
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             */
            File.prototype.file_name = "";
    
            /**
             * File sha_file.
             * @member {Uint8Array} sha_file
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             */
            File.prototype.sha_file = $util.newBuffer([]);
    
            /**
             * File time_stamp.
             * @member {number|Long} time_stamp
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             */
            File.prototype.time_stamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * File raw_file_size.
             * @member {number} raw_file_size
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             */
            File.prototype.raw_file_size = 0;
    
            /**
             * File is_explicit_delete.
             * @member {boolean} is_explicit_delete
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             */
            File.prototype.is_explicit_delete = false;
    
            /**
             * File platforms_to_sync.
             * @member {number} platforms_to_sync
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             */
            File.prototype.platforms_to_sync = 0;
    
            /**
             * File path_prefix_index.
             * @member {number} path_prefix_index
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             */
            File.prototype.path_prefix_index = 0;
    
            /**
             * Creates a new File instance using the specified properties.
             * @function create
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @static
             * @param {CMsgClientUFSGetFileListForAppResponse.IFile=} [properties] Properties to set
             * @returns {CMsgClientUFSGetFileListForAppResponse.File} File instance
             */
            File.create = function create(properties) {
                return new File(properties);
            };
    
            /**
             * Encodes the specified File message. Does not implicitly {@link CMsgClientUFSGetFileListForAppResponse.File.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @static
             * @param {CMsgClientUFSGetFileListForAppResponse.IFile} message File message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            File.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
                if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.file_name);
                if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.sha_file);
                if (message.time_stamp != null && Object.hasOwnProperty.call(message, "time_stamp"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.time_stamp);
                if (message.raw_file_size != null && Object.hasOwnProperty.call(message, "raw_file_size"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.raw_file_size);
                if (message.is_explicit_delete != null && Object.hasOwnProperty.call(message, "is_explicit_delete"))
                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.is_explicit_delete);
                if (message.platforms_to_sync != null && Object.hasOwnProperty.call(message, "platforms_to_sync"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.platforms_to_sync);
                if (message.path_prefix_index != null && Object.hasOwnProperty.call(message, "path_prefix_index"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.path_prefix_index);
                return writer;
            };
    
            /**
             * Encodes the specified File message, length delimited. Does not implicitly {@link CMsgClientUFSGetFileListForAppResponse.File.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @static
             * @param {CMsgClientUFSGetFileListForAppResponse.IFile} message File message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            File.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a File message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientUFSGetFileListForAppResponse.File} File
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            File.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSGetFileListForAppResponse.File();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.app_id = reader.uint32();
                        break;
                    case 2:
                        message.file_name = reader.string();
                        break;
                    case 3:
                        message.sha_file = reader.bytes();
                        break;
                    case 4:
                        message.time_stamp = reader.uint64();
                        break;
                    case 5:
                        message.raw_file_size = reader.uint32();
                        break;
                    case 6:
                        message.is_explicit_delete = reader.bool();
                        break;
                    case 7:
                        message.platforms_to_sync = reader.uint32();
                        break;
                    case 8:
                        message.path_prefix_index = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a File message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientUFSGetFileListForAppResponse.File} File
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            File.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a File message.
             * @function verify
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            File.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    if (!$util.isInteger(message.app_id))
                        return "app_id: integer expected";
                if (message.file_name != null && message.hasOwnProperty("file_name"))
                    if (!$util.isString(message.file_name))
                        return "file_name: string expected";
                if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                    if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                        return "sha_file: buffer expected";
                if (message.time_stamp != null && message.hasOwnProperty("time_stamp"))
                    if (!$util.isInteger(message.time_stamp) && !(message.time_stamp && $util.isInteger(message.time_stamp.low) && $util.isInteger(message.time_stamp.high)))
                        return "time_stamp: integer|Long expected";
                if (message.raw_file_size != null && message.hasOwnProperty("raw_file_size"))
                    if (!$util.isInteger(message.raw_file_size))
                        return "raw_file_size: integer expected";
                if (message.is_explicit_delete != null && message.hasOwnProperty("is_explicit_delete"))
                    if (typeof message.is_explicit_delete !== "boolean")
                        return "is_explicit_delete: boolean expected";
                if (message.platforms_to_sync != null && message.hasOwnProperty("platforms_to_sync"))
                    if (!$util.isInteger(message.platforms_to_sync))
                        return "platforms_to_sync: integer expected";
                if (message.path_prefix_index != null && message.hasOwnProperty("path_prefix_index"))
                    if (!$util.isInteger(message.path_prefix_index))
                        return "path_prefix_index: integer expected";
                return null;
            };
    
            /**
             * Creates a File message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientUFSGetFileListForAppResponse.File} File
             */
            File.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientUFSGetFileListForAppResponse.File)
                    return object;
                var message = new $root.CMsgClientUFSGetFileListForAppResponse.File();
                if (object.app_id != null)
                    message.app_id = object.app_id >>> 0;
                if (object.file_name != null)
                    message.file_name = String(object.file_name);
                if (object.sha_file != null)
                    if (typeof object.sha_file === "string")
                        $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                    else if (object.sha_file.length)
                        message.sha_file = object.sha_file;
                if (object.time_stamp != null)
                    if ($util.Long)
                        (message.time_stamp = $util.Long.fromValue(object.time_stamp)).unsigned = true;
                    else if (typeof object.time_stamp === "string")
                        message.time_stamp = parseInt(object.time_stamp, 10);
                    else if (typeof object.time_stamp === "number")
                        message.time_stamp = object.time_stamp;
                    else if (typeof object.time_stamp === "object")
                        message.time_stamp = new $util.LongBits(object.time_stamp.low >>> 0, object.time_stamp.high >>> 0).toNumber(true);
                if (object.raw_file_size != null)
                    message.raw_file_size = object.raw_file_size >>> 0;
                if (object.is_explicit_delete != null)
                    message.is_explicit_delete = Boolean(object.is_explicit_delete);
                if (object.platforms_to_sync != null)
                    message.platforms_to_sync = object.platforms_to_sync >>> 0;
                if (object.path_prefix_index != null)
                    message.path_prefix_index = object.path_prefix_index >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a File message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @static
             * @param {CMsgClientUFSGetFileListForAppResponse.File} message File
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            File.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.app_id = 0;
                    object.file_name = "";
                    if (options.bytes === String)
                        object.sha_file = "";
                    else {
                        object.sha_file = [];
                        if (options.bytes !== Array)
                            object.sha_file = $util.newBuffer(object.sha_file);
                    }
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.time_stamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.time_stamp = options.longs === String ? "0" : 0;
                    object.raw_file_size = 0;
                    object.is_explicit_delete = false;
                    object.platforms_to_sync = 0;
                    object.path_prefix_index = 0;
                }
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    object.app_id = message.app_id;
                if (message.file_name != null && message.hasOwnProperty("file_name"))
                    object.file_name = message.file_name;
                if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                    object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
                if (message.time_stamp != null && message.hasOwnProperty("time_stamp"))
                    if (typeof message.time_stamp === "number")
                        object.time_stamp = options.longs === String ? String(message.time_stamp) : message.time_stamp;
                    else
                        object.time_stamp = options.longs === String ? $util.Long.prototype.toString.call(message.time_stamp) : options.longs === Number ? new $util.LongBits(message.time_stamp.low >>> 0, message.time_stamp.high >>> 0).toNumber(true) : message.time_stamp;
                if (message.raw_file_size != null && message.hasOwnProperty("raw_file_size"))
                    object.raw_file_size = message.raw_file_size;
                if (message.is_explicit_delete != null && message.hasOwnProperty("is_explicit_delete"))
                    object.is_explicit_delete = message.is_explicit_delete;
                if (message.platforms_to_sync != null && message.hasOwnProperty("platforms_to_sync"))
                    object.platforms_to_sync = message.platforms_to_sync;
                if (message.path_prefix_index != null && message.hasOwnProperty("path_prefix_index"))
                    object.path_prefix_index = message.path_prefix_index;
                return object;
            };
    
            /**
             * Converts this File to JSON.
             * @function toJSON
             * @memberof CMsgClientUFSGetFileListForAppResponse.File
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            File.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return File;
        })();
    
        return CMsgClientUFSGetFileListForAppResponse;
    })();
    
    $root.CMsgClientUFSDownloadRequest = (function() {
    
        /**
         * Properties of a CMsgClientUFSDownloadRequest.
         * @exports ICMsgClientUFSDownloadRequest
         * @interface ICMsgClientUFSDownloadRequest
         * @property {number|null} [app_id] CMsgClientUFSDownloadRequest app_id
         * @property {string|null} [file_name] CMsgClientUFSDownloadRequest file_name
         * @property {boolean|null} [can_handle_http] CMsgClientUFSDownloadRequest can_handle_http
         */
    
        /**
         * Constructs a new CMsgClientUFSDownloadRequest.
         * @exports CMsgClientUFSDownloadRequest
         * @classdesc Represents a CMsgClientUFSDownloadRequest.
         * @implements ICMsgClientUFSDownloadRequest
         * @constructor
         * @param {ICMsgClientUFSDownloadRequest=} [properties] Properties to set
         */
        function CMsgClientUFSDownloadRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSDownloadRequest app_id.
         * @member {number} app_id
         * @memberof CMsgClientUFSDownloadRequest
         * @instance
         */
        CMsgClientUFSDownloadRequest.prototype.app_id = 0;
    
        /**
         * CMsgClientUFSDownloadRequest file_name.
         * @member {string} file_name
         * @memberof CMsgClientUFSDownloadRequest
         * @instance
         */
        CMsgClientUFSDownloadRequest.prototype.file_name = "";
    
        /**
         * CMsgClientUFSDownloadRequest can_handle_http.
         * @member {boolean} can_handle_http
         * @memberof CMsgClientUFSDownloadRequest
         * @instance
         */
        CMsgClientUFSDownloadRequest.prototype.can_handle_http = false;
    
        /**
         * Creates a new CMsgClientUFSDownloadRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSDownloadRequest
         * @static
         * @param {ICMsgClientUFSDownloadRequest=} [properties] Properties to set
         * @returns {CMsgClientUFSDownloadRequest} CMsgClientUFSDownloadRequest instance
         */
        CMsgClientUFSDownloadRequest.create = function create(properties) {
            return new CMsgClientUFSDownloadRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSDownloadRequest message. Does not implicitly {@link CMsgClientUFSDownloadRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSDownloadRequest
         * @static
         * @param {ICMsgClientUFSDownloadRequest} message CMsgClientUFSDownloadRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSDownloadRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.file_name);
            if (message.can_handle_http != null && Object.hasOwnProperty.call(message, "can_handle_http"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.can_handle_http);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSDownloadRequest message, length delimited. Does not implicitly {@link CMsgClientUFSDownloadRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSDownloadRequest
         * @static
         * @param {ICMsgClientUFSDownloadRequest} message CMsgClientUFSDownloadRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSDownloadRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSDownloadRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSDownloadRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSDownloadRequest} CMsgClientUFSDownloadRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSDownloadRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSDownloadRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.file_name = reader.string();
                    break;
                case 3:
                    message.can_handle_http = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSDownloadRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSDownloadRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSDownloadRequest} CMsgClientUFSDownloadRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSDownloadRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSDownloadRequest message.
         * @function verify
         * @memberof CMsgClientUFSDownloadRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSDownloadRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                if (!$util.isString(message.file_name))
                    return "file_name: string expected";
            if (message.can_handle_http != null && message.hasOwnProperty("can_handle_http"))
                if (typeof message.can_handle_http !== "boolean")
                    return "can_handle_http: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSDownloadRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSDownloadRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSDownloadRequest} CMsgClientUFSDownloadRequest
         */
        CMsgClientUFSDownloadRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSDownloadRequest)
                return object;
            var message = new $root.CMsgClientUFSDownloadRequest();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.file_name != null)
                message.file_name = String(object.file_name);
            if (object.can_handle_http != null)
                message.can_handle_http = Boolean(object.can_handle_http);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSDownloadRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSDownloadRequest
         * @static
         * @param {CMsgClientUFSDownloadRequest} message CMsgClientUFSDownloadRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSDownloadRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.file_name = "";
                object.can_handle_http = false;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                object.file_name = message.file_name;
            if (message.can_handle_http != null && message.hasOwnProperty("can_handle_http"))
                object.can_handle_http = message.can_handle_http;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSDownloadRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSDownloadRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSDownloadRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSDownloadRequest;
    })();
    
    $root.CMsgClientUFSDownloadResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSDownloadResponse.
         * @exports ICMsgClientUFSDownloadResponse
         * @interface ICMsgClientUFSDownloadResponse
         * @property {number|null} [eresult] CMsgClientUFSDownloadResponse eresult
         * @property {number|null} [app_id] CMsgClientUFSDownloadResponse app_id
         * @property {number|null} [file_size] CMsgClientUFSDownloadResponse file_size
         * @property {number|null} [raw_file_size] CMsgClientUFSDownloadResponse raw_file_size
         * @property {Uint8Array|null} [sha_file] CMsgClientUFSDownloadResponse sha_file
         * @property {number|Long|null} [time_stamp] CMsgClientUFSDownloadResponse time_stamp
         * @property {boolean|null} [is_explicit_delete] CMsgClientUFSDownloadResponse is_explicit_delete
         * @property {boolean|null} [use_http] CMsgClientUFSDownloadResponse use_http
         * @property {string|null} [http_host] CMsgClientUFSDownloadResponse http_host
         * @property {string|null} [http_url] CMsgClientUFSDownloadResponse http_url
         * @property {Uint8Array|null} [kv_headers] CMsgClientUFSDownloadResponse kv_headers
         * @property {boolean|null} [use_https] CMsgClientUFSDownloadResponse use_https
         * @property {boolean|null} [encrypted] CMsgClientUFSDownloadResponse encrypted
         */
    
        /**
         * Constructs a new CMsgClientUFSDownloadResponse.
         * @exports CMsgClientUFSDownloadResponse
         * @classdesc Represents a CMsgClientUFSDownloadResponse.
         * @implements ICMsgClientUFSDownloadResponse
         * @constructor
         * @param {ICMsgClientUFSDownloadResponse=} [properties] Properties to set
         */
        function CMsgClientUFSDownloadResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSDownloadResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientUFSDownloadResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientUFSDownloadResponse file_size.
         * @member {number} file_size
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.file_size = 0;
    
        /**
         * CMsgClientUFSDownloadResponse raw_file_size.
         * @member {number} raw_file_size
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.raw_file_size = 0;
    
        /**
         * CMsgClientUFSDownloadResponse sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * CMsgClientUFSDownloadResponse time_stamp.
         * @member {number|Long} time_stamp
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.time_stamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUFSDownloadResponse is_explicit_delete.
         * @member {boolean} is_explicit_delete
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.is_explicit_delete = false;
    
        /**
         * CMsgClientUFSDownloadResponse use_http.
         * @member {boolean} use_http
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.use_http = false;
    
        /**
         * CMsgClientUFSDownloadResponse http_host.
         * @member {string} http_host
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.http_host = "";
    
        /**
         * CMsgClientUFSDownloadResponse http_url.
         * @member {string} http_url
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.http_url = "";
    
        /**
         * CMsgClientUFSDownloadResponse kv_headers.
         * @member {Uint8Array} kv_headers
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.kv_headers = $util.newBuffer([]);
    
        /**
         * CMsgClientUFSDownloadResponse use_https.
         * @member {boolean} use_https
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.use_https = false;
    
        /**
         * CMsgClientUFSDownloadResponse encrypted.
         * @member {boolean} encrypted
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         */
        CMsgClientUFSDownloadResponse.prototype.encrypted = false;
    
        /**
         * Creates a new CMsgClientUFSDownloadResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSDownloadResponse
         * @static
         * @param {ICMsgClientUFSDownloadResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSDownloadResponse} CMsgClientUFSDownloadResponse instance
         */
        CMsgClientUFSDownloadResponse.create = function create(properties) {
            return new CMsgClientUFSDownloadResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSDownloadResponse message. Does not implicitly {@link CMsgClientUFSDownloadResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSDownloadResponse
         * @static
         * @param {ICMsgClientUFSDownloadResponse} message CMsgClientUFSDownloadResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSDownloadResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
            if (message.file_size != null && Object.hasOwnProperty.call(message, "file_size"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.file_size);
            if (message.raw_file_size != null && Object.hasOwnProperty.call(message, "raw_file_size"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.raw_file_size);
            if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.sha_file);
            if (message.time_stamp != null && Object.hasOwnProperty.call(message, "time_stamp"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.time_stamp);
            if (message.is_explicit_delete != null && Object.hasOwnProperty.call(message, "is_explicit_delete"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.is_explicit_delete);
            if (message.use_http != null && Object.hasOwnProperty.call(message, "use_http"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.use_http);
            if (message.http_host != null && Object.hasOwnProperty.call(message, "http_host"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.http_host);
            if (message.http_url != null && Object.hasOwnProperty.call(message, "http_url"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.http_url);
            if (message.kv_headers != null && Object.hasOwnProperty.call(message, "kv_headers"))
                writer.uint32(/* id 11, wireType 2 =*/90).bytes(message.kv_headers);
            if (message.use_https != null && Object.hasOwnProperty.call(message, "use_https"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.use_https);
            if (message.encrypted != null && Object.hasOwnProperty.call(message, "encrypted"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.encrypted);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSDownloadResponse message, length delimited. Does not implicitly {@link CMsgClientUFSDownloadResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSDownloadResponse
         * @static
         * @param {ICMsgClientUFSDownloadResponse} message CMsgClientUFSDownloadResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSDownloadResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSDownloadResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSDownloadResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSDownloadResponse} CMsgClientUFSDownloadResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSDownloadResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSDownloadResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.app_id = reader.uint32();
                    break;
                case 3:
                    message.file_size = reader.uint32();
                    break;
                case 4:
                    message.raw_file_size = reader.uint32();
                    break;
                case 5:
                    message.sha_file = reader.bytes();
                    break;
                case 6:
                    message.time_stamp = reader.uint64();
                    break;
                case 7:
                    message.is_explicit_delete = reader.bool();
                    break;
                case 8:
                    message.use_http = reader.bool();
                    break;
                case 9:
                    message.http_host = reader.string();
                    break;
                case 10:
                    message.http_url = reader.string();
                    break;
                case 11:
                    message.kv_headers = reader.bytes();
                    break;
                case 12:
                    message.use_https = reader.bool();
                    break;
                case 13:
                    message.encrypted = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSDownloadResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSDownloadResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSDownloadResponse} CMsgClientUFSDownloadResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSDownloadResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSDownloadResponse message.
         * @function verify
         * @memberof CMsgClientUFSDownloadResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSDownloadResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.file_size != null && message.hasOwnProperty("file_size"))
                if (!$util.isInteger(message.file_size))
                    return "file_size: integer expected";
            if (message.raw_file_size != null && message.hasOwnProperty("raw_file_size"))
                if (!$util.isInteger(message.raw_file_size))
                    return "raw_file_size: integer expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            if (message.time_stamp != null && message.hasOwnProperty("time_stamp"))
                if (!$util.isInteger(message.time_stamp) && !(message.time_stamp && $util.isInteger(message.time_stamp.low) && $util.isInteger(message.time_stamp.high)))
                    return "time_stamp: integer|Long expected";
            if (message.is_explicit_delete != null && message.hasOwnProperty("is_explicit_delete"))
                if (typeof message.is_explicit_delete !== "boolean")
                    return "is_explicit_delete: boolean expected";
            if (message.use_http != null && message.hasOwnProperty("use_http"))
                if (typeof message.use_http !== "boolean")
                    return "use_http: boolean expected";
            if (message.http_host != null && message.hasOwnProperty("http_host"))
                if (!$util.isString(message.http_host))
                    return "http_host: string expected";
            if (message.http_url != null && message.hasOwnProperty("http_url"))
                if (!$util.isString(message.http_url))
                    return "http_url: string expected";
            if (message.kv_headers != null && message.hasOwnProperty("kv_headers"))
                if (!(message.kv_headers && typeof message.kv_headers.length === "number" || $util.isString(message.kv_headers)))
                    return "kv_headers: buffer expected";
            if (message.use_https != null && message.hasOwnProperty("use_https"))
                if (typeof message.use_https !== "boolean")
                    return "use_https: boolean expected";
            if (message.encrypted != null && message.hasOwnProperty("encrypted"))
                if (typeof message.encrypted !== "boolean")
                    return "encrypted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSDownloadResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSDownloadResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSDownloadResponse} CMsgClientUFSDownloadResponse
         */
        CMsgClientUFSDownloadResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSDownloadResponse)
                return object;
            var message = new $root.CMsgClientUFSDownloadResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.file_size != null)
                message.file_size = object.file_size >>> 0;
            if (object.raw_file_size != null)
                message.raw_file_size = object.raw_file_size >>> 0;
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            if (object.time_stamp != null)
                if ($util.Long)
                    (message.time_stamp = $util.Long.fromValue(object.time_stamp)).unsigned = true;
                else if (typeof object.time_stamp === "string")
                    message.time_stamp = parseInt(object.time_stamp, 10);
                else if (typeof object.time_stamp === "number")
                    message.time_stamp = object.time_stamp;
                else if (typeof object.time_stamp === "object")
                    message.time_stamp = new $util.LongBits(object.time_stamp.low >>> 0, object.time_stamp.high >>> 0).toNumber(true);
            if (object.is_explicit_delete != null)
                message.is_explicit_delete = Boolean(object.is_explicit_delete);
            if (object.use_http != null)
                message.use_http = Boolean(object.use_http);
            if (object.http_host != null)
                message.http_host = String(object.http_host);
            if (object.http_url != null)
                message.http_url = String(object.http_url);
            if (object.kv_headers != null)
                if (typeof object.kv_headers === "string")
                    $util.base64.decode(object.kv_headers, message.kv_headers = $util.newBuffer($util.base64.length(object.kv_headers)), 0);
                else if (object.kv_headers.length)
                    message.kv_headers = object.kv_headers;
            if (object.use_https != null)
                message.use_https = Boolean(object.use_https);
            if (object.encrypted != null)
                message.encrypted = Boolean(object.encrypted);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSDownloadResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSDownloadResponse
         * @static
         * @param {CMsgClientUFSDownloadResponse} message CMsgClientUFSDownloadResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSDownloadResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.app_id = 0;
                object.file_size = 0;
                object.raw_file_size = 0;
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.time_stamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.time_stamp = options.longs === String ? "0" : 0;
                object.is_explicit_delete = false;
                object.use_http = false;
                object.http_host = "";
                object.http_url = "";
                if (options.bytes === String)
                    object.kv_headers = "";
                else {
                    object.kv_headers = [];
                    if (options.bytes !== Array)
                        object.kv_headers = $util.newBuffer(object.kv_headers);
                }
                object.use_https = false;
                object.encrypted = false;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.file_size != null && message.hasOwnProperty("file_size"))
                object.file_size = message.file_size;
            if (message.raw_file_size != null && message.hasOwnProperty("raw_file_size"))
                object.raw_file_size = message.raw_file_size;
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            if (message.time_stamp != null && message.hasOwnProperty("time_stamp"))
                if (typeof message.time_stamp === "number")
                    object.time_stamp = options.longs === String ? String(message.time_stamp) : message.time_stamp;
                else
                    object.time_stamp = options.longs === String ? $util.Long.prototype.toString.call(message.time_stamp) : options.longs === Number ? new $util.LongBits(message.time_stamp.low >>> 0, message.time_stamp.high >>> 0).toNumber(true) : message.time_stamp;
            if (message.is_explicit_delete != null && message.hasOwnProperty("is_explicit_delete"))
                object.is_explicit_delete = message.is_explicit_delete;
            if (message.use_http != null && message.hasOwnProperty("use_http"))
                object.use_http = message.use_http;
            if (message.http_host != null && message.hasOwnProperty("http_host"))
                object.http_host = message.http_host;
            if (message.http_url != null && message.hasOwnProperty("http_url"))
                object.http_url = message.http_url;
            if (message.kv_headers != null && message.hasOwnProperty("kv_headers"))
                object.kv_headers = options.bytes === String ? $util.base64.encode(message.kv_headers, 0, message.kv_headers.length) : options.bytes === Array ? Array.prototype.slice.call(message.kv_headers) : message.kv_headers;
            if (message.use_https != null && message.hasOwnProperty("use_https"))
                object.use_https = message.use_https;
            if (message.encrypted != null && message.hasOwnProperty("encrypted"))
                object.encrypted = message.encrypted;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSDownloadResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSDownloadResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSDownloadResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSDownloadResponse;
    })();
    
    $root.CMsgClientUFSLoginRequest = (function() {
    
        /**
         * Properties of a CMsgClientUFSLoginRequest.
         * @exports ICMsgClientUFSLoginRequest
         * @interface ICMsgClientUFSLoginRequest
         * @property {number|null} [protocol_version] CMsgClientUFSLoginRequest protocol_version
         * @property {number|Long|null} [am_session_token] CMsgClientUFSLoginRequest am_session_token
         * @property {Array.<number>|null} [apps] CMsgClientUFSLoginRequest apps
         */
    
        /**
         * Constructs a new CMsgClientUFSLoginRequest.
         * @exports CMsgClientUFSLoginRequest
         * @classdesc Represents a CMsgClientUFSLoginRequest.
         * @implements ICMsgClientUFSLoginRequest
         * @constructor
         * @param {ICMsgClientUFSLoginRequest=} [properties] Properties to set
         */
        function CMsgClientUFSLoginRequest(properties) {
            this.apps = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSLoginRequest protocol_version.
         * @member {number} protocol_version
         * @memberof CMsgClientUFSLoginRequest
         * @instance
         */
        CMsgClientUFSLoginRequest.prototype.protocol_version = 0;
    
        /**
         * CMsgClientUFSLoginRequest am_session_token.
         * @member {number|Long} am_session_token
         * @memberof CMsgClientUFSLoginRequest
         * @instance
         */
        CMsgClientUFSLoginRequest.prototype.am_session_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUFSLoginRequest apps.
         * @member {Array.<number>} apps
         * @memberof CMsgClientUFSLoginRequest
         * @instance
         */
        CMsgClientUFSLoginRequest.prototype.apps = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientUFSLoginRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSLoginRequest
         * @static
         * @param {ICMsgClientUFSLoginRequest=} [properties] Properties to set
         * @returns {CMsgClientUFSLoginRequest} CMsgClientUFSLoginRequest instance
         */
        CMsgClientUFSLoginRequest.create = function create(properties) {
            return new CMsgClientUFSLoginRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSLoginRequest message. Does not implicitly {@link CMsgClientUFSLoginRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSLoginRequest
         * @static
         * @param {ICMsgClientUFSLoginRequest} message CMsgClientUFSLoginRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSLoginRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.protocol_version != null && Object.hasOwnProperty.call(message, "protocol_version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.protocol_version);
            if (message.am_session_token != null && Object.hasOwnProperty.call(message, "am_session_token"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.am_session_token);
            if (message.apps != null && message.apps.length)
                for (var i = 0; i < message.apps.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.apps[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSLoginRequest message, length delimited. Does not implicitly {@link CMsgClientUFSLoginRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSLoginRequest
         * @static
         * @param {ICMsgClientUFSLoginRequest} message CMsgClientUFSLoginRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSLoginRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSLoginRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSLoginRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSLoginRequest} CMsgClientUFSLoginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSLoginRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSLoginRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.protocol_version = reader.uint32();
                    break;
                case 2:
                    message.am_session_token = reader.uint64();
                    break;
                case 3:
                    if (!(message.apps && message.apps.length))
                        message.apps = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.apps.push(reader.uint32());
                    } else
                        message.apps.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSLoginRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSLoginRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSLoginRequest} CMsgClientUFSLoginRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSLoginRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSLoginRequest message.
         * @function verify
         * @memberof CMsgClientUFSLoginRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSLoginRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                if (!$util.isInteger(message.protocol_version))
                    return "protocol_version: integer expected";
            if (message.am_session_token != null && message.hasOwnProperty("am_session_token"))
                if (!$util.isInteger(message.am_session_token) && !(message.am_session_token && $util.isInteger(message.am_session_token.low) && $util.isInteger(message.am_session_token.high)))
                    return "am_session_token: integer|Long expected";
            if (message.apps != null && message.hasOwnProperty("apps")) {
                if (!Array.isArray(message.apps))
                    return "apps: array expected";
                for (var i = 0; i < message.apps.length; ++i)
                    if (!$util.isInteger(message.apps[i]))
                        return "apps: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSLoginRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSLoginRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSLoginRequest} CMsgClientUFSLoginRequest
         */
        CMsgClientUFSLoginRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSLoginRequest)
                return object;
            var message = new $root.CMsgClientUFSLoginRequest();
            if (object.protocol_version != null)
                message.protocol_version = object.protocol_version >>> 0;
            if (object.am_session_token != null)
                if ($util.Long)
                    (message.am_session_token = $util.Long.fromValue(object.am_session_token)).unsigned = true;
                else if (typeof object.am_session_token === "string")
                    message.am_session_token = parseInt(object.am_session_token, 10);
                else if (typeof object.am_session_token === "number")
                    message.am_session_token = object.am_session_token;
                else if (typeof object.am_session_token === "object")
                    message.am_session_token = new $util.LongBits(object.am_session_token.low >>> 0, object.am_session_token.high >>> 0).toNumber(true);
            if (object.apps) {
                if (!Array.isArray(object.apps))
                    throw TypeError(".CMsgClientUFSLoginRequest.apps: array expected");
                message.apps = [];
                for (var i = 0; i < object.apps.length; ++i)
                    message.apps[i] = object.apps[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSLoginRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSLoginRequest
         * @static
         * @param {CMsgClientUFSLoginRequest} message CMsgClientUFSLoginRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSLoginRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.apps = [];
            if (options.defaults) {
                object.protocol_version = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.am_session_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.am_session_token = options.longs === String ? "0" : 0;
            }
            if (message.protocol_version != null && message.hasOwnProperty("protocol_version"))
                object.protocol_version = message.protocol_version;
            if (message.am_session_token != null && message.hasOwnProperty("am_session_token"))
                if (typeof message.am_session_token === "number")
                    object.am_session_token = options.longs === String ? String(message.am_session_token) : message.am_session_token;
                else
                    object.am_session_token = options.longs === String ? $util.Long.prototype.toString.call(message.am_session_token) : options.longs === Number ? new $util.LongBits(message.am_session_token.low >>> 0, message.am_session_token.high >>> 0).toNumber(true) : message.am_session_token;
            if (message.apps && message.apps.length) {
                object.apps = [];
                for (var j = 0; j < message.apps.length; ++j)
                    object.apps[j] = message.apps[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSLoginRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSLoginRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSLoginRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSLoginRequest;
    })();
    
    $root.CMsgClientUFSLoginResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSLoginResponse.
         * @exports ICMsgClientUFSLoginResponse
         * @interface ICMsgClientUFSLoginResponse
         * @property {number|null} [eresult] CMsgClientUFSLoginResponse eresult
         */
    
        /**
         * Constructs a new CMsgClientUFSLoginResponse.
         * @exports CMsgClientUFSLoginResponse
         * @classdesc Represents a CMsgClientUFSLoginResponse.
         * @implements ICMsgClientUFSLoginResponse
         * @constructor
         * @param {ICMsgClientUFSLoginResponse=} [properties] Properties to set
         */
        function CMsgClientUFSLoginResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSLoginResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUFSLoginResponse
         * @instance
         */
        CMsgClientUFSLoginResponse.prototype.eresult = 2;
    
        /**
         * Creates a new CMsgClientUFSLoginResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSLoginResponse
         * @static
         * @param {ICMsgClientUFSLoginResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSLoginResponse} CMsgClientUFSLoginResponse instance
         */
        CMsgClientUFSLoginResponse.create = function create(properties) {
            return new CMsgClientUFSLoginResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSLoginResponse message. Does not implicitly {@link CMsgClientUFSLoginResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSLoginResponse
         * @static
         * @param {ICMsgClientUFSLoginResponse} message CMsgClientUFSLoginResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSLoginResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSLoginResponse message, length delimited. Does not implicitly {@link CMsgClientUFSLoginResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSLoginResponse
         * @static
         * @param {ICMsgClientUFSLoginResponse} message CMsgClientUFSLoginResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSLoginResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSLoginResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSLoginResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSLoginResponse} CMsgClientUFSLoginResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSLoginResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSLoginResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSLoginResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSLoginResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSLoginResponse} CMsgClientUFSLoginResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSLoginResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSLoginResponse message.
         * @function verify
         * @memberof CMsgClientUFSLoginResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSLoginResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSLoginResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSLoginResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSLoginResponse} CMsgClientUFSLoginResponse
         */
        CMsgClientUFSLoginResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSLoginResponse)
                return object;
            var message = new $root.CMsgClientUFSLoginResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSLoginResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSLoginResponse
         * @static
         * @param {CMsgClientUFSLoginResponse} message CMsgClientUFSLoginResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSLoginResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSLoginResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSLoginResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSLoginResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSLoginResponse;
    })();
    
    $root.CMsgClientRequestEncryptedAppTicket = (function() {
    
        /**
         * Properties of a CMsgClientRequestEncryptedAppTicket.
         * @exports ICMsgClientRequestEncryptedAppTicket
         * @interface ICMsgClientRequestEncryptedAppTicket
         * @property {number|null} [app_id] CMsgClientRequestEncryptedAppTicket app_id
         * @property {Uint8Array|null} [userdata] CMsgClientRequestEncryptedAppTicket userdata
         */
    
        /**
         * Constructs a new CMsgClientRequestEncryptedAppTicket.
         * @exports CMsgClientRequestEncryptedAppTicket
         * @classdesc Represents a CMsgClientRequestEncryptedAppTicket.
         * @implements ICMsgClientRequestEncryptedAppTicket
         * @constructor
         * @param {ICMsgClientRequestEncryptedAppTicket=} [properties] Properties to set
         */
        function CMsgClientRequestEncryptedAppTicket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestEncryptedAppTicket app_id.
         * @member {number} app_id
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @instance
         */
        CMsgClientRequestEncryptedAppTicket.prototype.app_id = 0;
    
        /**
         * CMsgClientRequestEncryptedAppTicket userdata.
         * @member {Uint8Array} userdata
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @instance
         */
        CMsgClientRequestEncryptedAppTicket.prototype.userdata = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgClientRequestEncryptedAppTicket instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @static
         * @param {ICMsgClientRequestEncryptedAppTicket=} [properties] Properties to set
         * @returns {CMsgClientRequestEncryptedAppTicket} CMsgClientRequestEncryptedAppTicket instance
         */
        CMsgClientRequestEncryptedAppTicket.create = function create(properties) {
            return new CMsgClientRequestEncryptedAppTicket(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestEncryptedAppTicket message. Does not implicitly {@link CMsgClientRequestEncryptedAppTicket.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @static
         * @param {ICMsgClientRequestEncryptedAppTicket} message CMsgClientRequestEncryptedAppTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestEncryptedAppTicket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.userdata != null && Object.hasOwnProperty.call(message, "userdata"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.userdata);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestEncryptedAppTicket message, length delimited. Does not implicitly {@link CMsgClientRequestEncryptedAppTicket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @static
         * @param {ICMsgClientRequestEncryptedAppTicket} message CMsgClientRequestEncryptedAppTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestEncryptedAppTicket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestEncryptedAppTicket message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestEncryptedAppTicket} CMsgClientRequestEncryptedAppTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestEncryptedAppTicket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestEncryptedAppTicket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.userdata = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestEncryptedAppTicket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestEncryptedAppTicket} CMsgClientRequestEncryptedAppTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestEncryptedAppTicket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestEncryptedAppTicket message.
         * @function verify
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestEncryptedAppTicket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.userdata != null && message.hasOwnProperty("userdata"))
                if (!(message.userdata && typeof message.userdata.length === "number" || $util.isString(message.userdata)))
                    return "userdata: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestEncryptedAppTicket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestEncryptedAppTicket} CMsgClientRequestEncryptedAppTicket
         */
        CMsgClientRequestEncryptedAppTicket.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestEncryptedAppTicket)
                return object;
            var message = new $root.CMsgClientRequestEncryptedAppTicket();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.userdata != null)
                if (typeof object.userdata === "string")
                    $util.base64.decode(object.userdata, message.userdata = $util.newBuffer($util.base64.length(object.userdata)), 0);
                else if (object.userdata.length)
                    message.userdata = object.userdata;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestEncryptedAppTicket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @static
         * @param {CMsgClientRequestEncryptedAppTicket} message CMsgClientRequestEncryptedAppTicket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestEncryptedAppTicket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                if (options.bytes === String)
                    object.userdata = "";
                else {
                    object.userdata = [];
                    if (options.bytes !== Array)
                        object.userdata = $util.newBuffer(object.userdata);
                }
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.userdata != null && message.hasOwnProperty("userdata"))
                object.userdata = options.bytes === String ? $util.base64.encode(message.userdata, 0, message.userdata.length) : options.bytes === Array ? Array.prototype.slice.call(message.userdata) : message.userdata;
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestEncryptedAppTicket to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestEncryptedAppTicket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestEncryptedAppTicket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestEncryptedAppTicket;
    })();
    
    $root.CMsgClientRequestEncryptedAppTicketResponse = (function() {
    
        /**
         * Properties of a CMsgClientRequestEncryptedAppTicketResponse.
         * @exports ICMsgClientRequestEncryptedAppTicketResponse
         * @interface ICMsgClientRequestEncryptedAppTicketResponse
         * @property {number|null} [app_id] CMsgClientRequestEncryptedAppTicketResponse app_id
         * @property {number|null} [eresult] CMsgClientRequestEncryptedAppTicketResponse eresult
         * @property {IEncryptedAppTicket|null} [encrypted_app_ticket] CMsgClientRequestEncryptedAppTicketResponse encrypted_app_ticket
         */
    
        /**
         * Constructs a new CMsgClientRequestEncryptedAppTicketResponse.
         * @exports CMsgClientRequestEncryptedAppTicketResponse
         * @classdesc Represents a CMsgClientRequestEncryptedAppTicketResponse.
         * @implements ICMsgClientRequestEncryptedAppTicketResponse
         * @constructor
         * @param {ICMsgClientRequestEncryptedAppTicketResponse=} [properties] Properties to set
         */
        function CMsgClientRequestEncryptedAppTicketResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientRequestEncryptedAppTicketResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @instance
         */
        CMsgClientRequestEncryptedAppTicketResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientRequestEncryptedAppTicketResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @instance
         */
        CMsgClientRequestEncryptedAppTicketResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientRequestEncryptedAppTicketResponse encrypted_app_ticket.
         * @member {IEncryptedAppTicket|null|undefined} encrypted_app_ticket
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @instance
         */
        CMsgClientRequestEncryptedAppTicketResponse.prototype.encrypted_app_ticket = null;
    
        /**
         * Creates a new CMsgClientRequestEncryptedAppTicketResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @static
         * @param {ICMsgClientRequestEncryptedAppTicketResponse=} [properties] Properties to set
         * @returns {CMsgClientRequestEncryptedAppTicketResponse} CMsgClientRequestEncryptedAppTicketResponse instance
         */
        CMsgClientRequestEncryptedAppTicketResponse.create = function create(properties) {
            return new CMsgClientRequestEncryptedAppTicketResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientRequestEncryptedAppTicketResponse message. Does not implicitly {@link CMsgClientRequestEncryptedAppTicketResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @static
         * @param {ICMsgClientRequestEncryptedAppTicketResponse} message CMsgClientRequestEncryptedAppTicketResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestEncryptedAppTicketResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.eresult);
            if (message.encrypted_app_ticket != null && Object.hasOwnProperty.call(message, "encrypted_app_ticket"))
                $root.EncryptedAppTicket.encode(message.encrypted_app_ticket, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientRequestEncryptedAppTicketResponse message, length delimited. Does not implicitly {@link CMsgClientRequestEncryptedAppTicketResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @static
         * @param {ICMsgClientRequestEncryptedAppTicketResponse} message CMsgClientRequestEncryptedAppTicketResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientRequestEncryptedAppTicketResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientRequestEncryptedAppTicketResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientRequestEncryptedAppTicketResponse} CMsgClientRequestEncryptedAppTicketResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestEncryptedAppTicketResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientRequestEncryptedAppTicketResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.eresult = reader.int32();
                    break;
                case 3:
                    message.encrypted_app_ticket = $root.EncryptedAppTicket.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientRequestEncryptedAppTicketResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientRequestEncryptedAppTicketResponse} CMsgClientRequestEncryptedAppTicketResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientRequestEncryptedAppTicketResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientRequestEncryptedAppTicketResponse message.
         * @function verify
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientRequestEncryptedAppTicketResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.encrypted_app_ticket != null && message.hasOwnProperty("encrypted_app_ticket")) {
                var error = $root.EncryptedAppTicket.verify(message.encrypted_app_ticket);
                if (error)
                    return "encrypted_app_ticket." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientRequestEncryptedAppTicketResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientRequestEncryptedAppTicketResponse} CMsgClientRequestEncryptedAppTicketResponse
         */
        CMsgClientRequestEncryptedAppTicketResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientRequestEncryptedAppTicketResponse)
                return object;
            var message = new $root.CMsgClientRequestEncryptedAppTicketResponse();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.encrypted_app_ticket != null) {
                if (typeof object.encrypted_app_ticket !== "object")
                    throw TypeError(".CMsgClientRequestEncryptedAppTicketResponse.encrypted_app_ticket: object expected");
                message.encrypted_app_ticket = $root.EncryptedAppTicket.fromObject(object.encrypted_app_ticket);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientRequestEncryptedAppTicketResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @static
         * @param {CMsgClientRequestEncryptedAppTicketResponse} message CMsgClientRequestEncryptedAppTicketResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientRequestEncryptedAppTicketResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.eresult = 2;
                object.encrypted_app_ticket = null;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.encrypted_app_ticket != null && message.hasOwnProperty("encrypted_app_ticket"))
                object.encrypted_app_ticket = $root.EncryptedAppTicket.toObject(message.encrypted_app_ticket, options);
            return object;
        };
    
        /**
         * Converts this CMsgClientRequestEncryptedAppTicketResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientRequestEncryptedAppTicketResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientRequestEncryptedAppTicketResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientRequestEncryptedAppTicketResponse;
    })();
    
    $root.CMsgClientWalletInfoUpdate = (function() {
    
        /**
         * Properties of a CMsgClientWalletInfoUpdate.
         * @exports ICMsgClientWalletInfoUpdate
         * @interface ICMsgClientWalletInfoUpdate
         * @property {boolean|null} [has_wallet] CMsgClientWalletInfoUpdate has_wallet
         * @property {number|null} [balance] CMsgClientWalletInfoUpdate balance
         * @property {number|null} [currency] CMsgClientWalletInfoUpdate currency
         * @property {number|null} [balance_delayed] CMsgClientWalletInfoUpdate balance_delayed
         * @property {number|Long|null} [balance64] CMsgClientWalletInfoUpdate balance64
         * @property {number|Long|null} [balance64_delayed] CMsgClientWalletInfoUpdate balance64_delayed
         */
    
        /**
         * Constructs a new CMsgClientWalletInfoUpdate.
         * @exports CMsgClientWalletInfoUpdate
         * @classdesc Represents a CMsgClientWalletInfoUpdate.
         * @implements ICMsgClientWalletInfoUpdate
         * @constructor
         * @param {ICMsgClientWalletInfoUpdate=} [properties] Properties to set
         */
        function CMsgClientWalletInfoUpdate(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientWalletInfoUpdate has_wallet.
         * @member {boolean} has_wallet
         * @memberof CMsgClientWalletInfoUpdate
         * @instance
         */
        CMsgClientWalletInfoUpdate.prototype.has_wallet = false;
    
        /**
         * CMsgClientWalletInfoUpdate balance.
         * @member {number} balance
         * @memberof CMsgClientWalletInfoUpdate
         * @instance
         */
        CMsgClientWalletInfoUpdate.prototype.balance = 0;
    
        /**
         * CMsgClientWalletInfoUpdate currency.
         * @member {number} currency
         * @memberof CMsgClientWalletInfoUpdate
         * @instance
         */
        CMsgClientWalletInfoUpdate.prototype.currency = 0;
    
        /**
         * CMsgClientWalletInfoUpdate balance_delayed.
         * @member {number} balance_delayed
         * @memberof CMsgClientWalletInfoUpdate
         * @instance
         */
        CMsgClientWalletInfoUpdate.prototype.balance_delayed = 0;
    
        /**
         * CMsgClientWalletInfoUpdate balance64.
         * @member {number|Long} balance64
         * @memberof CMsgClientWalletInfoUpdate
         * @instance
         */
        CMsgClientWalletInfoUpdate.prototype.balance64 = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientWalletInfoUpdate balance64_delayed.
         * @member {number|Long} balance64_delayed
         * @memberof CMsgClientWalletInfoUpdate
         * @instance
         */
        CMsgClientWalletInfoUpdate.prototype.balance64_delayed = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientWalletInfoUpdate instance using the specified properties.
         * @function create
         * @memberof CMsgClientWalletInfoUpdate
         * @static
         * @param {ICMsgClientWalletInfoUpdate=} [properties] Properties to set
         * @returns {CMsgClientWalletInfoUpdate} CMsgClientWalletInfoUpdate instance
         */
        CMsgClientWalletInfoUpdate.create = function create(properties) {
            return new CMsgClientWalletInfoUpdate(properties);
        };
    
        /**
         * Encodes the specified CMsgClientWalletInfoUpdate message. Does not implicitly {@link CMsgClientWalletInfoUpdate.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientWalletInfoUpdate
         * @static
         * @param {ICMsgClientWalletInfoUpdate} message CMsgClientWalletInfoUpdate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientWalletInfoUpdate.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.has_wallet != null && Object.hasOwnProperty.call(message, "has_wallet"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.has_wallet);
            if (message.balance != null && Object.hasOwnProperty.call(message, "balance"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.balance);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.currency);
            if (message.balance_delayed != null && Object.hasOwnProperty.call(message, "balance_delayed"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.balance_delayed);
            if (message.balance64 != null && Object.hasOwnProperty.call(message, "balance64"))
                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.balance64);
            if (message.balance64_delayed != null && Object.hasOwnProperty.call(message, "balance64_delayed"))
                writer.uint32(/* id 6, wireType 0 =*/48).int64(message.balance64_delayed);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientWalletInfoUpdate message, length delimited. Does not implicitly {@link CMsgClientWalletInfoUpdate.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientWalletInfoUpdate
         * @static
         * @param {ICMsgClientWalletInfoUpdate} message CMsgClientWalletInfoUpdate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientWalletInfoUpdate.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientWalletInfoUpdate message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientWalletInfoUpdate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientWalletInfoUpdate} CMsgClientWalletInfoUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientWalletInfoUpdate.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientWalletInfoUpdate();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.has_wallet = reader.bool();
                    break;
                case 2:
                    message.balance = reader.int32();
                    break;
                case 3:
                    message.currency = reader.int32();
                    break;
                case 4:
                    message.balance_delayed = reader.int32();
                    break;
                case 5:
                    message.balance64 = reader.int64();
                    break;
                case 6:
                    message.balance64_delayed = reader.int64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientWalletInfoUpdate message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientWalletInfoUpdate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientWalletInfoUpdate} CMsgClientWalletInfoUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientWalletInfoUpdate.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientWalletInfoUpdate message.
         * @function verify
         * @memberof CMsgClientWalletInfoUpdate
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientWalletInfoUpdate.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.has_wallet != null && message.hasOwnProperty("has_wallet"))
                if (typeof message.has_wallet !== "boolean")
                    return "has_wallet: boolean expected";
            if (message.balance != null && message.hasOwnProperty("balance"))
                if (!$util.isInteger(message.balance))
                    return "balance: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isInteger(message.currency))
                    return "currency: integer expected";
            if (message.balance_delayed != null && message.hasOwnProperty("balance_delayed"))
                if (!$util.isInteger(message.balance_delayed))
                    return "balance_delayed: integer expected";
            if (message.balance64 != null && message.hasOwnProperty("balance64"))
                if (!$util.isInteger(message.balance64) && !(message.balance64 && $util.isInteger(message.balance64.low) && $util.isInteger(message.balance64.high)))
                    return "balance64: integer|Long expected";
            if (message.balance64_delayed != null && message.hasOwnProperty("balance64_delayed"))
                if (!$util.isInteger(message.balance64_delayed) && !(message.balance64_delayed && $util.isInteger(message.balance64_delayed.low) && $util.isInteger(message.balance64_delayed.high)))
                    return "balance64_delayed: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientWalletInfoUpdate message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientWalletInfoUpdate
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientWalletInfoUpdate} CMsgClientWalletInfoUpdate
         */
        CMsgClientWalletInfoUpdate.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientWalletInfoUpdate)
                return object;
            var message = new $root.CMsgClientWalletInfoUpdate();
            if (object.has_wallet != null)
                message.has_wallet = Boolean(object.has_wallet);
            if (object.balance != null)
                message.balance = object.balance | 0;
            if (object.currency != null)
                message.currency = object.currency | 0;
            if (object.balance_delayed != null)
                message.balance_delayed = object.balance_delayed | 0;
            if (object.balance64 != null)
                if ($util.Long)
                    (message.balance64 = $util.Long.fromValue(object.balance64)).unsigned = false;
                else if (typeof object.balance64 === "string")
                    message.balance64 = parseInt(object.balance64, 10);
                else if (typeof object.balance64 === "number")
                    message.balance64 = object.balance64;
                else if (typeof object.balance64 === "object")
                    message.balance64 = new $util.LongBits(object.balance64.low >>> 0, object.balance64.high >>> 0).toNumber();
            if (object.balance64_delayed != null)
                if ($util.Long)
                    (message.balance64_delayed = $util.Long.fromValue(object.balance64_delayed)).unsigned = false;
                else if (typeof object.balance64_delayed === "string")
                    message.balance64_delayed = parseInt(object.balance64_delayed, 10);
                else if (typeof object.balance64_delayed === "number")
                    message.balance64_delayed = object.balance64_delayed;
                else if (typeof object.balance64_delayed === "object")
                    message.balance64_delayed = new $util.LongBits(object.balance64_delayed.low >>> 0, object.balance64_delayed.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientWalletInfoUpdate message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientWalletInfoUpdate
         * @static
         * @param {CMsgClientWalletInfoUpdate} message CMsgClientWalletInfoUpdate
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientWalletInfoUpdate.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.has_wallet = false;
                object.balance = 0;
                object.currency = 0;
                object.balance_delayed = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.balance64 = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.balance64 = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.balance64_delayed = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.balance64_delayed = options.longs === String ? "0" : 0;
            }
            if (message.has_wallet != null && message.hasOwnProperty("has_wallet"))
                object.has_wallet = message.has_wallet;
            if (message.balance != null && message.hasOwnProperty("balance"))
                object.balance = message.balance;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            if (message.balance_delayed != null && message.hasOwnProperty("balance_delayed"))
                object.balance_delayed = message.balance_delayed;
            if (message.balance64 != null && message.hasOwnProperty("balance64"))
                if (typeof message.balance64 === "number")
                    object.balance64 = options.longs === String ? String(message.balance64) : message.balance64;
                else
                    object.balance64 = options.longs === String ? $util.Long.prototype.toString.call(message.balance64) : options.longs === Number ? new $util.LongBits(message.balance64.low >>> 0, message.balance64.high >>> 0).toNumber() : message.balance64;
            if (message.balance64_delayed != null && message.hasOwnProperty("balance64_delayed"))
                if (typeof message.balance64_delayed === "number")
                    object.balance64_delayed = options.longs === String ? String(message.balance64_delayed) : message.balance64_delayed;
                else
                    object.balance64_delayed = options.longs === String ? $util.Long.prototype.toString.call(message.balance64_delayed) : options.longs === Number ? new $util.LongBits(message.balance64_delayed.low >>> 0, message.balance64_delayed.high >>> 0).toNumber() : message.balance64_delayed;
            return object;
        };
    
        /**
         * Converts this CMsgClientWalletInfoUpdate to JSON.
         * @function toJSON
         * @memberof CMsgClientWalletInfoUpdate
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientWalletInfoUpdate.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientWalletInfoUpdate;
    })();
    
    $root.CMsgClientAppInfoUpdate = (function() {
    
        /**
         * Properties of a CMsgClientAppInfoUpdate.
         * @exports ICMsgClientAppInfoUpdate
         * @interface ICMsgClientAppInfoUpdate
         * @property {number|null} [last_changenumber] CMsgClientAppInfoUpdate last_changenumber
         * @property {boolean|null} [send_changelist] CMsgClientAppInfoUpdate send_changelist
         */
    
        /**
         * Constructs a new CMsgClientAppInfoUpdate.
         * @exports CMsgClientAppInfoUpdate
         * @classdesc Represents a CMsgClientAppInfoUpdate.
         * @implements ICMsgClientAppInfoUpdate
         * @constructor
         * @param {ICMsgClientAppInfoUpdate=} [properties] Properties to set
         */
        function CMsgClientAppInfoUpdate(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAppInfoUpdate last_changenumber.
         * @member {number} last_changenumber
         * @memberof CMsgClientAppInfoUpdate
         * @instance
         */
        CMsgClientAppInfoUpdate.prototype.last_changenumber = 0;
    
        /**
         * CMsgClientAppInfoUpdate send_changelist.
         * @member {boolean} send_changelist
         * @memberof CMsgClientAppInfoUpdate
         * @instance
         */
        CMsgClientAppInfoUpdate.prototype.send_changelist = false;
    
        /**
         * Creates a new CMsgClientAppInfoUpdate instance using the specified properties.
         * @function create
         * @memberof CMsgClientAppInfoUpdate
         * @static
         * @param {ICMsgClientAppInfoUpdate=} [properties] Properties to set
         * @returns {CMsgClientAppInfoUpdate} CMsgClientAppInfoUpdate instance
         */
        CMsgClientAppInfoUpdate.create = function create(properties) {
            return new CMsgClientAppInfoUpdate(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAppInfoUpdate message. Does not implicitly {@link CMsgClientAppInfoUpdate.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAppInfoUpdate
         * @static
         * @param {ICMsgClientAppInfoUpdate} message CMsgClientAppInfoUpdate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAppInfoUpdate.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.last_changenumber != null && Object.hasOwnProperty.call(message, "last_changenumber"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.last_changenumber);
            if (message.send_changelist != null && Object.hasOwnProperty.call(message, "send_changelist"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.send_changelist);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAppInfoUpdate message, length delimited. Does not implicitly {@link CMsgClientAppInfoUpdate.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAppInfoUpdate
         * @static
         * @param {ICMsgClientAppInfoUpdate} message CMsgClientAppInfoUpdate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAppInfoUpdate.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAppInfoUpdate message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAppInfoUpdate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAppInfoUpdate} CMsgClientAppInfoUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAppInfoUpdate.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAppInfoUpdate();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.last_changenumber = reader.uint32();
                    break;
                case 2:
                    message.send_changelist = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAppInfoUpdate message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAppInfoUpdate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAppInfoUpdate} CMsgClientAppInfoUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAppInfoUpdate.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAppInfoUpdate message.
         * @function verify
         * @memberof CMsgClientAppInfoUpdate
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAppInfoUpdate.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.last_changenumber != null && message.hasOwnProperty("last_changenumber"))
                if (!$util.isInteger(message.last_changenumber))
                    return "last_changenumber: integer expected";
            if (message.send_changelist != null && message.hasOwnProperty("send_changelist"))
                if (typeof message.send_changelist !== "boolean")
                    return "send_changelist: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAppInfoUpdate message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAppInfoUpdate
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAppInfoUpdate} CMsgClientAppInfoUpdate
         */
        CMsgClientAppInfoUpdate.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAppInfoUpdate)
                return object;
            var message = new $root.CMsgClientAppInfoUpdate();
            if (object.last_changenumber != null)
                message.last_changenumber = object.last_changenumber >>> 0;
            if (object.send_changelist != null)
                message.send_changelist = Boolean(object.send_changelist);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAppInfoUpdate message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAppInfoUpdate
         * @static
         * @param {CMsgClientAppInfoUpdate} message CMsgClientAppInfoUpdate
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAppInfoUpdate.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.last_changenumber = 0;
                object.send_changelist = false;
            }
            if (message.last_changenumber != null && message.hasOwnProperty("last_changenumber"))
                object.last_changenumber = message.last_changenumber;
            if (message.send_changelist != null && message.hasOwnProperty("send_changelist"))
                object.send_changelist = message.send_changelist;
            return object;
        };
    
        /**
         * Converts this CMsgClientAppInfoUpdate to JSON.
         * @function toJSON
         * @memberof CMsgClientAppInfoUpdate
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAppInfoUpdate.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAppInfoUpdate;
    })();
    
    $root.CMsgClientAppInfoChanges = (function() {
    
        /**
         * Properties of a CMsgClientAppInfoChanges.
         * @exports ICMsgClientAppInfoChanges
         * @interface ICMsgClientAppInfoChanges
         * @property {number|null} [current_change_number] CMsgClientAppInfoChanges current_change_number
         * @property {boolean|null} [force_full_update] CMsgClientAppInfoChanges force_full_update
         * @property {Array.<number>|null} [appIDs] CMsgClientAppInfoChanges appIDs
         */
    
        /**
         * Constructs a new CMsgClientAppInfoChanges.
         * @exports CMsgClientAppInfoChanges
         * @classdesc Represents a CMsgClientAppInfoChanges.
         * @implements ICMsgClientAppInfoChanges
         * @constructor
         * @param {ICMsgClientAppInfoChanges=} [properties] Properties to set
         */
        function CMsgClientAppInfoChanges(properties) {
            this.appIDs = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAppInfoChanges current_change_number.
         * @member {number} current_change_number
         * @memberof CMsgClientAppInfoChanges
         * @instance
         */
        CMsgClientAppInfoChanges.prototype.current_change_number = 0;
    
        /**
         * CMsgClientAppInfoChanges force_full_update.
         * @member {boolean} force_full_update
         * @memberof CMsgClientAppInfoChanges
         * @instance
         */
        CMsgClientAppInfoChanges.prototype.force_full_update = false;
    
        /**
         * CMsgClientAppInfoChanges appIDs.
         * @member {Array.<number>} appIDs
         * @memberof CMsgClientAppInfoChanges
         * @instance
         */
        CMsgClientAppInfoChanges.prototype.appIDs = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientAppInfoChanges instance using the specified properties.
         * @function create
         * @memberof CMsgClientAppInfoChanges
         * @static
         * @param {ICMsgClientAppInfoChanges=} [properties] Properties to set
         * @returns {CMsgClientAppInfoChanges} CMsgClientAppInfoChanges instance
         */
        CMsgClientAppInfoChanges.create = function create(properties) {
            return new CMsgClientAppInfoChanges(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAppInfoChanges message. Does not implicitly {@link CMsgClientAppInfoChanges.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAppInfoChanges
         * @static
         * @param {ICMsgClientAppInfoChanges} message CMsgClientAppInfoChanges message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAppInfoChanges.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.current_change_number != null && Object.hasOwnProperty.call(message, "current_change_number"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.current_change_number);
            if (message.force_full_update != null && Object.hasOwnProperty.call(message, "force_full_update"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.force_full_update);
            if (message.appIDs != null && message.appIDs.length)
                for (var i = 0; i < message.appIDs.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.appIDs[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAppInfoChanges message, length delimited. Does not implicitly {@link CMsgClientAppInfoChanges.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAppInfoChanges
         * @static
         * @param {ICMsgClientAppInfoChanges} message CMsgClientAppInfoChanges message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAppInfoChanges.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAppInfoChanges message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAppInfoChanges
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAppInfoChanges} CMsgClientAppInfoChanges
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAppInfoChanges.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAppInfoChanges();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.current_change_number = reader.uint32();
                    break;
                case 2:
                    message.force_full_update = reader.bool();
                    break;
                case 3:
                    if (!(message.appIDs && message.appIDs.length))
                        message.appIDs = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.appIDs.push(reader.uint32());
                    } else
                        message.appIDs.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAppInfoChanges message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAppInfoChanges
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAppInfoChanges} CMsgClientAppInfoChanges
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAppInfoChanges.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAppInfoChanges message.
         * @function verify
         * @memberof CMsgClientAppInfoChanges
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAppInfoChanges.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.current_change_number != null && message.hasOwnProperty("current_change_number"))
                if (!$util.isInteger(message.current_change_number))
                    return "current_change_number: integer expected";
            if (message.force_full_update != null && message.hasOwnProperty("force_full_update"))
                if (typeof message.force_full_update !== "boolean")
                    return "force_full_update: boolean expected";
            if (message.appIDs != null && message.hasOwnProperty("appIDs")) {
                if (!Array.isArray(message.appIDs))
                    return "appIDs: array expected";
                for (var i = 0; i < message.appIDs.length; ++i)
                    if (!$util.isInteger(message.appIDs[i]))
                        return "appIDs: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientAppInfoChanges message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAppInfoChanges
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAppInfoChanges} CMsgClientAppInfoChanges
         */
        CMsgClientAppInfoChanges.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAppInfoChanges)
                return object;
            var message = new $root.CMsgClientAppInfoChanges();
            if (object.current_change_number != null)
                message.current_change_number = object.current_change_number >>> 0;
            if (object.force_full_update != null)
                message.force_full_update = Boolean(object.force_full_update);
            if (object.appIDs) {
                if (!Array.isArray(object.appIDs))
                    throw TypeError(".CMsgClientAppInfoChanges.appIDs: array expected");
                message.appIDs = [];
                for (var i = 0; i < object.appIDs.length; ++i)
                    message.appIDs[i] = object.appIDs[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAppInfoChanges message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAppInfoChanges
         * @static
         * @param {CMsgClientAppInfoChanges} message CMsgClientAppInfoChanges
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAppInfoChanges.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.appIDs = [];
            if (options.defaults) {
                object.current_change_number = 0;
                object.force_full_update = false;
            }
            if (message.current_change_number != null && message.hasOwnProperty("current_change_number"))
                object.current_change_number = message.current_change_number;
            if (message.force_full_update != null && message.hasOwnProperty("force_full_update"))
                object.force_full_update = message.force_full_update;
            if (message.appIDs && message.appIDs.length) {
                object.appIDs = [];
                for (var j = 0; j < message.appIDs.length; ++j)
                    object.appIDs[j] = message.appIDs[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientAppInfoChanges to JSON.
         * @function toJSON
         * @memberof CMsgClientAppInfoChanges
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAppInfoChanges.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAppInfoChanges;
    })();
    
    $root.CMsgClientAppInfoRequest = (function() {
    
        /**
         * Properties of a CMsgClientAppInfoRequest.
         * @exports ICMsgClientAppInfoRequest
         * @interface ICMsgClientAppInfoRequest
         * @property {Array.<CMsgClientAppInfoRequest.IApp>|null} [apps] CMsgClientAppInfoRequest apps
         * @property {boolean|null} [supports_batches] CMsgClientAppInfoRequest supports_batches
         */
    
        /**
         * Constructs a new CMsgClientAppInfoRequest.
         * @exports CMsgClientAppInfoRequest
         * @classdesc Represents a CMsgClientAppInfoRequest.
         * @implements ICMsgClientAppInfoRequest
         * @constructor
         * @param {ICMsgClientAppInfoRequest=} [properties] Properties to set
         */
        function CMsgClientAppInfoRequest(properties) {
            this.apps = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAppInfoRequest apps.
         * @member {Array.<CMsgClientAppInfoRequest.IApp>} apps
         * @memberof CMsgClientAppInfoRequest
         * @instance
         */
        CMsgClientAppInfoRequest.prototype.apps = $util.emptyArray;
    
        /**
         * CMsgClientAppInfoRequest supports_batches.
         * @member {boolean} supports_batches
         * @memberof CMsgClientAppInfoRequest
         * @instance
         */
        CMsgClientAppInfoRequest.prototype.supports_batches = false;
    
        /**
         * Creates a new CMsgClientAppInfoRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientAppInfoRequest
         * @static
         * @param {ICMsgClientAppInfoRequest=} [properties] Properties to set
         * @returns {CMsgClientAppInfoRequest} CMsgClientAppInfoRequest instance
         */
        CMsgClientAppInfoRequest.create = function create(properties) {
            return new CMsgClientAppInfoRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAppInfoRequest message. Does not implicitly {@link CMsgClientAppInfoRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAppInfoRequest
         * @static
         * @param {ICMsgClientAppInfoRequest} message CMsgClientAppInfoRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAppInfoRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.apps != null && message.apps.length)
                for (var i = 0; i < message.apps.length; ++i)
                    $root.CMsgClientAppInfoRequest.App.encode(message.apps[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.supports_batches != null && Object.hasOwnProperty.call(message, "supports_batches"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.supports_batches);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAppInfoRequest message, length delimited. Does not implicitly {@link CMsgClientAppInfoRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAppInfoRequest
         * @static
         * @param {ICMsgClientAppInfoRequest} message CMsgClientAppInfoRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAppInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAppInfoRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAppInfoRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAppInfoRequest} CMsgClientAppInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAppInfoRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAppInfoRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.apps && message.apps.length))
                        message.apps = [];
                    message.apps.push($root.CMsgClientAppInfoRequest.App.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.supports_batches = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAppInfoRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAppInfoRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAppInfoRequest} CMsgClientAppInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAppInfoRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAppInfoRequest message.
         * @function verify
         * @memberof CMsgClientAppInfoRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAppInfoRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.apps != null && message.hasOwnProperty("apps")) {
                if (!Array.isArray(message.apps))
                    return "apps: array expected";
                for (var i = 0; i < message.apps.length; ++i) {
                    var error = $root.CMsgClientAppInfoRequest.App.verify(message.apps[i]);
                    if (error)
                        return "apps." + error;
                }
            }
            if (message.supports_batches != null && message.hasOwnProperty("supports_batches"))
                if (typeof message.supports_batches !== "boolean")
                    return "supports_batches: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAppInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAppInfoRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAppInfoRequest} CMsgClientAppInfoRequest
         */
        CMsgClientAppInfoRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAppInfoRequest)
                return object;
            var message = new $root.CMsgClientAppInfoRequest();
            if (object.apps) {
                if (!Array.isArray(object.apps))
                    throw TypeError(".CMsgClientAppInfoRequest.apps: array expected");
                message.apps = [];
                for (var i = 0; i < object.apps.length; ++i) {
                    if (typeof object.apps[i] !== "object")
                        throw TypeError(".CMsgClientAppInfoRequest.apps: object expected");
                    message.apps[i] = $root.CMsgClientAppInfoRequest.App.fromObject(object.apps[i]);
                }
            }
            if (object.supports_batches != null)
                message.supports_batches = Boolean(object.supports_batches);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAppInfoRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAppInfoRequest
         * @static
         * @param {CMsgClientAppInfoRequest} message CMsgClientAppInfoRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAppInfoRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.apps = [];
            if (options.defaults)
                object.supports_batches = false;
            if (message.apps && message.apps.length) {
                object.apps = [];
                for (var j = 0; j < message.apps.length; ++j)
                    object.apps[j] = $root.CMsgClientAppInfoRequest.App.toObject(message.apps[j], options);
            }
            if (message.supports_batches != null && message.hasOwnProperty("supports_batches"))
                object.supports_batches = message.supports_batches;
            return object;
        };
    
        /**
         * Converts this CMsgClientAppInfoRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientAppInfoRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAppInfoRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientAppInfoRequest.App = (function() {
    
            /**
             * Properties of an App.
             * @memberof CMsgClientAppInfoRequest
             * @interface IApp
             * @property {number|null} [app_id] App app_id
             * @property {number|null} [section_flags] App section_flags
             * @property {Array.<number>|null} [section_CRC] App section_CRC
             */
    
            /**
             * Constructs a new App.
             * @memberof CMsgClientAppInfoRequest
             * @classdesc Represents an App.
             * @implements IApp
             * @constructor
             * @param {CMsgClientAppInfoRequest.IApp=} [properties] Properties to set
             */
            function App(properties) {
                this.section_CRC = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * App app_id.
             * @member {number} app_id
             * @memberof CMsgClientAppInfoRequest.App
             * @instance
             */
            App.prototype.app_id = 0;
    
            /**
             * App section_flags.
             * @member {number} section_flags
             * @memberof CMsgClientAppInfoRequest.App
             * @instance
             */
            App.prototype.section_flags = 0;
    
            /**
             * App section_CRC.
             * @member {Array.<number>} section_CRC
             * @memberof CMsgClientAppInfoRequest.App
             * @instance
             */
            App.prototype.section_CRC = $util.emptyArray;
    
            /**
             * Creates a new App instance using the specified properties.
             * @function create
             * @memberof CMsgClientAppInfoRequest.App
             * @static
             * @param {CMsgClientAppInfoRequest.IApp=} [properties] Properties to set
             * @returns {CMsgClientAppInfoRequest.App} App instance
             */
            App.create = function create(properties) {
                return new App(properties);
            };
    
            /**
             * Encodes the specified App message. Does not implicitly {@link CMsgClientAppInfoRequest.App.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientAppInfoRequest.App
             * @static
             * @param {CMsgClientAppInfoRequest.IApp} message App message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            App.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
                if (message.section_flags != null && Object.hasOwnProperty.call(message, "section_flags"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.section_flags);
                if (message.section_CRC != null && message.section_CRC.length)
                    for (var i = 0; i < message.section_CRC.length; ++i)
                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.section_CRC[i]);
                return writer;
            };
    
            /**
             * Encodes the specified App message, length delimited. Does not implicitly {@link CMsgClientAppInfoRequest.App.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientAppInfoRequest.App
             * @static
             * @param {CMsgClientAppInfoRequest.IApp} message App message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            App.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an App message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientAppInfoRequest.App
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientAppInfoRequest.App} App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            App.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAppInfoRequest.App();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.app_id = reader.uint32();
                        break;
                    case 2:
                        message.section_flags = reader.uint32();
                        break;
                    case 3:
                        if (!(message.section_CRC && message.section_CRC.length))
                            message.section_CRC = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.section_CRC.push(reader.uint32());
                        } else
                            message.section_CRC.push(reader.uint32());
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an App message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientAppInfoRequest.App
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientAppInfoRequest.App} App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            App.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an App message.
             * @function verify
             * @memberof CMsgClientAppInfoRequest.App
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            App.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    if (!$util.isInteger(message.app_id))
                        return "app_id: integer expected";
                if (message.section_flags != null && message.hasOwnProperty("section_flags"))
                    if (!$util.isInteger(message.section_flags))
                        return "section_flags: integer expected";
                if (message.section_CRC != null && message.hasOwnProperty("section_CRC")) {
                    if (!Array.isArray(message.section_CRC))
                        return "section_CRC: array expected";
                    for (var i = 0; i < message.section_CRC.length; ++i)
                        if (!$util.isInteger(message.section_CRC[i]))
                            return "section_CRC: integer[] expected";
                }
                return null;
            };
    
            /**
             * Creates an App message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientAppInfoRequest.App
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientAppInfoRequest.App} App
             */
            App.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientAppInfoRequest.App)
                    return object;
                var message = new $root.CMsgClientAppInfoRequest.App();
                if (object.app_id != null)
                    message.app_id = object.app_id >>> 0;
                if (object.section_flags != null)
                    message.section_flags = object.section_flags >>> 0;
                if (object.section_CRC) {
                    if (!Array.isArray(object.section_CRC))
                        throw TypeError(".CMsgClientAppInfoRequest.App.section_CRC: array expected");
                    message.section_CRC = [];
                    for (var i = 0; i < object.section_CRC.length; ++i)
                        message.section_CRC[i] = object.section_CRC[i] >>> 0;
                }
                return message;
            };
    
            /**
             * Creates a plain object from an App message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientAppInfoRequest.App
             * @static
             * @param {CMsgClientAppInfoRequest.App} message App
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            App.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.section_CRC = [];
                if (options.defaults) {
                    object.app_id = 0;
                    object.section_flags = 0;
                }
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    object.app_id = message.app_id;
                if (message.section_flags != null && message.hasOwnProperty("section_flags"))
                    object.section_flags = message.section_flags;
                if (message.section_CRC && message.section_CRC.length) {
                    object.section_CRC = [];
                    for (var j = 0; j < message.section_CRC.length; ++j)
                        object.section_CRC[j] = message.section_CRC[j];
                }
                return object;
            };
    
            /**
             * Converts this App to JSON.
             * @function toJSON
             * @memberof CMsgClientAppInfoRequest.App
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            App.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return App;
        })();
    
        return CMsgClientAppInfoRequest;
    })();
    
    $root.CMsgClientAppInfoResponse = (function() {
    
        /**
         * Properties of a CMsgClientAppInfoResponse.
         * @exports ICMsgClientAppInfoResponse
         * @interface ICMsgClientAppInfoResponse
         * @property {Array.<CMsgClientAppInfoResponse.IApp>|null} [apps] CMsgClientAppInfoResponse apps
         * @property {Array.<number>|null} [apps_unknown] CMsgClientAppInfoResponse apps_unknown
         * @property {number|null} [apps_pending] CMsgClientAppInfoResponse apps_pending
         */
    
        /**
         * Constructs a new CMsgClientAppInfoResponse.
         * @exports CMsgClientAppInfoResponse
         * @classdesc Represents a CMsgClientAppInfoResponse.
         * @implements ICMsgClientAppInfoResponse
         * @constructor
         * @param {ICMsgClientAppInfoResponse=} [properties] Properties to set
         */
        function CMsgClientAppInfoResponse(properties) {
            this.apps = [];
            this.apps_unknown = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAppInfoResponse apps.
         * @member {Array.<CMsgClientAppInfoResponse.IApp>} apps
         * @memberof CMsgClientAppInfoResponse
         * @instance
         */
        CMsgClientAppInfoResponse.prototype.apps = $util.emptyArray;
    
        /**
         * CMsgClientAppInfoResponse apps_unknown.
         * @member {Array.<number>} apps_unknown
         * @memberof CMsgClientAppInfoResponse
         * @instance
         */
        CMsgClientAppInfoResponse.prototype.apps_unknown = $util.emptyArray;
    
        /**
         * CMsgClientAppInfoResponse apps_pending.
         * @member {number} apps_pending
         * @memberof CMsgClientAppInfoResponse
         * @instance
         */
        CMsgClientAppInfoResponse.prototype.apps_pending = 0;
    
        /**
         * Creates a new CMsgClientAppInfoResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientAppInfoResponse
         * @static
         * @param {ICMsgClientAppInfoResponse=} [properties] Properties to set
         * @returns {CMsgClientAppInfoResponse} CMsgClientAppInfoResponse instance
         */
        CMsgClientAppInfoResponse.create = function create(properties) {
            return new CMsgClientAppInfoResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAppInfoResponse message. Does not implicitly {@link CMsgClientAppInfoResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAppInfoResponse
         * @static
         * @param {ICMsgClientAppInfoResponse} message CMsgClientAppInfoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAppInfoResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.apps != null && message.apps.length)
                for (var i = 0; i < message.apps.length; ++i)
                    $root.CMsgClientAppInfoResponse.App.encode(message.apps[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.apps_unknown != null && message.apps_unknown.length)
                for (var i = 0; i < message.apps_unknown.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.apps_unknown[i]);
            if (message.apps_pending != null && Object.hasOwnProperty.call(message, "apps_pending"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.apps_pending);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAppInfoResponse message, length delimited. Does not implicitly {@link CMsgClientAppInfoResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAppInfoResponse
         * @static
         * @param {ICMsgClientAppInfoResponse} message CMsgClientAppInfoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAppInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAppInfoResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAppInfoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAppInfoResponse} CMsgClientAppInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAppInfoResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAppInfoResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.apps && message.apps.length))
                        message.apps = [];
                    message.apps.push($root.CMsgClientAppInfoResponse.App.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.apps_unknown && message.apps_unknown.length))
                        message.apps_unknown = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.apps_unknown.push(reader.uint32());
                    } else
                        message.apps_unknown.push(reader.uint32());
                    break;
                case 3:
                    message.apps_pending = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAppInfoResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAppInfoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAppInfoResponse} CMsgClientAppInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAppInfoResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAppInfoResponse message.
         * @function verify
         * @memberof CMsgClientAppInfoResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAppInfoResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.apps != null && message.hasOwnProperty("apps")) {
                if (!Array.isArray(message.apps))
                    return "apps: array expected";
                for (var i = 0; i < message.apps.length; ++i) {
                    var error = $root.CMsgClientAppInfoResponse.App.verify(message.apps[i]);
                    if (error)
                        return "apps." + error;
                }
            }
            if (message.apps_unknown != null && message.hasOwnProperty("apps_unknown")) {
                if (!Array.isArray(message.apps_unknown))
                    return "apps_unknown: array expected";
                for (var i = 0; i < message.apps_unknown.length; ++i)
                    if (!$util.isInteger(message.apps_unknown[i]))
                        return "apps_unknown: integer[] expected";
            }
            if (message.apps_pending != null && message.hasOwnProperty("apps_pending"))
                if (!$util.isInteger(message.apps_pending))
                    return "apps_pending: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAppInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAppInfoResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAppInfoResponse} CMsgClientAppInfoResponse
         */
        CMsgClientAppInfoResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAppInfoResponse)
                return object;
            var message = new $root.CMsgClientAppInfoResponse();
            if (object.apps) {
                if (!Array.isArray(object.apps))
                    throw TypeError(".CMsgClientAppInfoResponse.apps: array expected");
                message.apps = [];
                for (var i = 0; i < object.apps.length; ++i) {
                    if (typeof object.apps[i] !== "object")
                        throw TypeError(".CMsgClientAppInfoResponse.apps: object expected");
                    message.apps[i] = $root.CMsgClientAppInfoResponse.App.fromObject(object.apps[i]);
                }
            }
            if (object.apps_unknown) {
                if (!Array.isArray(object.apps_unknown))
                    throw TypeError(".CMsgClientAppInfoResponse.apps_unknown: array expected");
                message.apps_unknown = [];
                for (var i = 0; i < object.apps_unknown.length; ++i)
                    message.apps_unknown[i] = object.apps_unknown[i] >>> 0;
            }
            if (object.apps_pending != null)
                message.apps_pending = object.apps_pending >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAppInfoResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAppInfoResponse
         * @static
         * @param {CMsgClientAppInfoResponse} message CMsgClientAppInfoResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAppInfoResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.apps = [];
                object.apps_unknown = [];
            }
            if (options.defaults)
                object.apps_pending = 0;
            if (message.apps && message.apps.length) {
                object.apps = [];
                for (var j = 0; j < message.apps.length; ++j)
                    object.apps[j] = $root.CMsgClientAppInfoResponse.App.toObject(message.apps[j], options);
            }
            if (message.apps_unknown && message.apps_unknown.length) {
                object.apps_unknown = [];
                for (var j = 0; j < message.apps_unknown.length; ++j)
                    object.apps_unknown[j] = message.apps_unknown[j];
            }
            if (message.apps_pending != null && message.hasOwnProperty("apps_pending"))
                object.apps_pending = message.apps_pending;
            return object;
        };
    
        /**
         * Converts this CMsgClientAppInfoResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientAppInfoResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAppInfoResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientAppInfoResponse.App = (function() {
    
            /**
             * Properties of an App.
             * @memberof CMsgClientAppInfoResponse
             * @interface IApp
             * @property {number|null} [app_id] App app_id
             * @property {number|null} [change_number] App change_number
             * @property {Array.<CMsgClientAppInfoResponse.App.ISection>|null} [sections] App sections
             */
    
            /**
             * Constructs a new App.
             * @memberof CMsgClientAppInfoResponse
             * @classdesc Represents an App.
             * @implements IApp
             * @constructor
             * @param {CMsgClientAppInfoResponse.IApp=} [properties] Properties to set
             */
            function App(properties) {
                this.sections = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * App app_id.
             * @member {number} app_id
             * @memberof CMsgClientAppInfoResponse.App
             * @instance
             */
            App.prototype.app_id = 0;
    
            /**
             * App change_number.
             * @member {number} change_number
             * @memberof CMsgClientAppInfoResponse.App
             * @instance
             */
            App.prototype.change_number = 0;
    
            /**
             * App sections.
             * @member {Array.<CMsgClientAppInfoResponse.App.ISection>} sections
             * @memberof CMsgClientAppInfoResponse.App
             * @instance
             */
            App.prototype.sections = $util.emptyArray;
    
            /**
             * Creates a new App instance using the specified properties.
             * @function create
             * @memberof CMsgClientAppInfoResponse.App
             * @static
             * @param {CMsgClientAppInfoResponse.IApp=} [properties] Properties to set
             * @returns {CMsgClientAppInfoResponse.App} App instance
             */
            App.create = function create(properties) {
                return new App(properties);
            };
    
            /**
             * Encodes the specified App message. Does not implicitly {@link CMsgClientAppInfoResponse.App.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientAppInfoResponse.App
             * @static
             * @param {CMsgClientAppInfoResponse.IApp} message App message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            App.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
                if (message.change_number != null && Object.hasOwnProperty.call(message, "change_number"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.change_number);
                if (message.sections != null && message.sections.length)
                    for (var i = 0; i < message.sections.length; ++i)
                        $root.CMsgClientAppInfoResponse.App.Section.encode(message.sections[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified App message, length delimited. Does not implicitly {@link CMsgClientAppInfoResponse.App.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientAppInfoResponse.App
             * @static
             * @param {CMsgClientAppInfoResponse.IApp} message App message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            App.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an App message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientAppInfoResponse.App
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientAppInfoResponse.App} App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            App.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAppInfoResponse.App();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.app_id = reader.uint32();
                        break;
                    case 2:
                        message.change_number = reader.uint32();
                        break;
                    case 3:
                        if (!(message.sections && message.sections.length))
                            message.sections = [];
                        message.sections.push($root.CMsgClientAppInfoResponse.App.Section.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an App message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientAppInfoResponse.App
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientAppInfoResponse.App} App
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            App.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an App message.
             * @function verify
             * @memberof CMsgClientAppInfoResponse.App
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            App.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    if (!$util.isInteger(message.app_id))
                        return "app_id: integer expected";
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    if (!$util.isInteger(message.change_number))
                        return "change_number: integer expected";
                if (message.sections != null && message.hasOwnProperty("sections")) {
                    if (!Array.isArray(message.sections))
                        return "sections: array expected";
                    for (var i = 0; i < message.sections.length; ++i) {
                        var error = $root.CMsgClientAppInfoResponse.App.Section.verify(message.sections[i]);
                        if (error)
                            return "sections." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates an App message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientAppInfoResponse.App
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientAppInfoResponse.App} App
             */
            App.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientAppInfoResponse.App)
                    return object;
                var message = new $root.CMsgClientAppInfoResponse.App();
                if (object.app_id != null)
                    message.app_id = object.app_id >>> 0;
                if (object.change_number != null)
                    message.change_number = object.change_number >>> 0;
                if (object.sections) {
                    if (!Array.isArray(object.sections))
                        throw TypeError(".CMsgClientAppInfoResponse.App.sections: array expected");
                    message.sections = [];
                    for (var i = 0; i < object.sections.length; ++i) {
                        if (typeof object.sections[i] !== "object")
                            throw TypeError(".CMsgClientAppInfoResponse.App.sections: object expected");
                        message.sections[i] = $root.CMsgClientAppInfoResponse.App.Section.fromObject(object.sections[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from an App message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientAppInfoResponse.App
             * @static
             * @param {CMsgClientAppInfoResponse.App} message App
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            App.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.sections = [];
                if (options.defaults) {
                    object.app_id = 0;
                    object.change_number = 0;
                }
                if (message.app_id != null && message.hasOwnProperty("app_id"))
                    object.app_id = message.app_id;
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    object.change_number = message.change_number;
                if (message.sections && message.sections.length) {
                    object.sections = [];
                    for (var j = 0; j < message.sections.length; ++j)
                        object.sections[j] = $root.CMsgClientAppInfoResponse.App.Section.toObject(message.sections[j], options);
                }
                return object;
            };
    
            /**
             * Converts this App to JSON.
             * @function toJSON
             * @memberof CMsgClientAppInfoResponse.App
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            App.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            App.Section = (function() {
    
                /**
                 * Properties of a Section.
                 * @memberof CMsgClientAppInfoResponse.App
                 * @interface ISection
                 * @property {number|null} [section_id] Section section_id
                 * @property {Uint8Array|null} [section_kv] Section section_kv
                 */
    
                /**
                 * Constructs a new Section.
                 * @memberof CMsgClientAppInfoResponse.App
                 * @classdesc Represents a Section.
                 * @implements ISection
                 * @constructor
                 * @param {CMsgClientAppInfoResponse.App.ISection=} [properties] Properties to set
                 */
                function Section(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Section section_id.
                 * @member {number} section_id
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @instance
                 */
                Section.prototype.section_id = 0;
    
                /**
                 * Section section_kv.
                 * @member {Uint8Array} section_kv
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @instance
                 */
                Section.prototype.section_kv = $util.newBuffer([]);
    
                /**
                 * Creates a new Section instance using the specified properties.
                 * @function create
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @static
                 * @param {CMsgClientAppInfoResponse.App.ISection=} [properties] Properties to set
                 * @returns {CMsgClientAppInfoResponse.App.Section} Section instance
                 */
                Section.create = function create(properties) {
                    return new Section(properties);
                };
    
                /**
                 * Encodes the specified Section message. Does not implicitly {@link CMsgClientAppInfoResponse.App.Section.verify|verify} messages.
                 * @function encode
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @static
                 * @param {CMsgClientAppInfoResponse.App.ISection} message Section message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Section.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.section_id != null && Object.hasOwnProperty.call(message, "section_id"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.section_id);
                    if (message.section_kv != null && Object.hasOwnProperty.call(message, "section_kv"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.section_kv);
                    return writer;
                };
    
                /**
                 * Encodes the specified Section message, length delimited. Does not implicitly {@link CMsgClientAppInfoResponse.App.Section.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @static
                 * @param {CMsgClientAppInfoResponse.App.ISection} message Section message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Section.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Section message from the specified reader or buffer.
                 * @function decode
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {CMsgClientAppInfoResponse.App.Section} Section
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Section.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAppInfoResponse.App.Section();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.section_id = reader.uint32();
                            break;
                        case 2:
                            message.section_kv = reader.bytes();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Section message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {CMsgClientAppInfoResponse.App.Section} Section
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Section.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Section message.
                 * @function verify
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Section.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.section_id != null && message.hasOwnProperty("section_id"))
                        if (!$util.isInteger(message.section_id))
                            return "section_id: integer expected";
                    if (message.section_kv != null && message.hasOwnProperty("section_kv"))
                        if (!(message.section_kv && typeof message.section_kv.length === "number" || $util.isString(message.section_kv)))
                            return "section_kv: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a Section message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {CMsgClientAppInfoResponse.App.Section} Section
                 */
                Section.fromObject = function fromObject(object) {
                    if (object instanceof $root.CMsgClientAppInfoResponse.App.Section)
                        return object;
                    var message = new $root.CMsgClientAppInfoResponse.App.Section();
                    if (object.section_id != null)
                        message.section_id = object.section_id >>> 0;
                    if (object.section_kv != null)
                        if (typeof object.section_kv === "string")
                            $util.base64.decode(object.section_kv, message.section_kv = $util.newBuffer($util.base64.length(object.section_kv)), 0);
                        else if (object.section_kv.length)
                            message.section_kv = object.section_kv;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Section message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @static
                 * @param {CMsgClientAppInfoResponse.App.Section} message Section
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Section.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.section_id = 0;
                        if (options.bytes === String)
                            object.section_kv = "";
                        else {
                            object.section_kv = [];
                            if (options.bytes !== Array)
                                object.section_kv = $util.newBuffer(object.section_kv);
                        }
                    }
                    if (message.section_id != null && message.hasOwnProperty("section_id"))
                        object.section_id = message.section_id;
                    if (message.section_kv != null && message.hasOwnProperty("section_kv"))
                        object.section_kv = options.bytes === String ? $util.base64.encode(message.section_kv, 0, message.section_kv.length) : options.bytes === Array ? Array.prototype.slice.call(message.section_kv) : message.section_kv;
                    return object;
                };
    
                /**
                 * Converts this Section to JSON.
                 * @function toJSON
                 * @memberof CMsgClientAppInfoResponse.App.Section
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Section.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Section;
            })();
    
            return App;
        })();
    
        return CMsgClientAppInfoResponse;
    })();
    
    $root.CMsgClientPackageInfoRequest = (function() {
    
        /**
         * Properties of a CMsgClientPackageInfoRequest.
         * @exports ICMsgClientPackageInfoRequest
         * @interface ICMsgClientPackageInfoRequest
         * @property {Array.<number>|null} [package_ids] CMsgClientPackageInfoRequest package_ids
         * @property {boolean|null} [meta_data_only] CMsgClientPackageInfoRequest meta_data_only
         */
    
        /**
         * Constructs a new CMsgClientPackageInfoRequest.
         * @exports CMsgClientPackageInfoRequest
         * @classdesc Represents a CMsgClientPackageInfoRequest.
         * @implements ICMsgClientPackageInfoRequest
         * @constructor
         * @param {ICMsgClientPackageInfoRequest=} [properties] Properties to set
         */
        function CMsgClientPackageInfoRequest(properties) {
            this.package_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPackageInfoRequest package_ids.
         * @member {Array.<number>} package_ids
         * @memberof CMsgClientPackageInfoRequest
         * @instance
         */
        CMsgClientPackageInfoRequest.prototype.package_ids = $util.emptyArray;
    
        /**
         * CMsgClientPackageInfoRequest meta_data_only.
         * @member {boolean} meta_data_only
         * @memberof CMsgClientPackageInfoRequest
         * @instance
         */
        CMsgClientPackageInfoRequest.prototype.meta_data_only = false;
    
        /**
         * Creates a new CMsgClientPackageInfoRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientPackageInfoRequest
         * @static
         * @param {ICMsgClientPackageInfoRequest=} [properties] Properties to set
         * @returns {CMsgClientPackageInfoRequest} CMsgClientPackageInfoRequest instance
         */
        CMsgClientPackageInfoRequest.create = function create(properties) {
            return new CMsgClientPackageInfoRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPackageInfoRequest message. Does not implicitly {@link CMsgClientPackageInfoRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPackageInfoRequest
         * @static
         * @param {ICMsgClientPackageInfoRequest} message CMsgClientPackageInfoRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPackageInfoRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.package_ids != null && message.package_ids.length)
                for (var i = 0; i < message.package_ids.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.package_ids[i]);
            if (message.meta_data_only != null && Object.hasOwnProperty.call(message, "meta_data_only"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.meta_data_only);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPackageInfoRequest message, length delimited. Does not implicitly {@link CMsgClientPackageInfoRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPackageInfoRequest
         * @static
         * @param {ICMsgClientPackageInfoRequest} message CMsgClientPackageInfoRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPackageInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPackageInfoRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPackageInfoRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPackageInfoRequest} CMsgClientPackageInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPackageInfoRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPackageInfoRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.package_ids && message.package_ids.length))
                        message.package_ids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.package_ids.push(reader.uint32());
                    } else
                        message.package_ids.push(reader.uint32());
                    break;
                case 2:
                    message.meta_data_only = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPackageInfoRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPackageInfoRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPackageInfoRequest} CMsgClientPackageInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPackageInfoRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPackageInfoRequest message.
         * @function verify
         * @memberof CMsgClientPackageInfoRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPackageInfoRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.package_ids != null && message.hasOwnProperty("package_ids")) {
                if (!Array.isArray(message.package_ids))
                    return "package_ids: array expected";
                for (var i = 0; i < message.package_ids.length; ++i)
                    if (!$util.isInteger(message.package_ids[i]))
                        return "package_ids: integer[] expected";
            }
            if (message.meta_data_only != null && message.hasOwnProperty("meta_data_only"))
                if (typeof message.meta_data_only !== "boolean")
                    return "meta_data_only: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPackageInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPackageInfoRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPackageInfoRequest} CMsgClientPackageInfoRequest
         */
        CMsgClientPackageInfoRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPackageInfoRequest)
                return object;
            var message = new $root.CMsgClientPackageInfoRequest();
            if (object.package_ids) {
                if (!Array.isArray(object.package_ids))
                    throw TypeError(".CMsgClientPackageInfoRequest.package_ids: array expected");
                message.package_ids = [];
                for (var i = 0; i < object.package_ids.length; ++i)
                    message.package_ids[i] = object.package_ids[i] >>> 0;
            }
            if (object.meta_data_only != null)
                message.meta_data_only = Boolean(object.meta_data_only);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPackageInfoRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPackageInfoRequest
         * @static
         * @param {CMsgClientPackageInfoRequest} message CMsgClientPackageInfoRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPackageInfoRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.package_ids = [];
            if (options.defaults)
                object.meta_data_only = false;
            if (message.package_ids && message.package_ids.length) {
                object.package_ids = [];
                for (var j = 0; j < message.package_ids.length; ++j)
                    object.package_ids[j] = message.package_ids[j];
            }
            if (message.meta_data_only != null && message.hasOwnProperty("meta_data_only"))
                object.meta_data_only = message.meta_data_only;
            return object;
        };
    
        /**
         * Converts this CMsgClientPackageInfoRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientPackageInfoRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPackageInfoRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPackageInfoRequest;
    })();
    
    $root.CMsgClientPackageInfoResponse = (function() {
    
        /**
         * Properties of a CMsgClientPackageInfoResponse.
         * @exports ICMsgClientPackageInfoResponse
         * @interface ICMsgClientPackageInfoResponse
         * @property {Array.<CMsgClientPackageInfoResponse.IPackage>|null} [packages] CMsgClientPackageInfoResponse packages
         * @property {Array.<number>|null} [packages_unknown] CMsgClientPackageInfoResponse packages_unknown
         * @property {number|null} [packages_pending] CMsgClientPackageInfoResponse packages_pending
         */
    
        /**
         * Constructs a new CMsgClientPackageInfoResponse.
         * @exports CMsgClientPackageInfoResponse
         * @classdesc Represents a CMsgClientPackageInfoResponse.
         * @implements ICMsgClientPackageInfoResponse
         * @constructor
         * @param {ICMsgClientPackageInfoResponse=} [properties] Properties to set
         */
        function CMsgClientPackageInfoResponse(properties) {
            this.packages = [];
            this.packages_unknown = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPackageInfoResponse packages.
         * @member {Array.<CMsgClientPackageInfoResponse.IPackage>} packages
         * @memberof CMsgClientPackageInfoResponse
         * @instance
         */
        CMsgClientPackageInfoResponse.prototype.packages = $util.emptyArray;
    
        /**
         * CMsgClientPackageInfoResponse packages_unknown.
         * @member {Array.<number>} packages_unknown
         * @memberof CMsgClientPackageInfoResponse
         * @instance
         */
        CMsgClientPackageInfoResponse.prototype.packages_unknown = $util.emptyArray;
    
        /**
         * CMsgClientPackageInfoResponse packages_pending.
         * @member {number} packages_pending
         * @memberof CMsgClientPackageInfoResponse
         * @instance
         */
        CMsgClientPackageInfoResponse.prototype.packages_pending = 0;
    
        /**
         * Creates a new CMsgClientPackageInfoResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientPackageInfoResponse
         * @static
         * @param {ICMsgClientPackageInfoResponse=} [properties] Properties to set
         * @returns {CMsgClientPackageInfoResponse} CMsgClientPackageInfoResponse instance
         */
        CMsgClientPackageInfoResponse.create = function create(properties) {
            return new CMsgClientPackageInfoResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPackageInfoResponse message. Does not implicitly {@link CMsgClientPackageInfoResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPackageInfoResponse
         * @static
         * @param {ICMsgClientPackageInfoResponse} message CMsgClientPackageInfoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPackageInfoResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.packages != null && message.packages.length)
                for (var i = 0; i < message.packages.length; ++i)
                    $root.CMsgClientPackageInfoResponse.Package.encode(message.packages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.packages_unknown != null && message.packages_unknown.length)
                for (var i = 0; i < message.packages_unknown.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.packages_unknown[i]);
            if (message.packages_pending != null && Object.hasOwnProperty.call(message, "packages_pending"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.packages_pending);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPackageInfoResponse message, length delimited. Does not implicitly {@link CMsgClientPackageInfoResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPackageInfoResponse
         * @static
         * @param {ICMsgClientPackageInfoResponse} message CMsgClientPackageInfoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPackageInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPackageInfoResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPackageInfoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPackageInfoResponse} CMsgClientPackageInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPackageInfoResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPackageInfoResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.packages && message.packages.length))
                        message.packages = [];
                    message.packages.push($root.CMsgClientPackageInfoResponse.Package.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.packages_unknown && message.packages_unknown.length))
                        message.packages_unknown = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.packages_unknown.push(reader.uint32());
                    } else
                        message.packages_unknown.push(reader.uint32());
                    break;
                case 3:
                    message.packages_pending = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPackageInfoResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPackageInfoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPackageInfoResponse} CMsgClientPackageInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPackageInfoResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPackageInfoResponse message.
         * @function verify
         * @memberof CMsgClientPackageInfoResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPackageInfoResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.packages != null && message.hasOwnProperty("packages")) {
                if (!Array.isArray(message.packages))
                    return "packages: array expected";
                for (var i = 0; i < message.packages.length; ++i) {
                    var error = $root.CMsgClientPackageInfoResponse.Package.verify(message.packages[i]);
                    if (error)
                        return "packages." + error;
                }
            }
            if (message.packages_unknown != null && message.hasOwnProperty("packages_unknown")) {
                if (!Array.isArray(message.packages_unknown))
                    return "packages_unknown: array expected";
                for (var i = 0; i < message.packages_unknown.length; ++i)
                    if (!$util.isInteger(message.packages_unknown[i]))
                        return "packages_unknown: integer[] expected";
            }
            if (message.packages_pending != null && message.hasOwnProperty("packages_pending"))
                if (!$util.isInteger(message.packages_pending))
                    return "packages_pending: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPackageInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPackageInfoResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPackageInfoResponse} CMsgClientPackageInfoResponse
         */
        CMsgClientPackageInfoResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPackageInfoResponse)
                return object;
            var message = new $root.CMsgClientPackageInfoResponse();
            if (object.packages) {
                if (!Array.isArray(object.packages))
                    throw TypeError(".CMsgClientPackageInfoResponse.packages: array expected");
                message.packages = [];
                for (var i = 0; i < object.packages.length; ++i) {
                    if (typeof object.packages[i] !== "object")
                        throw TypeError(".CMsgClientPackageInfoResponse.packages: object expected");
                    message.packages[i] = $root.CMsgClientPackageInfoResponse.Package.fromObject(object.packages[i]);
                }
            }
            if (object.packages_unknown) {
                if (!Array.isArray(object.packages_unknown))
                    throw TypeError(".CMsgClientPackageInfoResponse.packages_unknown: array expected");
                message.packages_unknown = [];
                for (var i = 0; i < object.packages_unknown.length; ++i)
                    message.packages_unknown[i] = object.packages_unknown[i] >>> 0;
            }
            if (object.packages_pending != null)
                message.packages_pending = object.packages_pending >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPackageInfoResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPackageInfoResponse
         * @static
         * @param {CMsgClientPackageInfoResponse} message CMsgClientPackageInfoResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPackageInfoResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.packages = [];
                object.packages_unknown = [];
            }
            if (options.defaults)
                object.packages_pending = 0;
            if (message.packages && message.packages.length) {
                object.packages = [];
                for (var j = 0; j < message.packages.length; ++j)
                    object.packages[j] = $root.CMsgClientPackageInfoResponse.Package.toObject(message.packages[j], options);
            }
            if (message.packages_unknown && message.packages_unknown.length) {
                object.packages_unknown = [];
                for (var j = 0; j < message.packages_unknown.length; ++j)
                    object.packages_unknown[j] = message.packages_unknown[j];
            }
            if (message.packages_pending != null && message.hasOwnProperty("packages_pending"))
                object.packages_pending = message.packages_pending;
            return object;
        };
    
        /**
         * Converts this CMsgClientPackageInfoResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientPackageInfoResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPackageInfoResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientPackageInfoResponse.Package = (function() {
    
            /**
             * Properties of a Package.
             * @memberof CMsgClientPackageInfoResponse
             * @interface IPackage
             * @property {number|null} [package_id] Package package_id
             * @property {number|null} [change_number] Package change_number
             * @property {Uint8Array|null} [sha] Package sha
             * @property {Uint8Array|null} [buffer] Package buffer
             */
    
            /**
             * Constructs a new Package.
             * @memberof CMsgClientPackageInfoResponse
             * @classdesc Represents a Package.
             * @implements IPackage
             * @constructor
             * @param {CMsgClientPackageInfoResponse.IPackage=} [properties] Properties to set
             */
            function Package(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Package package_id.
             * @member {number} package_id
             * @memberof CMsgClientPackageInfoResponse.Package
             * @instance
             */
            Package.prototype.package_id = 0;
    
            /**
             * Package change_number.
             * @member {number} change_number
             * @memberof CMsgClientPackageInfoResponse.Package
             * @instance
             */
            Package.prototype.change_number = 0;
    
            /**
             * Package sha.
             * @member {Uint8Array} sha
             * @memberof CMsgClientPackageInfoResponse.Package
             * @instance
             */
            Package.prototype.sha = $util.newBuffer([]);
    
            /**
             * Package buffer.
             * @member {Uint8Array} buffer
             * @memberof CMsgClientPackageInfoResponse.Package
             * @instance
             */
            Package.prototype.buffer = $util.newBuffer([]);
    
            /**
             * Creates a new Package instance using the specified properties.
             * @function create
             * @memberof CMsgClientPackageInfoResponse.Package
             * @static
             * @param {CMsgClientPackageInfoResponse.IPackage=} [properties] Properties to set
             * @returns {CMsgClientPackageInfoResponse.Package} Package instance
             */
            Package.create = function create(properties) {
                return new Package(properties);
            };
    
            /**
             * Encodes the specified Package message. Does not implicitly {@link CMsgClientPackageInfoResponse.Package.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPackageInfoResponse.Package
             * @static
             * @param {CMsgClientPackageInfoResponse.IPackage} message Package message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Package.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.package_id != null && Object.hasOwnProperty.call(message, "package_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.package_id);
                if (message.change_number != null && Object.hasOwnProperty.call(message, "change_number"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.change_number);
                if (message.sha != null && Object.hasOwnProperty.call(message, "sha"))
                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.sha);
                if (message.buffer != null && Object.hasOwnProperty.call(message, "buffer"))
                    writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.buffer);
                return writer;
            };
    
            /**
             * Encodes the specified Package message, length delimited. Does not implicitly {@link CMsgClientPackageInfoResponse.Package.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPackageInfoResponse.Package
             * @static
             * @param {CMsgClientPackageInfoResponse.IPackage} message Package message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Package.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Package message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPackageInfoResponse.Package
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPackageInfoResponse.Package} Package
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Package.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPackageInfoResponse.Package();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.package_id = reader.uint32();
                        break;
                    case 2:
                        message.change_number = reader.uint32();
                        break;
                    case 3:
                        message.sha = reader.bytes();
                        break;
                    case 4:
                        message.buffer = reader.bytes();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Package message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPackageInfoResponse.Package
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPackageInfoResponse.Package} Package
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Package.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Package message.
             * @function verify
             * @memberof CMsgClientPackageInfoResponse.Package
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Package.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.package_id != null && message.hasOwnProperty("package_id"))
                    if (!$util.isInteger(message.package_id))
                        return "package_id: integer expected";
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    if (!$util.isInteger(message.change_number))
                        return "change_number: integer expected";
                if (message.sha != null && message.hasOwnProperty("sha"))
                    if (!(message.sha && typeof message.sha.length === "number" || $util.isString(message.sha)))
                        return "sha: buffer expected";
                if (message.buffer != null && message.hasOwnProperty("buffer"))
                    if (!(message.buffer && typeof message.buffer.length === "number" || $util.isString(message.buffer)))
                        return "buffer: buffer expected";
                return null;
            };
    
            /**
             * Creates a Package message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPackageInfoResponse.Package
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPackageInfoResponse.Package} Package
             */
            Package.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPackageInfoResponse.Package)
                    return object;
                var message = new $root.CMsgClientPackageInfoResponse.Package();
                if (object.package_id != null)
                    message.package_id = object.package_id >>> 0;
                if (object.change_number != null)
                    message.change_number = object.change_number >>> 0;
                if (object.sha != null)
                    if (typeof object.sha === "string")
                        $util.base64.decode(object.sha, message.sha = $util.newBuffer($util.base64.length(object.sha)), 0);
                    else if (object.sha.length)
                        message.sha = object.sha;
                if (object.buffer != null)
                    if (typeof object.buffer === "string")
                        $util.base64.decode(object.buffer, message.buffer = $util.newBuffer($util.base64.length(object.buffer)), 0);
                    else if (object.buffer.length)
                        message.buffer = object.buffer;
                return message;
            };
    
            /**
             * Creates a plain object from a Package message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPackageInfoResponse.Package
             * @static
             * @param {CMsgClientPackageInfoResponse.Package} message Package
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Package.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.package_id = 0;
                    object.change_number = 0;
                    if (options.bytes === String)
                        object.sha = "";
                    else {
                        object.sha = [];
                        if (options.bytes !== Array)
                            object.sha = $util.newBuffer(object.sha);
                    }
                    if (options.bytes === String)
                        object.buffer = "";
                    else {
                        object.buffer = [];
                        if (options.bytes !== Array)
                            object.buffer = $util.newBuffer(object.buffer);
                    }
                }
                if (message.package_id != null && message.hasOwnProperty("package_id"))
                    object.package_id = message.package_id;
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    object.change_number = message.change_number;
                if (message.sha != null && message.hasOwnProperty("sha"))
                    object.sha = options.bytes === String ? $util.base64.encode(message.sha, 0, message.sha.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha) : message.sha;
                if (message.buffer != null && message.hasOwnProperty("buffer"))
                    object.buffer = options.bytes === String ? $util.base64.encode(message.buffer, 0, message.buffer.length) : options.bytes === Array ? Array.prototype.slice.call(message.buffer) : message.buffer;
                return object;
            };
    
            /**
             * Converts this Package to JSON.
             * @function toJSON
             * @memberof CMsgClientPackageInfoResponse.Package
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Package.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Package;
        })();
    
        return CMsgClientPackageInfoResponse;
    })();
    
    $root.CMsgClientPICSChangesSinceRequest = (function() {
    
        /**
         * Properties of a CMsgClientPICSChangesSinceRequest.
         * @exports ICMsgClientPICSChangesSinceRequest
         * @interface ICMsgClientPICSChangesSinceRequest
         * @property {number|null} [since_change_number] CMsgClientPICSChangesSinceRequest since_change_number
         * @property {boolean|null} [send_app_info_changes] CMsgClientPICSChangesSinceRequest send_app_info_changes
         * @property {boolean|null} [send_package_info_changes] CMsgClientPICSChangesSinceRequest send_package_info_changes
         * @property {number|null} [num_app_info_cached] CMsgClientPICSChangesSinceRequest num_app_info_cached
         * @property {number|null} [num_package_info_cached] CMsgClientPICSChangesSinceRequest num_package_info_cached
         */
    
        /**
         * Constructs a new CMsgClientPICSChangesSinceRequest.
         * @exports CMsgClientPICSChangesSinceRequest
         * @classdesc Represents a CMsgClientPICSChangesSinceRequest.
         * @implements ICMsgClientPICSChangesSinceRequest
         * @constructor
         * @param {ICMsgClientPICSChangesSinceRequest=} [properties] Properties to set
         */
        function CMsgClientPICSChangesSinceRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPICSChangesSinceRequest since_change_number.
         * @member {number} since_change_number
         * @memberof CMsgClientPICSChangesSinceRequest
         * @instance
         */
        CMsgClientPICSChangesSinceRequest.prototype.since_change_number = 0;
    
        /**
         * CMsgClientPICSChangesSinceRequest send_app_info_changes.
         * @member {boolean} send_app_info_changes
         * @memberof CMsgClientPICSChangesSinceRequest
         * @instance
         */
        CMsgClientPICSChangesSinceRequest.prototype.send_app_info_changes = false;
    
        /**
         * CMsgClientPICSChangesSinceRequest send_package_info_changes.
         * @member {boolean} send_package_info_changes
         * @memberof CMsgClientPICSChangesSinceRequest
         * @instance
         */
        CMsgClientPICSChangesSinceRequest.prototype.send_package_info_changes = false;
    
        /**
         * CMsgClientPICSChangesSinceRequest num_app_info_cached.
         * @member {number} num_app_info_cached
         * @memberof CMsgClientPICSChangesSinceRequest
         * @instance
         */
        CMsgClientPICSChangesSinceRequest.prototype.num_app_info_cached = 0;
    
        /**
         * CMsgClientPICSChangesSinceRequest num_package_info_cached.
         * @member {number} num_package_info_cached
         * @memberof CMsgClientPICSChangesSinceRequest
         * @instance
         */
        CMsgClientPICSChangesSinceRequest.prototype.num_package_info_cached = 0;
    
        /**
         * Creates a new CMsgClientPICSChangesSinceRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientPICSChangesSinceRequest
         * @static
         * @param {ICMsgClientPICSChangesSinceRequest=} [properties] Properties to set
         * @returns {CMsgClientPICSChangesSinceRequest} CMsgClientPICSChangesSinceRequest instance
         */
        CMsgClientPICSChangesSinceRequest.create = function create(properties) {
            return new CMsgClientPICSChangesSinceRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPICSChangesSinceRequest message. Does not implicitly {@link CMsgClientPICSChangesSinceRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPICSChangesSinceRequest
         * @static
         * @param {ICMsgClientPICSChangesSinceRequest} message CMsgClientPICSChangesSinceRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSChangesSinceRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.since_change_number != null && Object.hasOwnProperty.call(message, "since_change_number"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.since_change_number);
            if (message.send_app_info_changes != null && Object.hasOwnProperty.call(message, "send_app_info_changes"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.send_app_info_changes);
            if (message.send_package_info_changes != null && Object.hasOwnProperty.call(message, "send_package_info_changes"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.send_package_info_changes);
            if (message.num_app_info_cached != null && Object.hasOwnProperty.call(message, "num_app_info_cached"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.num_app_info_cached);
            if (message.num_package_info_cached != null && Object.hasOwnProperty.call(message, "num_package_info_cached"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.num_package_info_cached);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPICSChangesSinceRequest message, length delimited. Does not implicitly {@link CMsgClientPICSChangesSinceRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPICSChangesSinceRequest
         * @static
         * @param {ICMsgClientPICSChangesSinceRequest} message CMsgClientPICSChangesSinceRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSChangesSinceRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPICSChangesSinceRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPICSChangesSinceRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPICSChangesSinceRequest} CMsgClientPICSChangesSinceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSChangesSinceRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSChangesSinceRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.since_change_number = reader.uint32();
                    break;
                case 2:
                    message.send_app_info_changes = reader.bool();
                    break;
                case 3:
                    message.send_package_info_changes = reader.bool();
                    break;
                case 4:
                    message.num_app_info_cached = reader.uint32();
                    break;
                case 5:
                    message.num_package_info_cached = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPICSChangesSinceRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPICSChangesSinceRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPICSChangesSinceRequest} CMsgClientPICSChangesSinceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSChangesSinceRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPICSChangesSinceRequest message.
         * @function verify
         * @memberof CMsgClientPICSChangesSinceRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPICSChangesSinceRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.since_change_number != null && message.hasOwnProperty("since_change_number"))
                if (!$util.isInteger(message.since_change_number))
                    return "since_change_number: integer expected";
            if (message.send_app_info_changes != null && message.hasOwnProperty("send_app_info_changes"))
                if (typeof message.send_app_info_changes !== "boolean")
                    return "send_app_info_changes: boolean expected";
            if (message.send_package_info_changes != null && message.hasOwnProperty("send_package_info_changes"))
                if (typeof message.send_package_info_changes !== "boolean")
                    return "send_package_info_changes: boolean expected";
            if (message.num_app_info_cached != null && message.hasOwnProperty("num_app_info_cached"))
                if (!$util.isInteger(message.num_app_info_cached))
                    return "num_app_info_cached: integer expected";
            if (message.num_package_info_cached != null && message.hasOwnProperty("num_package_info_cached"))
                if (!$util.isInteger(message.num_package_info_cached))
                    return "num_package_info_cached: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPICSChangesSinceRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPICSChangesSinceRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPICSChangesSinceRequest} CMsgClientPICSChangesSinceRequest
         */
        CMsgClientPICSChangesSinceRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPICSChangesSinceRequest)
                return object;
            var message = new $root.CMsgClientPICSChangesSinceRequest();
            if (object.since_change_number != null)
                message.since_change_number = object.since_change_number >>> 0;
            if (object.send_app_info_changes != null)
                message.send_app_info_changes = Boolean(object.send_app_info_changes);
            if (object.send_package_info_changes != null)
                message.send_package_info_changes = Boolean(object.send_package_info_changes);
            if (object.num_app_info_cached != null)
                message.num_app_info_cached = object.num_app_info_cached >>> 0;
            if (object.num_package_info_cached != null)
                message.num_package_info_cached = object.num_package_info_cached >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPICSChangesSinceRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPICSChangesSinceRequest
         * @static
         * @param {CMsgClientPICSChangesSinceRequest} message CMsgClientPICSChangesSinceRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPICSChangesSinceRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.since_change_number = 0;
                object.send_app_info_changes = false;
                object.send_package_info_changes = false;
                object.num_app_info_cached = 0;
                object.num_package_info_cached = 0;
            }
            if (message.since_change_number != null && message.hasOwnProperty("since_change_number"))
                object.since_change_number = message.since_change_number;
            if (message.send_app_info_changes != null && message.hasOwnProperty("send_app_info_changes"))
                object.send_app_info_changes = message.send_app_info_changes;
            if (message.send_package_info_changes != null && message.hasOwnProperty("send_package_info_changes"))
                object.send_package_info_changes = message.send_package_info_changes;
            if (message.num_app_info_cached != null && message.hasOwnProperty("num_app_info_cached"))
                object.num_app_info_cached = message.num_app_info_cached;
            if (message.num_package_info_cached != null && message.hasOwnProperty("num_package_info_cached"))
                object.num_package_info_cached = message.num_package_info_cached;
            return object;
        };
    
        /**
         * Converts this CMsgClientPICSChangesSinceRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientPICSChangesSinceRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPICSChangesSinceRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPICSChangesSinceRequest;
    })();
    
    $root.CMsgClientPICSChangesSinceResponse = (function() {
    
        /**
         * Properties of a CMsgClientPICSChangesSinceResponse.
         * @exports ICMsgClientPICSChangesSinceResponse
         * @interface ICMsgClientPICSChangesSinceResponse
         * @property {number|null} [current_change_number] CMsgClientPICSChangesSinceResponse current_change_number
         * @property {number|null} [since_change_number] CMsgClientPICSChangesSinceResponse since_change_number
         * @property {boolean|null} [force_full_update] CMsgClientPICSChangesSinceResponse force_full_update
         * @property {Array.<CMsgClientPICSChangesSinceResponse.IPackageChange>|null} [package_changes] CMsgClientPICSChangesSinceResponse package_changes
         * @property {Array.<CMsgClientPICSChangesSinceResponse.IAppChange>|null} [app_changes] CMsgClientPICSChangesSinceResponse app_changes
         * @property {boolean|null} [force_full_app_update] CMsgClientPICSChangesSinceResponse force_full_app_update
         * @property {boolean|null} [force_full_package_update] CMsgClientPICSChangesSinceResponse force_full_package_update
         */
    
        /**
         * Constructs a new CMsgClientPICSChangesSinceResponse.
         * @exports CMsgClientPICSChangesSinceResponse
         * @classdesc Represents a CMsgClientPICSChangesSinceResponse.
         * @implements ICMsgClientPICSChangesSinceResponse
         * @constructor
         * @param {ICMsgClientPICSChangesSinceResponse=} [properties] Properties to set
         */
        function CMsgClientPICSChangesSinceResponse(properties) {
            this.package_changes = [];
            this.app_changes = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPICSChangesSinceResponse current_change_number.
         * @member {number} current_change_number
         * @memberof CMsgClientPICSChangesSinceResponse
         * @instance
         */
        CMsgClientPICSChangesSinceResponse.prototype.current_change_number = 0;
    
        /**
         * CMsgClientPICSChangesSinceResponse since_change_number.
         * @member {number} since_change_number
         * @memberof CMsgClientPICSChangesSinceResponse
         * @instance
         */
        CMsgClientPICSChangesSinceResponse.prototype.since_change_number = 0;
    
        /**
         * CMsgClientPICSChangesSinceResponse force_full_update.
         * @member {boolean} force_full_update
         * @memberof CMsgClientPICSChangesSinceResponse
         * @instance
         */
        CMsgClientPICSChangesSinceResponse.prototype.force_full_update = false;
    
        /**
         * CMsgClientPICSChangesSinceResponse package_changes.
         * @member {Array.<CMsgClientPICSChangesSinceResponse.IPackageChange>} package_changes
         * @memberof CMsgClientPICSChangesSinceResponse
         * @instance
         */
        CMsgClientPICSChangesSinceResponse.prototype.package_changes = $util.emptyArray;
    
        /**
         * CMsgClientPICSChangesSinceResponse app_changes.
         * @member {Array.<CMsgClientPICSChangesSinceResponse.IAppChange>} app_changes
         * @memberof CMsgClientPICSChangesSinceResponse
         * @instance
         */
        CMsgClientPICSChangesSinceResponse.prototype.app_changes = $util.emptyArray;
    
        /**
         * CMsgClientPICSChangesSinceResponse force_full_app_update.
         * @member {boolean} force_full_app_update
         * @memberof CMsgClientPICSChangesSinceResponse
         * @instance
         */
        CMsgClientPICSChangesSinceResponse.prototype.force_full_app_update = false;
    
        /**
         * CMsgClientPICSChangesSinceResponse force_full_package_update.
         * @member {boolean} force_full_package_update
         * @memberof CMsgClientPICSChangesSinceResponse
         * @instance
         */
        CMsgClientPICSChangesSinceResponse.prototype.force_full_package_update = false;
    
        /**
         * Creates a new CMsgClientPICSChangesSinceResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientPICSChangesSinceResponse
         * @static
         * @param {ICMsgClientPICSChangesSinceResponse=} [properties] Properties to set
         * @returns {CMsgClientPICSChangesSinceResponse} CMsgClientPICSChangesSinceResponse instance
         */
        CMsgClientPICSChangesSinceResponse.create = function create(properties) {
            return new CMsgClientPICSChangesSinceResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPICSChangesSinceResponse message. Does not implicitly {@link CMsgClientPICSChangesSinceResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPICSChangesSinceResponse
         * @static
         * @param {ICMsgClientPICSChangesSinceResponse} message CMsgClientPICSChangesSinceResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSChangesSinceResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.current_change_number != null && Object.hasOwnProperty.call(message, "current_change_number"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.current_change_number);
            if (message.since_change_number != null && Object.hasOwnProperty.call(message, "since_change_number"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.since_change_number);
            if (message.force_full_update != null && Object.hasOwnProperty.call(message, "force_full_update"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.force_full_update);
            if (message.package_changes != null && message.package_changes.length)
                for (var i = 0; i < message.package_changes.length; ++i)
                    $root.CMsgClientPICSChangesSinceResponse.PackageChange.encode(message.package_changes[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.app_changes != null && message.app_changes.length)
                for (var i = 0; i < message.app_changes.length; ++i)
                    $root.CMsgClientPICSChangesSinceResponse.AppChange.encode(message.app_changes[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.force_full_app_update != null && Object.hasOwnProperty.call(message, "force_full_app_update"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.force_full_app_update);
            if (message.force_full_package_update != null && Object.hasOwnProperty.call(message, "force_full_package_update"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.force_full_package_update);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPICSChangesSinceResponse message, length delimited. Does not implicitly {@link CMsgClientPICSChangesSinceResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPICSChangesSinceResponse
         * @static
         * @param {ICMsgClientPICSChangesSinceResponse} message CMsgClientPICSChangesSinceResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSChangesSinceResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPICSChangesSinceResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPICSChangesSinceResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPICSChangesSinceResponse} CMsgClientPICSChangesSinceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSChangesSinceResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSChangesSinceResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.current_change_number = reader.uint32();
                    break;
                case 2:
                    message.since_change_number = reader.uint32();
                    break;
                case 3:
                    message.force_full_update = reader.bool();
                    break;
                case 4:
                    if (!(message.package_changes && message.package_changes.length))
                        message.package_changes = [];
                    message.package_changes.push($root.CMsgClientPICSChangesSinceResponse.PackageChange.decode(reader, reader.uint32()));
                    break;
                case 5:
                    if (!(message.app_changes && message.app_changes.length))
                        message.app_changes = [];
                    message.app_changes.push($root.CMsgClientPICSChangesSinceResponse.AppChange.decode(reader, reader.uint32()));
                    break;
                case 6:
                    message.force_full_app_update = reader.bool();
                    break;
                case 7:
                    message.force_full_package_update = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPICSChangesSinceResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPICSChangesSinceResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPICSChangesSinceResponse} CMsgClientPICSChangesSinceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSChangesSinceResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPICSChangesSinceResponse message.
         * @function verify
         * @memberof CMsgClientPICSChangesSinceResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPICSChangesSinceResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.current_change_number != null && message.hasOwnProperty("current_change_number"))
                if (!$util.isInteger(message.current_change_number))
                    return "current_change_number: integer expected";
            if (message.since_change_number != null && message.hasOwnProperty("since_change_number"))
                if (!$util.isInteger(message.since_change_number))
                    return "since_change_number: integer expected";
            if (message.force_full_update != null && message.hasOwnProperty("force_full_update"))
                if (typeof message.force_full_update !== "boolean")
                    return "force_full_update: boolean expected";
            if (message.package_changes != null && message.hasOwnProperty("package_changes")) {
                if (!Array.isArray(message.package_changes))
                    return "package_changes: array expected";
                for (var i = 0; i < message.package_changes.length; ++i) {
                    var error = $root.CMsgClientPICSChangesSinceResponse.PackageChange.verify(message.package_changes[i]);
                    if (error)
                        return "package_changes." + error;
                }
            }
            if (message.app_changes != null && message.hasOwnProperty("app_changes")) {
                if (!Array.isArray(message.app_changes))
                    return "app_changes: array expected";
                for (var i = 0; i < message.app_changes.length; ++i) {
                    var error = $root.CMsgClientPICSChangesSinceResponse.AppChange.verify(message.app_changes[i]);
                    if (error)
                        return "app_changes." + error;
                }
            }
            if (message.force_full_app_update != null && message.hasOwnProperty("force_full_app_update"))
                if (typeof message.force_full_app_update !== "boolean")
                    return "force_full_app_update: boolean expected";
            if (message.force_full_package_update != null && message.hasOwnProperty("force_full_package_update"))
                if (typeof message.force_full_package_update !== "boolean")
                    return "force_full_package_update: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPICSChangesSinceResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPICSChangesSinceResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPICSChangesSinceResponse} CMsgClientPICSChangesSinceResponse
         */
        CMsgClientPICSChangesSinceResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPICSChangesSinceResponse)
                return object;
            var message = new $root.CMsgClientPICSChangesSinceResponse();
            if (object.current_change_number != null)
                message.current_change_number = object.current_change_number >>> 0;
            if (object.since_change_number != null)
                message.since_change_number = object.since_change_number >>> 0;
            if (object.force_full_update != null)
                message.force_full_update = Boolean(object.force_full_update);
            if (object.package_changes) {
                if (!Array.isArray(object.package_changes))
                    throw TypeError(".CMsgClientPICSChangesSinceResponse.package_changes: array expected");
                message.package_changes = [];
                for (var i = 0; i < object.package_changes.length; ++i) {
                    if (typeof object.package_changes[i] !== "object")
                        throw TypeError(".CMsgClientPICSChangesSinceResponse.package_changes: object expected");
                    message.package_changes[i] = $root.CMsgClientPICSChangesSinceResponse.PackageChange.fromObject(object.package_changes[i]);
                }
            }
            if (object.app_changes) {
                if (!Array.isArray(object.app_changes))
                    throw TypeError(".CMsgClientPICSChangesSinceResponse.app_changes: array expected");
                message.app_changes = [];
                for (var i = 0; i < object.app_changes.length; ++i) {
                    if (typeof object.app_changes[i] !== "object")
                        throw TypeError(".CMsgClientPICSChangesSinceResponse.app_changes: object expected");
                    message.app_changes[i] = $root.CMsgClientPICSChangesSinceResponse.AppChange.fromObject(object.app_changes[i]);
                }
            }
            if (object.force_full_app_update != null)
                message.force_full_app_update = Boolean(object.force_full_app_update);
            if (object.force_full_package_update != null)
                message.force_full_package_update = Boolean(object.force_full_package_update);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPICSChangesSinceResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPICSChangesSinceResponse
         * @static
         * @param {CMsgClientPICSChangesSinceResponse} message CMsgClientPICSChangesSinceResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPICSChangesSinceResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.package_changes = [];
                object.app_changes = [];
            }
            if (options.defaults) {
                object.current_change_number = 0;
                object.since_change_number = 0;
                object.force_full_update = false;
                object.force_full_app_update = false;
                object.force_full_package_update = false;
            }
            if (message.current_change_number != null && message.hasOwnProperty("current_change_number"))
                object.current_change_number = message.current_change_number;
            if (message.since_change_number != null && message.hasOwnProperty("since_change_number"))
                object.since_change_number = message.since_change_number;
            if (message.force_full_update != null && message.hasOwnProperty("force_full_update"))
                object.force_full_update = message.force_full_update;
            if (message.package_changes && message.package_changes.length) {
                object.package_changes = [];
                for (var j = 0; j < message.package_changes.length; ++j)
                    object.package_changes[j] = $root.CMsgClientPICSChangesSinceResponse.PackageChange.toObject(message.package_changes[j], options);
            }
            if (message.app_changes && message.app_changes.length) {
                object.app_changes = [];
                for (var j = 0; j < message.app_changes.length; ++j)
                    object.app_changes[j] = $root.CMsgClientPICSChangesSinceResponse.AppChange.toObject(message.app_changes[j], options);
            }
            if (message.force_full_app_update != null && message.hasOwnProperty("force_full_app_update"))
                object.force_full_app_update = message.force_full_app_update;
            if (message.force_full_package_update != null && message.hasOwnProperty("force_full_package_update"))
                object.force_full_package_update = message.force_full_package_update;
            return object;
        };
    
        /**
         * Converts this CMsgClientPICSChangesSinceResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientPICSChangesSinceResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPICSChangesSinceResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientPICSChangesSinceResponse.PackageChange = (function() {
    
            /**
             * Properties of a PackageChange.
             * @memberof CMsgClientPICSChangesSinceResponse
             * @interface IPackageChange
             * @property {number|null} [packageid] PackageChange packageid
             * @property {number|null} [change_number] PackageChange change_number
             * @property {boolean|null} [needs_token] PackageChange needs_token
             */
    
            /**
             * Constructs a new PackageChange.
             * @memberof CMsgClientPICSChangesSinceResponse
             * @classdesc Represents a PackageChange.
             * @implements IPackageChange
             * @constructor
             * @param {CMsgClientPICSChangesSinceResponse.IPackageChange=} [properties] Properties to set
             */
            function PackageChange(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PackageChange packageid.
             * @member {number} packageid
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @instance
             */
            PackageChange.prototype.packageid = 0;
    
            /**
             * PackageChange change_number.
             * @member {number} change_number
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @instance
             */
            PackageChange.prototype.change_number = 0;
    
            /**
             * PackageChange needs_token.
             * @member {boolean} needs_token
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @instance
             */
            PackageChange.prototype.needs_token = false;
    
            /**
             * Creates a new PackageChange instance using the specified properties.
             * @function create
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @static
             * @param {CMsgClientPICSChangesSinceResponse.IPackageChange=} [properties] Properties to set
             * @returns {CMsgClientPICSChangesSinceResponse.PackageChange} PackageChange instance
             */
            PackageChange.create = function create(properties) {
                return new PackageChange(properties);
            };
    
            /**
             * Encodes the specified PackageChange message. Does not implicitly {@link CMsgClientPICSChangesSinceResponse.PackageChange.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @static
             * @param {CMsgClientPICSChangesSinceResponse.IPackageChange} message PackageChange message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PackageChange.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.packageid != null && Object.hasOwnProperty.call(message, "packageid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.packageid);
                if (message.change_number != null && Object.hasOwnProperty.call(message, "change_number"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.change_number);
                if (message.needs_token != null && Object.hasOwnProperty.call(message, "needs_token"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.needs_token);
                return writer;
            };
    
            /**
             * Encodes the specified PackageChange message, length delimited. Does not implicitly {@link CMsgClientPICSChangesSinceResponse.PackageChange.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @static
             * @param {CMsgClientPICSChangesSinceResponse.IPackageChange} message PackageChange message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PackageChange.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PackageChange message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPICSChangesSinceResponse.PackageChange} PackageChange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PackageChange.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSChangesSinceResponse.PackageChange();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.packageid = reader.uint32();
                        break;
                    case 2:
                        message.change_number = reader.uint32();
                        break;
                    case 3:
                        message.needs_token = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PackageChange message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPICSChangesSinceResponse.PackageChange} PackageChange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PackageChange.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PackageChange message.
             * @function verify
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PackageChange.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.packageid != null && message.hasOwnProperty("packageid"))
                    if (!$util.isInteger(message.packageid))
                        return "packageid: integer expected";
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    if (!$util.isInteger(message.change_number))
                        return "change_number: integer expected";
                if (message.needs_token != null && message.hasOwnProperty("needs_token"))
                    if (typeof message.needs_token !== "boolean")
                        return "needs_token: boolean expected";
                return null;
            };
    
            /**
             * Creates a PackageChange message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPICSChangesSinceResponse.PackageChange} PackageChange
             */
            PackageChange.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPICSChangesSinceResponse.PackageChange)
                    return object;
                var message = new $root.CMsgClientPICSChangesSinceResponse.PackageChange();
                if (object.packageid != null)
                    message.packageid = object.packageid >>> 0;
                if (object.change_number != null)
                    message.change_number = object.change_number >>> 0;
                if (object.needs_token != null)
                    message.needs_token = Boolean(object.needs_token);
                return message;
            };
    
            /**
             * Creates a plain object from a PackageChange message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @static
             * @param {CMsgClientPICSChangesSinceResponse.PackageChange} message PackageChange
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PackageChange.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.packageid = 0;
                    object.change_number = 0;
                    object.needs_token = false;
                }
                if (message.packageid != null && message.hasOwnProperty("packageid"))
                    object.packageid = message.packageid;
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    object.change_number = message.change_number;
                if (message.needs_token != null && message.hasOwnProperty("needs_token"))
                    object.needs_token = message.needs_token;
                return object;
            };
    
            /**
             * Converts this PackageChange to JSON.
             * @function toJSON
             * @memberof CMsgClientPICSChangesSinceResponse.PackageChange
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PackageChange.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return PackageChange;
        })();
    
        CMsgClientPICSChangesSinceResponse.AppChange = (function() {
    
            /**
             * Properties of an AppChange.
             * @memberof CMsgClientPICSChangesSinceResponse
             * @interface IAppChange
             * @property {number|null} [appid] AppChange appid
             * @property {number|null} [change_number] AppChange change_number
             * @property {boolean|null} [needs_token] AppChange needs_token
             */
    
            /**
             * Constructs a new AppChange.
             * @memberof CMsgClientPICSChangesSinceResponse
             * @classdesc Represents an AppChange.
             * @implements IAppChange
             * @constructor
             * @param {CMsgClientPICSChangesSinceResponse.IAppChange=} [properties] Properties to set
             */
            function AppChange(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AppChange appid.
             * @member {number} appid
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @instance
             */
            AppChange.prototype.appid = 0;
    
            /**
             * AppChange change_number.
             * @member {number} change_number
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @instance
             */
            AppChange.prototype.change_number = 0;
    
            /**
             * AppChange needs_token.
             * @member {boolean} needs_token
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @instance
             */
            AppChange.prototype.needs_token = false;
    
            /**
             * Creates a new AppChange instance using the specified properties.
             * @function create
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @static
             * @param {CMsgClientPICSChangesSinceResponse.IAppChange=} [properties] Properties to set
             * @returns {CMsgClientPICSChangesSinceResponse.AppChange} AppChange instance
             */
            AppChange.create = function create(properties) {
                return new AppChange(properties);
            };
    
            /**
             * Encodes the specified AppChange message. Does not implicitly {@link CMsgClientPICSChangesSinceResponse.AppChange.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @static
             * @param {CMsgClientPICSChangesSinceResponse.IAppChange} message AppChange message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppChange.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
                if (message.change_number != null && Object.hasOwnProperty.call(message, "change_number"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.change_number);
                if (message.needs_token != null && Object.hasOwnProperty.call(message, "needs_token"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.needs_token);
                return writer;
            };
    
            /**
             * Encodes the specified AppChange message, length delimited. Does not implicitly {@link CMsgClientPICSChangesSinceResponse.AppChange.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @static
             * @param {CMsgClientPICSChangesSinceResponse.IAppChange} message AppChange message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppChange.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppChange message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPICSChangesSinceResponse.AppChange} AppChange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppChange.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSChangesSinceResponse.AppChange();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.appid = reader.uint32();
                        break;
                    case 2:
                        message.change_number = reader.uint32();
                        break;
                    case 3:
                        message.needs_token = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppChange message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPICSChangesSinceResponse.AppChange} AppChange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppChange.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppChange message.
             * @function verify
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppChange.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appid != null && message.hasOwnProperty("appid"))
                    if (!$util.isInteger(message.appid))
                        return "appid: integer expected";
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    if (!$util.isInteger(message.change_number))
                        return "change_number: integer expected";
                if (message.needs_token != null && message.hasOwnProperty("needs_token"))
                    if (typeof message.needs_token !== "boolean")
                        return "needs_token: boolean expected";
                return null;
            };
    
            /**
             * Creates an AppChange message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPICSChangesSinceResponse.AppChange} AppChange
             */
            AppChange.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPICSChangesSinceResponse.AppChange)
                    return object;
                var message = new $root.CMsgClientPICSChangesSinceResponse.AppChange();
                if (object.appid != null)
                    message.appid = object.appid >>> 0;
                if (object.change_number != null)
                    message.change_number = object.change_number >>> 0;
                if (object.needs_token != null)
                    message.needs_token = Boolean(object.needs_token);
                return message;
            };
    
            /**
             * Creates a plain object from an AppChange message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @static
             * @param {CMsgClientPICSChangesSinceResponse.AppChange} message AppChange
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppChange.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.appid = 0;
                    object.change_number = 0;
                    object.needs_token = false;
                }
                if (message.appid != null && message.hasOwnProperty("appid"))
                    object.appid = message.appid;
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    object.change_number = message.change_number;
                if (message.needs_token != null && message.hasOwnProperty("needs_token"))
                    object.needs_token = message.needs_token;
                return object;
            };
    
            /**
             * Converts this AppChange to JSON.
             * @function toJSON
             * @memberof CMsgClientPICSChangesSinceResponse.AppChange
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppChange.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return AppChange;
        })();
    
        return CMsgClientPICSChangesSinceResponse;
    })();
    
    $root.CMsgClientPICSProductInfoRequest = (function() {
    
        /**
         * Properties of a CMsgClientPICSProductInfoRequest.
         * @exports ICMsgClientPICSProductInfoRequest
         * @interface ICMsgClientPICSProductInfoRequest
         * @property {Array.<CMsgClientPICSProductInfoRequest.IPackageInfo>|null} [packages] CMsgClientPICSProductInfoRequest packages
         * @property {Array.<CMsgClientPICSProductInfoRequest.IAppInfo>|null} [apps] CMsgClientPICSProductInfoRequest apps
         * @property {boolean|null} [meta_data_only] CMsgClientPICSProductInfoRequest meta_data_only
         * @property {number|null} [num_prev_failed] CMsgClientPICSProductInfoRequest num_prev_failed
         * @property {number|null} [supports_package_tokens] CMsgClientPICSProductInfoRequest supports_package_tokens
         */
    
        /**
         * Constructs a new CMsgClientPICSProductInfoRequest.
         * @exports CMsgClientPICSProductInfoRequest
         * @classdesc Represents a CMsgClientPICSProductInfoRequest.
         * @implements ICMsgClientPICSProductInfoRequest
         * @constructor
         * @param {ICMsgClientPICSProductInfoRequest=} [properties] Properties to set
         */
        function CMsgClientPICSProductInfoRequest(properties) {
            this.packages = [];
            this.apps = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPICSProductInfoRequest packages.
         * @member {Array.<CMsgClientPICSProductInfoRequest.IPackageInfo>} packages
         * @memberof CMsgClientPICSProductInfoRequest
         * @instance
         */
        CMsgClientPICSProductInfoRequest.prototype.packages = $util.emptyArray;
    
        /**
         * CMsgClientPICSProductInfoRequest apps.
         * @member {Array.<CMsgClientPICSProductInfoRequest.IAppInfo>} apps
         * @memberof CMsgClientPICSProductInfoRequest
         * @instance
         */
        CMsgClientPICSProductInfoRequest.prototype.apps = $util.emptyArray;
    
        /**
         * CMsgClientPICSProductInfoRequest meta_data_only.
         * @member {boolean} meta_data_only
         * @memberof CMsgClientPICSProductInfoRequest
         * @instance
         */
        CMsgClientPICSProductInfoRequest.prototype.meta_data_only = false;
    
        /**
         * CMsgClientPICSProductInfoRequest num_prev_failed.
         * @member {number} num_prev_failed
         * @memberof CMsgClientPICSProductInfoRequest
         * @instance
         */
        CMsgClientPICSProductInfoRequest.prototype.num_prev_failed = 0;
    
        /**
         * CMsgClientPICSProductInfoRequest supports_package_tokens.
         * @member {number} supports_package_tokens
         * @memberof CMsgClientPICSProductInfoRequest
         * @instance
         */
        CMsgClientPICSProductInfoRequest.prototype.supports_package_tokens = 0;
    
        /**
         * Creates a new CMsgClientPICSProductInfoRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientPICSProductInfoRequest
         * @static
         * @param {ICMsgClientPICSProductInfoRequest=} [properties] Properties to set
         * @returns {CMsgClientPICSProductInfoRequest} CMsgClientPICSProductInfoRequest instance
         */
        CMsgClientPICSProductInfoRequest.create = function create(properties) {
            return new CMsgClientPICSProductInfoRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPICSProductInfoRequest message. Does not implicitly {@link CMsgClientPICSProductInfoRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPICSProductInfoRequest
         * @static
         * @param {ICMsgClientPICSProductInfoRequest} message CMsgClientPICSProductInfoRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSProductInfoRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.packages != null && message.packages.length)
                for (var i = 0; i < message.packages.length; ++i)
                    $root.CMsgClientPICSProductInfoRequest.PackageInfo.encode(message.packages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.apps != null && message.apps.length)
                for (var i = 0; i < message.apps.length; ++i)
                    $root.CMsgClientPICSProductInfoRequest.AppInfo.encode(message.apps[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.meta_data_only != null && Object.hasOwnProperty.call(message, "meta_data_only"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.meta_data_only);
            if (message.num_prev_failed != null && Object.hasOwnProperty.call(message, "num_prev_failed"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.num_prev_failed);
            if (message.supports_package_tokens != null && Object.hasOwnProperty.call(message, "supports_package_tokens"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.supports_package_tokens);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPICSProductInfoRequest message, length delimited. Does not implicitly {@link CMsgClientPICSProductInfoRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPICSProductInfoRequest
         * @static
         * @param {ICMsgClientPICSProductInfoRequest} message CMsgClientPICSProductInfoRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSProductInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPICSProductInfoRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPICSProductInfoRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPICSProductInfoRequest} CMsgClientPICSProductInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSProductInfoRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSProductInfoRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.packages && message.packages.length))
                        message.packages = [];
                    message.packages.push($root.CMsgClientPICSProductInfoRequest.PackageInfo.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.apps && message.apps.length))
                        message.apps = [];
                    message.apps.push($root.CMsgClientPICSProductInfoRequest.AppInfo.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.meta_data_only = reader.bool();
                    break;
                case 4:
                    message.num_prev_failed = reader.uint32();
                    break;
                case 5:
                    message.supports_package_tokens = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPICSProductInfoRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPICSProductInfoRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPICSProductInfoRequest} CMsgClientPICSProductInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSProductInfoRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPICSProductInfoRequest message.
         * @function verify
         * @memberof CMsgClientPICSProductInfoRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPICSProductInfoRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.packages != null && message.hasOwnProperty("packages")) {
                if (!Array.isArray(message.packages))
                    return "packages: array expected";
                for (var i = 0; i < message.packages.length; ++i) {
                    var error = $root.CMsgClientPICSProductInfoRequest.PackageInfo.verify(message.packages[i]);
                    if (error)
                        return "packages." + error;
                }
            }
            if (message.apps != null && message.hasOwnProperty("apps")) {
                if (!Array.isArray(message.apps))
                    return "apps: array expected";
                for (var i = 0; i < message.apps.length; ++i) {
                    var error = $root.CMsgClientPICSProductInfoRequest.AppInfo.verify(message.apps[i]);
                    if (error)
                        return "apps." + error;
                }
            }
            if (message.meta_data_only != null && message.hasOwnProperty("meta_data_only"))
                if (typeof message.meta_data_only !== "boolean")
                    return "meta_data_only: boolean expected";
            if (message.num_prev_failed != null && message.hasOwnProperty("num_prev_failed"))
                if (!$util.isInteger(message.num_prev_failed))
                    return "num_prev_failed: integer expected";
            if (message.supports_package_tokens != null && message.hasOwnProperty("supports_package_tokens"))
                if (!$util.isInteger(message.supports_package_tokens))
                    return "supports_package_tokens: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPICSProductInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPICSProductInfoRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPICSProductInfoRequest} CMsgClientPICSProductInfoRequest
         */
        CMsgClientPICSProductInfoRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPICSProductInfoRequest)
                return object;
            var message = new $root.CMsgClientPICSProductInfoRequest();
            if (object.packages) {
                if (!Array.isArray(object.packages))
                    throw TypeError(".CMsgClientPICSProductInfoRequest.packages: array expected");
                message.packages = [];
                for (var i = 0; i < object.packages.length; ++i) {
                    if (typeof object.packages[i] !== "object")
                        throw TypeError(".CMsgClientPICSProductInfoRequest.packages: object expected");
                    message.packages[i] = $root.CMsgClientPICSProductInfoRequest.PackageInfo.fromObject(object.packages[i]);
                }
            }
            if (object.apps) {
                if (!Array.isArray(object.apps))
                    throw TypeError(".CMsgClientPICSProductInfoRequest.apps: array expected");
                message.apps = [];
                for (var i = 0; i < object.apps.length; ++i) {
                    if (typeof object.apps[i] !== "object")
                        throw TypeError(".CMsgClientPICSProductInfoRequest.apps: object expected");
                    message.apps[i] = $root.CMsgClientPICSProductInfoRequest.AppInfo.fromObject(object.apps[i]);
                }
            }
            if (object.meta_data_only != null)
                message.meta_data_only = Boolean(object.meta_data_only);
            if (object.num_prev_failed != null)
                message.num_prev_failed = object.num_prev_failed >>> 0;
            if (object.supports_package_tokens != null)
                message.supports_package_tokens = object.supports_package_tokens >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPICSProductInfoRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPICSProductInfoRequest
         * @static
         * @param {CMsgClientPICSProductInfoRequest} message CMsgClientPICSProductInfoRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPICSProductInfoRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.packages = [];
                object.apps = [];
            }
            if (options.defaults) {
                object.meta_data_only = false;
                object.num_prev_failed = 0;
                object.supports_package_tokens = 0;
            }
            if (message.packages && message.packages.length) {
                object.packages = [];
                for (var j = 0; j < message.packages.length; ++j)
                    object.packages[j] = $root.CMsgClientPICSProductInfoRequest.PackageInfo.toObject(message.packages[j], options);
            }
            if (message.apps && message.apps.length) {
                object.apps = [];
                for (var j = 0; j < message.apps.length; ++j)
                    object.apps[j] = $root.CMsgClientPICSProductInfoRequest.AppInfo.toObject(message.apps[j], options);
            }
            if (message.meta_data_only != null && message.hasOwnProperty("meta_data_only"))
                object.meta_data_only = message.meta_data_only;
            if (message.num_prev_failed != null && message.hasOwnProperty("num_prev_failed"))
                object.num_prev_failed = message.num_prev_failed;
            if (message.supports_package_tokens != null && message.hasOwnProperty("supports_package_tokens"))
                object.supports_package_tokens = message.supports_package_tokens;
            return object;
        };
    
        /**
         * Converts this CMsgClientPICSProductInfoRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientPICSProductInfoRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPICSProductInfoRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientPICSProductInfoRequest.AppInfo = (function() {
    
            /**
             * Properties of an AppInfo.
             * @memberof CMsgClientPICSProductInfoRequest
             * @interface IAppInfo
             * @property {number|null} [appid] AppInfo appid
             * @property {number|Long|null} [access_token] AppInfo access_token
             * @property {boolean|null} [only_public] AppInfo only_public
             */
    
            /**
             * Constructs a new AppInfo.
             * @memberof CMsgClientPICSProductInfoRequest
             * @classdesc Represents an AppInfo.
             * @implements IAppInfo
             * @constructor
             * @param {CMsgClientPICSProductInfoRequest.IAppInfo=} [properties] Properties to set
             */
            function AppInfo(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AppInfo appid.
             * @member {number} appid
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @instance
             */
            AppInfo.prototype.appid = 0;
    
            /**
             * AppInfo access_token.
             * @member {number|Long} access_token
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @instance
             */
            AppInfo.prototype.access_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * AppInfo only_public.
             * @member {boolean} only_public
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @instance
             */
            AppInfo.prototype.only_public = false;
    
            /**
             * Creates a new AppInfo instance using the specified properties.
             * @function create
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @static
             * @param {CMsgClientPICSProductInfoRequest.IAppInfo=} [properties] Properties to set
             * @returns {CMsgClientPICSProductInfoRequest.AppInfo} AppInfo instance
             */
            AppInfo.create = function create(properties) {
                return new AppInfo(properties);
            };
    
            /**
             * Encodes the specified AppInfo message. Does not implicitly {@link CMsgClientPICSProductInfoRequest.AppInfo.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @static
             * @param {CMsgClientPICSProductInfoRequest.IAppInfo} message AppInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
                if (message.access_token != null && Object.hasOwnProperty.call(message, "access_token"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.access_token);
                if (message.only_public != null && Object.hasOwnProperty.call(message, "only_public"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.only_public);
                return writer;
            };
    
            /**
             * Encodes the specified AppInfo message, length delimited. Does not implicitly {@link CMsgClientPICSProductInfoRequest.AppInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @static
             * @param {CMsgClientPICSProductInfoRequest.IAppInfo} message AppInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppInfo message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPICSProductInfoRequest.AppInfo} AppInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSProductInfoRequest.AppInfo();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.appid = reader.uint32();
                        break;
                    case 2:
                        message.access_token = reader.uint64();
                        break;
                    case 3:
                        message.only_public = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPICSProductInfoRequest.AppInfo} AppInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppInfo message.
             * @function verify
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appid != null && message.hasOwnProperty("appid"))
                    if (!$util.isInteger(message.appid))
                        return "appid: integer expected";
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (!$util.isInteger(message.access_token) && !(message.access_token && $util.isInteger(message.access_token.low) && $util.isInteger(message.access_token.high)))
                        return "access_token: integer|Long expected";
                if (message.only_public != null && message.hasOwnProperty("only_public"))
                    if (typeof message.only_public !== "boolean")
                        return "only_public: boolean expected";
                return null;
            };
    
            /**
             * Creates an AppInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPICSProductInfoRequest.AppInfo} AppInfo
             */
            AppInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPICSProductInfoRequest.AppInfo)
                    return object;
                var message = new $root.CMsgClientPICSProductInfoRequest.AppInfo();
                if (object.appid != null)
                    message.appid = object.appid >>> 0;
                if (object.access_token != null)
                    if ($util.Long)
                        (message.access_token = $util.Long.fromValue(object.access_token)).unsigned = true;
                    else if (typeof object.access_token === "string")
                        message.access_token = parseInt(object.access_token, 10);
                    else if (typeof object.access_token === "number")
                        message.access_token = object.access_token;
                    else if (typeof object.access_token === "object")
                        message.access_token = new $util.LongBits(object.access_token.low >>> 0, object.access_token.high >>> 0).toNumber(true);
                if (object.only_public != null)
                    message.only_public = Boolean(object.only_public);
                return message;
            };
    
            /**
             * Creates a plain object from an AppInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @static
             * @param {CMsgClientPICSProductInfoRequest.AppInfo} message AppInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.appid = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.access_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.access_token = options.longs === String ? "0" : 0;
                    object.only_public = false;
                }
                if (message.appid != null && message.hasOwnProperty("appid"))
                    object.appid = message.appid;
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (typeof message.access_token === "number")
                        object.access_token = options.longs === String ? String(message.access_token) : message.access_token;
                    else
                        object.access_token = options.longs === String ? $util.Long.prototype.toString.call(message.access_token) : options.longs === Number ? new $util.LongBits(message.access_token.low >>> 0, message.access_token.high >>> 0).toNumber(true) : message.access_token;
                if (message.only_public != null && message.hasOwnProperty("only_public"))
                    object.only_public = message.only_public;
                return object;
            };
    
            /**
             * Converts this AppInfo to JSON.
             * @function toJSON
             * @memberof CMsgClientPICSProductInfoRequest.AppInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return AppInfo;
        })();
    
        CMsgClientPICSProductInfoRequest.PackageInfo = (function() {
    
            /**
             * Properties of a PackageInfo.
             * @memberof CMsgClientPICSProductInfoRequest
             * @interface IPackageInfo
             * @property {number|null} [packageid] PackageInfo packageid
             * @property {number|Long|null} [access_token] PackageInfo access_token
             */
    
            /**
             * Constructs a new PackageInfo.
             * @memberof CMsgClientPICSProductInfoRequest
             * @classdesc Represents a PackageInfo.
             * @implements IPackageInfo
             * @constructor
             * @param {CMsgClientPICSProductInfoRequest.IPackageInfo=} [properties] Properties to set
             */
            function PackageInfo(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PackageInfo packageid.
             * @member {number} packageid
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @instance
             */
            PackageInfo.prototype.packageid = 0;
    
            /**
             * PackageInfo access_token.
             * @member {number|Long} access_token
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @instance
             */
            PackageInfo.prototype.access_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new PackageInfo instance using the specified properties.
             * @function create
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @static
             * @param {CMsgClientPICSProductInfoRequest.IPackageInfo=} [properties] Properties to set
             * @returns {CMsgClientPICSProductInfoRequest.PackageInfo} PackageInfo instance
             */
            PackageInfo.create = function create(properties) {
                return new PackageInfo(properties);
            };
    
            /**
             * Encodes the specified PackageInfo message. Does not implicitly {@link CMsgClientPICSProductInfoRequest.PackageInfo.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @static
             * @param {CMsgClientPICSProductInfoRequest.IPackageInfo} message PackageInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PackageInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.packageid != null && Object.hasOwnProperty.call(message, "packageid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.packageid);
                if (message.access_token != null && Object.hasOwnProperty.call(message, "access_token"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.access_token);
                return writer;
            };
    
            /**
             * Encodes the specified PackageInfo message, length delimited. Does not implicitly {@link CMsgClientPICSProductInfoRequest.PackageInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @static
             * @param {CMsgClientPICSProductInfoRequest.IPackageInfo} message PackageInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PackageInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PackageInfo message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPICSProductInfoRequest.PackageInfo} PackageInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PackageInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSProductInfoRequest.PackageInfo();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.packageid = reader.uint32();
                        break;
                    case 2:
                        message.access_token = reader.uint64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PackageInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPICSProductInfoRequest.PackageInfo} PackageInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PackageInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PackageInfo message.
             * @function verify
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PackageInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.packageid != null && message.hasOwnProperty("packageid"))
                    if (!$util.isInteger(message.packageid))
                        return "packageid: integer expected";
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (!$util.isInteger(message.access_token) && !(message.access_token && $util.isInteger(message.access_token.low) && $util.isInteger(message.access_token.high)))
                        return "access_token: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a PackageInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPICSProductInfoRequest.PackageInfo} PackageInfo
             */
            PackageInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPICSProductInfoRequest.PackageInfo)
                    return object;
                var message = new $root.CMsgClientPICSProductInfoRequest.PackageInfo();
                if (object.packageid != null)
                    message.packageid = object.packageid >>> 0;
                if (object.access_token != null)
                    if ($util.Long)
                        (message.access_token = $util.Long.fromValue(object.access_token)).unsigned = true;
                    else if (typeof object.access_token === "string")
                        message.access_token = parseInt(object.access_token, 10);
                    else if (typeof object.access_token === "number")
                        message.access_token = object.access_token;
                    else if (typeof object.access_token === "object")
                        message.access_token = new $util.LongBits(object.access_token.low >>> 0, object.access_token.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from a PackageInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @static
             * @param {CMsgClientPICSProductInfoRequest.PackageInfo} message PackageInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PackageInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.packageid = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.access_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.access_token = options.longs === String ? "0" : 0;
                }
                if (message.packageid != null && message.hasOwnProperty("packageid"))
                    object.packageid = message.packageid;
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (typeof message.access_token === "number")
                        object.access_token = options.longs === String ? String(message.access_token) : message.access_token;
                    else
                        object.access_token = options.longs === String ? $util.Long.prototype.toString.call(message.access_token) : options.longs === Number ? new $util.LongBits(message.access_token.low >>> 0, message.access_token.high >>> 0).toNumber(true) : message.access_token;
                return object;
            };
    
            /**
             * Converts this PackageInfo to JSON.
             * @function toJSON
             * @memberof CMsgClientPICSProductInfoRequest.PackageInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PackageInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return PackageInfo;
        })();
    
        return CMsgClientPICSProductInfoRequest;
    })();
    
    $root.CMsgClientPICSProductInfoResponse = (function() {
    
        /**
         * Properties of a CMsgClientPICSProductInfoResponse.
         * @exports ICMsgClientPICSProductInfoResponse
         * @interface ICMsgClientPICSProductInfoResponse
         * @property {Array.<CMsgClientPICSProductInfoResponse.IAppInfo>|null} [apps] CMsgClientPICSProductInfoResponse apps
         * @property {Array.<number>|null} [unknown_appids] CMsgClientPICSProductInfoResponse unknown_appids
         * @property {Array.<CMsgClientPICSProductInfoResponse.IPackageInfo>|null} [packages] CMsgClientPICSProductInfoResponse packages
         * @property {Array.<number>|null} [unknown_packageids] CMsgClientPICSProductInfoResponse unknown_packageids
         * @property {boolean|null} [meta_data_only] CMsgClientPICSProductInfoResponse meta_data_only
         * @property {boolean|null} [response_pending] CMsgClientPICSProductInfoResponse response_pending
         * @property {number|null} [http_min_size] CMsgClientPICSProductInfoResponse http_min_size
         * @property {string|null} [http_host] CMsgClientPICSProductInfoResponse http_host
         */
    
        /**
         * Constructs a new CMsgClientPICSProductInfoResponse.
         * @exports CMsgClientPICSProductInfoResponse
         * @classdesc Represents a CMsgClientPICSProductInfoResponse.
         * @implements ICMsgClientPICSProductInfoResponse
         * @constructor
         * @param {ICMsgClientPICSProductInfoResponse=} [properties] Properties to set
         */
        function CMsgClientPICSProductInfoResponse(properties) {
            this.apps = [];
            this.unknown_appids = [];
            this.packages = [];
            this.unknown_packageids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPICSProductInfoResponse apps.
         * @member {Array.<CMsgClientPICSProductInfoResponse.IAppInfo>} apps
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         */
        CMsgClientPICSProductInfoResponse.prototype.apps = $util.emptyArray;
    
        /**
         * CMsgClientPICSProductInfoResponse unknown_appids.
         * @member {Array.<number>} unknown_appids
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         */
        CMsgClientPICSProductInfoResponse.prototype.unknown_appids = $util.emptyArray;
    
        /**
         * CMsgClientPICSProductInfoResponse packages.
         * @member {Array.<CMsgClientPICSProductInfoResponse.IPackageInfo>} packages
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         */
        CMsgClientPICSProductInfoResponse.prototype.packages = $util.emptyArray;
    
        /**
         * CMsgClientPICSProductInfoResponse unknown_packageids.
         * @member {Array.<number>} unknown_packageids
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         */
        CMsgClientPICSProductInfoResponse.prototype.unknown_packageids = $util.emptyArray;
    
        /**
         * CMsgClientPICSProductInfoResponse meta_data_only.
         * @member {boolean} meta_data_only
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         */
        CMsgClientPICSProductInfoResponse.prototype.meta_data_only = false;
    
        /**
         * CMsgClientPICSProductInfoResponse response_pending.
         * @member {boolean} response_pending
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         */
        CMsgClientPICSProductInfoResponse.prototype.response_pending = false;
    
        /**
         * CMsgClientPICSProductInfoResponse http_min_size.
         * @member {number} http_min_size
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         */
        CMsgClientPICSProductInfoResponse.prototype.http_min_size = 0;
    
        /**
         * CMsgClientPICSProductInfoResponse http_host.
         * @member {string} http_host
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         */
        CMsgClientPICSProductInfoResponse.prototype.http_host = "";
    
        /**
         * Creates a new CMsgClientPICSProductInfoResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientPICSProductInfoResponse
         * @static
         * @param {ICMsgClientPICSProductInfoResponse=} [properties] Properties to set
         * @returns {CMsgClientPICSProductInfoResponse} CMsgClientPICSProductInfoResponse instance
         */
        CMsgClientPICSProductInfoResponse.create = function create(properties) {
            return new CMsgClientPICSProductInfoResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPICSProductInfoResponse message. Does not implicitly {@link CMsgClientPICSProductInfoResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPICSProductInfoResponse
         * @static
         * @param {ICMsgClientPICSProductInfoResponse} message CMsgClientPICSProductInfoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSProductInfoResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.apps != null && message.apps.length)
                for (var i = 0; i < message.apps.length; ++i)
                    $root.CMsgClientPICSProductInfoResponse.AppInfo.encode(message.apps[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.unknown_appids != null && message.unknown_appids.length)
                for (var i = 0; i < message.unknown_appids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.unknown_appids[i]);
            if (message.packages != null && message.packages.length)
                for (var i = 0; i < message.packages.length; ++i)
                    $root.CMsgClientPICSProductInfoResponse.PackageInfo.encode(message.packages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.unknown_packageids != null && message.unknown_packageids.length)
                for (var i = 0; i < message.unknown_packageids.length; ++i)
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.unknown_packageids[i]);
            if (message.meta_data_only != null && Object.hasOwnProperty.call(message, "meta_data_only"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.meta_data_only);
            if (message.response_pending != null && Object.hasOwnProperty.call(message, "response_pending"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.response_pending);
            if (message.http_min_size != null && Object.hasOwnProperty.call(message, "http_min_size"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.http_min_size);
            if (message.http_host != null && Object.hasOwnProperty.call(message, "http_host"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.http_host);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPICSProductInfoResponse message, length delimited. Does not implicitly {@link CMsgClientPICSProductInfoResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPICSProductInfoResponse
         * @static
         * @param {ICMsgClientPICSProductInfoResponse} message CMsgClientPICSProductInfoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSProductInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPICSProductInfoResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPICSProductInfoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPICSProductInfoResponse} CMsgClientPICSProductInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSProductInfoResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSProductInfoResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.apps && message.apps.length))
                        message.apps = [];
                    message.apps.push($root.CMsgClientPICSProductInfoResponse.AppInfo.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.unknown_appids && message.unknown_appids.length))
                        message.unknown_appids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.unknown_appids.push(reader.uint32());
                    } else
                        message.unknown_appids.push(reader.uint32());
                    break;
                case 3:
                    if (!(message.packages && message.packages.length))
                        message.packages = [];
                    message.packages.push($root.CMsgClientPICSProductInfoResponse.PackageInfo.decode(reader, reader.uint32()));
                    break;
                case 4:
                    if (!(message.unknown_packageids && message.unknown_packageids.length))
                        message.unknown_packageids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.unknown_packageids.push(reader.uint32());
                    } else
                        message.unknown_packageids.push(reader.uint32());
                    break;
                case 5:
                    message.meta_data_only = reader.bool();
                    break;
                case 6:
                    message.response_pending = reader.bool();
                    break;
                case 7:
                    message.http_min_size = reader.uint32();
                    break;
                case 8:
                    message.http_host = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPICSProductInfoResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPICSProductInfoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPICSProductInfoResponse} CMsgClientPICSProductInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSProductInfoResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPICSProductInfoResponse message.
         * @function verify
         * @memberof CMsgClientPICSProductInfoResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPICSProductInfoResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.apps != null && message.hasOwnProperty("apps")) {
                if (!Array.isArray(message.apps))
                    return "apps: array expected";
                for (var i = 0; i < message.apps.length; ++i) {
                    var error = $root.CMsgClientPICSProductInfoResponse.AppInfo.verify(message.apps[i]);
                    if (error)
                        return "apps." + error;
                }
            }
            if (message.unknown_appids != null && message.hasOwnProperty("unknown_appids")) {
                if (!Array.isArray(message.unknown_appids))
                    return "unknown_appids: array expected";
                for (var i = 0; i < message.unknown_appids.length; ++i)
                    if (!$util.isInteger(message.unknown_appids[i]))
                        return "unknown_appids: integer[] expected";
            }
            if (message.packages != null && message.hasOwnProperty("packages")) {
                if (!Array.isArray(message.packages))
                    return "packages: array expected";
                for (var i = 0; i < message.packages.length; ++i) {
                    var error = $root.CMsgClientPICSProductInfoResponse.PackageInfo.verify(message.packages[i]);
                    if (error)
                        return "packages." + error;
                }
            }
            if (message.unknown_packageids != null && message.hasOwnProperty("unknown_packageids")) {
                if (!Array.isArray(message.unknown_packageids))
                    return "unknown_packageids: array expected";
                for (var i = 0; i < message.unknown_packageids.length; ++i)
                    if (!$util.isInteger(message.unknown_packageids[i]))
                        return "unknown_packageids: integer[] expected";
            }
            if (message.meta_data_only != null && message.hasOwnProperty("meta_data_only"))
                if (typeof message.meta_data_only !== "boolean")
                    return "meta_data_only: boolean expected";
            if (message.response_pending != null && message.hasOwnProperty("response_pending"))
                if (typeof message.response_pending !== "boolean")
                    return "response_pending: boolean expected";
            if (message.http_min_size != null && message.hasOwnProperty("http_min_size"))
                if (!$util.isInteger(message.http_min_size))
                    return "http_min_size: integer expected";
            if (message.http_host != null && message.hasOwnProperty("http_host"))
                if (!$util.isString(message.http_host))
                    return "http_host: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientPICSProductInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPICSProductInfoResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPICSProductInfoResponse} CMsgClientPICSProductInfoResponse
         */
        CMsgClientPICSProductInfoResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPICSProductInfoResponse)
                return object;
            var message = new $root.CMsgClientPICSProductInfoResponse();
            if (object.apps) {
                if (!Array.isArray(object.apps))
                    throw TypeError(".CMsgClientPICSProductInfoResponse.apps: array expected");
                message.apps = [];
                for (var i = 0; i < object.apps.length; ++i) {
                    if (typeof object.apps[i] !== "object")
                        throw TypeError(".CMsgClientPICSProductInfoResponse.apps: object expected");
                    message.apps[i] = $root.CMsgClientPICSProductInfoResponse.AppInfo.fromObject(object.apps[i]);
                }
            }
            if (object.unknown_appids) {
                if (!Array.isArray(object.unknown_appids))
                    throw TypeError(".CMsgClientPICSProductInfoResponse.unknown_appids: array expected");
                message.unknown_appids = [];
                for (var i = 0; i < object.unknown_appids.length; ++i)
                    message.unknown_appids[i] = object.unknown_appids[i] >>> 0;
            }
            if (object.packages) {
                if (!Array.isArray(object.packages))
                    throw TypeError(".CMsgClientPICSProductInfoResponse.packages: array expected");
                message.packages = [];
                for (var i = 0; i < object.packages.length; ++i) {
                    if (typeof object.packages[i] !== "object")
                        throw TypeError(".CMsgClientPICSProductInfoResponse.packages: object expected");
                    message.packages[i] = $root.CMsgClientPICSProductInfoResponse.PackageInfo.fromObject(object.packages[i]);
                }
            }
            if (object.unknown_packageids) {
                if (!Array.isArray(object.unknown_packageids))
                    throw TypeError(".CMsgClientPICSProductInfoResponse.unknown_packageids: array expected");
                message.unknown_packageids = [];
                for (var i = 0; i < object.unknown_packageids.length; ++i)
                    message.unknown_packageids[i] = object.unknown_packageids[i] >>> 0;
            }
            if (object.meta_data_only != null)
                message.meta_data_only = Boolean(object.meta_data_only);
            if (object.response_pending != null)
                message.response_pending = Boolean(object.response_pending);
            if (object.http_min_size != null)
                message.http_min_size = object.http_min_size >>> 0;
            if (object.http_host != null)
                message.http_host = String(object.http_host);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPICSProductInfoResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPICSProductInfoResponse
         * @static
         * @param {CMsgClientPICSProductInfoResponse} message CMsgClientPICSProductInfoResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPICSProductInfoResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.apps = [];
                object.unknown_appids = [];
                object.packages = [];
                object.unknown_packageids = [];
            }
            if (options.defaults) {
                object.meta_data_only = false;
                object.response_pending = false;
                object.http_min_size = 0;
                object.http_host = "";
            }
            if (message.apps && message.apps.length) {
                object.apps = [];
                for (var j = 0; j < message.apps.length; ++j)
                    object.apps[j] = $root.CMsgClientPICSProductInfoResponse.AppInfo.toObject(message.apps[j], options);
            }
            if (message.unknown_appids && message.unknown_appids.length) {
                object.unknown_appids = [];
                for (var j = 0; j < message.unknown_appids.length; ++j)
                    object.unknown_appids[j] = message.unknown_appids[j];
            }
            if (message.packages && message.packages.length) {
                object.packages = [];
                for (var j = 0; j < message.packages.length; ++j)
                    object.packages[j] = $root.CMsgClientPICSProductInfoResponse.PackageInfo.toObject(message.packages[j], options);
            }
            if (message.unknown_packageids && message.unknown_packageids.length) {
                object.unknown_packageids = [];
                for (var j = 0; j < message.unknown_packageids.length; ++j)
                    object.unknown_packageids[j] = message.unknown_packageids[j];
            }
            if (message.meta_data_only != null && message.hasOwnProperty("meta_data_only"))
                object.meta_data_only = message.meta_data_only;
            if (message.response_pending != null && message.hasOwnProperty("response_pending"))
                object.response_pending = message.response_pending;
            if (message.http_min_size != null && message.hasOwnProperty("http_min_size"))
                object.http_min_size = message.http_min_size;
            if (message.http_host != null && message.hasOwnProperty("http_host"))
                object.http_host = message.http_host;
            return object;
        };
    
        /**
         * Converts this CMsgClientPICSProductInfoResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientPICSProductInfoResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPICSProductInfoResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientPICSProductInfoResponse.AppInfo = (function() {
    
            /**
             * Properties of an AppInfo.
             * @memberof CMsgClientPICSProductInfoResponse
             * @interface IAppInfo
             * @property {number|null} [appid] AppInfo appid
             * @property {number|null} [change_number] AppInfo change_number
             * @property {boolean|null} [missing_token] AppInfo missing_token
             * @property {Uint8Array|null} [sha] AppInfo sha
             * @property {Uint8Array|null} [buffer] AppInfo buffer
             * @property {boolean|null} [only_public] AppInfo only_public
             * @property {number|null} [size] AppInfo size
             */
    
            /**
             * Constructs a new AppInfo.
             * @memberof CMsgClientPICSProductInfoResponse
             * @classdesc Represents an AppInfo.
             * @implements IAppInfo
             * @constructor
             * @param {CMsgClientPICSProductInfoResponse.IAppInfo=} [properties] Properties to set
             */
            function AppInfo(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AppInfo appid.
             * @member {number} appid
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @instance
             */
            AppInfo.prototype.appid = 0;
    
            /**
             * AppInfo change_number.
             * @member {number} change_number
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @instance
             */
            AppInfo.prototype.change_number = 0;
    
            /**
             * AppInfo missing_token.
             * @member {boolean} missing_token
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @instance
             */
            AppInfo.prototype.missing_token = false;
    
            /**
             * AppInfo sha.
             * @member {Uint8Array} sha
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @instance
             */
            AppInfo.prototype.sha = $util.newBuffer([]);
    
            /**
             * AppInfo buffer.
             * @member {Uint8Array} buffer
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @instance
             */
            AppInfo.prototype.buffer = $util.newBuffer([]);
    
            /**
             * AppInfo only_public.
             * @member {boolean} only_public
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @instance
             */
            AppInfo.prototype.only_public = false;
    
            /**
             * AppInfo size.
             * @member {number} size
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @instance
             */
            AppInfo.prototype.size = 0;
    
            /**
             * Creates a new AppInfo instance using the specified properties.
             * @function create
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @static
             * @param {CMsgClientPICSProductInfoResponse.IAppInfo=} [properties] Properties to set
             * @returns {CMsgClientPICSProductInfoResponse.AppInfo} AppInfo instance
             */
            AppInfo.create = function create(properties) {
                return new AppInfo(properties);
            };
    
            /**
             * Encodes the specified AppInfo message. Does not implicitly {@link CMsgClientPICSProductInfoResponse.AppInfo.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @static
             * @param {CMsgClientPICSProductInfoResponse.IAppInfo} message AppInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
                if (message.change_number != null && Object.hasOwnProperty.call(message, "change_number"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.change_number);
                if (message.missing_token != null && Object.hasOwnProperty.call(message, "missing_token"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.missing_token);
                if (message.sha != null && Object.hasOwnProperty.call(message, "sha"))
                    writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.sha);
                if (message.buffer != null && Object.hasOwnProperty.call(message, "buffer"))
                    writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.buffer);
                if (message.only_public != null && Object.hasOwnProperty.call(message, "only_public"))
                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.only_public);
                if (message.size != null && Object.hasOwnProperty.call(message, "size"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.size);
                return writer;
            };
    
            /**
             * Encodes the specified AppInfo message, length delimited. Does not implicitly {@link CMsgClientPICSProductInfoResponse.AppInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @static
             * @param {CMsgClientPICSProductInfoResponse.IAppInfo} message AppInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppInfo message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPICSProductInfoResponse.AppInfo} AppInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSProductInfoResponse.AppInfo();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.appid = reader.uint32();
                        break;
                    case 2:
                        message.change_number = reader.uint32();
                        break;
                    case 3:
                        message.missing_token = reader.bool();
                        break;
                    case 4:
                        message.sha = reader.bytes();
                        break;
                    case 5:
                        message.buffer = reader.bytes();
                        break;
                    case 6:
                        message.only_public = reader.bool();
                        break;
                    case 7:
                        message.size = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPICSProductInfoResponse.AppInfo} AppInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppInfo message.
             * @function verify
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appid != null && message.hasOwnProperty("appid"))
                    if (!$util.isInteger(message.appid))
                        return "appid: integer expected";
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    if (!$util.isInteger(message.change_number))
                        return "change_number: integer expected";
                if (message.missing_token != null && message.hasOwnProperty("missing_token"))
                    if (typeof message.missing_token !== "boolean")
                        return "missing_token: boolean expected";
                if (message.sha != null && message.hasOwnProperty("sha"))
                    if (!(message.sha && typeof message.sha.length === "number" || $util.isString(message.sha)))
                        return "sha: buffer expected";
                if (message.buffer != null && message.hasOwnProperty("buffer"))
                    if (!(message.buffer && typeof message.buffer.length === "number" || $util.isString(message.buffer)))
                        return "buffer: buffer expected";
                if (message.only_public != null && message.hasOwnProperty("only_public"))
                    if (typeof message.only_public !== "boolean")
                        return "only_public: boolean expected";
                if (message.size != null && message.hasOwnProperty("size"))
                    if (!$util.isInteger(message.size))
                        return "size: integer expected";
                return null;
            };
    
            /**
             * Creates an AppInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPICSProductInfoResponse.AppInfo} AppInfo
             */
            AppInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPICSProductInfoResponse.AppInfo)
                    return object;
                var message = new $root.CMsgClientPICSProductInfoResponse.AppInfo();
                if (object.appid != null)
                    message.appid = object.appid >>> 0;
                if (object.change_number != null)
                    message.change_number = object.change_number >>> 0;
                if (object.missing_token != null)
                    message.missing_token = Boolean(object.missing_token);
                if (object.sha != null)
                    if (typeof object.sha === "string")
                        $util.base64.decode(object.sha, message.sha = $util.newBuffer($util.base64.length(object.sha)), 0);
                    else if (object.sha.length)
                        message.sha = object.sha;
                if (object.buffer != null)
                    if (typeof object.buffer === "string")
                        $util.base64.decode(object.buffer, message.buffer = $util.newBuffer($util.base64.length(object.buffer)), 0);
                    else if (object.buffer.length)
                        message.buffer = object.buffer;
                if (object.only_public != null)
                    message.only_public = Boolean(object.only_public);
                if (object.size != null)
                    message.size = object.size >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from an AppInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @static
             * @param {CMsgClientPICSProductInfoResponse.AppInfo} message AppInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.appid = 0;
                    object.change_number = 0;
                    object.missing_token = false;
                    if (options.bytes === String)
                        object.sha = "";
                    else {
                        object.sha = [];
                        if (options.bytes !== Array)
                            object.sha = $util.newBuffer(object.sha);
                    }
                    if (options.bytes === String)
                        object.buffer = "";
                    else {
                        object.buffer = [];
                        if (options.bytes !== Array)
                            object.buffer = $util.newBuffer(object.buffer);
                    }
                    object.only_public = false;
                    object.size = 0;
                }
                if (message.appid != null && message.hasOwnProperty("appid"))
                    object.appid = message.appid;
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    object.change_number = message.change_number;
                if (message.missing_token != null && message.hasOwnProperty("missing_token"))
                    object.missing_token = message.missing_token;
                if (message.sha != null && message.hasOwnProperty("sha"))
                    object.sha = options.bytes === String ? $util.base64.encode(message.sha, 0, message.sha.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha) : message.sha;
                if (message.buffer != null && message.hasOwnProperty("buffer"))
                    object.buffer = options.bytes === String ? $util.base64.encode(message.buffer, 0, message.buffer.length) : options.bytes === Array ? Array.prototype.slice.call(message.buffer) : message.buffer;
                if (message.only_public != null && message.hasOwnProperty("only_public"))
                    object.only_public = message.only_public;
                if (message.size != null && message.hasOwnProperty("size"))
                    object.size = message.size;
                return object;
            };
    
            /**
             * Converts this AppInfo to JSON.
             * @function toJSON
             * @memberof CMsgClientPICSProductInfoResponse.AppInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return AppInfo;
        })();
    
        CMsgClientPICSProductInfoResponse.PackageInfo = (function() {
    
            /**
             * Properties of a PackageInfo.
             * @memberof CMsgClientPICSProductInfoResponse
             * @interface IPackageInfo
             * @property {number|null} [packageid] PackageInfo packageid
             * @property {number|null} [change_number] PackageInfo change_number
             * @property {boolean|null} [missing_token] PackageInfo missing_token
             * @property {Uint8Array|null} [sha] PackageInfo sha
             * @property {Uint8Array|null} [buffer] PackageInfo buffer
             * @property {number|null} [size] PackageInfo size
             */
    
            /**
             * Constructs a new PackageInfo.
             * @memberof CMsgClientPICSProductInfoResponse
             * @classdesc Represents a PackageInfo.
             * @implements IPackageInfo
             * @constructor
             * @param {CMsgClientPICSProductInfoResponse.IPackageInfo=} [properties] Properties to set
             */
            function PackageInfo(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PackageInfo packageid.
             * @member {number} packageid
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @instance
             */
            PackageInfo.prototype.packageid = 0;
    
            /**
             * PackageInfo change_number.
             * @member {number} change_number
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @instance
             */
            PackageInfo.prototype.change_number = 0;
    
            /**
             * PackageInfo missing_token.
             * @member {boolean} missing_token
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @instance
             */
            PackageInfo.prototype.missing_token = false;
    
            /**
             * PackageInfo sha.
             * @member {Uint8Array} sha
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @instance
             */
            PackageInfo.prototype.sha = $util.newBuffer([]);
    
            /**
             * PackageInfo buffer.
             * @member {Uint8Array} buffer
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @instance
             */
            PackageInfo.prototype.buffer = $util.newBuffer([]);
    
            /**
             * PackageInfo size.
             * @member {number} size
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @instance
             */
            PackageInfo.prototype.size = 0;
    
            /**
             * Creates a new PackageInfo instance using the specified properties.
             * @function create
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @static
             * @param {CMsgClientPICSProductInfoResponse.IPackageInfo=} [properties] Properties to set
             * @returns {CMsgClientPICSProductInfoResponse.PackageInfo} PackageInfo instance
             */
            PackageInfo.create = function create(properties) {
                return new PackageInfo(properties);
            };
    
            /**
             * Encodes the specified PackageInfo message. Does not implicitly {@link CMsgClientPICSProductInfoResponse.PackageInfo.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @static
             * @param {CMsgClientPICSProductInfoResponse.IPackageInfo} message PackageInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PackageInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.packageid != null && Object.hasOwnProperty.call(message, "packageid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.packageid);
                if (message.change_number != null && Object.hasOwnProperty.call(message, "change_number"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.change_number);
                if (message.missing_token != null && Object.hasOwnProperty.call(message, "missing_token"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.missing_token);
                if (message.sha != null && Object.hasOwnProperty.call(message, "sha"))
                    writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.sha);
                if (message.buffer != null && Object.hasOwnProperty.call(message, "buffer"))
                    writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.buffer);
                if (message.size != null && Object.hasOwnProperty.call(message, "size"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.size);
                return writer;
            };
    
            /**
             * Encodes the specified PackageInfo message, length delimited. Does not implicitly {@link CMsgClientPICSProductInfoResponse.PackageInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @static
             * @param {CMsgClientPICSProductInfoResponse.IPackageInfo} message PackageInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PackageInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PackageInfo message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPICSProductInfoResponse.PackageInfo} PackageInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PackageInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSProductInfoResponse.PackageInfo();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.packageid = reader.uint32();
                        break;
                    case 2:
                        message.change_number = reader.uint32();
                        break;
                    case 3:
                        message.missing_token = reader.bool();
                        break;
                    case 4:
                        message.sha = reader.bytes();
                        break;
                    case 5:
                        message.buffer = reader.bytes();
                        break;
                    case 6:
                        message.size = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PackageInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPICSProductInfoResponse.PackageInfo} PackageInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PackageInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PackageInfo message.
             * @function verify
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PackageInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.packageid != null && message.hasOwnProperty("packageid"))
                    if (!$util.isInteger(message.packageid))
                        return "packageid: integer expected";
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    if (!$util.isInteger(message.change_number))
                        return "change_number: integer expected";
                if (message.missing_token != null && message.hasOwnProperty("missing_token"))
                    if (typeof message.missing_token !== "boolean")
                        return "missing_token: boolean expected";
                if (message.sha != null && message.hasOwnProperty("sha"))
                    if (!(message.sha && typeof message.sha.length === "number" || $util.isString(message.sha)))
                        return "sha: buffer expected";
                if (message.buffer != null && message.hasOwnProperty("buffer"))
                    if (!(message.buffer && typeof message.buffer.length === "number" || $util.isString(message.buffer)))
                        return "buffer: buffer expected";
                if (message.size != null && message.hasOwnProperty("size"))
                    if (!$util.isInteger(message.size))
                        return "size: integer expected";
                return null;
            };
    
            /**
             * Creates a PackageInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPICSProductInfoResponse.PackageInfo} PackageInfo
             */
            PackageInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPICSProductInfoResponse.PackageInfo)
                    return object;
                var message = new $root.CMsgClientPICSProductInfoResponse.PackageInfo();
                if (object.packageid != null)
                    message.packageid = object.packageid >>> 0;
                if (object.change_number != null)
                    message.change_number = object.change_number >>> 0;
                if (object.missing_token != null)
                    message.missing_token = Boolean(object.missing_token);
                if (object.sha != null)
                    if (typeof object.sha === "string")
                        $util.base64.decode(object.sha, message.sha = $util.newBuffer($util.base64.length(object.sha)), 0);
                    else if (object.sha.length)
                        message.sha = object.sha;
                if (object.buffer != null)
                    if (typeof object.buffer === "string")
                        $util.base64.decode(object.buffer, message.buffer = $util.newBuffer($util.base64.length(object.buffer)), 0);
                    else if (object.buffer.length)
                        message.buffer = object.buffer;
                if (object.size != null)
                    message.size = object.size >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a PackageInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @static
             * @param {CMsgClientPICSProductInfoResponse.PackageInfo} message PackageInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PackageInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.packageid = 0;
                    object.change_number = 0;
                    object.missing_token = false;
                    if (options.bytes === String)
                        object.sha = "";
                    else {
                        object.sha = [];
                        if (options.bytes !== Array)
                            object.sha = $util.newBuffer(object.sha);
                    }
                    if (options.bytes === String)
                        object.buffer = "";
                    else {
                        object.buffer = [];
                        if (options.bytes !== Array)
                            object.buffer = $util.newBuffer(object.buffer);
                    }
                    object.size = 0;
                }
                if (message.packageid != null && message.hasOwnProperty("packageid"))
                    object.packageid = message.packageid;
                if (message.change_number != null && message.hasOwnProperty("change_number"))
                    object.change_number = message.change_number;
                if (message.missing_token != null && message.hasOwnProperty("missing_token"))
                    object.missing_token = message.missing_token;
                if (message.sha != null && message.hasOwnProperty("sha"))
                    object.sha = options.bytes === String ? $util.base64.encode(message.sha, 0, message.sha.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha) : message.sha;
                if (message.buffer != null && message.hasOwnProperty("buffer"))
                    object.buffer = options.bytes === String ? $util.base64.encode(message.buffer, 0, message.buffer.length) : options.bytes === Array ? Array.prototype.slice.call(message.buffer) : message.buffer;
                if (message.size != null && message.hasOwnProperty("size"))
                    object.size = message.size;
                return object;
            };
    
            /**
             * Converts this PackageInfo to JSON.
             * @function toJSON
             * @memberof CMsgClientPICSProductInfoResponse.PackageInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PackageInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return PackageInfo;
        })();
    
        return CMsgClientPICSProductInfoResponse;
    })();
    
    $root.CMsgClientPICSAccessTokenRequest = (function() {
    
        /**
         * Properties of a CMsgClientPICSAccessTokenRequest.
         * @exports ICMsgClientPICSAccessTokenRequest
         * @interface ICMsgClientPICSAccessTokenRequest
         * @property {Array.<number>|null} [packageids] CMsgClientPICSAccessTokenRequest packageids
         * @property {Array.<number>|null} [appids] CMsgClientPICSAccessTokenRequest appids
         */
    
        /**
         * Constructs a new CMsgClientPICSAccessTokenRequest.
         * @exports CMsgClientPICSAccessTokenRequest
         * @classdesc Represents a CMsgClientPICSAccessTokenRequest.
         * @implements ICMsgClientPICSAccessTokenRequest
         * @constructor
         * @param {ICMsgClientPICSAccessTokenRequest=} [properties] Properties to set
         */
        function CMsgClientPICSAccessTokenRequest(properties) {
            this.packageids = [];
            this.appids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPICSAccessTokenRequest packageids.
         * @member {Array.<number>} packageids
         * @memberof CMsgClientPICSAccessTokenRequest
         * @instance
         */
        CMsgClientPICSAccessTokenRequest.prototype.packageids = $util.emptyArray;
    
        /**
         * CMsgClientPICSAccessTokenRequest appids.
         * @member {Array.<number>} appids
         * @memberof CMsgClientPICSAccessTokenRequest
         * @instance
         */
        CMsgClientPICSAccessTokenRequest.prototype.appids = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientPICSAccessTokenRequest instance using the specified properties.
         * @function create
         * @memberof CMsgClientPICSAccessTokenRequest
         * @static
         * @param {ICMsgClientPICSAccessTokenRequest=} [properties] Properties to set
         * @returns {CMsgClientPICSAccessTokenRequest} CMsgClientPICSAccessTokenRequest instance
         */
        CMsgClientPICSAccessTokenRequest.create = function create(properties) {
            return new CMsgClientPICSAccessTokenRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPICSAccessTokenRequest message. Does not implicitly {@link CMsgClientPICSAccessTokenRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPICSAccessTokenRequest
         * @static
         * @param {ICMsgClientPICSAccessTokenRequest} message CMsgClientPICSAccessTokenRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSAccessTokenRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.packageids != null && message.packageids.length)
                for (var i = 0; i < message.packageids.length; ++i)
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.packageids[i]);
            if (message.appids != null && message.appids.length)
                for (var i = 0; i < message.appids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.appids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPICSAccessTokenRequest message, length delimited. Does not implicitly {@link CMsgClientPICSAccessTokenRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPICSAccessTokenRequest
         * @static
         * @param {ICMsgClientPICSAccessTokenRequest} message CMsgClientPICSAccessTokenRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSAccessTokenRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPICSAccessTokenRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPICSAccessTokenRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPICSAccessTokenRequest} CMsgClientPICSAccessTokenRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSAccessTokenRequest.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSAccessTokenRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.packageids && message.packageids.length))
                        message.packageids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.packageids.push(reader.uint32());
                    } else
                        message.packageids.push(reader.uint32());
                    break;
                case 2:
                    if (!(message.appids && message.appids.length))
                        message.appids = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.appids.push(reader.uint32());
                    } else
                        message.appids.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPICSAccessTokenRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPICSAccessTokenRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPICSAccessTokenRequest} CMsgClientPICSAccessTokenRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSAccessTokenRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPICSAccessTokenRequest message.
         * @function verify
         * @memberof CMsgClientPICSAccessTokenRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPICSAccessTokenRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.packageids != null && message.hasOwnProperty("packageids")) {
                if (!Array.isArray(message.packageids))
                    return "packageids: array expected";
                for (var i = 0; i < message.packageids.length; ++i)
                    if (!$util.isInteger(message.packageids[i]))
                        return "packageids: integer[] expected";
            }
            if (message.appids != null && message.hasOwnProperty("appids")) {
                if (!Array.isArray(message.appids))
                    return "appids: array expected";
                for (var i = 0; i < message.appids.length; ++i)
                    if (!$util.isInteger(message.appids[i]))
                        return "appids: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientPICSAccessTokenRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPICSAccessTokenRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPICSAccessTokenRequest} CMsgClientPICSAccessTokenRequest
         */
        CMsgClientPICSAccessTokenRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPICSAccessTokenRequest)
                return object;
            var message = new $root.CMsgClientPICSAccessTokenRequest();
            if (object.packageids) {
                if (!Array.isArray(object.packageids))
                    throw TypeError(".CMsgClientPICSAccessTokenRequest.packageids: array expected");
                message.packageids = [];
                for (var i = 0; i < object.packageids.length; ++i)
                    message.packageids[i] = object.packageids[i] >>> 0;
            }
            if (object.appids) {
                if (!Array.isArray(object.appids))
                    throw TypeError(".CMsgClientPICSAccessTokenRequest.appids: array expected");
                message.appids = [];
                for (var i = 0; i < object.appids.length; ++i)
                    message.appids[i] = object.appids[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPICSAccessTokenRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPICSAccessTokenRequest
         * @static
         * @param {CMsgClientPICSAccessTokenRequest} message CMsgClientPICSAccessTokenRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPICSAccessTokenRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.packageids = [];
                object.appids = [];
            }
            if (message.packageids && message.packageids.length) {
                object.packageids = [];
                for (var j = 0; j < message.packageids.length; ++j)
                    object.packageids[j] = message.packageids[j];
            }
            if (message.appids && message.appids.length) {
                object.appids = [];
                for (var j = 0; j < message.appids.length; ++j)
                    object.appids[j] = message.appids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientPICSAccessTokenRequest to JSON.
         * @function toJSON
         * @memberof CMsgClientPICSAccessTokenRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPICSAccessTokenRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientPICSAccessTokenRequest;
    })();
    
    $root.CMsgClientPICSAccessTokenResponse = (function() {
    
        /**
         * Properties of a CMsgClientPICSAccessTokenResponse.
         * @exports ICMsgClientPICSAccessTokenResponse
         * @interface ICMsgClientPICSAccessTokenResponse
         * @property {Array.<CMsgClientPICSAccessTokenResponse.IPackageToken>|null} [package_access_tokens] CMsgClientPICSAccessTokenResponse package_access_tokens
         * @property {Array.<number>|null} [package_denied_tokens] CMsgClientPICSAccessTokenResponse package_denied_tokens
         * @property {Array.<CMsgClientPICSAccessTokenResponse.IAppToken>|null} [app_access_tokens] CMsgClientPICSAccessTokenResponse app_access_tokens
         * @property {Array.<number>|null} [app_denied_tokens] CMsgClientPICSAccessTokenResponse app_denied_tokens
         */
    
        /**
         * Constructs a new CMsgClientPICSAccessTokenResponse.
         * @exports CMsgClientPICSAccessTokenResponse
         * @classdesc Represents a CMsgClientPICSAccessTokenResponse.
         * @implements ICMsgClientPICSAccessTokenResponse
         * @constructor
         * @param {ICMsgClientPICSAccessTokenResponse=} [properties] Properties to set
         */
        function CMsgClientPICSAccessTokenResponse(properties) {
            this.package_access_tokens = [];
            this.package_denied_tokens = [];
            this.app_access_tokens = [];
            this.app_denied_tokens = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientPICSAccessTokenResponse package_access_tokens.
         * @member {Array.<CMsgClientPICSAccessTokenResponse.IPackageToken>} package_access_tokens
         * @memberof CMsgClientPICSAccessTokenResponse
         * @instance
         */
        CMsgClientPICSAccessTokenResponse.prototype.package_access_tokens = $util.emptyArray;
    
        /**
         * CMsgClientPICSAccessTokenResponse package_denied_tokens.
         * @member {Array.<number>} package_denied_tokens
         * @memberof CMsgClientPICSAccessTokenResponse
         * @instance
         */
        CMsgClientPICSAccessTokenResponse.prototype.package_denied_tokens = $util.emptyArray;
    
        /**
         * CMsgClientPICSAccessTokenResponse app_access_tokens.
         * @member {Array.<CMsgClientPICSAccessTokenResponse.IAppToken>} app_access_tokens
         * @memberof CMsgClientPICSAccessTokenResponse
         * @instance
         */
        CMsgClientPICSAccessTokenResponse.prototype.app_access_tokens = $util.emptyArray;
    
        /**
         * CMsgClientPICSAccessTokenResponse app_denied_tokens.
         * @member {Array.<number>} app_denied_tokens
         * @memberof CMsgClientPICSAccessTokenResponse
         * @instance
         */
        CMsgClientPICSAccessTokenResponse.prototype.app_denied_tokens = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientPICSAccessTokenResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientPICSAccessTokenResponse
         * @static
         * @param {ICMsgClientPICSAccessTokenResponse=} [properties] Properties to set
         * @returns {CMsgClientPICSAccessTokenResponse} CMsgClientPICSAccessTokenResponse instance
         */
        CMsgClientPICSAccessTokenResponse.create = function create(properties) {
            return new CMsgClientPICSAccessTokenResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientPICSAccessTokenResponse message. Does not implicitly {@link CMsgClientPICSAccessTokenResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientPICSAccessTokenResponse
         * @static
         * @param {ICMsgClientPICSAccessTokenResponse} message CMsgClientPICSAccessTokenResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSAccessTokenResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.package_access_tokens != null && message.package_access_tokens.length)
                for (var i = 0; i < message.package_access_tokens.length; ++i)
                    $root.CMsgClientPICSAccessTokenResponse.PackageToken.encode(message.package_access_tokens[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.package_denied_tokens != null && message.package_denied_tokens.length)
                for (var i = 0; i < message.package_denied_tokens.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.package_denied_tokens[i]);
            if (message.app_access_tokens != null && message.app_access_tokens.length)
                for (var i = 0; i < message.app_access_tokens.length; ++i)
                    $root.CMsgClientPICSAccessTokenResponse.AppToken.encode(message.app_access_tokens[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.app_denied_tokens != null && message.app_denied_tokens.length)
                for (var i = 0; i < message.app_denied_tokens.length; ++i)
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.app_denied_tokens[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientPICSAccessTokenResponse message, length delimited. Does not implicitly {@link CMsgClientPICSAccessTokenResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientPICSAccessTokenResponse
         * @static
         * @param {ICMsgClientPICSAccessTokenResponse} message CMsgClientPICSAccessTokenResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientPICSAccessTokenResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientPICSAccessTokenResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientPICSAccessTokenResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientPICSAccessTokenResponse} CMsgClientPICSAccessTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSAccessTokenResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSAccessTokenResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    if (!(message.package_access_tokens && message.package_access_tokens.length))
                        message.package_access_tokens = [];
                    message.package_access_tokens.push($root.CMsgClientPICSAccessTokenResponse.PackageToken.decode(reader, reader.uint32()));
                    break;
                case 2:
                    if (!(message.package_denied_tokens && message.package_denied_tokens.length))
                        message.package_denied_tokens = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.package_denied_tokens.push(reader.uint32());
                    } else
                        message.package_denied_tokens.push(reader.uint32());
                    break;
                case 3:
                    if (!(message.app_access_tokens && message.app_access_tokens.length))
                        message.app_access_tokens = [];
                    message.app_access_tokens.push($root.CMsgClientPICSAccessTokenResponse.AppToken.decode(reader, reader.uint32()));
                    break;
                case 4:
                    if (!(message.app_denied_tokens && message.app_denied_tokens.length))
                        message.app_denied_tokens = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.app_denied_tokens.push(reader.uint32());
                    } else
                        message.app_denied_tokens.push(reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientPICSAccessTokenResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientPICSAccessTokenResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientPICSAccessTokenResponse} CMsgClientPICSAccessTokenResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientPICSAccessTokenResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientPICSAccessTokenResponse message.
         * @function verify
         * @memberof CMsgClientPICSAccessTokenResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientPICSAccessTokenResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.package_access_tokens != null && message.hasOwnProperty("package_access_tokens")) {
                if (!Array.isArray(message.package_access_tokens))
                    return "package_access_tokens: array expected";
                for (var i = 0; i < message.package_access_tokens.length; ++i) {
                    var error = $root.CMsgClientPICSAccessTokenResponse.PackageToken.verify(message.package_access_tokens[i]);
                    if (error)
                        return "package_access_tokens." + error;
                }
            }
            if (message.package_denied_tokens != null && message.hasOwnProperty("package_denied_tokens")) {
                if (!Array.isArray(message.package_denied_tokens))
                    return "package_denied_tokens: array expected";
                for (var i = 0; i < message.package_denied_tokens.length; ++i)
                    if (!$util.isInteger(message.package_denied_tokens[i]))
                        return "package_denied_tokens: integer[] expected";
            }
            if (message.app_access_tokens != null && message.hasOwnProperty("app_access_tokens")) {
                if (!Array.isArray(message.app_access_tokens))
                    return "app_access_tokens: array expected";
                for (var i = 0; i < message.app_access_tokens.length; ++i) {
                    var error = $root.CMsgClientPICSAccessTokenResponse.AppToken.verify(message.app_access_tokens[i]);
                    if (error)
                        return "app_access_tokens." + error;
                }
            }
            if (message.app_denied_tokens != null && message.hasOwnProperty("app_denied_tokens")) {
                if (!Array.isArray(message.app_denied_tokens))
                    return "app_denied_tokens: array expected";
                for (var i = 0; i < message.app_denied_tokens.length; ++i)
                    if (!$util.isInteger(message.app_denied_tokens[i]))
                        return "app_denied_tokens: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientPICSAccessTokenResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientPICSAccessTokenResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientPICSAccessTokenResponse} CMsgClientPICSAccessTokenResponse
         */
        CMsgClientPICSAccessTokenResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientPICSAccessTokenResponse)
                return object;
            var message = new $root.CMsgClientPICSAccessTokenResponse();
            if (object.package_access_tokens) {
                if (!Array.isArray(object.package_access_tokens))
                    throw TypeError(".CMsgClientPICSAccessTokenResponse.package_access_tokens: array expected");
                message.package_access_tokens = [];
                for (var i = 0; i < object.package_access_tokens.length; ++i) {
                    if (typeof object.package_access_tokens[i] !== "object")
                        throw TypeError(".CMsgClientPICSAccessTokenResponse.package_access_tokens: object expected");
                    message.package_access_tokens[i] = $root.CMsgClientPICSAccessTokenResponse.PackageToken.fromObject(object.package_access_tokens[i]);
                }
            }
            if (object.package_denied_tokens) {
                if (!Array.isArray(object.package_denied_tokens))
                    throw TypeError(".CMsgClientPICSAccessTokenResponse.package_denied_tokens: array expected");
                message.package_denied_tokens = [];
                for (var i = 0; i < object.package_denied_tokens.length; ++i)
                    message.package_denied_tokens[i] = object.package_denied_tokens[i] >>> 0;
            }
            if (object.app_access_tokens) {
                if (!Array.isArray(object.app_access_tokens))
                    throw TypeError(".CMsgClientPICSAccessTokenResponse.app_access_tokens: array expected");
                message.app_access_tokens = [];
                for (var i = 0; i < object.app_access_tokens.length; ++i) {
                    if (typeof object.app_access_tokens[i] !== "object")
                        throw TypeError(".CMsgClientPICSAccessTokenResponse.app_access_tokens: object expected");
                    message.app_access_tokens[i] = $root.CMsgClientPICSAccessTokenResponse.AppToken.fromObject(object.app_access_tokens[i]);
                }
            }
            if (object.app_denied_tokens) {
                if (!Array.isArray(object.app_denied_tokens))
                    throw TypeError(".CMsgClientPICSAccessTokenResponse.app_denied_tokens: array expected");
                message.app_denied_tokens = [];
                for (var i = 0; i < object.app_denied_tokens.length; ++i)
                    message.app_denied_tokens[i] = object.app_denied_tokens[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientPICSAccessTokenResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientPICSAccessTokenResponse
         * @static
         * @param {CMsgClientPICSAccessTokenResponse} message CMsgClientPICSAccessTokenResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientPICSAccessTokenResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.package_access_tokens = [];
                object.package_denied_tokens = [];
                object.app_access_tokens = [];
                object.app_denied_tokens = [];
            }
            if (message.package_access_tokens && message.package_access_tokens.length) {
                object.package_access_tokens = [];
                for (var j = 0; j < message.package_access_tokens.length; ++j)
                    object.package_access_tokens[j] = $root.CMsgClientPICSAccessTokenResponse.PackageToken.toObject(message.package_access_tokens[j], options);
            }
            if (message.package_denied_tokens && message.package_denied_tokens.length) {
                object.package_denied_tokens = [];
                for (var j = 0; j < message.package_denied_tokens.length; ++j)
                    object.package_denied_tokens[j] = message.package_denied_tokens[j];
            }
            if (message.app_access_tokens && message.app_access_tokens.length) {
                object.app_access_tokens = [];
                for (var j = 0; j < message.app_access_tokens.length; ++j)
                    object.app_access_tokens[j] = $root.CMsgClientPICSAccessTokenResponse.AppToken.toObject(message.app_access_tokens[j], options);
            }
            if (message.app_denied_tokens && message.app_denied_tokens.length) {
                object.app_denied_tokens = [];
                for (var j = 0; j < message.app_denied_tokens.length; ++j)
                    object.app_denied_tokens[j] = message.app_denied_tokens[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientPICSAccessTokenResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientPICSAccessTokenResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientPICSAccessTokenResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientPICSAccessTokenResponse.PackageToken = (function() {
    
            /**
             * Properties of a PackageToken.
             * @memberof CMsgClientPICSAccessTokenResponse
             * @interface IPackageToken
             * @property {number|null} [packageid] PackageToken packageid
             * @property {number|Long|null} [access_token] PackageToken access_token
             */
    
            /**
             * Constructs a new PackageToken.
             * @memberof CMsgClientPICSAccessTokenResponse
             * @classdesc Represents a PackageToken.
             * @implements IPackageToken
             * @constructor
             * @param {CMsgClientPICSAccessTokenResponse.IPackageToken=} [properties] Properties to set
             */
            function PackageToken(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PackageToken packageid.
             * @member {number} packageid
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @instance
             */
            PackageToken.prototype.packageid = 0;
    
            /**
             * PackageToken access_token.
             * @member {number|Long} access_token
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @instance
             */
            PackageToken.prototype.access_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new PackageToken instance using the specified properties.
             * @function create
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @static
             * @param {CMsgClientPICSAccessTokenResponse.IPackageToken=} [properties] Properties to set
             * @returns {CMsgClientPICSAccessTokenResponse.PackageToken} PackageToken instance
             */
            PackageToken.create = function create(properties) {
                return new PackageToken(properties);
            };
    
            /**
             * Encodes the specified PackageToken message. Does not implicitly {@link CMsgClientPICSAccessTokenResponse.PackageToken.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @static
             * @param {CMsgClientPICSAccessTokenResponse.IPackageToken} message PackageToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PackageToken.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.packageid != null && Object.hasOwnProperty.call(message, "packageid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.packageid);
                if (message.access_token != null && Object.hasOwnProperty.call(message, "access_token"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.access_token);
                return writer;
            };
    
            /**
             * Encodes the specified PackageToken message, length delimited. Does not implicitly {@link CMsgClientPICSAccessTokenResponse.PackageToken.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @static
             * @param {CMsgClientPICSAccessTokenResponse.IPackageToken} message PackageToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PackageToken.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PackageToken message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPICSAccessTokenResponse.PackageToken} PackageToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PackageToken.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSAccessTokenResponse.PackageToken();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.packageid = reader.uint32();
                        break;
                    case 2:
                        message.access_token = reader.uint64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PackageToken message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPICSAccessTokenResponse.PackageToken} PackageToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PackageToken.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PackageToken message.
             * @function verify
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PackageToken.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.packageid != null && message.hasOwnProperty("packageid"))
                    if (!$util.isInteger(message.packageid))
                        return "packageid: integer expected";
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (!$util.isInteger(message.access_token) && !(message.access_token && $util.isInteger(message.access_token.low) && $util.isInteger(message.access_token.high)))
                        return "access_token: integer|Long expected";
                return null;
            };
    
            /**
             * Creates a PackageToken message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPICSAccessTokenResponse.PackageToken} PackageToken
             */
            PackageToken.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPICSAccessTokenResponse.PackageToken)
                    return object;
                var message = new $root.CMsgClientPICSAccessTokenResponse.PackageToken();
                if (object.packageid != null)
                    message.packageid = object.packageid >>> 0;
                if (object.access_token != null)
                    if ($util.Long)
                        (message.access_token = $util.Long.fromValue(object.access_token)).unsigned = true;
                    else if (typeof object.access_token === "string")
                        message.access_token = parseInt(object.access_token, 10);
                    else if (typeof object.access_token === "number")
                        message.access_token = object.access_token;
                    else if (typeof object.access_token === "object")
                        message.access_token = new $util.LongBits(object.access_token.low >>> 0, object.access_token.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from a PackageToken message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @static
             * @param {CMsgClientPICSAccessTokenResponse.PackageToken} message PackageToken
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PackageToken.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.packageid = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.access_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.access_token = options.longs === String ? "0" : 0;
                }
                if (message.packageid != null && message.hasOwnProperty("packageid"))
                    object.packageid = message.packageid;
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (typeof message.access_token === "number")
                        object.access_token = options.longs === String ? String(message.access_token) : message.access_token;
                    else
                        object.access_token = options.longs === String ? $util.Long.prototype.toString.call(message.access_token) : options.longs === Number ? new $util.LongBits(message.access_token.low >>> 0, message.access_token.high >>> 0).toNumber(true) : message.access_token;
                return object;
            };
    
            /**
             * Converts this PackageToken to JSON.
             * @function toJSON
             * @memberof CMsgClientPICSAccessTokenResponse.PackageToken
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PackageToken.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return PackageToken;
        })();
    
        CMsgClientPICSAccessTokenResponse.AppToken = (function() {
    
            /**
             * Properties of an AppToken.
             * @memberof CMsgClientPICSAccessTokenResponse
             * @interface IAppToken
             * @property {number|null} [appid] AppToken appid
             * @property {number|Long|null} [access_token] AppToken access_token
             */
    
            /**
             * Constructs a new AppToken.
             * @memberof CMsgClientPICSAccessTokenResponse
             * @classdesc Represents an AppToken.
             * @implements IAppToken
             * @constructor
             * @param {CMsgClientPICSAccessTokenResponse.IAppToken=} [properties] Properties to set
             */
            function AppToken(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * AppToken appid.
             * @member {number} appid
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @instance
             */
            AppToken.prototype.appid = 0;
    
            /**
             * AppToken access_token.
             * @member {number|Long} access_token
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @instance
             */
            AppToken.prototype.access_token = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new AppToken instance using the specified properties.
             * @function create
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @static
             * @param {CMsgClientPICSAccessTokenResponse.IAppToken=} [properties] Properties to set
             * @returns {CMsgClientPICSAccessTokenResponse.AppToken} AppToken instance
             */
            AppToken.create = function create(properties) {
                return new AppToken(properties);
            };
    
            /**
             * Encodes the specified AppToken message. Does not implicitly {@link CMsgClientPICSAccessTokenResponse.AppToken.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @static
             * @param {CMsgClientPICSAccessTokenResponse.IAppToken} message AppToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppToken.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
                if (message.access_token != null && Object.hasOwnProperty.call(message, "access_token"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.access_token);
                return writer;
            };
    
            /**
             * Encodes the specified AppToken message, length delimited. Does not implicitly {@link CMsgClientPICSAccessTokenResponse.AppToken.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @static
             * @param {CMsgClientPICSAccessTokenResponse.IAppToken} message AppToken message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AppToken.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an AppToken message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientPICSAccessTokenResponse.AppToken} AppToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppToken.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientPICSAccessTokenResponse.AppToken();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.appid = reader.uint32();
                        break;
                    case 2:
                        message.access_token = reader.uint64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an AppToken message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientPICSAccessTokenResponse.AppToken} AppToken
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AppToken.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an AppToken message.
             * @function verify
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AppToken.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.appid != null && message.hasOwnProperty("appid"))
                    if (!$util.isInteger(message.appid))
                        return "appid: integer expected";
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (!$util.isInteger(message.access_token) && !(message.access_token && $util.isInteger(message.access_token.low) && $util.isInteger(message.access_token.high)))
                        return "access_token: integer|Long expected";
                return null;
            };
    
            /**
             * Creates an AppToken message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientPICSAccessTokenResponse.AppToken} AppToken
             */
            AppToken.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientPICSAccessTokenResponse.AppToken)
                    return object;
                var message = new $root.CMsgClientPICSAccessTokenResponse.AppToken();
                if (object.appid != null)
                    message.appid = object.appid >>> 0;
                if (object.access_token != null)
                    if ($util.Long)
                        (message.access_token = $util.Long.fromValue(object.access_token)).unsigned = true;
                    else if (typeof object.access_token === "string")
                        message.access_token = parseInt(object.access_token, 10);
                    else if (typeof object.access_token === "number")
                        message.access_token = object.access_token;
                    else if (typeof object.access_token === "object")
                        message.access_token = new $util.LongBits(object.access_token.low >>> 0, object.access_token.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from an AppToken message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @static
             * @param {CMsgClientPICSAccessTokenResponse.AppToken} message AppToken
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AppToken.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.appid = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.access_token = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.access_token = options.longs === String ? "0" : 0;
                }
                if (message.appid != null && message.hasOwnProperty("appid"))
                    object.appid = message.appid;
                if (message.access_token != null && message.hasOwnProperty("access_token"))
                    if (typeof message.access_token === "number")
                        object.access_token = options.longs === String ? String(message.access_token) : message.access_token;
                    else
                        object.access_token = options.longs === String ? $util.Long.prototype.toString.call(message.access_token) : options.longs === Number ? new $util.LongBits(message.access_token.low >>> 0, message.access_token.high >>> 0).toNumber(true) : message.access_token;
                return object;
            };
    
            /**
             * Converts this AppToken to JSON.
             * @function toJSON
             * @memberof CMsgClientPICSAccessTokenResponse.AppToken
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AppToken.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return AppToken;
        })();
    
        return CMsgClientPICSAccessTokenResponse;
    })();
    
    $root.CMsgClientUFSGetUGCDetails = (function() {
    
        /**
         * Properties of a CMsgClientUFSGetUGCDetails.
         * @exports ICMsgClientUFSGetUGCDetails
         * @interface ICMsgClientUFSGetUGCDetails
         * @property {number|Long|null} [hcontent] CMsgClientUFSGetUGCDetails hcontent
         */
    
        /**
         * Constructs a new CMsgClientUFSGetUGCDetails.
         * @exports CMsgClientUFSGetUGCDetails
         * @classdesc Represents a CMsgClientUFSGetUGCDetails.
         * @implements ICMsgClientUFSGetUGCDetails
         * @constructor
         * @param {ICMsgClientUFSGetUGCDetails=} [properties] Properties to set
         */
        function CMsgClientUFSGetUGCDetails(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSGetUGCDetails hcontent.
         * @member {number|Long} hcontent
         * @memberof CMsgClientUFSGetUGCDetails
         * @instance
         */
        CMsgClientUFSGetUGCDetails.prototype.hcontent = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * Creates a new CMsgClientUFSGetUGCDetails instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSGetUGCDetails
         * @static
         * @param {ICMsgClientUFSGetUGCDetails=} [properties] Properties to set
         * @returns {CMsgClientUFSGetUGCDetails} CMsgClientUFSGetUGCDetails instance
         */
        CMsgClientUFSGetUGCDetails.create = function create(properties) {
            return new CMsgClientUFSGetUGCDetails(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetUGCDetails message. Does not implicitly {@link CMsgClientUFSGetUGCDetails.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSGetUGCDetails
         * @static
         * @param {ICMsgClientUFSGetUGCDetails} message CMsgClientUFSGetUGCDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetUGCDetails.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.hcontent != null && Object.hasOwnProperty.call(message, "hcontent"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.hcontent);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetUGCDetails message, length delimited. Does not implicitly {@link CMsgClientUFSGetUGCDetails.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSGetUGCDetails
         * @static
         * @param {ICMsgClientUFSGetUGCDetails} message CMsgClientUFSGetUGCDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetUGCDetails.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSGetUGCDetails message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSGetUGCDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSGetUGCDetails} CMsgClientUFSGetUGCDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetUGCDetails.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSGetUGCDetails();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.hcontent = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSGetUGCDetails message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSGetUGCDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSGetUGCDetails} CMsgClientUFSGetUGCDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetUGCDetails.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSGetUGCDetails message.
         * @function verify
         * @memberof CMsgClientUFSGetUGCDetails
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSGetUGCDetails.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.hcontent != null && message.hasOwnProperty("hcontent"))
                if (!$util.isInteger(message.hcontent) && !(message.hcontent && $util.isInteger(message.hcontent.low) && $util.isInteger(message.hcontent.high)))
                    return "hcontent: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSGetUGCDetails message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSGetUGCDetails
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSGetUGCDetails} CMsgClientUFSGetUGCDetails
         */
        CMsgClientUFSGetUGCDetails.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSGetUGCDetails)
                return object;
            var message = new $root.CMsgClientUFSGetUGCDetails();
            if (object.hcontent != null)
                if ($util.Long)
                    (message.hcontent = $util.Long.fromValue(object.hcontent)).unsigned = false;
                else if (typeof object.hcontent === "string")
                    message.hcontent = parseInt(object.hcontent, 10);
                else if (typeof object.hcontent === "number")
                    message.hcontent = object.hcontent;
                else if (typeof object.hcontent === "object")
                    message.hcontent = new $util.LongBits(object.hcontent.low >>> 0, object.hcontent.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSGetUGCDetails message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSGetUGCDetails
         * @static
         * @param {CMsgClientUFSGetUGCDetails} message CMsgClientUFSGetUGCDetails
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSGetUGCDetails.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.hcontent = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.hcontent = options.longs === String ? "9223372036854775807" : 9223372036854776000;
            if (message.hcontent != null && message.hasOwnProperty("hcontent"))
                if (typeof message.hcontent === "number")
                    object.hcontent = options.longs === String ? String(message.hcontent) : message.hcontent;
                else
                    object.hcontent = options.longs === String ? $util.Long.prototype.toString.call(message.hcontent) : options.longs === Number ? new $util.LongBits(message.hcontent.low >>> 0, message.hcontent.high >>> 0).toNumber() : message.hcontent;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSGetUGCDetails to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSGetUGCDetails
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSGetUGCDetails.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSGetUGCDetails;
    })();
    
    $root.CMsgClientUFSGetUGCDetailsResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSGetUGCDetailsResponse.
         * @exports ICMsgClientUFSGetUGCDetailsResponse
         * @interface ICMsgClientUFSGetUGCDetailsResponse
         * @property {number|null} [eresult] CMsgClientUFSGetUGCDetailsResponse eresult
         * @property {string|null} [url] CMsgClientUFSGetUGCDetailsResponse url
         * @property {number|null} [app_id] CMsgClientUFSGetUGCDetailsResponse app_id
         * @property {string|null} [filename] CMsgClientUFSGetUGCDetailsResponse filename
         * @property {number|Long|null} [steamid_creator] CMsgClientUFSGetUGCDetailsResponse steamid_creator
         * @property {number|null} [file_size] CMsgClientUFSGetUGCDetailsResponse file_size
         * @property {number|null} [compressed_file_size] CMsgClientUFSGetUGCDetailsResponse compressed_file_size
         * @property {string|null} [rangecheck_host] CMsgClientUFSGetUGCDetailsResponse rangecheck_host
         * @property {string|null} [file_encoded_sha1] CMsgClientUFSGetUGCDetailsResponse file_encoded_sha1
         */
    
        /**
         * Constructs a new CMsgClientUFSGetUGCDetailsResponse.
         * @exports CMsgClientUFSGetUGCDetailsResponse
         * @classdesc Represents a CMsgClientUFSGetUGCDetailsResponse.
         * @implements ICMsgClientUFSGetUGCDetailsResponse
         * @constructor
         * @param {ICMsgClientUFSGetUGCDetailsResponse=} [properties] Properties to set
         */
        function CMsgClientUFSGetUGCDetailsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse url.
         * @member {string} url
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.url = "";
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse filename.
         * @member {string} filename
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.filename = "";
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse steamid_creator.
         * @member {number|Long} steamid_creator
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.steamid_creator = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse file_size.
         * @member {number} file_size
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.file_size = 0;
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse compressed_file_size.
         * @member {number} compressed_file_size
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.compressed_file_size = 0;
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse rangecheck_host.
         * @member {string} rangecheck_host
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.rangecheck_host = "";
    
        /**
         * CMsgClientUFSGetUGCDetailsResponse file_encoded_sha1.
         * @member {string} file_encoded_sha1
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.file_encoded_sha1 = "";
    
        /**
         * Creates a new CMsgClientUFSGetUGCDetailsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @static
         * @param {ICMsgClientUFSGetUGCDetailsResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSGetUGCDetailsResponse} CMsgClientUFSGetUGCDetailsResponse instance
         */
        CMsgClientUFSGetUGCDetailsResponse.create = function create(properties) {
            return new CMsgClientUFSGetUGCDetailsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetUGCDetailsResponse message. Does not implicitly {@link CMsgClientUFSGetUGCDetailsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @static
         * @param {ICMsgClientUFSGetUGCDetailsResponse} message CMsgClientUFSGetUGCDetailsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetUGCDetailsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.url);
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.app_id);
            if (message.filename != null && Object.hasOwnProperty.call(message, "filename"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filename);
            if (message.steamid_creator != null && Object.hasOwnProperty.call(message, "steamid_creator"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.steamid_creator);
            if (message.file_size != null && Object.hasOwnProperty.call(message, "file_size"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.file_size);
            if (message.compressed_file_size != null && Object.hasOwnProperty.call(message, "compressed_file_size"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.compressed_file_size);
            if (message.rangecheck_host != null && Object.hasOwnProperty.call(message, "rangecheck_host"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.rangecheck_host);
            if (message.file_encoded_sha1 != null && Object.hasOwnProperty.call(message, "file_encoded_sha1"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.file_encoded_sha1);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetUGCDetailsResponse message, length delimited. Does not implicitly {@link CMsgClientUFSGetUGCDetailsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @static
         * @param {ICMsgClientUFSGetUGCDetailsResponse} message CMsgClientUFSGetUGCDetailsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetUGCDetailsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSGetUGCDetailsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSGetUGCDetailsResponse} CMsgClientUFSGetUGCDetailsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetUGCDetailsResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSGetUGCDetailsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.url = reader.string();
                    break;
                case 3:
                    message.app_id = reader.uint32();
                    break;
                case 4:
                    message.filename = reader.string();
                    break;
                case 5:
                    message.steamid_creator = reader.fixed64();
                    break;
                case 6:
                    message.file_size = reader.uint32();
                    break;
                case 7:
                    message.compressed_file_size = reader.uint32();
                    break;
                case 8:
                    message.rangecheck_host = reader.string();
                    break;
                case 9:
                    message.file_encoded_sha1 = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSGetUGCDetailsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSGetUGCDetailsResponse} CMsgClientUFSGetUGCDetailsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetUGCDetailsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSGetUGCDetailsResponse message.
         * @function verify
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSGetUGCDetailsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.url != null && message.hasOwnProperty("url"))
                if (!$util.isString(message.url))
                    return "url: string expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.filename != null && message.hasOwnProperty("filename"))
                if (!$util.isString(message.filename))
                    return "filename: string expected";
            if (message.steamid_creator != null && message.hasOwnProperty("steamid_creator"))
                if (!$util.isInteger(message.steamid_creator) && !(message.steamid_creator && $util.isInteger(message.steamid_creator.low) && $util.isInteger(message.steamid_creator.high)))
                    return "steamid_creator: integer|Long expected";
            if (message.file_size != null && message.hasOwnProperty("file_size"))
                if (!$util.isInteger(message.file_size))
                    return "file_size: integer expected";
            if (message.compressed_file_size != null && message.hasOwnProperty("compressed_file_size"))
                if (!$util.isInteger(message.compressed_file_size))
                    return "compressed_file_size: integer expected";
            if (message.rangecheck_host != null && message.hasOwnProperty("rangecheck_host"))
                if (!$util.isString(message.rangecheck_host))
                    return "rangecheck_host: string expected";
            if (message.file_encoded_sha1 != null && message.hasOwnProperty("file_encoded_sha1"))
                if (!$util.isString(message.file_encoded_sha1))
                    return "file_encoded_sha1: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSGetUGCDetailsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSGetUGCDetailsResponse} CMsgClientUFSGetUGCDetailsResponse
         */
        CMsgClientUFSGetUGCDetailsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSGetUGCDetailsResponse)
                return object;
            var message = new $root.CMsgClientUFSGetUGCDetailsResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.url != null)
                message.url = String(object.url);
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.filename != null)
                message.filename = String(object.filename);
            if (object.steamid_creator != null)
                if ($util.Long)
                    (message.steamid_creator = $util.Long.fromValue(object.steamid_creator)).unsigned = false;
                else if (typeof object.steamid_creator === "string")
                    message.steamid_creator = parseInt(object.steamid_creator, 10);
                else if (typeof object.steamid_creator === "number")
                    message.steamid_creator = object.steamid_creator;
                else if (typeof object.steamid_creator === "object")
                    message.steamid_creator = new $util.LongBits(object.steamid_creator.low >>> 0, object.steamid_creator.high >>> 0).toNumber();
            if (object.file_size != null)
                message.file_size = object.file_size >>> 0;
            if (object.compressed_file_size != null)
                message.compressed_file_size = object.compressed_file_size >>> 0;
            if (object.rangecheck_host != null)
                message.rangecheck_host = String(object.rangecheck_host);
            if (object.file_encoded_sha1 != null)
                message.file_encoded_sha1 = String(object.file_encoded_sha1);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSGetUGCDetailsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @static
         * @param {CMsgClientUFSGetUGCDetailsResponse} message CMsgClientUFSGetUGCDetailsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSGetUGCDetailsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.url = "";
                object.app_id = 0;
                object.filename = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_creator = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_creator = options.longs === String ? "0" : 0;
                object.file_size = 0;
                object.compressed_file_size = 0;
                object.rangecheck_host = "";
                object.file_encoded_sha1 = "";
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.url != null && message.hasOwnProperty("url"))
                object.url = message.url;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.filename != null && message.hasOwnProperty("filename"))
                object.filename = message.filename;
            if (message.steamid_creator != null && message.hasOwnProperty("steamid_creator"))
                if (typeof message.steamid_creator === "number")
                    object.steamid_creator = options.longs === String ? String(message.steamid_creator) : message.steamid_creator;
                else
                    object.steamid_creator = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_creator) : options.longs === Number ? new $util.LongBits(message.steamid_creator.low >>> 0, message.steamid_creator.high >>> 0).toNumber() : message.steamid_creator;
            if (message.file_size != null && message.hasOwnProperty("file_size"))
                object.file_size = message.file_size;
            if (message.compressed_file_size != null && message.hasOwnProperty("compressed_file_size"))
                object.compressed_file_size = message.compressed_file_size;
            if (message.rangecheck_host != null && message.hasOwnProperty("rangecheck_host"))
                object.rangecheck_host = message.rangecheck_host;
            if (message.file_encoded_sha1 != null && message.hasOwnProperty("file_encoded_sha1"))
                object.file_encoded_sha1 = message.file_encoded_sha1;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSGetUGCDetailsResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSGetUGCDetailsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSGetUGCDetailsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSGetUGCDetailsResponse;
    })();
    
    $root.CMsgClientUFSGetSingleFileInfo = (function() {
    
        /**
         * Properties of a CMsgClientUFSGetSingleFileInfo.
         * @exports ICMsgClientUFSGetSingleFileInfo
         * @interface ICMsgClientUFSGetSingleFileInfo
         * @property {number|null} [app_id] CMsgClientUFSGetSingleFileInfo app_id
         * @property {string|null} [file_name] CMsgClientUFSGetSingleFileInfo file_name
         */
    
        /**
         * Constructs a new CMsgClientUFSGetSingleFileInfo.
         * @exports CMsgClientUFSGetSingleFileInfo
         * @classdesc Represents a CMsgClientUFSGetSingleFileInfo.
         * @implements ICMsgClientUFSGetSingleFileInfo
         * @constructor
         * @param {ICMsgClientUFSGetSingleFileInfo=} [properties] Properties to set
         */
        function CMsgClientUFSGetSingleFileInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSGetSingleFileInfo app_id.
         * @member {number} app_id
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @instance
         */
        CMsgClientUFSGetSingleFileInfo.prototype.app_id = 0;
    
        /**
         * CMsgClientUFSGetSingleFileInfo file_name.
         * @member {string} file_name
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @instance
         */
        CMsgClientUFSGetSingleFileInfo.prototype.file_name = "";
    
        /**
         * Creates a new CMsgClientUFSGetSingleFileInfo instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @static
         * @param {ICMsgClientUFSGetSingleFileInfo=} [properties] Properties to set
         * @returns {CMsgClientUFSGetSingleFileInfo} CMsgClientUFSGetSingleFileInfo instance
         */
        CMsgClientUFSGetSingleFileInfo.create = function create(properties) {
            return new CMsgClientUFSGetSingleFileInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetSingleFileInfo message. Does not implicitly {@link CMsgClientUFSGetSingleFileInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @static
         * @param {ICMsgClientUFSGetSingleFileInfo} message CMsgClientUFSGetSingleFileInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetSingleFileInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.file_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetSingleFileInfo message, length delimited. Does not implicitly {@link CMsgClientUFSGetSingleFileInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @static
         * @param {ICMsgClientUFSGetSingleFileInfo} message CMsgClientUFSGetSingleFileInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetSingleFileInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSGetSingleFileInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSGetSingleFileInfo} CMsgClientUFSGetSingleFileInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetSingleFileInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSGetSingleFileInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.file_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSGetSingleFileInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSGetSingleFileInfo} CMsgClientUFSGetSingleFileInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetSingleFileInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSGetSingleFileInfo message.
         * @function verify
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSGetSingleFileInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                if (!$util.isString(message.file_name))
                    return "file_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSGetSingleFileInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSGetSingleFileInfo} CMsgClientUFSGetSingleFileInfo
         */
        CMsgClientUFSGetSingleFileInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSGetSingleFileInfo)
                return object;
            var message = new $root.CMsgClientUFSGetSingleFileInfo();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.file_name != null)
                message.file_name = String(object.file_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSGetSingleFileInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @static
         * @param {CMsgClientUFSGetSingleFileInfo} message CMsgClientUFSGetSingleFileInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSGetSingleFileInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.file_name = "";
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                object.file_name = message.file_name;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSGetSingleFileInfo to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSGetSingleFileInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSGetSingleFileInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSGetSingleFileInfo;
    })();
    
    $root.CMsgClientUFSGetSingleFileInfoResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSGetSingleFileInfoResponse.
         * @exports ICMsgClientUFSGetSingleFileInfoResponse
         * @interface ICMsgClientUFSGetSingleFileInfoResponse
         * @property {number|null} [eresult] CMsgClientUFSGetSingleFileInfoResponse eresult
         * @property {number|null} [app_id] CMsgClientUFSGetSingleFileInfoResponse app_id
         * @property {string|null} [file_name] CMsgClientUFSGetSingleFileInfoResponse file_name
         * @property {Uint8Array|null} [sha_file] CMsgClientUFSGetSingleFileInfoResponse sha_file
         * @property {number|Long|null} [time_stamp] CMsgClientUFSGetSingleFileInfoResponse time_stamp
         * @property {number|null} [raw_file_size] CMsgClientUFSGetSingleFileInfoResponse raw_file_size
         * @property {boolean|null} [is_explicit_delete] CMsgClientUFSGetSingleFileInfoResponse is_explicit_delete
         */
    
        /**
         * Constructs a new CMsgClientUFSGetSingleFileInfoResponse.
         * @exports CMsgClientUFSGetSingleFileInfoResponse
         * @classdesc Represents a CMsgClientUFSGetSingleFileInfoResponse.
         * @implements ICMsgClientUFSGetSingleFileInfoResponse
         * @constructor
         * @param {ICMsgClientUFSGetSingleFileInfoResponse=} [properties] Properties to set
         */
        function CMsgClientUFSGetSingleFileInfoResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSGetSingleFileInfoResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @instance
         */
        CMsgClientUFSGetSingleFileInfoResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientUFSGetSingleFileInfoResponse app_id.
         * @member {number} app_id
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @instance
         */
        CMsgClientUFSGetSingleFileInfoResponse.prototype.app_id = 0;
    
        /**
         * CMsgClientUFSGetSingleFileInfoResponse file_name.
         * @member {string} file_name
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @instance
         */
        CMsgClientUFSGetSingleFileInfoResponse.prototype.file_name = "";
    
        /**
         * CMsgClientUFSGetSingleFileInfoResponse sha_file.
         * @member {Uint8Array} sha_file
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @instance
         */
        CMsgClientUFSGetSingleFileInfoResponse.prototype.sha_file = $util.newBuffer([]);
    
        /**
         * CMsgClientUFSGetSingleFileInfoResponse time_stamp.
         * @member {number|Long} time_stamp
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @instance
         */
        CMsgClientUFSGetSingleFileInfoResponse.prototype.time_stamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUFSGetSingleFileInfoResponse raw_file_size.
         * @member {number} raw_file_size
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @instance
         */
        CMsgClientUFSGetSingleFileInfoResponse.prototype.raw_file_size = 0;
    
        /**
         * CMsgClientUFSGetSingleFileInfoResponse is_explicit_delete.
         * @member {boolean} is_explicit_delete
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @instance
         */
        CMsgClientUFSGetSingleFileInfoResponse.prototype.is_explicit_delete = false;
    
        /**
         * Creates a new CMsgClientUFSGetSingleFileInfoResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @static
         * @param {ICMsgClientUFSGetSingleFileInfoResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSGetSingleFileInfoResponse} CMsgClientUFSGetSingleFileInfoResponse instance
         */
        CMsgClientUFSGetSingleFileInfoResponse.create = function create(properties) {
            return new CMsgClientUFSGetSingleFileInfoResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetSingleFileInfoResponse message. Does not implicitly {@link CMsgClientUFSGetSingleFileInfoResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @static
         * @param {ICMsgClientUFSGetSingleFileInfoResponse} message CMsgClientUFSGetSingleFileInfoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetSingleFileInfoResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
            if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.file_name);
            if (message.sha_file != null && Object.hasOwnProperty.call(message, "sha_file"))
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.sha_file);
            if (message.time_stamp != null && Object.hasOwnProperty.call(message, "time_stamp"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.time_stamp);
            if (message.raw_file_size != null && Object.hasOwnProperty.call(message, "raw_file_size"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.raw_file_size);
            if (message.is_explicit_delete != null && Object.hasOwnProperty.call(message, "is_explicit_delete"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.is_explicit_delete);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSGetSingleFileInfoResponse message, length delimited. Does not implicitly {@link CMsgClientUFSGetSingleFileInfoResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @static
         * @param {ICMsgClientUFSGetSingleFileInfoResponse} message CMsgClientUFSGetSingleFileInfoResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSGetSingleFileInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSGetSingleFileInfoResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSGetSingleFileInfoResponse} CMsgClientUFSGetSingleFileInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetSingleFileInfoResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSGetSingleFileInfoResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.app_id = reader.uint32();
                    break;
                case 3:
                    message.file_name = reader.string();
                    break;
                case 4:
                    message.sha_file = reader.bytes();
                    break;
                case 5:
                    message.time_stamp = reader.uint64();
                    break;
                case 6:
                    message.raw_file_size = reader.uint32();
                    break;
                case 7:
                    message.is_explicit_delete = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSGetSingleFileInfoResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSGetSingleFileInfoResponse} CMsgClientUFSGetSingleFileInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSGetSingleFileInfoResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSGetSingleFileInfoResponse message.
         * @function verify
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSGetSingleFileInfoResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                if (!$util.isString(message.file_name))
                    return "file_name: string expected";
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                if (!(message.sha_file && typeof message.sha_file.length === "number" || $util.isString(message.sha_file)))
                    return "sha_file: buffer expected";
            if (message.time_stamp != null && message.hasOwnProperty("time_stamp"))
                if (!$util.isInteger(message.time_stamp) && !(message.time_stamp && $util.isInteger(message.time_stamp.low) && $util.isInteger(message.time_stamp.high)))
                    return "time_stamp: integer|Long expected";
            if (message.raw_file_size != null && message.hasOwnProperty("raw_file_size"))
                if (!$util.isInteger(message.raw_file_size))
                    return "raw_file_size: integer expected";
            if (message.is_explicit_delete != null && message.hasOwnProperty("is_explicit_delete"))
                if (typeof message.is_explicit_delete !== "boolean")
                    return "is_explicit_delete: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSGetSingleFileInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSGetSingleFileInfoResponse} CMsgClientUFSGetSingleFileInfoResponse
         */
        CMsgClientUFSGetSingleFileInfoResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSGetSingleFileInfoResponse)
                return object;
            var message = new $root.CMsgClientUFSGetSingleFileInfoResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.file_name != null)
                message.file_name = String(object.file_name);
            if (object.sha_file != null)
                if (typeof object.sha_file === "string")
                    $util.base64.decode(object.sha_file, message.sha_file = $util.newBuffer($util.base64.length(object.sha_file)), 0);
                else if (object.sha_file.length)
                    message.sha_file = object.sha_file;
            if (object.time_stamp != null)
                if ($util.Long)
                    (message.time_stamp = $util.Long.fromValue(object.time_stamp)).unsigned = true;
                else if (typeof object.time_stamp === "string")
                    message.time_stamp = parseInt(object.time_stamp, 10);
                else if (typeof object.time_stamp === "number")
                    message.time_stamp = object.time_stamp;
                else if (typeof object.time_stamp === "object")
                    message.time_stamp = new $util.LongBits(object.time_stamp.low >>> 0, object.time_stamp.high >>> 0).toNumber(true);
            if (object.raw_file_size != null)
                message.raw_file_size = object.raw_file_size >>> 0;
            if (object.is_explicit_delete != null)
                message.is_explicit_delete = Boolean(object.is_explicit_delete);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSGetSingleFileInfoResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @static
         * @param {CMsgClientUFSGetSingleFileInfoResponse} message CMsgClientUFSGetSingleFileInfoResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSGetSingleFileInfoResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                object.app_id = 0;
                object.file_name = "";
                if (options.bytes === String)
                    object.sha_file = "";
                else {
                    object.sha_file = [];
                    if (options.bytes !== Array)
                        object.sha_file = $util.newBuffer(object.sha_file);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.time_stamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.time_stamp = options.longs === String ? "0" : 0;
                object.raw_file_size = 0;
                object.is_explicit_delete = false;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                object.file_name = message.file_name;
            if (message.sha_file != null && message.hasOwnProperty("sha_file"))
                object.sha_file = options.bytes === String ? $util.base64.encode(message.sha_file, 0, message.sha_file.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_file) : message.sha_file;
            if (message.time_stamp != null && message.hasOwnProperty("time_stamp"))
                if (typeof message.time_stamp === "number")
                    object.time_stamp = options.longs === String ? String(message.time_stamp) : message.time_stamp;
                else
                    object.time_stamp = options.longs === String ? $util.Long.prototype.toString.call(message.time_stamp) : options.longs === Number ? new $util.LongBits(message.time_stamp.low >>> 0, message.time_stamp.high >>> 0).toNumber(true) : message.time_stamp;
            if (message.raw_file_size != null && message.hasOwnProperty("raw_file_size"))
                object.raw_file_size = message.raw_file_size;
            if (message.is_explicit_delete != null && message.hasOwnProperty("is_explicit_delete"))
                object.is_explicit_delete = message.is_explicit_delete;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSGetSingleFileInfoResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSGetSingleFileInfoResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSGetSingleFileInfoResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSGetSingleFileInfoResponse;
    })();
    
    $root.CMsgClientUFSShareFile = (function() {
    
        /**
         * Properties of a CMsgClientUFSShareFile.
         * @exports ICMsgClientUFSShareFile
         * @interface ICMsgClientUFSShareFile
         * @property {number|null} [app_id] CMsgClientUFSShareFile app_id
         * @property {string|null} [file_name] CMsgClientUFSShareFile file_name
         */
    
        /**
         * Constructs a new CMsgClientUFSShareFile.
         * @exports CMsgClientUFSShareFile
         * @classdesc Represents a CMsgClientUFSShareFile.
         * @implements ICMsgClientUFSShareFile
         * @constructor
         * @param {ICMsgClientUFSShareFile=} [properties] Properties to set
         */
        function CMsgClientUFSShareFile(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSShareFile app_id.
         * @member {number} app_id
         * @memberof CMsgClientUFSShareFile
         * @instance
         */
        CMsgClientUFSShareFile.prototype.app_id = 0;
    
        /**
         * CMsgClientUFSShareFile file_name.
         * @member {string} file_name
         * @memberof CMsgClientUFSShareFile
         * @instance
         */
        CMsgClientUFSShareFile.prototype.file_name = "";
    
        /**
         * Creates a new CMsgClientUFSShareFile instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSShareFile
         * @static
         * @param {ICMsgClientUFSShareFile=} [properties] Properties to set
         * @returns {CMsgClientUFSShareFile} CMsgClientUFSShareFile instance
         */
        CMsgClientUFSShareFile.create = function create(properties) {
            return new CMsgClientUFSShareFile(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSShareFile message. Does not implicitly {@link CMsgClientUFSShareFile.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSShareFile
         * @static
         * @param {ICMsgClientUFSShareFile} message CMsgClientUFSShareFile message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSShareFile.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.file_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSShareFile message, length delimited. Does not implicitly {@link CMsgClientUFSShareFile.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSShareFile
         * @static
         * @param {ICMsgClientUFSShareFile} message CMsgClientUFSShareFile message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSShareFile.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSShareFile message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSShareFile
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSShareFile} CMsgClientUFSShareFile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSShareFile.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSShareFile();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.file_name = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSShareFile message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSShareFile
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSShareFile} CMsgClientUFSShareFile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSShareFile.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSShareFile message.
         * @function verify
         * @memberof CMsgClientUFSShareFile
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSShareFile.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                if (!$util.isString(message.file_name))
                    return "file_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSShareFile message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSShareFile
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSShareFile} CMsgClientUFSShareFile
         */
        CMsgClientUFSShareFile.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSShareFile)
                return object;
            var message = new $root.CMsgClientUFSShareFile();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.file_name != null)
                message.file_name = String(object.file_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSShareFile message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSShareFile
         * @static
         * @param {CMsgClientUFSShareFile} message CMsgClientUFSShareFile
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSShareFile.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.file_name = "";
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                object.file_name = message.file_name;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSShareFile to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSShareFile
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSShareFile.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSShareFile;
    })();
    
    $root.CMsgClientUFSShareFileResponse = (function() {
    
        /**
         * Properties of a CMsgClientUFSShareFileResponse.
         * @exports ICMsgClientUFSShareFileResponse
         * @interface ICMsgClientUFSShareFileResponse
         * @property {number|null} [eresult] CMsgClientUFSShareFileResponse eresult
         * @property {number|Long|null} [hcontent] CMsgClientUFSShareFileResponse hcontent
         */
    
        /**
         * Constructs a new CMsgClientUFSShareFileResponse.
         * @exports CMsgClientUFSShareFileResponse
         * @classdesc Represents a CMsgClientUFSShareFileResponse.
         * @implements ICMsgClientUFSShareFileResponse
         * @constructor
         * @param {ICMsgClientUFSShareFileResponse=} [properties] Properties to set
         */
        function CMsgClientUFSShareFileResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUFSShareFileResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientUFSShareFileResponse
         * @instance
         */
        CMsgClientUFSShareFileResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientUFSShareFileResponse hcontent.
         * @member {number|Long} hcontent
         * @memberof CMsgClientUFSShareFileResponse
         * @instance
         */
        CMsgClientUFSShareFileResponse.prototype.hcontent = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * Creates a new CMsgClientUFSShareFileResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientUFSShareFileResponse
         * @static
         * @param {ICMsgClientUFSShareFileResponse=} [properties] Properties to set
         * @returns {CMsgClientUFSShareFileResponse} CMsgClientUFSShareFileResponse instance
         */
        CMsgClientUFSShareFileResponse.create = function create(properties) {
            return new CMsgClientUFSShareFileResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUFSShareFileResponse message. Does not implicitly {@link CMsgClientUFSShareFileResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUFSShareFileResponse
         * @static
         * @param {ICMsgClientUFSShareFileResponse} message CMsgClientUFSShareFileResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSShareFileResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.hcontent != null && Object.hasOwnProperty.call(message, "hcontent"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.hcontent);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUFSShareFileResponse message, length delimited. Does not implicitly {@link CMsgClientUFSShareFileResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUFSShareFileResponse
         * @static
         * @param {ICMsgClientUFSShareFileResponse} message CMsgClientUFSShareFileResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUFSShareFileResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUFSShareFileResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUFSShareFileResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUFSShareFileResponse} CMsgClientUFSShareFileResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSShareFileResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUFSShareFileResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.hcontent = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUFSShareFileResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUFSShareFileResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUFSShareFileResponse} CMsgClientUFSShareFileResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUFSShareFileResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUFSShareFileResponse message.
         * @function verify
         * @memberof CMsgClientUFSShareFileResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUFSShareFileResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.hcontent != null && message.hasOwnProperty("hcontent"))
                if (!$util.isInteger(message.hcontent) && !(message.hcontent && $util.isInteger(message.hcontent.low) && $util.isInteger(message.hcontent.high)))
                    return "hcontent: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUFSShareFileResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUFSShareFileResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUFSShareFileResponse} CMsgClientUFSShareFileResponse
         */
        CMsgClientUFSShareFileResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUFSShareFileResponse)
                return object;
            var message = new $root.CMsgClientUFSShareFileResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.hcontent != null)
                if ($util.Long)
                    (message.hcontent = $util.Long.fromValue(object.hcontent)).unsigned = false;
                else if (typeof object.hcontent === "string")
                    message.hcontent = parseInt(object.hcontent, 10);
                else if (typeof object.hcontent === "number")
                    message.hcontent = object.hcontent;
                else if (typeof object.hcontent === "object")
                    message.hcontent = new $util.LongBits(object.hcontent.low >>> 0, object.hcontent.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUFSShareFileResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUFSShareFileResponse
         * @static
         * @param {CMsgClientUFSShareFileResponse} message CMsgClientUFSShareFileResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUFSShareFileResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.hcontent = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.hcontent = options.longs === String ? "9223372036854775807" : 9223372036854776000;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.hcontent != null && message.hasOwnProperty("hcontent"))
                if (typeof message.hcontent === "number")
                    object.hcontent = options.longs === String ? String(message.hcontent) : message.hcontent;
                else
                    object.hcontent = options.longs === String ? $util.Long.prototype.toString.call(message.hcontent) : options.longs === Number ? new $util.LongBits(message.hcontent.low >>> 0, message.hcontent.high >>> 0).toNumber() : message.hcontent;
            return object;
        };
    
        /**
         * Converts this CMsgClientUFSShareFileResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientUFSShareFileResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUFSShareFileResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUFSShareFileResponse;
    })();
    
    $root.CMsgClientAMGetClanOfficers = (function() {
    
        /**
         * Properties of a CMsgClientAMGetClanOfficers.
         * @exports ICMsgClientAMGetClanOfficers
         * @interface ICMsgClientAMGetClanOfficers
         * @property {number|Long|null} [steamid_clan] CMsgClientAMGetClanOfficers steamid_clan
         */
    
        /**
         * Constructs a new CMsgClientAMGetClanOfficers.
         * @exports CMsgClientAMGetClanOfficers
         * @classdesc Represents a CMsgClientAMGetClanOfficers.
         * @implements ICMsgClientAMGetClanOfficers
         * @constructor
         * @param {ICMsgClientAMGetClanOfficers=} [properties] Properties to set
         */
        function CMsgClientAMGetClanOfficers(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetClanOfficers steamid_clan.
         * @member {number|Long} steamid_clan
         * @memberof CMsgClientAMGetClanOfficers
         * @instance
         */
        CMsgClientAMGetClanOfficers.prototype.steamid_clan = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgClientAMGetClanOfficers instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetClanOfficers
         * @static
         * @param {ICMsgClientAMGetClanOfficers=} [properties] Properties to set
         * @returns {CMsgClientAMGetClanOfficers} CMsgClientAMGetClanOfficers instance
         */
        CMsgClientAMGetClanOfficers.create = function create(properties) {
            return new CMsgClientAMGetClanOfficers(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetClanOfficers message. Does not implicitly {@link CMsgClientAMGetClanOfficers.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetClanOfficers
         * @static
         * @param {ICMsgClientAMGetClanOfficers} message CMsgClientAMGetClanOfficers message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetClanOfficers.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_clan != null && Object.hasOwnProperty.call(message, "steamid_clan"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_clan);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetClanOfficers message, length delimited. Does not implicitly {@link CMsgClientAMGetClanOfficers.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetClanOfficers
         * @static
         * @param {ICMsgClientAMGetClanOfficers} message CMsgClientAMGetClanOfficers message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetClanOfficers.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetClanOfficers message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetClanOfficers
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetClanOfficers} CMsgClientAMGetClanOfficers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetClanOfficers.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetClanOfficers();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid_clan = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetClanOfficers message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetClanOfficers
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetClanOfficers} CMsgClientAMGetClanOfficers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetClanOfficers.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetClanOfficers message.
         * @function verify
         * @memberof CMsgClientAMGetClanOfficers
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetClanOfficers.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                if (!$util.isInteger(message.steamid_clan) && !(message.steamid_clan && $util.isInteger(message.steamid_clan.low) && $util.isInteger(message.steamid_clan.high)))
                    return "steamid_clan: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetClanOfficers message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetClanOfficers
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetClanOfficers} CMsgClientAMGetClanOfficers
         */
        CMsgClientAMGetClanOfficers.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetClanOfficers)
                return object;
            var message = new $root.CMsgClientAMGetClanOfficers();
            if (object.steamid_clan != null)
                if ($util.Long)
                    (message.steamid_clan = $util.Long.fromValue(object.steamid_clan)).unsigned = false;
                else if (typeof object.steamid_clan === "string")
                    message.steamid_clan = parseInt(object.steamid_clan, 10);
                else if (typeof object.steamid_clan === "number")
                    message.steamid_clan = object.steamid_clan;
                else if (typeof object.steamid_clan === "object")
                    message.steamid_clan = new $util.LongBits(object.steamid_clan.low >>> 0, object.steamid_clan.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetClanOfficers message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetClanOfficers
         * @static
         * @param {CMsgClientAMGetClanOfficers} message CMsgClientAMGetClanOfficers
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetClanOfficers.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_clan = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_clan = options.longs === String ? "0" : 0;
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                if (typeof message.steamid_clan === "number")
                    object.steamid_clan = options.longs === String ? String(message.steamid_clan) : message.steamid_clan;
                else
                    object.steamid_clan = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_clan) : options.longs === Number ? new $util.LongBits(message.steamid_clan.low >>> 0, message.steamid_clan.high >>> 0).toNumber() : message.steamid_clan;
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetClanOfficers to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetClanOfficers
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetClanOfficers.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAMGetClanOfficers;
    })();
    
    $root.CMsgClientAMGetClanOfficersResponse = (function() {
    
        /**
         * Properties of a CMsgClientAMGetClanOfficersResponse.
         * @exports ICMsgClientAMGetClanOfficersResponse
         * @interface ICMsgClientAMGetClanOfficersResponse
         * @property {number|null} [eresult] CMsgClientAMGetClanOfficersResponse eresult
         * @property {number|Long|null} [steamid_clan] CMsgClientAMGetClanOfficersResponse steamid_clan
         * @property {number|null} [officer_count] CMsgClientAMGetClanOfficersResponse officer_count
         */
    
        /**
         * Constructs a new CMsgClientAMGetClanOfficersResponse.
         * @exports CMsgClientAMGetClanOfficersResponse
         * @classdesc Represents a CMsgClientAMGetClanOfficersResponse.
         * @implements ICMsgClientAMGetClanOfficersResponse
         * @constructor
         * @param {ICMsgClientAMGetClanOfficersResponse=} [properties] Properties to set
         */
        function CMsgClientAMGetClanOfficersResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetClanOfficersResponse eresult.
         * @member {number} eresult
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @instance
         */
        CMsgClientAMGetClanOfficersResponse.prototype.eresult = 2;
    
        /**
         * CMsgClientAMGetClanOfficersResponse steamid_clan.
         * @member {number|Long} steamid_clan
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @instance
         */
        CMsgClientAMGetClanOfficersResponse.prototype.steamid_clan = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientAMGetClanOfficersResponse officer_count.
         * @member {number} officer_count
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @instance
         */
        CMsgClientAMGetClanOfficersResponse.prototype.officer_count = 0;
    
        /**
         * Creates a new CMsgClientAMGetClanOfficersResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @static
         * @param {ICMsgClientAMGetClanOfficersResponse=} [properties] Properties to set
         * @returns {CMsgClientAMGetClanOfficersResponse} CMsgClientAMGetClanOfficersResponse instance
         */
        CMsgClientAMGetClanOfficersResponse.create = function create(properties) {
            return new CMsgClientAMGetClanOfficersResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetClanOfficersResponse message. Does not implicitly {@link CMsgClientAMGetClanOfficersResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @static
         * @param {ICMsgClientAMGetClanOfficersResponse} message CMsgClientAMGetClanOfficersResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetClanOfficersResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            if (message.steamid_clan != null && Object.hasOwnProperty.call(message, "steamid_clan"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid_clan);
            if (message.officer_count != null && Object.hasOwnProperty.call(message, "officer_count"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.officer_count);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetClanOfficersResponse message, length delimited. Does not implicitly {@link CMsgClientAMGetClanOfficersResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @static
         * @param {ICMsgClientAMGetClanOfficersResponse} message CMsgClientAMGetClanOfficersResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetClanOfficersResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetClanOfficersResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetClanOfficersResponse} CMsgClientAMGetClanOfficersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetClanOfficersResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetClanOfficersResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eresult = reader.int32();
                    break;
                case 2:
                    message.steamid_clan = reader.fixed64();
                    break;
                case 3:
                    message.officer_count = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetClanOfficersResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetClanOfficersResponse} CMsgClientAMGetClanOfficersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetClanOfficersResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetClanOfficersResponse message.
         * @function verify
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetClanOfficersResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                if (!$util.isInteger(message.steamid_clan) && !(message.steamid_clan && $util.isInteger(message.steamid_clan.low) && $util.isInteger(message.steamid_clan.high)))
                    return "steamid_clan: integer|Long expected";
            if (message.officer_count != null && message.hasOwnProperty("officer_count"))
                if (!$util.isInteger(message.officer_count))
                    return "officer_count: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetClanOfficersResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetClanOfficersResponse} CMsgClientAMGetClanOfficersResponse
         */
        CMsgClientAMGetClanOfficersResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetClanOfficersResponse)
                return object;
            var message = new $root.CMsgClientAMGetClanOfficersResponse();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.steamid_clan != null)
                if ($util.Long)
                    (message.steamid_clan = $util.Long.fromValue(object.steamid_clan)).unsigned = false;
                else if (typeof object.steamid_clan === "string")
                    message.steamid_clan = parseInt(object.steamid_clan, 10);
                else if (typeof object.steamid_clan === "number")
                    message.steamid_clan = object.steamid_clan;
                else if (typeof object.steamid_clan === "object")
                    message.steamid_clan = new $util.LongBits(object.steamid_clan.low >>> 0, object.steamid_clan.high >>> 0).toNumber();
            if (object.officer_count != null)
                message.officer_count = object.officer_count | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetClanOfficersResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @static
         * @param {CMsgClientAMGetClanOfficersResponse} message CMsgClientAMGetClanOfficersResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetClanOfficersResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eresult = 2;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_clan = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_clan = options.longs === String ? "0" : 0;
                object.officer_count = 0;
            }
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                if (typeof message.steamid_clan === "number")
                    object.steamid_clan = options.longs === String ? String(message.steamid_clan) : message.steamid_clan;
                else
                    object.steamid_clan = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_clan) : options.longs === Number ? new $util.LongBits(message.steamid_clan.low >>> 0, message.steamid_clan.high >>> 0).toNumber() : message.steamid_clan;
            if (message.officer_count != null && message.hasOwnProperty("officer_count"))
                object.officer_count = message.officer_count;
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetClanOfficersResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetClanOfficersResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetClanOfficersResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientAMGetClanOfficersResponse;
    })();
    
    $root.CMsgClientAMGetPersonaNameHistory = (function() {
    
        /**
         * Properties of a CMsgClientAMGetPersonaNameHistory.
         * @exports ICMsgClientAMGetPersonaNameHistory
         * @interface ICMsgClientAMGetPersonaNameHistory
         * @property {number|null} [id_count] CMsgClientAMGetPersonaNameHistory id_count
         * @property {Array.<CMsgClientAMGetPersonaNameHistory.IIdInstance>|null} [Ids] CMsgClientAMGetPersonaNameHistory Ids
         */
    
        /**
         * Constructs a new CMsgClientAMGetPersonaNameHistory.
         * @exports CMsgClientAMGetPersonaNameHistory
         * @classdesc Represents a CMsgClientAMGetPersonaNameHistory.
         * @implements ICMsgClientAMGetPersonaNameHistory
         * @constructor
         * @param {ICMsgClientAMGetPersonaNameHistory=} [properties] Properties to set
         */
        function CMsgClientAMGetPersonaNameHistory(properties) {
            this.Ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetPersonaNameHistory id_count.
         * @member {number} id_count
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @instance
         */
        CMsgClientAMGetPersonaNameHistory.prototype.id_count = 0;
    
        /**
         * CMsgClientAMGetPersonaNameHistory Ids.
         * @member {Array.<CMsgClientAMGetPersonaNameHistory.IIdInstance>} Ids
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @instance
         */
        CMsgClientAMGetPersonaNameHistory.prototype.Ids = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientAMGetPersonaNameHistory instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory=} [properties] Properties to set
         * @returns {CMsgClientAMGetPersonaNameHistory} CMsgClientAMGetPersonaNameHistory instance
         */
        CMsgClientAMGetPersonaNameHistory.create = function create(properties) {
            return new CMsgClientAMGetPersonaNameHistory(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistory message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistory.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory} message CMsgClientAMGetPersonaNameHistory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistory.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.id_count != null && Object.hasOwnProperty.call(message, "id_count"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id_count);
            if (message.Ids != null && message.Ids.length)
                for (var i = 0; i < message.Ids.length; ++i)
                    $root.CMsgClientAMGetPersonaNameHistory.IdInstance.encode(message.Ids[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistory message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistory.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistory} message CMsgClientAMGetPersonaNameHistory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistory.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistory message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetPersonaNameHistory} CMsgClientAMGetPersonaNameHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistory.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistory();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.id_count = reader.int32();
                    break;
                case 2:
                    if (!(message.Ids && message.Ids.length))
                        message.Ids = [];
                    message.Ids.push($root.CMsgClientAMGetPersonaNameHistory.IdInstance.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistory message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetPersonaNameHistory} CMsgClientAMGetPersonaNameHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistory.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetPersonaNameHistory message.
         * @function verify
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetPersonaNameHistory.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.id_count != null && message.hasOwnProperty("id_count"))
                if (!$util.isInteger(message.id_count))
                    return "id_count: integer expected";
            if (message.Ids != null && message.hasOwnProperty("Ids")) {
                if (!Array.isArray(message.Ids))
                    return "Ids: array expected";
                for (var i = 0; i < message.Ids.length; ++i) {
                    var error = $root.CMsgClientAMGetPersonaNameHistory.IdInstance.verify(message.Ids[i]);
                    if (error)
                        return "Ids." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetPersonaNameHistory message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetPersonaNameHistory} CMsgClientAMGetPersonaNameHistory
         */
        CMsgClientAMGetPersonaNameHistory.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetPersonaNameHistory)
                return object;
            var message = new $root.CMsgClientAMGetPersonaNameHistory();
            if (object.id_count != null)
                message.id_count = object.id_count | 0;
            if (object.Ids) {
                if (!Array.isArray(object.Ids))
                    throw TypeError(".CMsgClientAMGetPersonaNameHistory.Ids: array expected");
                message.Ids = [];
                for (var i = 0; i < object.Ids.length; ++i) {
                    if (typeof object.Ids[i] !== "object")
                        throw TypeError(".CMsgClientAMGetPersonaNameHistory.Ids: object expected");
                    message.Ids[i] = $root.CMsgClientAMGetPersonaNameHistory.IdInstance.fromObject(object.Ids[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetPersonaNameHistory message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @static
         * @param {CMsgClientAMGetPersonaNameHistory} message CMsgClientAMGetPersonaNameHistory
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetPersonaNameHistory.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.Ids = [];
            if (options.defaults)
                object.id_count = 0;
            if (message.id_count != null && message.hasOwnProperty("id_count"))
                object.id_count = message.id_count;
            if (message.Ids && message.Ids.length) {
                object.Ids = [];
                for (var j = 0; j < message.Ids.length; ++j)
                    object.Ids[j] = $root.CMsgClientAMGetPersonaNameHistory.IdInstance.toObject(message.Ids[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetPersonaNameHistory to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetPersonaNameHistory
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetPersonaNameHistory.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientAMGetPersonaNameHistory.IdInstance = (function() {
    
            /**
             * Properties of an IdInstance.
             * @memberof CMsgClientAMGetPersonaNameHistory
             * @interface IIdInstance
             * @property {number|Long|null} [steamid] IdInstance steamid
             */
    
            /**
             * Constructs a new IdInstance.
             * @memberof CMsgClientAMGetPersonaNameHistory
             * @classdesc Represents an IdInstance.
             * @implements IIdInstance
             * @constructor
             * @param {CMsgClientAMGetPersonaNameHistory.IIdInstance=} [properties] Properties to set
             */
            function IdInstance(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * IdInstance steamid.
             * @member {number|Long} steamid
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @instance
             */
            IdInstance.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Creates a new IdInstance instance using the specified properties.
             * @function create
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @static
             * @param {CMsgClientAMGetPersonaNameHistory.IIdInstance=} [properties] Properties to set
             * @returns {CMsgClientAMGetPersonaNameHistory.IdInstance} IdInstance instance
             */
            IdInstance.create = function create(properties) {
                return new IdInstance(properties);
            };
    
            /**
             * Encodes the specified IdInstance message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistory.IdInstance.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @static
             * @param {CMsgClientAMGetPersonaNameHistory.IIdInstance} message IdInstance message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            IdInstance.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
                return writer;
            };
    
            /**
             * Encodes the specified IdInstance message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistory.IdInstance.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @static
             * @param {CMsgClientAMGetPersonaNameHistory.IIdInstance} message IdInstance message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            IdInstance.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an IdInstance message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientAMGetPersonaNameHistory.IdInstance} IdInstance
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            IdInstance.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistory.IdInstance();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.steamid = reader.fixed64();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an IdInstance message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientAMGetPersonaNameHistory.IdInstance} IdInstance
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            IdInstance.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an IdInstance message.
             * @function verify
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            IdInstance.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                        return "steamid: integer|Long expected";
                return null;
            };
    
            /**
             * Creates an IdInstance message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientAMGetPersonaNameHistory.IdInstance} IdInstance
             */
            IdInstance.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientAMGetPersonaNameHistory.IdInstance)
                    return object;
                var message = new $root.CMsgClientAMGetPersonaNameHistory.IdInstance();
                if (object.steamid != null)
                    if ($util.Long)
                        (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                    else if (typeof object.steamid === "string")
                        message.steamid = parseInt(object.steamid, 10);
                    else if (typeof object.steamid === "number")
                        message.steamid = object.steamid;
                    else if (typeof object.steamid === "object")
                        message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
                return message;
            };
    
            /**
             * Creates a plain object from an IdInstance message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @static
             * @param {CMsgClientAMGetPersonaNameHistory.IdInstance} message IdInstance
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            IdInstance.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steamid = options.longs === String ? "0" : 0;
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (typeof message.steamid === "number")
                        object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                    else
                        object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
                return object;
            };
    
            /**
             * Converts this IdInstance to JSON.
             * @function toJSON
             * @memberof CMsgClientAMGetPersonaNameHistory.IdInstance
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            IdInstance.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return IdInstance;
        })();
    
        return CMsgClientAMGetPersonaNameHistory;
    })();
    
    $root.CMsgClientAMGetPersonaNameHistoryResponse = (function() {
    
        /**
         * Properties of a CMsgClientAMGetPersonaNameHistoryResponse.
         * @exports ICMsgClientAMGetPersonaNameHistoryResponse
         * @interface ICMsgClientAMGetPersonaNameHistoryResponse
         * @property {Array.<CMsgClientAMGetPersonaNameHistoryResponse.INameTableInstance>|null} [responses] CMsgClientAMGetPersonaNameHistoryResponse responses
         */
    
        /**
         * Constructs a new CMsgClientAMGetPersonaNameHistoryResponse.
         * @exports CMsgClientAMGetPersonaNameHistoryResponse
         * @classdesc Represents a CMsgClientAMGetPersonaNameHistoryResponse.
         * @implements ICMsgClientAMGetPersonaNameHistoryResponse
         * @constructor
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse=} [properties] Properties to set
         */
        function CMsgClientAMGetPersonaNameHistoryResponse(properties) {
            this.responses = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientAMGetPersonaNameHistoryResponse responses.
         * @member {Array.<CMsgClientAMGetPersonaNameHistoryResponse.INameTableInstance>} responses
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse.prototype.responses = $util.emptyArray;
    
        /**
         * Creates a new CMsgClientAMGetPersonaNameHistoryResponse instance using the specified properties.
         * @function create
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse=} [properties] Properties to set
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse} CMsgClientAMGetPersonaNameHistoryResponse instance
         */
        CMsgClientAMGetPersonaNameHistoryResponse.create = function create(properties) {
            return new CMsgClientAMGetPersonaNameHistoryResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistoryResponse message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse} message CMsgClientAMGetPersonaNameHistoryResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistoryResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.responses != null && message.responses.length)
                for (var i = 0; i < message.responses.length; ++i)
                    $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.encode(message.responses[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientAMGetPersonaNameHistoryResponse message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {ICMsgClientAMGetPersonaNameHistoryResponse} message CMsgClientAMGetPersonaNameHistoryResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientAMGetPersonaNameHistoryResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistoryResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse} CMsgClientAMGetPersonaNameHistoryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistoryResponse.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistoryResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 2:
                    if (!(message.responses && message.responses.length))
                        message.responses = [];
                    message.responses.push($root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientAMGetPersonaNameHistoryResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse} CMsgClientAMGetPersonaNameHistoryResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientAMGetPersonaNameHistoryResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientAMGetPersonaNameHistoryResponse message.
         * @function verify
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientAMGetPersonaNameHistoryResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.responses != null && message.hasOwnProperty("responses")) {
                if (!Array.isArray(message.responses))
                    return "responses: array expected";
                for (var i = 0; i < message.responses.length; ++i) {
                    var error = $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.verify(message.responses[i]);
                    if (error)
                        return "responses." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgClientAMGetPersonaNameHistoryResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientAMGetPersonaNameHistoryResponse} CMsgClientAMGetPersonaNameHistoryResponse
         */
        CMsgClientAMGetPersonaNameHistoryResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientAMGetPersonaNameHistoryResponse)
                return object;
            var message = new $root.CMsgClientAMGetPersonaNameHistoryResponse();
            if (object.responses) {
                if (!Array.isArray(object.responses))
                    throw TypeError(".CMsgClientAMGetPersonaNameHistoryResponse.responses: array expected");
                message.responses = [];
                for (var i = 0; i < object.responses.length; ++i) {
                    if (typeof object.responses[i] !== "object")
                        throw TypeError(".CMsgClientAMGetPersonaNameHistoryResponse.responses: object expected");
                    message.responses[i] = $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.fromObject(object.responses[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientAMGetPersonaNameHistoryResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @static
         * @param {CMsgClientAMGetPersonaNameHistoryResponse} message CMsgClientAMGetPersonaNameHistoryResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientAMGetPersonaNameHistoryResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.responses = [];
            if (message.responses && message.responses.length) {
                object.responses = [];
                for (var j = 0; j < message.responses.length; ++j)
                    object.responses[j] = $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.toObject(message.responses[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgClientAMGetPersonaNameHistoryResponse to JSON.
         * @function toJSON
         * @memberof CMsgClientAMGetPersonaNameHistoryResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientAMGetPersonaNameHistoryResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance = (function() {
    
            /**
             * Properties of a NameTableInstance.
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse
             * @interface INameTableInstance
             * @property {number|null} [eresult] NameTableInstance eresult
             * @property {number|Long|null} [steamid] NameTableInstance steamid
             * @property {Array.<CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.INameInstance>|null} [names] NameTableInstance names
             */
    
            /**
             * Constructs a new NameTableInstance.
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse
             * @classdesc Represents a NameTableInstance.
             * @implements INameTableInstance
             * @constructor
             * @param {CMsgClientAMGetPersonaNameHistoryResponse.INameTableInstance=} [properties] Properties to set
             */
            function NameTableInstance(properties) {
                this.names = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * NameTableInstance eresult.
             * @member {number} eresult
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @instance
             */
            NameTableInstance.prototype.eresult = 2;
    
            /**
             * NameTableInstance steamid.
             * @member {number|Long} steamid
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @instance
             */
            NameTableInstance.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * NameTableInstance names.
             * @member {Array.<CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.INameInstance>} names
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @instance
             */
            NameTableInstance.prototype.names = $util.emptyArray;
    
            /**
             * Creates a new NameTableInstance instance using the specified properties.
             * @function create
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @static
             * @param {CMsgClientAMGetPersonaNameHistoryResponse.INameTableInstance=} [properties] Properties to set
             * @returns {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance} NameTableInstance instance
             */
            NameTableInstance.create = function create(properties) {
                return new NameTableInstance(properties);
            };
    
            /**
             * Encodes the specified NameTableInstance message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @static
             * @param {CMsgClientAMGetPersonaNameHistoryResponse.INameTableInstance} message NameTableInstance message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            NameTableInstance.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
                if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                    writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
                if (message.names != null && message.names.length)
                    for (var i = 0; i < message.names.length; ++i)
                        $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.encode(message.names[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified NameTableInstance message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @static
             * @param {CMsgClientAMGetPersonaNameHistoryResponse.INameTableInstance} message NameTableInstance message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            NameTableInstance.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a NameTableInstance message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance} NameTableInstance
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            NameTableInstance.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.eresult = reader.int32();
                        break;
                    case 2:
                        message.steamid = reader.fixed64();
                        break;
                    case 3:
                        if (!(message.names && message.names.length))
                            message.names = [];
                        message.names.push($root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.decode(reader, reader.uint32()));
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a NameTableInstance message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance} NameTableInstance
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            NameTableInstance.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a NameTableInstance message.
             * @function verify
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            NameTableInstance.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.eresult != null && message.hasOwnProperty("eresult"))
                    if (!$util.isInteger(message.eresult))
                        return "eresult: integer expected";
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                        return "steamid: integer|Long expected";
                if (message.names != null && message.hasOwnProperty("names")) {
                    if (!Array.isArray(message.names))
                        return "names: array expected";
                    for (var i = 0; i < message.names.length; ++i) {
                        var error = $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.verify(message.names[i]);
                        if (error)
                            return "names." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a NameTableInstance message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance} NameTableInstance
             */
            NameTableInstance.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance)
                    return object;
                var message = new $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance();
                if (object.eresult != null)
                    message.eresult = object.eresult | 0;
                if (object.steamid != null)
                    if ($util.Long)
                        (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                    else if (typeof object.steamid === "string")
                        message.steamid = parseInt(object.steamid, 10);
                    else if (typeof object.steamid === "number")
                        message.steamid = object.steamid;
                    else if (typeof object.steamid === "object")
                        message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
                if (object.names) {
                    if (!Array.isArray(object.names))
                        throw TypeError(".CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.names: array expected");
                    message.names = [];
                    for (var i = 0; i < object.names.length; ++i) {
                        if (typeof object.names[i] !== "object")
                            throw TypeError(".CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.names: object expected");
                        message.names[i] = $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.fromObject(object.names[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from a NameTableInstance message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @static
             * @param {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance} message NameTableInstance
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            NameTableInstance.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.names = [];
                if (options.defaults) {
                    object.eresult = 2;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.steamid = options.longs === String ? "0" : 0;
                }
                if (message.eresult != null && message.hasOwnProperty("eresult"))
                    object.eresult = message.eresult;
                if (message.steamid != null && message.hasOwnProperty("steamid"))
                    if (typeof message.steamid === "number")
                        object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                    else
                        object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
                if (message.names && message.names.length) {
                    object.names = [];
                    for (var j = 0; j < message.names.length; ++j)
                        object.names[j] = $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.toObject(message.names[j], options);
                }
                return object;
            };
    
            /**
             * Converts this NameTableInstance to JSON.
             * @function toJSON
             * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            NameTableInstance.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            NameTableInstance.NameInstance = (function() {
    
                /**
                 * Properties of a NameInstance.
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
                 * @interface INameInstance
                 * @property {number|null} [name_since] NameInstance name_since
                 * @property {string|null} [name] NameInstance name
                 */
    
                /**
                 * Constructs a new NameInstance.
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance
                 * @classdesc Represents a NameInstance.
                 * @implements INameInstance
                 * @constructor
                 * @param {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.INameInstance=} [properties] Properties to set
                 */
                function NameInstance(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NameInstance name_since.
                 * @member {number} name_since
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @instance
                 */
                NameInstance.prototype.name_since = 0;
    
                /**
                 * NameInstance name.
                 * @member {string} name
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @instance
                 */
                NameInstance.prototype.name = "";
    
                /**
                 * Creates a new NameInstance instance using the specified properties.
                 * @function create
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @static
                 * @param {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.INameInstance=} [properties] Properties to set
                 * @returns {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance} NameInstance instance
                 */
                NameInstance.create = function create(properties) {
                    return new NameInstance(properties);
                };
    
                /**
                 * Encodes the specified NameInstance message. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.verify|verify} messages.
                 * @function encode
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @static
                 * @param {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.INameInstance} message NameInstance message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NameInstance.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name_since != null && Object.hasOwnProperty.call(message, "name_since"))
                        writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.name_since);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified NameInstance message, length delimited. Does not implicitly {@link CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @static
                 * @param {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.INameInstance} message NameInstance message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NameInstance.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NameInstance message from the specified reader or buffer.
                 * @function decode
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance} NameInstance
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NameInstance.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name_since = reader.fixed32();
                            break;
                        case 2:
                            message.name = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NameInstance message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance} NameInstance
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NameInstance.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NameInstance message.
                 * @function verify
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NameInstance.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name_since != null && message.hasOwnProperty("name_since"))
                        if (!$util.isInteger(message.name_since))
                            return "name_since: integer expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a NameInstance message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance} NameInstance
                 */
                NameInstance.fromObject = function fromObject(object) {
                    if (object instanceof $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance)
                        return object;
                    var message = new $root.CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance();
                    if (object.name_since != null)
                        message.name_since = object.name_since >>> 0;
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a NameInstance message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @static
                 * @param {CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance} message NameInstance
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NameInstance.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name_since = 0;
                        object.name = "";
                    }
                    if (message.name_since != null && message.hasOwnProperty("name_since"))
                        object.name_since = message.name_since;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this NameInstance to JSON.
                 * @function toJSON
                 * @memberof CMsgClientAMGetPersonaNameHistoryResponse.NameTableInstance.NameInstance
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NameInstance.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return NameInstance;
            })();
    
            return NameTableInstance;
        })();
    
        return CMsgClientAMGetPersonaNameHistoryResponse;
    })();
    
    $root.CMsgClientDeregisterWithServer = (function() {
    
        /**
         * Properties of a CMsgClientDeregisterWithServer.
         * @exports ICMsgClientDeregisterWithServer
         * @interface ICMsgClientDeregisterWithServer
         * @property {number|null} [eservertype] CMsgClientDeregisterWithServer eservertype
         * @property {number|null} [app_id] CMsgClientDeregisterWithServer app_id
         */
    
        /**
         * Constructs a new CMsgClientDeregisterWithServer.
         * @exports CMsgClientDeregisterWithServer
         * @classdesc Represents a CMsgClientDeregisterWithServer.
         * @implements ICMsgClientDeregisterWithServer
         * @constructor
         * @param {ICMsgClientDeregisterWithServer=} [properties] Properties to set
         */
        function CMsgClientDeregisterWithServer(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientDeregisterWithServer eservertype.
         * @member {number} eservertype
         * @memberof CMsgClientDeregisterWithServer
         * @instance
         */
        CMsgClientDeregisterWithServer.prototype.eservertype = 0;
    
        /**
         * CMsgClientDeregisterWithServer app_id.
         * @member {number} app_id
         * @memberof CMsgClientDeregisterWithServer
         * @instance
         */
        CMsgClientDeregisterWithServer.prototype.app_id = 0;
    
        /**
         * Creates a new CMsgClientDeregisterWithServer instance using the specified properties.
         * @function create
         * @memberof CMsgClientDeregisterWithServer
         * @static
         * @param {ICMsgClientDeregisterWithServer=} [properties] Properties to set
         * @returns {CMsgClientDeregisterWithServer} CMsgClientDeregisterWithServer instance
         */
        CMsgClientDeregisterWithServer.create = function create(properties) {
            return new CMsgClientDeregisterWithServer(properties);
        };
    
        /**
         * Encodes the specified CMsgClientDeregisterWithServer message. Does not implicitly {@link CMsgClientDeregisterWithServer.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientDeregisterWithServer
         * @static
         * @param {ICMsgClientDeregisterWithServer} message CMsgClientDeregisterWithServer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeregisterWithServer.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eservertype != null && Object.hasOwnProperty.call(message, "eservertype"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.eservertype);
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.app_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientDeregisterWithServer message, length delimited. Does not implicitly {@link CMsgClientDeregisterWithServer.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientDeregisterWithServer
         * @static
         * @param {ICMsgClientDeregisterWithServer} message CMsgClientDeregisterWithServer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientDeregisterWithServer.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientDeregisterWithServer message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientDeregisterWithServer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientDeregisterWithServer} CMsgClientDeregisterWithServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeregisterWithServer.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientDeregisterWithServer();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.eservertype = reader.uint32();
                    break;
                case 2:
                    message.app_id = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientDeregisterWithServer message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientDeregisterWithServer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientDeregisterWithServer} CMsgClientDeregisterWithServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientDeregisterWithServer.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientDeregisterWithServer message.
         * @function verify
         * @memberof CMsgClientDeregisterWithServer
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientDeregisterWithServer.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eservertype != null && message.hasOwnProperty("eservertype"))
                if (!$util.isInteger(message.eservertype))
                    return "eservertype: integer expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientDeregisterWithServer message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientDeregisterWithServer
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientDeregisterWithServer} CMsgClientDeregisterWithServer
         */
        CMsgClientDeregisterWithServer.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientDeregisterWithServer)
                return object;
            var message = new $root.CMsgClientDeregisterWithServer();
            if (object.eservertype != null)
                message.eservertype = object.eservertype >>> 0;
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientDeregisterWithServer message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientDeregisterWithServer
         * @static
         * @param {CMsgClientDeregisterWithServer} message CMsgClientDeregisterWithServer
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientDeregisterWithServer.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.eservertype = 0;
                object.app_id = 0;
            }
            if (message.eservertype != null && message.hasOwnProperty("eservertype"))
                object.eservertype = message.eservertype;
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            return object;
        };
    
        /**
         * Converts this CMsgClientDeregisterWithServer to JSON.
         * @function toJSON
         * @memberof CMsgClientDeregisterWithServer
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientDeregisterWithServer.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientDeregisterWithServer;
    })();
    
    $root.CMsgClientClanState = (function() {
    
        /**
         * Properties of a CMsgClientClanState.
         * @exports ICMsgClientClanState
         * @interface ICMsgClientClanState
         * @property {number|Long|null} [steamid_clan] CMsgClientClanState steamid_clan
         * @property {number|null} [clan_account_flags] CMsgClientClanState clan_account_flags
         * @property {CMsgClientClanState.INameInfo|null} [name_info] CMsgClientClanState name_info
         * @property {CMsgClientClanState.IUserCounts|null} [user_counts] CMsgClientClanState user_counts
         * @property {Array.<CMsgClientClanState.IEvent>|null} [events] CMsgClientClanState events
         * @property {Array.<CMsgClientClanState.IEvent>|null} [announcements] CMsgClientClanState announcements
         * @property {boolean|null} [chat_room_private] CMsgClientClanState chat_room_private
         */
    
        /**
         * Constructs a new CMsgClientClanState.
         * @exports CMsgClientClanState
         * @classdesc Represents a CMsgClientClanState.
         * @implements ICMsgClientClanState
         * @constructor
         * @param {ICMsgClientClanState=} [properties] Properties to set
         */
        function CMsgClientClanState(properties) {
            this.events = [];
            this.announcements = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientClanState steamid_clan.
         * @member {number|Long} steamid_clan
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.steamid_clan = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgClientClanState clan_account_flags.
         * @member {number} clan_account_flags
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.clan_account_flags = 0;
    
        /**
         * CMsgClientClanState name_info.
         * @member {CMsgClientClanState.INameInfo|null|undefined} name_info
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.name_info = null;
    
        /**
         * CMsgClientClanState user_counts.
         * @member {CMsgClientClanState.IUserCounts|null|undefined} user_counts
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.user_counts = null;
    
        /**
         * CMsgClientClanState events.
         * @member {Array.<CMsgClientClanState.IEvent>} events
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.events = $util.emptyArray;
    
        /**
         * CMsgClientClanState announcements.
         * @member {Array.<CMsgClientClanState.IEvent>} announcements
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.announcements = $util.emptyArray;
    
        /**
         * CMsgClientClanState chat_room_private.
         * @member {boolean} chat_room_private
         * @memberof CMsgClientClanState
         * @instance
         */
        CMsgClientClanState.prototype.chat_room_private = false;
    
        /**
         * Creates a new CMsgClientClanState instance using the specified properties.
         * @function create
         * @memberof CMsgClientClanState
         * @static
         * @param {ICMsgClientClanState=} [properties] Properties to set
         * @returns {CMsgClientClanState} CMsgClientClanState instance
         */
        CMsgClientClanState.create = function create(properties) {
            return new CMsgClientClanState(properties);
        };
    
        /**
         * Encodes the specified CMsgClientClanState message. Does not implicitly {@link CMsgClientClanState.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientClanState
         * @static
         * @param {ICMsgClientClanState} message CMsgClientClanState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid_clan != null && Object.hasOwnProperty.call(message, "steamid_clan"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid_clan);
            if (message.clan_account_flags != null && Object.hasOwnProperty.call(message, "clan_account_flags"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.clan_account_flags);
            if (message.name_info != null && Object.hasOwnProperty.call(message, "name_info"))
                $root.CMsgClientClanState.NameInfo.encode(message.name_info, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.user_counts != null && Object.hasOwnProperty.call(message, "user_counts"))
                $root.CMsgClientClanState.UserCounts.encode(message.user_counts, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.events != null && message.events.length)
                for (var i = 0; i < message.events.length; ++i)
                    $root.CMsgClientClanState.Event.encode(message.events[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            if (message.announcements != null && message.announcements.length)
                for (var i = 0; i < message.announcements.length; ++i)
                    $root.CMsgClientClanState.Event.encode(message.announcements[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            if (message.chat_room_private != null && Object.hasOwnProperty.call(message, "chat_room_private"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.chat_room_private);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientClanState message, length delimited. Does not implicitly {@link CMsgClientClanState.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientClanState
         * @static
         * @param {ICMsgClientClanState} message CMsgClientClanState message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientClanState.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientClanState message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientClanState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientClanState} CMsgClientClanState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientClanState();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid_clan = reader.fixed64();
                    break;
                case 3:
                    message.clan_account_flags = reader.uint32();
                    break;
                case 4:
                    message.name_info = $root.CMsgClientClanState.NameInfo.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.user_counts = $root.CMsgClientClanState.UserCounts.decode(reader, reader.uint32());
                    break;
                case 6:
                    if (!(message.events && message.events.length))
                        message.events = [];
                    message.events.push($root.CMsgClientClanState.Event.decode(reader, reader.uint32()));
                    break;
                case 7:
                    if (!(message.announcements && message.announcements.length))
                        message.announcements = [];
                    message.announcements.push($root.CMsgClientClanState.Event.decode(reader, reader.uint32()));
                    break;
                case 8:
                    message.chat_room_private = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientClanState message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientClanState
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientClanState} CMsgClientClanState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientClanState.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientClanState message.
         * @function verify
         * @memberof CMsgClientClanState
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientClanState.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                if (!$util.isInteger(message.steamid_clan) && !(message.steamid_clan && $util.isInteger(message.steamid_clan.low) && $util.isInteger(message.steamid_clan.high)))
                    return "steamid_clan: integer|Long expected";
            if (message.clan_account_flags != null && message.hasOwnProperty("clan_account_flags"))
                if (!$util.isInteger(message.clan_account_flags))
                    return "clan_account_flags: integer expected";
            if (message.name_info != null && message.hasOwnProperty("name_info")) {
                var error = $root.CMsgClientClanState.NameInfo.verify(message.name_info);
                if (error)
                    return "name_info." + error;
            }
            if (message.user_counts != null && message.hasOwnProperty("user_counts")) {
                var error = $root.CMsgClientClanState.UserCounts.verify(message.user_counts);
                if (error)
                    return "user_counts." + error;
            }
            if (message.events != null && message.hasOwnProperty("events")) {
                if (!Array.isArray(message.events))
                    return "events: array expected";
                for (var i = 0; i < message.events.length; ++i) {
                    var error = $root.CMsgClientClanState.Event.verify(message.events[i]);
                    if (error)
                        return "events." + error;
                }
            }
            if (message.announcements != null && message.hasOwnProperty("announcements")) {
                if (!Array.isArray(message.announcements))
                    return "announcements: array expected";
                for (var i = 0; i < message.announcements.length; ++i) {
                    var error = $root.CMsgClientClanState.Event.verify(message.announcements[i]);
                    if (error)
                        return "announcements." + error;
                }
            }
            if (message.chat_room_private != null && message.hasOwnProperty("chat_room_private"))
                if (typeof message.chat_room_private !== "boolean")
                    return "chat_room_private: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientClanState message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientClanState
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientClanState} CMsgClientClanState
         */
        CMsgClientClanState.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientClanState)
                return object;
            var message = new $root.CMsgClientClanState();
            if (object.steamid_clan != null)
                if ($util.Long)
                    (message.steamid_clan = $util.Long.fromValue(object.steamid_clan)).unsigned = false;
                else if (typeof object.steamid_clan === "string")
                    message.steamid_clan = parseInt(object.steamid_clan, 10);
                else if (typeof object.steamid_clan === "number")
                    message.steamid_clan = object.steamid_clan;
                else if (typeof object.steamid_clan === "object")
                    message.steamid_clan = new $util.LongBits(object.steamid_clan.low >>> 0, object.steamid_clan.high >>> 0).toNumber();
            if (object.clan_account_flags != null)
                message.clan_account_flags = object.clan_account_flags >>> 0;
            if (object.name_info != null) {
                if (typeof object.name_info !== "object")
                    throw TypeError(".CMsgClientClanState.name_info: object expected");
                message.name_info = $root.CMsgClientClanState.NameInfo.fromObject(object.name_info);
            }
            if (object.user_counts != null) {
                if (typeof object.user_counts !== "object")
                    throw TypeError(".CMsgClientClanState.user_counts: object expected");
                message.user_counts = $root.CMsgClientClanState.UserCounts.fromObject(object.user_counts);
            }
            if (object.events) {
                if (!Array.isArray(object.events))
                    throw TypeError(".CMsgClientClanState.events: array expected");
                message.events = [];
                for (var i = 0; i < object.events.length; ++i) {
                    if (typeof object.events[i] !== "object")
                        throw TypeError(".CMsgClientClanState.events: object expected");
                    message.events[i] = $root.CMsgClientClanState.Event.fromObject(object.events[i]);
                }
            }
            if (object.announcements) {
                if (!Array.isArray(object.announcements))
                    throw TypeError(".CMsgClientClanState.announcements: array expected");
                message.announcements = [];
                for (var i = 0; i < object.announcements.length; ++i) {
                    if (typeof object.announcements[i] !== "object")
                        throw TypeError(".CMsgClientClanState.announcements: object expected");
                    message.announcements[i] = $root.CMsgClientClanState.Event.fromObject(object.announcements[i]);
                }
            }
            if (object.chat_room_private != null)
                message.chat_room_private = Boolean(object.chat_room_private);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientClanState message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientClanState
         * @static
         * @param {CMsgClientClanState} message CMsgClientClanState
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientClanState.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.events = [];
                object.announcements = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid_clan = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid_clan = options.longs === String ? "0" : 0;
                object.clan_account_flags = 0;
                object.name_info = null;
                object.user_counts = null;
                object.chat_room_private = false;
            }
            if (message.steamid_clan != null && message.hasOwnProperty("steamid_clan"))
                if (typeof message.steamid_clan === "number")
                    object.steamid_clan = options.longs === String ? String(message.steamid_clan) : message.steamid_clan;
                else
                    object.steamid_clan = options.longs === String ? $util.Long.prototype.toString.call(message.steamid_clan) : options.longs === Number ? new $util.LongBits(message.steamid_clan.low >>> 0, message.steamid_clan.high >>> 0).toNumber() : message.steamid_clan;
            if (message.clan_account_flags != null && message.hasOwnProperty("clan_account_flags"))
                object.clan_account_flags = message.clan_account_flags;
            if (message.name_info != null && message.hasOwnProperty("name_info"))
                object.name_info = $root.CMsgClientClanState.NameInfo.toObject(message.name_info, options);
            if (message.user_counts != null && message.hasOwnProperty("user_counts"))
                object.user_counts = $root.CMsgClientClanState.UserCounts.toObject(message.user_counts, options);
            if (message.events && message.events.length) {
                object.events = [];
                for (var j = 0; j < message.events.length; ++j)
                    object.events[j] = $root.CMsgClientClanState.Event.toObject(message.events[j], options);
            }
            if (message.announcements && message.announcements.length) {
                object.announcements = [];
                for (var j = 0; j < message.announcements.length; ++j)
                    object.announcements[j] = $root.CMsgClientClanState.Event.toObject(message.announcements[j], options);
            }
            if (message.chat_room_private != null && message.hasOwnProperty("chat_room_private"))
                object.chat_room_private = message.chat_room_private;
            return object;
        };
    
        /**
         * Converts this CMsgClientClanState to JSON.
         * @function toJSON
         * @memberof CMsgClientClanState
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientClanState.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        CMsgClientClanState.NameInfo = (function() {
    
            /**
             * Properties of a NameInfo.
             * @memberof CMsgClientClanState
             * @interface INameInfo
             * @property {string|null} [clan_name] NameInfo clan_name
             * @property {Uint8Array|null} [sha_avatar] NameInfo sha_avatar
             */
    
            /**
             * Constructs a new NameInfo.
             * @memberof CMsgClientClanState
             * @classdesc Represents a NameInfo.
             * @implements INameInfo
             * @constructor
             * @param {CMsgClientClanState.INameInfo=} [properties] Properties to set
             */
            function NameInfo(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * NameInfo clan_name.
             * @member {string} clan_name
             * @memberof CMsgClientClanState.NameInfo
             * @instance
             */
            NameInfo.prototype.clan_name = "";
    
            /**
             * NameInfo sha_avatar.
             * @member {Uint8Array} sha_avatar
             * @memberof CMsgClientClanState.NameInfo
             * @instance
             */
            NameInfo.prototype.sha_avatar = $util.newBuffer([]);
    
            /**
             * Creates a new NameInfo instance using the specified properties.
             * @function create
             * @memberof CMsgClientClanState.NameInfo
             * @static
             * @param {CMsgClientClanState.INameInfo=} [properties] Properties to set
             * @returns {CMsgClientClanState.NameInfo} NameInfo instance
             */
            NameInfo.create = function create(properties) {
                return new NameInfo(properties);
            };
    
            /**
             * Encodes the specified NameInfo message. Does not implicitly {@link CMsgClientClanState.NameInfo.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientClanState.NameInfo
             * @static
             * @param {CMsgClientClanState.INameInfo} message NameInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            NameInfo.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.clan_name != null && Object.hasOwnProperty.call(message, "clan_name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.clan_name);
                if (message.sha_avatar != null && Object.hasOwnProperty.call(message, "sha_avatar"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.sha_avatar);
                return writer;
            };
    
            /**
             * Encodes the specified NameInfo message, length delimited. Does not implicitly {@link CMsgClientClanState.NameInfo.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientClanState.NameInfo
             * @static
             * @param {CMsgClientClanState.INameInfo} message NameInfo message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            NameInfo.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a NameInfo message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientClanState.NameInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientClanState.NameInfo} NameInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            NameInfo.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientClanState.NameInfo();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.clan_name = reader.string();
                        break;
                    case 2:
                        message.sha_avatar = reader.bytes();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a NameInfo message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientClanState.NameInfo
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientClanState.NameInfo} NameInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            NameInfo.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a NameInfo message.
             * @function verify
             * @memberof CMsgClientClanState.NameInfo
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            NameInfo.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.clan_name != null && message.hasOwnProperty("clan_name"))
                    if (!$util.isString(message.clan_name))
                        return "clan_name: string expected";
                if (message.sha_avatar != null && message.hasOwnProperty("sha_avatar"))
                    if (!(message.sha_avatar && typeof message.sha_avatar.length === "number" || $util.isString(message.sha_avatar)))
                        return "sha_avatar: buffer expected";
                return null;
            };
    
            /**
             * Creates a NameInfo message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientClanState.NameInfo
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientClanState.NameInfo} NameInfo
             */
            NameInfo.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientClanState.NameInfo)
                    return object;
                var message = new $root.CMsgClientClanState.NameInfo();
                if (object.clan_name != null)
                    message.clan_name = String(object.clan_name);
                if (object.sha_avatar != null)
                    if (typeof object.sha_avatar === "string")
                        $util.base64.decode(object.sha_avatar, message.sha_avatar = $util.newBuffer($util.base64.length(object.sha_avatar)), 0);
                    else if (object.sha_avatar.length)
                        message.sha_avatar = object.sha_avatar;
                return message;
            };
    
            /**
             * Creates a plain object from a NameInfo message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientClanState.NameInfo
             * @static
             * @param {CMsgClientClanState.NameInfo} message NameInfo
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            NameInfo.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.clan_name = "";
                    if (options.bytes === String)
                        object.sha_avatar = "";
                    else {
                        object.sha_avatar = [];
                        if (options.bytes !== Array)
                            object.sha_avatar = $util.newBuffer(object.sha_avatar);
                    }
                }
                if (message.clan_name != null && message.hasOwnProperty("clan_name"))
                    object.clan_name = message.clan_name;
                if (message.sha_avatar != null && message.hasOwnProperty("sha_avatar"))
                    object.sha_avatar = options.bytes === String ? $util.base64.encode(message.sha_avatar, 0, message.sha_avatar.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha_avatar) : message.sha_avatar;
                return object;
            };
    
            /**
             * Converts this NameInfo to JSON.
             * @function toJSON
             * @memberof CMsgClientClanState.NameInfo
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            NameInfo.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return NameInfo;
        })();
    
        CMsgClientClanState.UserCounts = (function() {
    
            /**
             * Properties of a UserCounts.
             * @memberof CMsgClientClanState
             * @interface IUserCounts
             * @property {number|null} [members] UserCounts members
             * @property {number|null} [online] UserCounts online
             * @property {number|null} [chatting] UserCounts chatting
             * @property {number|null} [in_game] UserCounts in_game
             * @property {number|null} [chat_room_members] UserCounts chat_room_members
             */
    
            /**
             * Constructs a new UserCounts.
             * @memberof CMsgClientClanState
             * @classdesc Represents a UserCounts.
             * @implements IUserCounts
             * @constructor
             * @param {CMsgClientClanState.IUserCounts=} [properties] Properties to set
             */
            function UserCounts(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * UserCounts members.
             * @member {number} members
             * @memberof CMsgClientClanState.UserCounts
             * @instance
             */
            UserCounts.prototype.members = 0;
    
            /**
             * UserCounts online.
             * @member {number} online
             * @memberof CMsgClientClanState.UserCounts
             * @instance
             */
            UserCounts.prototype.online = 0;
    
            /**
             * UserCounts chatting.
             * @member {number} chatting
             * @memberof CMsgClientClanState.UserCounts
             * @instance
             */
            UserCounts.prototype.chatting = 0;
    
            /**
             * UserCounts in_game.
             * @member {number} in_game
             * @memberof CMsgClientClanState.UserCounts
             * @instance
             */
            UserCounts.prototype.in_game = 0;
    
            /**
             * UserCounts chat_room_members.
             * @member {number} chat_room_members
             * @memberof CMsgClientClanState.UserCounts
             * @instance
             */
            UserCounts.prototype.chat_room_members = 0;
    
            /**
             * Creates a new UserCounts instance using the specified properties.
             * @function create
             * @memberof CMsgClientClanState.UserCounts
             * @static
             * @param {CMsgClientClanState.IUserCounts=} [properties] Properties to set
             * @returns {CMsgClientClanState.UserCounts} UserCounts instance
             */
            UserCounts.create = function create(properties) {
                return new UserCounts(properties);
            };
    
            /**
             * Encodes the specified UserCounts message. Does not implicitly {@link CMsgClientClanState.UserCounts.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientClanState.UserCounts
             * @static
             * @param {CMsgClientClanState.IUserCounts} message UserCounts message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UserCounts.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.members != null && Object.hasOwnProperty.call(message, "members"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.members);
                if (message.online != null && Object.hasOwnProperty.call(message, "online"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.online);
                if (message.chatting != null && Object.hasOwnProperty.call(message, "chatting"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.chatting);
                if (message.in_game != null && Object.hasOwnProperty.call(message, "in_game"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.in_game);
                if (message.chat_room_members != null && Object.hasOwnProperty.call(message, "chat_room_members"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.chat_room_members);
                return writer;
            };
    
            /**
             * Encodes the specified UserCounts message, length delimited. Does not implicitly {@link CMsgClientClanState.UserCounts.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientClanState.UserCounts
             * @static
             * @param {CMsgClientClanState.IUserCounts} message UserCounts message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UserCounts.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a UserCounts message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientClanState.UserCounts
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientClanState.UserCounts} UserCounts
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UserCounts.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientClanState.UserCounts();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.members = reader.uint32();
                        break;
                    case 2:
                        message.online = reader.uint32();
                        break;
                    case 3:
                        message.chatting = reader.uint32();
                        break;
                    case 4:
                        message.in_game = reader.uint32();
                        break;
                    case 5:
                        message.chat_room_members = reader.uint32();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a UserCounts message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientClanState.UserCounts
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientClanState.UserCounts} UserCounts
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UserCounts.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a UserCounts message.
             * @function verify
             * @memberof CMsgClientClanState.UserCounts
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UserCounts.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.members != null && message.hasOwnProperty("members"))
                    if (!$util.isInteger(message.members))
                        return "members: integer expected";
                if (message.online != null && message.hasOwnProperty("online"))
                    if (!$util.isInteger(message.online))
                        return "online: integer expected";
                if (message.chatting != null && message.hasOwnProperty("chatting"))
                    if (!$util.isInteger(message.chatting))
                        return "chatting: integer expected";
                if (message.in_game != null && message.hasOwnProperty("in_game"))
                    if (!$util.isInteger(message.in_game))
                        return "in_game: integer expected";
                if (message.chat_room_members != null && message.hasOwnProperty("chat_room_members"))
                    if (!$util.isInteger(message.chat_room_members))
                        return "chat_room_members: integer expected";
                return null;
            };
    
            /**
             * Creates a UserCounts message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientClanState.UserCounts
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientClanState.UserCounts} UserCounts
             */
            UserCounts.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientClanState.UserCounts)
                    return object;
                var message = new $root.CMsgClientClanState.UserCounts();
                if (object.members != null)
                    message.members = object.members >>> 0;
                if (object.online != null)
                    message.online = object.online >>> 0;
                if (object.chatting != null)
                    message.chatting = object.chatting >>> 0;
                if (object.in_game != null)
                    message.in_game = object.in_game >>> 0;
                if (object.chat_room_members != null)
                    message.chat_room_members = object.chat_room_members >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a UserCounts message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientClanState.UserCounts
             * @static
             * @param {CMsgClientClanState.UserCounts} message UserCounts
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UserCounts.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.members = 0;
                    object.online = 0;
                    object.chatting = 0;
                    object.in_game = 0;
                    object.chat_room_members = 0;
                }
                if (message.members != null && message.hasOwnProperty("members"))
                    object.members = message.members;
                if (message.online != null && message.hasOwnProperty("online"))
                    object.online = message.online;
                if (message.chatting != null && message.hasOwnProperty("chatting"))
                    object.chatting = message.chatting;
                if (message.in_game != null && message.hasOwnProperty("in_game"))
                    object.in_game = message.in_game;
                if (message.chat_room_members != null && message.hasOwnProperty("chat_room_members"))
                    object.chat_room_members = message.chat_room_members;
                return object;
            };
    
            /**
             * Converts this UserCounts to JSON.
             * @function toJSON
             * @memberof CMsgClientClanState.UserCounts
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UserCounts.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return UserCounts;
        })();
    
        CMsgClientClanState.Event = (function() {
    
            /**
             * Properties of an Event.
             * @memberof CMsgClientClanState
             * @interface IEvent
             * @property {number|Long|null} [gid] Event gid
             * @property {number|null} [event_time] Event event_time
             * @property {string|null} [headline] Event headline
             * @property {number|Long|null} [game_id] Event game_id
             * @property {boolean|null} [just_posted] Event just_posted
             */
    
            /**
             * Constructs a new Event.
             * @memberof CMsgClientClanState
             * @classdesc Represents an Event.
             * @implements IEvent
             * @constructor
             * @param {CMsgClientClanState.IEvent=} [properties] Properties to set
             */
            function Event(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Event gid.
             * @member {number|Long} gid
             * @memberof CMsgClientClanState.Event
             * @instance
             */
            Event.prototype.gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Event event_time.
             * @member {number} event_time
             * @memberof CMsgClientClanState.Event
             * @instance
             */
            Event.prototype.event_time = 0;
    
            /**
             * Event headline.
             * @member {string} headline
             * @memberof CMsgClientClanState.Event
             * @instance
             */
            Event.prototype.headline = "";
    
            /**
             * Event game_id.
             * @member {number|Long} game_id
             * @memberof CMsgClientClanState.Event
             * @instance
             */
            Event.prototype.game_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
            /**
             * Event just_posted.
             * @member {boolean} just_posted
             * @memberof CMsgClientClanState.Event
             * @instance
             */
            Event.prototype.just_posted = false;
    
            /**
             * Creates a new Event instance using the specified properties.
             * @function create
             * @memberof CMsgClientClanState.Event
             * @static
             * @param {CMsgClientClanState.IEvent=} [properties] Properties to set
             * @returns {CMsgClientClanState.Event} Event instance
             */
            Event.create = function create(properties) {
                return new Event(properties);
            };
    
            /**
             * Encodes the specified Event message. Does not implicitly {@link CMsgClientClanState.Event.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientClanState.Event
             * @static
             * @param {CMsgClientClanState.IEvent} message Event message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Event.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.gid != null && Object.hasOwnProperty.call(message, "gid"))
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.gid);
                if (message.event_time != null && Object.hasOwnProperty.call(message, "event_time"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.event_time);
                if (message.headline != null && Object.hasOwnProperty.call(message, "headline"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.headline);
                if (message.game_id != null && Object.hasOwnProperty.call(message, "game_id"))
                    writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.game_id);
                if (message.just_posted != null && Object.hasOwnProperty.call(message, "just_posted"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.just_posted);
                return writer;
            };
    
            /**
             * Encodes the specified Event message, length delimited. Does not implicitly {@link CMsgClientClanState.Event.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientClanState.Event
             * @static
             * @param {CMsgClientClanState.IEvent} message Event message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Event.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an Event message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientClanState.Event
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientClanState.Event} Event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Event.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientClanState.Event();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1:
                        message.gid = reader.fixed64();
                        break;
                    case 2:
                        message.event_time = reader.uint32();
                        break;
                    case 3:
                        message.headline = reader.string();
                        break;
                    case 4:
                        message.game_id = reader.fixed64();
                        break;
                    case 5:
                        message.just_posted = reader.bool();
                        break;
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an Event message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientClanState.Event
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientClanState.Event} Event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Event.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an Event message.
             * @function verify
             * @memberof CMsgClientClanState.Event
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Event.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.gid != null && message.hasOwnProperty("gid"))
                    if (!$util.isInteger(message.gid) && !(message.gid && $util.isInteger(message.gid.low) && $util.isInteger(message.gid.high)))
                        return "gid: integer|Long expected";
                if (message.event_time != null && message.hasOwnProperty("event_time"))
                    if (!$util.isInteger(message.event_time))
                        return "event_time: integer expected";
                if (message.headline != null && message.hasOwnProperty("headline"))
                    if (!$util.isString(message.headline))
                        return "headline: string expected";
                if (message.game_id != null && message.hasOwnProperty("game_id"))
                    if (!$util.isInteger(message.game_id) && !(message.game_id && $util.isInteger(message.game_id.low) && $util.isInteger(message.game_id.high)))
                        return "game_id: integer|Long expected";
                if (message.just_posted != null && message.hasOwnProperty("just_posted"))
                    if (typeof message.just_posted !== "boolean")
                        return "just_posted: boolean expected";
                return null;
            };
    
            /**
             * Creates an Event message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientClanState.Event
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientClanState.Event} Event
             */
            Event.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientClanState.Event)
                    return object;
                var message = new $root.CMsgClientClanState.Event();
                if (object.gid != null)
                    if ($util.Long)
                        (message.gid = $util.Long.fromValue(object.gid)).unsigned = false;
                    else if (typeof object.gid === "string")
                        message.gid = parseInt(object.gid, 10);
                    else if (typeof object.gid === "number")
                        message.gid = object.gid;
                    else if (typeof object.gid === "object")
                        message.gid = new $util.LongBits(object.gid.low >>> 0, object.gid.high >>> 0).toNumber();
                if (object.event_time != null)
                    message.event_time = object.event_time >>> 0;
                if (object.headline != null)
                    message.headline = String(object.headline);
                if (object.game_id != null)
                    if ($util.Long)
                        (message.game_id = $util.Long.fromValue(object.game_id)).unsigned = false;
                    else if (typeof object.game_id === "string")
                        message.game_id = parseInt(object.game_id, 10);
                    else if (typeof object.game_id === "number")
                        message.game_id = object.game_id;
                    else if (typeof object.game_id === "object")
                        message.game_id = new $util.LongBits(object.game_id.low >>> 0, object.game_id.high >>> 0).toNumber();
                if (object.just_posted != null)
                    message.just_posted = Boolean(object.just_posted);
                return message;
            };
    
            /**
             * Creates a plain object from an Event message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientClanState.Event
             * @static
             * @param {CMsgClientClanState.Event} message Event
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Event.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.gid = options.longs === String ? "0" : 0;
                    object.event_time = 0;
                    object.headline = "";
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.game_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.game_id = options.longs === String ? "0" : 0;
                    object.just_posted = false;
                }
                if (message.gid != null && message.hasOwnProperty("gid"))
                    if (typeof message.gid === "number")
                        object.gid = options.longs === String ? String(message.gid) : message.gid;
                    else
                        object.gid = options.longs === String ? $util.Long.prototype.toString.call(message.gid) : options.longs === Number ? new $util.LongBits(message.gid.low >>> 0, message.gid.high >>> 0).toNumber() : message.gid;
                if (message.event_time != null && message.hasOwnProperty("event_time"))
                    object.event_time = message.event_time;
                if (message.headline != null && message.hasOwnProperty("headline"))
                    object.headline = message.headline;
                if (message.game_id != null && message.hasOwnProperty("game_id"))
                    if (typeof message.game_id === "number")
                        object.game_id = options.longs === String ? String(message.game_id) : message.game_id;
                    else
                        object.game_id = options.longs === String ? $util.Long.prototype.toString.call(message.game_id) : options.longs === Number ? new $util.LongBits(message.game_id.low >>> 0, message.game_id.high >>> 0).toNumber() : message.game_id;
                if (message.just_posted != null && message.hasOwnProperty("just_posted"))
                    object.just_posted = message.just_posted;
                return object;
            };
    
            /**
             * Converts this Event to JSON.
             * @function toJSON
             * @memberof CMsgClientClanState.Event
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Event.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            return Event;
        })();
    
        return CMsgClientClanState;
    })();
    
    $root.CMsgClientUnsignedInstallScript = (function() {
    
        /**
         * Properties of a CMsgClientUnsignedInstallScript.
         * @exports ICMsgClientUnsignedInstallScript
         * @interface ICMsgClientUnsignedInstallScript
         * @property {number|null} [app_id] CMsgClientUnsignedInstallScript app_id
         * @property {string|null} [file_name] CMsgClientUnsignedInstallScript file_name
         * @property {number|null} [file_size] CMsgClientUnsignedInstallScript file_size
         * @property {boolean|null} [signature_broken] CMsgClientUnsignedInstallScript signature_broken
         * @property {number|null} [depot_id] CMsgClientUnsignedInstallScript depot_id
         * @property {number|Long|null} [manifest_id] CMsgClientUnsignedInstallScript manifest_id
         * @property {number|null} [file_flags] CMsgClientUnsignedInstallScript file_flags
         */
    
        /**
         * Constructs a new CMsgClientUnsignedInstallScript.
         * @exports CMsgClientUnsignedInstallScript
         * @classdesc Represents a CMsgClientUnsignedInstallScript.
         * @implements ICMsgClientUnsignedInstallScript
         * @constructor
         * @param {ICMsgClientUnsignedInstallScript=} [properties] Properties to set
         */
        function CMsgClientUnsignedInstallScript(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientUnsignedInstallScript app_id.
         * @member {number} app_id
         * @memberof CMsgClientUnsignedInstallScript
         * @instance
         */
        CMsgClientUnsignedInstallScript.prototype.app_id = 0;
    
        /**
         * CMsgClientUnsignedInstallScript file_name.
         * @member {string} file_name
         * @memberof CMsgClientUnsignedInstallScript
         * @instance
         */
        CMsgClientUnsignedInstallScript.prototype.file_name = "";
    
        /**
         * CMsgClientUnsignedInstallScript file_size.
         * @member {number} file_size
         * @memberof CMsgClientUnsignedInstallScript
         * @instance
         */
        CMsgClientUnsignedInstallScript.prototype.file_size = 0;
    
        /**
         * CMsgClientUnsignedInstallScript signature_broken.
         * @member {boolean} signature_broken
         * @memberof CMsgClientUnsignedInstallScript
         * @instance
         */
        CMsgClientUnsignedInstallScript.prototype.signature_broken = false;
    
        /**
         * CMsgClientUnsignedInstallScript depot_id.
         * @member {number} depot_id
         * @memberof CMsgClientUnsignedInstallScript
         * @instance
         */
        CMsgClientUnsignedInstallScript.prototype.depot_id = 0;
    
        /**
         * CMsgClientUnsignedInstallScript manifest_id.
         * @member {number|Long} manifest_id
         * @memberof CMsgClientUnsignedInstallScript
         * @instance
         */
        CMsgClientUnsignedInstallScript.prototype.manifest_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgClientUnsignedInstallScript file_flags.
         * @member {number} file_flags
         * @memberof CMsgClientUnsignedInstallScript
         * @instance
         */
        CMsgClientUnsignedInstallScript.prototype.file_flags = 0;
    
        /**
         * Creates a new CMsgClientUnsignedInstallScript instance using the specified properties.
         * @function create
         * @memberof CMsgClientUnsignedInstallScript
         * @static
         * @param {ICMsgClientUnsignedInstallScript=} [properties] Properties to set
         * @returns {CMsgClientUnsignedInstallScript} CMsgClientUnsignedInstallScript instance
         */
        CMsgClientUnsignedInstallScript.create = function create(properties) {
            return new CMsgClientUnsignedInstallScript(properties);
        };
    
        /**
         * Encodes the specified CMsgClientUnsignedInstallScript message. Does not implicitly {@link CMsgClientUnsignedInstallScript.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientUnsignedInstallScript
         * @static
         * @param {ICMsgClientUnsignedInstallScript} message CMsgClientUnsignedInstallScript message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUnsignedInstallScript.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.app_id != null && Object.hasOwnProperty.call(message, "app_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.app_id);
            if (message.file_name != null && Object.hasOwnProperty.call(message, "file_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.file_name);
            if (message.file_size != null && Object.hasOwnProperty.call(message, "file_size"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.file_size);
            if (message.signature_broken != null && Object.hasOwnProperty.call(message, "signature_broken"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.signature_broken);
            if (message.depot_id != null && Object.hasOwnProperty.call(message, "depot_id"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.depot_id);
            if (message.manifest_id != null && Object.hasOwnProperty.call(message, "manifest_id"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.manifest_id);
            if (message.file_flags != null && Object.hasOwnProperty.call(message, "file_flags"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.file_flags);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientUnsignedInstallScript message, length delimited. Does not implicitly {@link CMsgClientUnsignedInstallScript.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientUnsignedInstallScript
         * @static
         * @param {ICMsgClientUnsignedInstallScript} message CMsgClientUnsignedInstallScript message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientUnsignedInstallScript.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientUnsignedInstallScript message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientUnsignedInstallScript
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientUnsignedInstallScript} CMsgClientUnsignedInstallScript
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUnsignedInstallScript.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientUnsignedInstallScript();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.app_id = reader.uint32();
                    break;
                case 2:
                    message.file_name = reader.string();
                    break;
                case 3:
                    message.file_size = reader.uint32();
                    break;
                case 4:
                    message.signature_broken = reader.bool();
                    break;
                case 5:
                    message.depot_id = reader.uint32();
                    break;
                case 6:
                    message.manifest_id = reader.uint64();
                    break;
                case 7:
                    message.file_flags = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientUnsignedInstallScript message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientUnsignedInstallScript
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientUnsignedInstallScript} CMsgClientUnsignedInstallScript
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientUnsignedInstallScript.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientUnsignedInstallScript message.
         * @function verify
         * @memberof CMsgClientUnsignedInstallScript
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientUnsignedInstallScript.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                if (!$util.isInteger(message.app_id))
                    return "app_id: integer expected";
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                if (!$util.isString(message.file_name))
                    return "file_name: string expected";
            if (message.file_size != null && message.hasOwnProperty("file_size"))
                if (!$util.isInteger(message.file_size))
                    return "file_size: integer expected";
            if (message.signature_broken != null && message.hasOwnProperty("signature_broken"))
                if (typeof message.signature_broken !== "boolean")
                    return "signature_broken: boolean expected";
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                if (!$util.isInteger(message.depot_id))
                    return "depot_id: integer expected";
            if (message.manifest_id != null && message.hasOwnProperty("manifest_id"))
                if (!$util.isInteger(message.manifest_id) && !(message.manifest_id && $util.isInteger(message.manifest_id.low) && $util.isInteger(message.manifest_id.high)))
                    return "manifest_id: integer|Long expected";
            if (message.file_flags != null && message.hasOwnProperty("file_flags"))
                if (!$util.isInteger(message.file_flags))
                    return "file_flags: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientUnsignedInstallScript message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientUnsignedInstallScript
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientUnsignedInstallScript} CMsgClientUnsignedInstallScript
         */
        CMsgClientUnsignedInstallScript.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientUnsignedInstallScript)
                return object;
            var message = new $root.CMsgClientUnsignedInstallScript();
            if (object.app_id != null)
                message.app_id = object.app_id >>> 0;
            if (object.file_name != null)
                message.file_name = String(object.file_name);
            if (object.file_size != null)
                message.file_size = object.file_size >>> 0;
            if (object.signature_broken != null)
                message.signature_broken = Boolean(object.signature_broken);
            if (object.depot_id != null)
                message.depot_id = object.depot_id >>> 0;
            if (object.manifest_id != null)
                if ($util.Long)
                    (message.manifest_id = $util.Long.fromValue(object.manifest_id)).unsigned = true;
                else if (typeof object.manifest_id === "string")
                    message.manifest_id = parseInt(object.manifest_id, 10);
                else if (typeof object.manifest_id === "number")
                    message.manifest_id = object.manifest_id;
                else if (typeof object.manifest_id === "object")
                    message.manifest_id = new $util.LongBits(object.manifest_id.low >>> 0, object.manifest_id.high >>> 0).toNumber(true);
            if (object.file_flags != null)
                message.file_flags = object.file_flags >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientUnsignedInstallScript message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientUnsignedInstallScript
         * @static
         * @param {CMsgClientUnsignedInstallScript} message CMsgClientUnsignedInstallScript
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientUnsignedInstallScript.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.app_id = 0;
                object.file_name = "";
                object.file_size = 0;
                object.signature_broken = false;
                object.depot_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.manifest_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.manifest_id = options.longs === String ? "0" : 0;
                object.file_flags = 0;
            }
            if (message.app_id != null && message.hasOwnProperty("app_id"))
                object.app_id = message.app_id;
            if (message.file_name != null && message.hasOwnProperty("file_name"))
                object.file_name = message.file_name;
            if (message.file_size != null && message.hasOwnProperty("file_size"))
                object.file_size = message.file_size;
            if (message.signature_broken != null && message.hasOwnProperty("signature_broken"))
                object.signature_broken = message.signature_broken;
            if (message.depot_id != null && message.hasOwnProperty("depot_id"))
                object.depot_id = message.depot_id;
            if (message.manifest_id != null && message.hasOwnProperty("manifest_id"))
                if (typeof message.manifest_id === "number")
                    object.manifest_id = options.longs === String ? String(message.manifest_id) : message.manifest_id;
                else
                    object.manifest_id = options.longs === String ? $util.Long.prototype.toString.call(message.manifest_id) : options.longs === Number ? new $util.LongBits(message.manifest_id.low >>> 0, message.manifest_id.high >>> 0).toNumber(true) : message.manifest_id;
            if (message.file_flags != null && message.hasOwnProperty("file_flags"))
                object.file_flags = message.file_flags;
            return object;
        };
    
        /**
         * Converts this CMsgClientUnsignedInstallScript to JSON.
         * @function toJSON
         * @memberof CMsgClientUnsignedInstallScript
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientUnsignedInstallScript.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgClientUnsignedInstallScript;
    })();
    
    /**
     * EProtoClanEventType enum.
     * @exports EProtoClanEventType
     * @enum {number}
     * @property {number} k_EClanOtherEvent=1 k_EClanOtherEvent value
     * @property {number} k_EClanGameEvent=2 k_EClanGameEvent value
     * @property {number} k_EClanPartyEvent=3 k_EClanPartyEvent value
     * @property {number} k_EClanMeetingEvent=4 k_EClanMeetingEvent value
     * @property {number} k_EClanSpecialCauseEvent=5 k_EClanSpecialCauseEvent value
     * @property {number} k_EClanMusicAndArtsEvent=6 k_EClanMusicAndArtsEvent value
     * @property {number} k_EClanSportsEvent=7 k_EClanSportsEvent value
     * @property {number} k_EClanTripEvent=8 k_EClanTripEvent value
     * @property {number} k_EClanChatEvent=9 k_EClanChatEvent value
     * @property {number} k_EClanGameReleaseEvent=10 k_EClanGameReleaseEvent value
     * @property {number} k_EClanBroadcastEvent=11 k_EClanBroadcastEvent value
     * @property {number} k_EClanSmallUpdateEvent=12 k_EClanSmallUpdateEvent value
     * @property {number} k_EClanPreAnnounceMajorUpdateEvent=13 k_EClanPreAnnounceMajorUpdateEvent value
     * @property {number} k_EClanMajorUpdateEvent=14 k_EClanMajorUpdateEvent value
     * @property {number} k_EClanDLCReleaseEvent=15 k_EClanDLCReleaseEvent value
     * @property {number} k_EClanFutureReleaseEvent=16 k_EClanFutureReleaseEvent value
     * @property {number} k_EClanESportTournamentStreamEvent=17 k_EClanESportTournamentStreamEvent value
     * @property {number} k_EClanDevStreamEvent=18 k_EClanDevStreamEvent value
     * @property {number} k_EClanFamousStreamEvent=19 k_EClanFamousStreamEvent value
     * @property {number} k_EClanGameSalesEvent=20 k_EClanGameSalesEvent value
     * @property {number} k_EClanGameItemSalesEvent=21 k_EClanGameItemSalesEvent value
     * @property {number} k_EClanInGameBonusXPEvent=22 k_EClanInGameBonusXPEvent value
     * @property {number} k_EClanInGameLootEvent=23 k_EClanInGameLootEvent value
     * @property {number} k_EClanInGamePerksEvent=24 k_EClanInGamePerksEvent value
     * @property {number} k_EClanInGameChallengeEvent=25 k_EClanInGameChallengeEvent value
     * @property {number} k_EClanInGameContestEvent=26 k_EClanInGameContestEvent value
     * @property {number} k_EClanIRLEvent=27 k_EClanIRLEvent value
     * @property {number} k_EClanNewsEvent=28 k_EClanNewsEvent value
     * @property {number} k_EClanBetaReleaseEvent=29 k_EClanBetaReleaseEvent value
     * @property {number} k_EClanInGameContentReleaseEvent=30 k_EClanInGameContentReleaseEvent value
     * @property {number} k_EClanFreeTrial=31 k_EClanFreeTrial value
     * @property {number} k_EClanSeasonRelease=32 k_EClanSeasonRelease value
     * @property {number} k_EClanSeasonUpdate=33 k_EClanSeasonUpdate value
     * @property {number} k_EClanCrosspostEvent=34 k_EClanCrosspostEvent value
     * @property {number} k_EClanInGameEventGeneral=35 k_EClanInGameEventGeneral value
     */
    $root.EProtoClanEventType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[1] = "k_EClanOtherEvent"] = 1;
        values[valuesById[2] = "k_EClanGameEvent"] = 2;
        values[valuesById[3] = "k_EClanPartyEvent"] = 3;
        values[valuesById[4] = "k_EClanMeetingEvent"] = 4;
        values[valuesById[5] = "k_EClanSpecialCauseEvent"] = 5;
        values[valuesById[6] = "k_EClanMusicAndArtsEvent"] = 6;
        values[valuesById[7] = "k_EClanSportsEvent"] = 7;
        values[valuesById[8] = "k_EClanTripEvent"] = 8;
        values[valuesById[9] = "k_EClanChatEvent"] = 9;
        values[valuesById[10] = "k_EClanGameReleaseEvent"] = 10;
        values[valuesById[11] = "k_EClanBroadcastEvent"] = 11;
        values[valuesById[12] = "k_EClanSmallUpdateEvent"] = 12;
        values[valuesById[13] = "k_EClanPreAnnounceMajorUpdateEvent"] = 13;
        values[valuesById[14] = "k_EClanMajorUpdateEvent"] = 14;
        values[valuesById[15] = "k_EClanDLCReleaseEvent"] = 15;
        values[valuesById[16] = "k_EClanFutureReleaseEvent"] = 16;
        values[valuesById[17] = "k_EClanESportTournamentStreamEvent"] = 17;
        values[valuesById[18] = "k_EClanDevStreamEvent"] = 18;
        values[valuesById[19] = "k_EClanFamousStreamEvent"] = 19;
        values[valuesById[20] = "k_EClanGameSalesEvent"] = 20;
        values[valuesById[21] = "k_EClanGameItemSalesEvent"] = 21;
        values[valuesById[22] = "k_EClanInGameBonusXPEvent"] = 22;
        values[valuesById[23] = "k_EClanInGameLootEvent"] = 23;
        values[valuesById[24] = "k_EClanInGamePerksEvent"] = 24;
        values[valuesById[25] = "k_EClanInGameChallengeEvent"] = 25;
        values[valuesById[26] = "k_EClanInGameContestEvent"] = 26;
        values[valuesById[27] = "k_EClanIRLEvent"] = 27;
        values[valuesById[28] = "k_EClanNewsEvent"] = 28;
        values[valuesById[29] = "k_EClanBetaReleaseEvent"] = 29;
        values[valuesById[30] = "k_EClanInGameContentReleaseEvent"] = 30;
        values[valuesById[31] = "k_EClanFreeTrial"] = 31;
        values[valuesById[32] = "k_EClanSeasonRelease"] = 32;
        values[valuesById[33] = "k_EClanSeasonUpdate"] = 33;
        values[valuesById[34] = "k_EClanCrosspostEvent"] = 34;
        values[valuesById[35] = "k_EClanInGameEventGeneral"] = 35;
        return values;
    })();
    
    /**
     * PartnerEventNotificationType enum.
     * @exports PartnerEventNotificationType
     * @enum {number}
     * @property {number} k_EEventStart=0 k_EEventStart value
     * @property {number} k_EEventBroadcastStart=1 k_EEventBroadcastStart value
     * @property {number} k_EEventMatchStart=2 k_EEventMatchStart value
     * @property {number} k_EEventPartnerMaxType=3 k_EEventPartnerMaxType value
     */
    $root.PartnerEventNotificationType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "k_EEventStart"] = 0;
        values[valuesById[1] = "k_EEventBroadcastStart"] = 1;
        values[valuesById[2] = "k_EEventMatchStart"] = 2;
        values[valuesById[3] = "k_EEventPartnerMaxType"] = 3;
        return values;
    })();
    
    $root.CMsgIPAddress = (function() {
    
        /**
         * Properties of a CMsgIPAddress.
         * @exports ICMsgIPAddress
         * @interface ICMsgIPAddress
         * @property {number|null} [v4] CMsgIPAddress v4
         * @property {Uint8Array|null} [v6] CMsgIPAddress v6
         */
    
        /**
         * Constructs a new CMsgIPAddress.
         * @exports CMsgIPAddress
         * @classdesc Represents a CMsgIPAddress.
         * @implements ICMsgIPAddress
         * @constructor
         * @param {ICMsgIPAddress=} [properties] Properties to set
         */
        function CMsgIPAddress(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgIPAddress v4.
         * @member {number} v4
         * @memberof CMsgIPAddress
         * @instance
         */
        CMsgIPAddress.prototype.v4 = 0;
    
        /**
         * CMsgIPAddress v6.
         * @member {Uint8Array} v6
         * @memberof CMsgIPAddress
         * @instance
         */
        CMsgIPAddress.prototype.v6 = $util.newBuffer([]);
    
        // OneOf field names bound to virtual getters and setters
        var $oneOfFields;
    
        /**
         * CMsgIPAddress ip.
         * @member {"v4"|"v6"|undefined} ip
         * @memberof CMsgIPAddress
         * @instance
         */
        Object.defineProperty(CMsgIPAddress.prototype, "ip", {
            get: $util.oneOfGetter($oneOfFields = ["v4", "v6"]),
            set: $util.oneOfSetter($oneOfFields)
        });
    
        /**
         * Creates a new CMsgIPAddress instance using the specified properties.
         * @function create
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress=} [properties] Properties to set
         * @returns {CMsgIPAddress} CMsgIPAddress instance
         */
        CMsgIPAddress.create = function create(properties) {
            return new CMsgIPAddress(properties);
        };
    
        /**
         * Encodes the specified CMsgIPAddress message. Does not implicitly {@link CMsgIPAddress.verify|verify} messages.
         * @function encode
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress} message CMsgIPAddress message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddress.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.v4 != null && Object.hasOwnProperty.call(message, "v4"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.v4);
            if (message.v6 != null && Object.hasOwnProperty.call(message, "v6"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.v6);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgIPAddress message, length delimited. Does not implicitly {@link CMsgIPAddress.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgIPAddress
         * @static
         * @param {ICMsgIPAddress} message CMsgIPAddress message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddress.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgIPAddress message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgIPAddress
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgIPAddress} CMsgIPAddress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddress.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgIPAddress();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.v4 = reader.fixed32();
                    break;
                case 2:
                    message.v6 = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgIPAddress message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgIPAddress
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgIPAddress} CMsgIPAddress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddress.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgIPAddress message.
         * @function verify
         * @memberof CMsgIPAddress
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgIPAddress.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            var properties = {};
            if (message.v4 != null && message.hasOwnProperty("v4")) {
                properties.ip = 1;
                if (!$util.isInteger(message.v4))
                    return "v4: integer expected";
            }
            if (message.v6 != null && message.hasOwnProperty("v6")) {
                if (properties.ip === 1)
                    return "ip: multiple values";
                properties.ip = 1;
                if (!(message.v6 && typeof message.v6.length === "number" || $util.isString(message.v6)))
                    return "v6: buffer expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgIPAddress message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgIPAddress
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgIPAddress} CMsgIPAddress
         */
        CMsgIPAddress.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgIPAddress)
                return object;
            var message = new $root.CMsgIPAddress();
            if (object.v4 != null)
                message.v4 = object.v4 >>> 0;
            if (object.v6 != null)
                if (typeof object.v6 === "string")
                    $util.base64.decode(object.v6, message.v6 = $util.newBuffer($util.base64.length(object.v6)), 0);
                else if (object.v6.length)
                    message.v6 = object.v6;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgIPAddress message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgIPAddress
         * @static
         * @param {CMsgIPAddress} message CMsgIPAddress
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgIPAddress.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (message.v4 != null && message.hasOwnProperty("v4")) {
                object.v4 = message.v4;
                if (options.oneofs)
                    object.ip = "v4";
            }
            if (message.v6 != null && message.hasOwnProperty("v6")) {
                object.v6 = options.bytes === String ? $util.base64.encode(message.v6, 0, message.v6.length) : options.bytes === Array ? Array.prototype.slice.call(message.v6) : message.v6;
                if (options.oneofs)
                    object.ip = "v6";
            }
            return object;
        };
    
        /**
         * Converts this CMsgIPAddress to JSON.
         * @function toJSON
         * @memberof CMsgIPAddress
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgIPAddress.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgIPAddress;
    })();
    
    $root.CMsgIPAddressBucket = (function() {
    
        /**
         * Properties of a CMsgIPAddressBucket.
         * @exports ICMsgIPAddressBucket
         * @interface ICMsgIPAddressBucket
         * @property {ICMsgIPAddress|null} [original_ip_address] CMsgIPAddressBucket original_ip_address
         * @property {number|Long|null} [bucket] CMsgIPAddressBucket bucket
         */
    
        /**
         * Constructs a new CMsgIPAddressBucket.
         * @exports CMsgIPAddressBucket
         * @classdesc Represents a CMsgIPAddressBucket.
         * @implements ICMsgIPAddressBucket
         * @constructor
         * @param {ICMsgIPAddressBucket=} [properties] Properties to set
         */
        function CMsgIPAddressBucket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgIPAddressBucket original_ip_address.
         * @member {ICMsgIPAddress|null|undefined} original_ip_address
         * @memberof CMsgIPAddressBucket
         * @instance
         */
        CMsgIPAddressBucket.prototype.original_ip_address = null;
    
        /**
         * CMsgIPAddressBucket bucket.
         * @member {number|Long} bucket
         * @memberof CMsgIPAddressBucket
         * @instance
         */
        CMsgIPAddressBucket.prototype.bucket = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgIPAddressBucket instance using the specified properties.
         * @function create
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {ICMsgIPAddressBucket=} [properties] Properties to set
         * @returns {CMsgIPAddressBucket} CMsgIPAddressBucket instance
         */
        CMsgIPAddressBucket.create = function create(properties) {
            return new CMsgIPAddressBucket(properties);
        };
    
        /**
         * Encodes the specified CMsgIPAddressBucket message. Does not implicitly {@link CMsgIPAddressBucket.verify|verify} messages.
         * @function encode
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {ICMsgIPAddressBucket} message CMsgIPAddressBucket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddressBucket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.original_ip_address != null && Object.hasOwnProperty.call(message, "original_ip_address"))
                $root.CMsgIPAddress.encode(message.original_ip_address, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.bucket != null && Object.hasOwnProperty.call(message, "bucket"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.bucket);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgIPAddressBucket message, length delimited. Does not implicitly {@link CMsgIPAddressBucket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {ICMsgIPAddressBucket} message CMsgIPAddressBucket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIPAddressBucket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgIPAddressBucket message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgIPAddressBucket} CMsgIPAddressBucket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddressBucket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgIPAddressBucket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.original_ip_address = $root.CMsgIPAddress.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.bucket = reader.fixed64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgIPAddressBucket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgIPAddressBucket} CMsgIPAddressBucket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIPAddressBucket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgIPAddressBucket message.
         * @function verify
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgIPAddressBucket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.original_ip_address != null && message.hasOwnProperty("original_ip_address")) {
                var error = $root.CMsgIPAddress.verify(message.original_ip_address);
                if (error)
                    return "original_ip_address." + error;
            }
            if (message.bucket != null && message.hasOwnProperty("bucket"))
                if (!$util.isInteger(message.bucket) && !(message.bucket && $util.isInteger(message.bucket.low) && $util.isInteger(message.bucket.high)))
                    return "bucket: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgIPAddressBucket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgIPAddressBucket} CMsgIPAddressBucket
         */
        CMsgIPAddressBucket.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgIPAddressBucket)
                return object;
            var message = new $root.CMsgIPAddressBucket();
            if (object.original_ip_address != null) {
                if (typeof object.original_ip_address !== "object")
                    throw TypeError(".CMsgIPAddressBucket.original_ip_address: object expected");
                message.original_ip_address = $root.CMsgIPAddress.fromObject(object.original_ip_address);
            }
            if (object.bucket != null)
                if ($util.Long)
                    (message.bucket = $util.Long.fromValue(object.bucket)).unsigned = false;
                else if (typeof object.bucket === "string")
                    message.bucket = parseInt(object.bucket, 10);
                else if (typeof object.bucket === "number")
                    message.bucket = object.bucket;
                else if (typeof object.bucket === "object")
                    message.bucket = new $util.LongBits(object.bucket.low >>> 0, object.bucket.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgIPAddressBucket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgIPAddressBucket
         * @static
         * @param {CMsgIPAddressBucket} message CMsgIPAddressBucket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgIPAddressBucket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.original_ip_address = null;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.bucket = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.bucket = options.longs === String ? "0" : 0;
            }
            if (message.original_ip_address != null && message.hasOwnProperty("original_ip_address"))
                object.original_ip_address = $root.CMsgIPAddress.toObject(message.original_ip_address, options);
            if (message.bucket != null && message.hasOwnProperty("bucket"))
                if (typeof message.bucket === "number")
                    object.bucket = options.longs === String ? String(message.bucket) : message.bucket;
                else
                    object.bucket = options.longs === String ? $util.Long.prototype.toString.call(message.bucket) : options.longs === Number ? new $util.LongBits(message.bucket.low >>> 0, message.bucket.high >>> 0).toNumber() : message.bucket;
            return object;
        };
    
        /**
         * Converts this CMsgIPAddressBucket to JSON.
         * @function toJSON
         * @memberof CMsgIPAddressBucket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgIPAddressBucket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgIPAddressBucket;
    })();
    
    $root.CMsgProtoBufHeader = (function() {
    
        /**
         * Properties of a CMsgProtoBufHeader.
         * @exports ICMsgProtoBufHeader
         * @interface ICMsgProtoBufHeader
         * @property {number|Long|null} [steamid] CMsgProtoBufHeader steamid
         * @property {number|null} [client_sessionid] CMsgProtoBufHeader client_sessionid
         * @property {number|null} [routing_appid] CMsgProtoBufHeader routing_appid
         * @property {number|Long|null} [jobid_source] CMsgProtoBufHeader jobid_source
         * @property {number|Long|null} [jobid_target] CMsgProtoBufHeader jobid_target
         * @property {string|null} [target_job_name] CMsgProtoBufHeader target_job_name
         * @property {number|null} [seq_num] CMsgProtoBufHeader seq_num
         * @property {number|null} [eresult] CMsgProtoBufHeader eresult
         * @property {string|null} [error_message] CMsgProtoBufHeader error_message
         * @property {number|null} [auth_account_flags] CMsgProtoBufHeader auth_account_flags
         * @property {number|null} [token_source] CMsgProtoBufHeader token_source
         * @property {boolean|null} [admin_spoofing_user] CMsgProtoBufHeader admin_spoofing_user
         * @property {number|null} [transport_error] CMsgProtoBufHeader transport_error
         * @property {number|Long|null} [messageid] CMsgProtoBufHeader messageid
         * @property {number|null} [publisher_group_id] CMsgProtoBufHeader publisher_group_id
         * @property {number|null} [sysid] CMsgProtoBufHeader sysid
         * @property {number|Long|null} [trace_tag] CMsgProtoBufHeader trace_tag
         * @property {number|null} [webapi_key_id] CMsgProtoBufHeader webapi_key_id
         * @property {boolean|null} [is_from_external_source] CMsgProtoBufHeader is_from_external_source
         * @property {Array.<number>|null} [forward_to_sysid] CMsgProtoBufHeader forward_to_sysid
         * @property {number|null} [cm_sysid] CMsgProtoBufHeader cm_sysid
         * @property {string|null} [wg_token] CMsgProtoBufHeader wg_token
         * @property {number|null} [launcher_type] CMsgProtoBufHeader launcher_type
         * @property {number|null} [realm] CMsgProtoBufHeader realm
         * @property {number|null} [ip] CMsgProtoBufHeader ip
         * @property {Uint8Array|null} [ip_v6] CMsgProtoBufHeader ip_v6
         */
    
        /**
         * Constructs a new CMsgProtoBufHeader.
         * @exports CMsgProtoBufHeader
         * @classdesc Represents a CMsgProtoBufHeader.
         * @implements ICMsgProtoBufHeader
         * @constructor
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         */
        function CMsgProtoBufHeader(properties) {
            this.forward_to_sysid = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtoBufHeader steamid.
         * @member {number|Long} steamid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgProtoBufHeader client_sessionid.
         * @member {number} client_sessionid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.client_sessionid = 0;
    
        /**
         * CMsgProtoBufHeader routing_appid.
         * @member {number} routing_appid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.routing_appid = 0;
    
        /**
         * CMsgProtoBufHeader jobid_source.
         * @member {number|Long} jobid_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobid_source = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader jobid_target.
         * @member {number|Long} jobid_target
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.jobid_target = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader target_job_name.
         * @member {string} target_job_name
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.target_job_name = "";
    
        /**
         * CMsgProtoBufHeader seq_num.
         * @member {number} seq_num
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.seq_num = 0;
    
        /**
         * CMsgProtoBufHeader eresult.
         * @member {number} eresult
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.eresult = 2;
    
        /**
         * CMsgProtoBufHeader error_message.
         * @member {string} error_message
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.error_message = "";
    
        /**
         * CMsgProtoBufHeader auth_account_flags.
         * @member {number} auth_account_flags
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.auth_account_flags = 0;
    
        /**
         * CMsgProtoBufHeader token_source.
         * @member {number} token_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.token_source = 0;
    
        /**
         * CMsgProtoBufHeader admin_spoofing_user.
         * @member {boolean} admin_spoofing_user
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.admin_spoofing_user = false;
    
        /**
         * CMsgProtoBufHeader transport_error.
         * @member {number} transport_error
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.transport_error = 1;
    
        /**
         * CMsgProtoBufHeader messageid.
         * @member {number|Long} messageid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.messageid = $util.Long ? $util.Long.fromBits(-1,-1,true) : 18446744073709552000;
    
        /**
         * CMsgProtoBufHeader publisher_group_id.
         * @member {number} publisher_group_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.publisher_group_id = 0;
    
        /**
         * CMsgProtoBufHeader sysid.
         * @member {number} sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.sysid = 0;
    
        /**
         * CMsgProtoBufHeader trace_tag.
         * @member {number|Long} trace_tag
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.trace_tag = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgProtoBufHeader webapi_key_id.
         * @member {number} webapi_key_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.webapi_key_id = 0;
    
        /**
         * CMsgProtoBufHeader is_from_external_source.
         * @member {boolean} is_from_external_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.is_from_external_source = false;
    
        /**
         * CMsgProtoBufHeader forward_to_sysid.
         * @member {Array.<number>} forward_to_sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.forward_to_sysid = $util.emptyArray;
    
        /**
         * CMsgProtoBufHeader cm_sysid.
         * @member {number} cm_sysid
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.cm_sysid = 0;
    
        /**
         * CMsgProtoBufHeader wg_token.
         * @member {string} wg_token
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.wg_token = "";
    
        /**
         * CMsgProtoBufHeader launcher_type.
         * @member {number} launcher_type
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.launcher_type = 0;
    
        /**
         * CMsgProtoBufHeader realm.
         * @member {number} realm
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.realm = 0;
    
        /**
         * CMsgProtoBufHeader ip.
         * @member {number} ip
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip = 0;
    
        /**
         * CMsgProtoBufHeader ip_v6.
         * @member {Uint8Array} ip_v6
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip_v6 = $util.newBuffer([]);
    
        // OneOf field names bound to virtual getters and setters
        var $oneOfFields;
    
        /**
         * CMsgProtoBufHeader ip_addr.
         * @member {"ip"|"ip_v6"|undefined} ip_addr
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        Object.defineProperty(CMsgProtoBufHeader.prototype, "ip_addr", {
            get: $util.oneOfGetter($oneOfFields = ["ip", "ip_v6"]),
            set: $util.oneOfSetter($oneOfFields)
        });
    
        /**
         * Creates a new CMsgProtoBufHeader instance using the specified properties.
         * @function create
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader instance
         */
        CMsgProtoBufHeader.create = function create(properties) {
            return new CMsgProtoBufHeader(properties);
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.client_sessionid != null && Object.hasOwnProperty.call(message, "client_sessionid"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.client_sessionid);
            if (message.routing_appid != null && Object.hasOwnProperty.call(message, "routing_appid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.routing_appid);
            if (message.jobid_source != null && Object.hasOwnProperty.call(message, "jobid_source"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.jobid_source);
            if (message.jobid_target != null && Object.hasOwnProperty.call(message, "jobid_target"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.jobid_target);
            if (message.target_job_name != null && Object.hasOwnProperty.call(message, "target_job_name"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.target_job_name);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.eresult);
            if (message.error_message != null && Object.hasOwnProperty.call(message, "error_message"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.error_message);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.ip);
            if (message.auth_account_flags != null && Object.hasOwnProperty.call(message, "auth_account_flags"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.auth_account_flags);
            if (message.transport_error != null && Object.hasOwnProperty.call(message, "transport_error"))
                writer.uint32(/* id 17, wireType 0 =*/136).int32(message.transport_error);
            if (message.messageid != null && Object.hasOwnProperty.call(message, "messageid"))
                writer.uint32(/* id 18, wireType 0 =*/144).uint64(message.messageid);
            if (message.publisher_group_id != null && Object.hasOwnProperty.call(message, "publisher_group_id"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.publisher_group_id);
            if (message.sysid != null && Object.hasOwnProperty.call(message, "sysid"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.sysid);
            if (message.trace_tag != null && Object.hasOwnProperty.call(message, "trace_tag"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint64(message.trace_tag);
            if (message.token_source != null && Object.hasOwnProperty.call(message, "token_source"))
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.token_source);
            if (message.admin_spoofing_user != null && Object.hasOwnProperty.call(message, "admin_spoofing_user"))
                writer.uint32(/* id 23, wireType 0 =*/184).bool(message.admin_spoofing_user);
            if (message.seq_num != null && Object.hasOwnProperty.call(message, "seq_num"))
                writer.uint32(/* id 24, wireType 0 =*/192).int32(message.seq_num);
            if (message.webapi_key_id != null && Object.hasOwnProperty.call(message, "webapi_key_id"))
                writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.webapi_key_id);
            if (message.is_from_external_source != null && Object.hasOwnProperty.call(message, "is_from_external_source"))
                writer.uint32(/* id 26, wireType 0 =*/208).bool(message.is_from_external_source);
            if (message.forward_to_sysid != null && message.forward_to_sysid.length)
                for (var i = 0; i < message.forward_to_sysid.length; ++i)
                    writer.uint32(/* id 27, wireType 0 =*/216).uint32(message.forward_to_sysid[i]);
            if (message.cm_sysid != null && Object.hasOwnProperty.call(message, "cm_sysid"))
                writer.uint32(/* id 28, wireType 0 =*/224).uint32(message.cm_sysid);
            if (message.ip_v6 != null && Object.hasOwnProperty.call(message, "ip_v6"))
                writer.uint32(/* id 29, wireType 2 =*/234).bytes(message.ip_v6);
            if (message.wg_token != null && Object.hasOwnProperty.call(message, "wg_token"))
                writer.uint32(/* id 30, wireType 2 =*/242).string(message.wg_token);
            if (message.launcher_type != null && Object.hasOwnProperty.call(message, "launcher_type"))
                writer.uint32(/* id 31, wireType 0 =*/248).uint32(message.launcher_type);
            if (message.realm != null && Object.hasOwnProperty.call(message, "realm"))
                writer.uint32(/* id 32, wireType 0 =*/256).uint32(message.realm);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message, length delimited. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtoBufHeader();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.steamid = reader.fixed64();
                    break;
                case 2:
                    message.client_sessionid = reader.int32();
                    break;
                case 3:
                    message.routing_appid = reader.uint32();
                    break;
                case 10:
                    message.jobid_source = reader.fixed64();
                    break;
                case 11:
                    message.jobid_target = reader.fixed64();
                    break;
                case 12:
                    message.target_job_name = reader.string();
                    break;
                case 24:
                    message.seq_num = reader.int32();
                    break;
                case 13:
                    message.eresult = reader.int32();
                    break;
                case 14:
                    message.error_message = reader.string();
                    break;
                case 16:
                    message.auth_account_flags = reader.uint32();
                    break;
                case 22:
                    message.token_source = reader.uint32();
                    break;
                case 23:
                    message.admin_spoofing_user = reader.bool();
                    break;
                case 17:
                    message.transport_error = reader.int32();
                    break;
                case 18:
                    message.messageid = reader.uint64();
                    break;
                case 19:
                    message.publisher_group_id = reader.uint32();
                    break;
                case 20:
                    message.sysid = reader.uint32();
                    break;
                case 21:
                    message.trace_tag = reader.uint64();
                    break;
                case 25:
                    message.webapi_key_id = reader.uint32();
                    break;
                case 26:
                    message.is_from_external_source = reader.bool();
                    break;
                case 27:
                    if (!(message.forward_to_sysid && message.forward_to_sysid.length))
                        message.forward_to_sysid = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.forward_to_sysid.push(reader.uint32());
                    } else
                        message.forward_to_sysid.push(reader.uint32());
                    break;
                case 28:
                    message.cm_sysid = reader.uint32();
                    break;
                case 30:
                    message.wg_token = reader.string();
                    break;
                case 31:
                    message.launcher_type = reader.uint32();
                    break;
                case 32:
                    message.realm = reader.uint32();
                    break;
                case 15:
                    message.ip = reader.uint32();
                    break;
                case 29:
                    message.ip_v6 = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtoBufHeader message.
         * @function verify
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtoBufHeader.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            var properties = {};
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.client_sessionid != null && message.hasOwnProperty("client_sessionid"))
                if (!$util.isInteger(message.client_sessionid))
                    return "client_sessionid: integer expected";
            if (message.routing_appid != null && message.hasOwnProperty("routing_appid"))
                if (!$util.isInteger(message.routing_appid))
                    return "routing_appid: integer expected";
            if (message.jobid_source != null && message.hasOwnProperty("jobid_source"))
                if (!$util.isInteger(message.jobid_source) && !(message.jobid_source && $util.isInteger(message.jobid_source.low) && $util.isInteger(message.jobid_source.high)))
                    return "jobid_source: integer|Long expected";
            if (message.jobid_target != null && message.hasOwnProperty("jobid_target"))
                if (!$util.isInteger(message.jobid_target) && !(message.jobid_target && $util.isInteger(message.jobid_target.low) && $util.isInteger(message.jobid_target.high)))
                    return "jobid_target: integer|Long expected";
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                if (!$util.isString(message.target_job_name))
                    return "target_job_name: string expected";
            if (message.seq_num != null && message.hasOwnProperty("seq_num"))
                if (!$util.isInteger(message.seq_num))
                    return "seq_num: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                if (!$util.isString(message.error_message))
                    return "error_message: string expected";
            if (message.auth_account_flags != null && message.hasOwnProperty("auth_account_flags"))
                if (!$util.isInteger(message.auth_account_flags))
                    return "auth_account_flags: integer expected";
            if (message.token_source != null && message.hasOwnProperty("token_source"))
                if (!$util.isInteger(message.token_source))
                    return "token_source: integer expected";
            if (message.admin_spoofing_user != null && message.hasOwnProperty("admin_spoofing_user"))
                if (typeof message.admin_spoofing_user !== "boolean")
                    return "admin_spoofing_user: boolean expected";
            if (message.transport_error != null && message.hasOwnProperty("transport_error"))
                if (!$util.isInteger(message.transport_error))
                    return "transport_error: integer expected";
            if (message.messageid != null && message.hasOwnProperty("messageid"))
                if (!$util.isInteger(message.messageid) && !(message.messageid && $util.isInteger(message.messageid.low) && $util.isInteger(message.messageid.high)))
                    return "messageid: integer|Long expected";
            if (message.publisher_group_id != null && message.hasOwnProperty("publisher_group_id"))
                if (!$util.isInteger(message.publisher_group_id))
                    return "publisher_group_id: integer expected";
            if (message.sysid != null && message.hasOwnProperty("sysid"))
                if (!$util.isInteger(message.sysid))
                    return "sysid: integer expected";
            if (message.trace_tag != null && message.hasOwnProperty("trace_tag"))
                if (!$util.isInteger(message.trace_tag) && !(message.trace_tag && $util.isInteger(message.trace_tag.low) && $util.isInteger(message.trace_tag.high)))
                    return "trace_tag: integer|Long expected";
            if (message.webapi_key_id != null && message.hasOwnProperty("webapi_key_id"))
                if (!$util.isInteger(message.webapi_key_id))
                    return "webapi_key_id: integer expected";
            if (message.is_from_external_source != null && message.hasOwnProperty("is_from_external_source"))
                if (typeof message.is_from_external_source !== "boolean")
                    return "is_from_external_source: boolean expected";
            if (message.forward_to_sysid != null && message.hasOwnProperty("forward_to_sysid")) {
                if (!Array.isArray(message.forward_to_sysid))
                    return "forward_to_sysid: array expected";
                for (var i = 0; i < message.forward_to_sysid.length; ++i)
                    if (!$util.isInteger(message.forward_to_sysid[i]))
                        return "forward_to_sysid: integer[] expected";
            }
            if (message.cm_sysid != null && message.hasOwnProperty("cm_sysid"))
                if (!$util.isInteger(message.cm_sysid))
                    return "cm_sysid: integer expected";
            if (message.wg_token != null && message.hasOwnProperty("wg_token"))
                if (!$util.isString(message.wg_token))
                    return "wg_token: string expected";
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                if (!$util.isInteger(message.launcher_type))
                    return "launcher_type: integer expected";
            if (message.realm != null && message.hasOwnProperty("realm"))
                if (!$util.isInteger(message.realm))
                    return "realm: integer expected";
            if (message.ip != null && message.hasOwnProperty("ip")) {
                properties.ip_addr = 1;
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            }
            if (message.ip_v6 != null && message.hasOwnProperty("ip_v6")) {
                if (properties.ip_addr === 1)
                    return "ip_addr: multiple values";
                properties.ip_addr = 1;
                if (!(message.ip_v6 && typeof message.ip_v6.length === "number" || $util.isString(message.ip_v6)))
                    return "ip_v6: buffer expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgProtoBufHeader message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         */
        CMsgProtoBufHeader.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtoBufHeader)
                return object;
            var message = new $root.CMsgProtoBufHeader();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.client_sessionid != null)
                message.client_sessionid = object.client_sessionid | 0;
            if (object.routing_appid != null)
                message.routing_appid = object.routing_appid >>> 0;
            if (object.jobid_source != null)
                if ($util.Long)
                    (message.jobid_source = $util.Long.fromValue(object.jobid_source)).unsigned = false;
                else if (typeof object.jobid_source === "string")
                    message.jobid_source = parseInt(object.jobid_source, 10);
                else if (typeof object.jobid_source === "number")
                    message.jobid_source = object.jobid_source;
                else if (typeof object.jobid_source === "object")
                    message.jobid_source = new $util.LongBits(object.jobid_source.low >>> 0, object.jobid_source.high >>> 0).toNumber();
            if (object.jobid_target != null)
                if ($util.Long)
                    (message.jobid_target = $util.Long.fromValue(object.jobid_target)).unsigned = false;
                else if (typeof object.jobid_target === "string")
                    message.jobid_target = parseInt(object.jobid_target, 10);
                else if (typeof object.jobid_target === "number")
                    message.jobid_target = object.jobid_target;
                else if (typeof object.jobid_target === "object")
                    message.jobid_target = new $util.LongBits(object.jobid_target.low >>> 0, object.jobid_target.high >>> 0).toNumber();
            if (object.target_job_name != null)
                message.target_job_name = String(object.target_job_name);
            if (object.seq_num != null)
                message.seq_num = object.seq_num | 0;
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.error_message != null)
                message.error_message = String(object.error_message);
            if (object.auth_account_flags != null)
                message.auth_account_flags = object.auth_account_flags >>> 0;
            if (object.token_source != null)
                message.token_source = object.token_source >>> 0;
            if (object.admin_spoofing_user != null)
                message.admin_spoofing_user = Boolean(object.admin_spoofing_user);
            if (object.transport_error != null)
                message.transport_error = object.transport_error | 0;
            if (object.messageid != null)
                if ($util.Long)
                    (message.messageid = $util.Long.fromValue(object.messageid)).unsigned = true;
                else if (typeof object.messageid === "string")
                    message.messageid = parseInt(object.messageid, 10);
                else if (typeof object.messageid === "number")
                    message.messageid = object.messageid;
                else if (typeof object.messageid === "object")
                    message.messageid = new $util.LongBits(object.messageid.low >>> 0, object.messageid.high >>> 0).toNumber(true);
            if (object.publisher_group_id != null)
                message.publisher_group_id = object.publisher_group_id >>> 0;
            if (object.sysid != null)
                message.sysid = object.sysid >>> 0;
            if (object.trace_tag != null)
                if ($util.Long)
                    (message.trace_tag = $util.Long.fromValue(object.trace_tag)).unsigned = true;
                else if (typeof object.trace_tag === "string")
                    message.trace_tag = parseInt(object.trace_tag, 10);
                else if (typeof object.trace_tag === "number")
                    message.trace_tag = object.trace_tag;
                else if (typeof object.trace_tag === "object")
                    message.trace_tag = new $util.LongBits(object.trace_tag.low >>> 0, object.trace_tag.high >>> 0).toNumber(true);
            if (object.webapi_key_id != null)
                message.webapi_key_id = object.webapi_key_id >>> 0;
            if (object.is_from_external_source != null)
                message.is_from_external_source = Boolean(object.is_from_external_source);
            if (object.forward_to_sysid) {
                if (!Array.isArray(object.forward_to_sysid))
                    throw TypeError(".CMsgProtoBufHeader.forward_to_sysid: array expected");
                message.forward_to_sysid = [];
                for (var i = 0; i < object.forward_to_sysid.length; ++i)
                    message.forward_to_sysid[i] = object.forward_to_sysid[i] >>> 0;
            }
            if (object.cm_sysid != null)
                message.cm_sysid = object.cm_sysid >>> 0;
            if (object.wg_token != null)
                message.wg_token = String(object.wg_token);
            if (object.launcher_type != null)
                message.launcher_type = object.launcher_type >>> 0;
            if (object.realm != null)
                message.realm = object.realm >>> 0;
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            if (object.ip_v6 != null)
                if (typeof object.ip_v6 === "string")
                    $util.base64.decode(object.ip_v6, message.ip_v6 = $util.newBuffer($util.base64.length(object.ip_v6)), 0);
                else if (object.ip_v6.length)
                    message.ip_v6 = object.ip_v6;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtoBufHeader message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {CMsgProtoBufHeader} message CMsgProtoBufHeader
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtoBufHeader.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.forward_to_sysid = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.client_sessionid = 0;
                object.routing_appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobid_source = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobid_source = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.jobid_target = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.jobid_target = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                object.target_job_name = "";
                object.eresult = 2;
                object.error_message = "";
                object.auth_account_flags = 0;
                object.transport_error = 1;
                if ($util.Long) {
                    var long = new $util.Long(-1, -1, true);
                    object.messageid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.messageid = options.longs === String ? "18446744073709551615" : 18446744073709552000;
                object.publisher_group_id = 0;
                object.sysid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.trace_tag = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.trace_tag = options.longs === String ? "0" : 0;
                object.token_source = 0;
                object.admin_spoofing_user = false;
                object.seq_num = 0;
                object.webapi_key_id = 0;
                object.is_from_external_source = false;
                object.cm_sysid = 0;
                object.wg_token = "";
                object.launcher_type = 0;
                object.realm = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.client_sessionid != null && message.hasOwnProperty("client_sessionid"))
                object.client_sessionid = message.client_sessionid;
            if (message.routing_appid != null && message.hasOwnProperty("routing_appid"))
                object.routing_appid = message.routing_appid;
            if (message.jobid_source != null && message.hasOwnProperty("jobid_source"))
                if (typeof message.jobid_source === "number")
                    object.jobid_source = options.longs === String ? String(message.jobid_source) : message.jobid_source;
                else
                    object.jobid_source = options.longs === String ? $util.Long.prototype.toString.call(message.jobid_source) : options.longs === Number ? new $util.LongBits(message.jobid_source.low >>> 0, message.jobid_source.high >>> 0).toNumber() : message.jobid_source;
            if (message.jobid_target != null && message.hasOwnProperty("jobid_target"))
                if (typeof message.jobid_target === "number")
                    object.jobid_target = options.longs === String ? String(message.jobid_target) : message.jobid_target;
                else
                    object.jobid_target = options.longs === String ? $util.Long.prototype.toString.call(message.jobid_target) : options.longs === Number ? new $util.LongBits(message.jobid_target.low >>> 0, message.jobid_target.high >>> 0).toNumber() : message.jobid_target;
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                object.target_job_name = message.target_job_name;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                object.error_message = message.error_message;
            if (message.ip != null && message.hasOwnProperty("ip")) {
                object.ip = message.ip;
                if (options.oneofs)
                    object.ip_addr = "ip";
            }
            if (message.auth_account_flags != null && message.hasOwnProperty("auth_account_flags"))
                object.auth_account_flags = message.auth_account_flags;
            if (message.transport_error != null && message.hasOwnProperty("transport_error"))
                object.transport_error = message.transport_error;
            if (message.messageid != null && message.hasOwnProperty("messageid"))
                if (typeof message.messageid === "number")
                    object.messageid = options.longs === String ? String(message.messageid) : message.messageid;
                else
                    object.messageid = options.longs === String ? $util.Long.prototype.toString.call(message.messageid) : options.longs === Number ? new $util.LongBits(message.messageid.low >>> 0, message.messageid.high >>> 0).toNumber(true) : message.messageid;
            if (message.publisher_group_id != null && message.hasOwnProperty("publisher_group_id"))
                object.publisher_group_id = message.publisher_group_id;
            if (message.sysid != null && message.hasOwnProperty("sysid"))
                object.sysid = message.sysid;
            if (message.trace_tag != null && message.hasOwnProperty("trace_tag"))
                if (typeof message.trace_tag === "number")
                    object.trace_tag = options.longs === String ? String(message.trace_tag) : message.trace_tag;
                else
                    object.trace_tag = options.longs === String ? $util.Long.prototype.toString.call(message.trace_tag) : options.longs === Number ? new $util.LongBits(message.trace_tag.low >>> 0, message.trace_tag.high >>> 0).toNumber(true) : message.trace_tag;
            if (message.token_source != null && message.hasOwnProperty("token_source"))
                object.token_source = message.token_source;
            if (message.admin_spoofing_user != null && message.hasOwnProperty("admin_spoofing_user"))
                object.admin_spoofing_user = message.admin_spoofing_user;
            if (message.seq_num != null && message.hasOwnProperty("seq_num"))
                object.seq_num = message.seq_num;
            if (message.webapi_key_id != null && message.hasOwnProperty("webapi_key_id"))
                object.webapi_key_id = message.webapi_key_id;
            if (message.is_from_external_source != null && message.hasOwnProperty("is_from_external_source"))
                object.is_from_external_source = message.is_from_external_source;
            if (message.forward_to_sysid && message.forward_to_sysid.length) {
                object.forward_to_sysid = [];
                for (var j = 0; j < message.forward_to_sysid.length; ++j)
                    object.forward_to_sysid[j] = message.forward_to_sysid[j];
            }
            if (message.cm_sysid != null && message.hasOwnProperty("cm_sysid"))
                object.cm_sysid = message.cm_sysid;
            if (message.ip_v6 != null && message.hasOwnProperty("ip_v6")) {
                object.ip_v6 = options.bytes === String ? $util.base64.encode(message.ip_v6, 0, message.ip_v6.length) : options.bytes === Array ? Array.prototype.slice.call(message.ip_v6) : message.ip_v6;
                if (options.oneofs)
                    object.ip_addr = "ip_v6";
            }
            if (message.wg_token != null && message.hasOwnProperty("wg_token"))
                object.wg_token = message.wg_token;
            if (message.launcher_type != null && message.hasOwnProperty("launcher_type"))
                object.launcher_type = message.launcher_type;
            if (message.realm != null && message.hasOwnProperty("realm"))
                object.realm = message.realm;
            return object;
        };
    
        /**
         * Converts this CMsgProtoBufHeader to JSON.
         * @function toJSON
         * @memberof CMsgProtoBufHeader
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtoBufHeader.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgProtoBufHeader;
    })();
    
    $root.CMsgMulti = (function() {
    
        /**
         * Properties of a CMsgMulti.
         * @exports ICMsgMulti
         * @interface ICMsgMulti
         * @property {number|null} [size_unzipped] CMsgMulti size_unzipped
         * @property {Uint8Array|null} [message_body] CMsgMulti message_body
         */
    
        /**
         * Constructs a new CMsgMulti.
         * @exports CMsgMulti
         * @classdesc Represents a CMsgMulti.
         * @implements ICMsgMulti
         * @constructor
         * @param {ICMsgMulti=} [properties] Properties to set
         */
        function CMsgMulti(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgMulti size_unzipped.
         * @member {number} size_unzipped
         * @memberof CMsgMulti
         * @instance
         */
        CMsgMulti.prototype.size_unzipped = 0;
    
        /**
         * CMsgMulti message_body.
         * @member {Uint8Array} message_body
         * @memberof CMsgMulti
         * @instance
         */
        CMsgMulti.prototype.message_body = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgMulti instance using the specified properties.
         * @function create
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti=} [properties] Properties to set
         * @returns {CMsgMulti} CMsgMulti instance
         */
        CMsgMulti.create = function create(properties) {
            return new CMsgMulti(properties);
        };
    
        /**
         * Encodes the specified CMsgMulti message. Does not implicitly {@link CMsgMulti.verify|verify} messages.
         * @function encode
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti} message CMsgMulti message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgMulti.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.size_unzipped != null && Object.hasOwnProperty.call(message, "size_unzipped"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.size_unzipped);
            if (message.message_body != null && Object.hasOwnProperty.call(message, "message_body"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.message_body);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgMulti message, length delimited. Does not implicitly {@link CMsgMulti.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgMulti
         * @static
         * @param {ICMsgMulti} message CMsgMulti message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgMulti.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgMulti message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgMulti
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgMulti} CMsgMulti
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgMulti.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgMulti();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.size_unzipped = reader.uint32();
                    break;
                case 2:
                    message.message_body = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgMulti message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgMulti
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgMulti} CMsgMulti
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgMulti.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgMulti message.
         * @function verify
         * @memberof CMsgMulti
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgMulti.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.size_unzipped != null && message.hasOwnProperty("size_unzipped"))
                if (!$util.isInteger(message.size_unzipped))
                    return "size_unzipped: integer expected";
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                if (!(message.message_body && typeof message.message_body.length === "number" || $util.isString(message.message_body)))
                    return "message_body: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgMulti message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgMulti
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgMulti} CMsgMulti
         */
        CMsgMulti.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgMulti)
                return object;
            var message = new $root.CMsgMulti();
            if (object.size_unzipped != null)
                message.size_unzipped = object.size_unzipped >>> 0;
            if (object.message_body != null)
                if (typeof object.message_body === "string")
                    $util.base64.decode(object.message_body, message.message_body = $util.newBuffer($util.base64.length(object.message_body)), 0);
                else if (object.message_body.length)
                    message.message_body = object.message_body;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgMulti message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgMulti
         * @static
         * @param {CMsgMulti} message CMsgMulti
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgMulti.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.size_unzipped = 0;
                if (options.bytes === String)
                    object.message_body = "";
                else {
                    object.message_body = [];
                    if (options.bytes !== Array)
                        object.message_body = $util.newBuffer(object.message_body);
                }
            }
            if (message.size_unzipped != null && message.hasOwnProperty("size_unzipped"))
                object.size_unzipped = message.size_unzipped;
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                object.message_body = options.bytes === String ? $util.base64.encode(message.message_body, 0, message.message_body.length) : options.bytes === Array ? Array.prototype.slice.call(message.message_body) : message.message_body;
            return object;
        };
    
        /**
         * Converts this CMsgMulti to JSON.
         * @function toJSON
         * @memberof CMsgMulti
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgMulti.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgMulti;
    })();
    
    $root.CMsgProtobufWrapped = (function() {
    
        /**
         * Properties of a CMsgProtobufWrapped.
         * @exports ICMsgProtobufWrapped
         * @interface ICMsgProtobufWrapped
         * @property {Uint8Array|null} [message_body] CMsgProtobufWrapped message_body
         */
    
        /**
         * Constructs a new CMsgProtobufWrapped.
         * @exports CMsgProtobufWrapped
         * @classdesc Represents a CMsgProtobufWrapped.
         * @implements ICMsgProtobufWrapped
         * @constructor
         * @param {ICMsgProtobufWrapped=} [properties] Properties to set
         */
        function CMsgProtobufWrapped(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtobufWrapped message_body.
         * @member {Uint8Array} message_body
         * @memberof CMsgProtobufWrapped
         * @instance
         */
        CMsgProtobufWrapped.prototype.message_body = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgProtobufWrapped instance using the specified properties.
         * @function create
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {ICMsgProtobufWrapped=} [properties] Properties to set
         * @returns {CMsgProtobufWrapped} CMsgProtobufWrapped instance
         */
        CMsgProtobufWrapped.create = function create(properties) {
            return new CMsgProtobufWrapped(properties);
        };
    
        /**
         * Encodes the specified CMsgProtobufWrapped message. Does not implicitly {@link CMsgProtobufWrapped.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {ICMsgProtobufWrapped} message CMsgProtobufWrapped message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtobufWrapped.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.message_body != null && Object.hasOwnProperty.call(message, "message_body"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.message_body);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtobufWrapped message, length delimited. Does not implicitly {@link CMsgProtobufWrapped.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {ICMsgProtobufWrapped} message CMsgProtobufWrapped message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtobufWrapped.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtobufWrapped message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtobufWrapped} CMsgProtobufWrapped
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtobufWrapped.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtobufWrapped();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.message_body = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtobufWrapped message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtobufWrapped} CMsgProtobufWrapped
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtobufWrapped.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtobufWrapped message.
         * @function verify
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtobufWrapped.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                if (!(message.message_body && typeof message.message_body.length === "number" || $util.isString(message.message_body)))
                    return "message_body: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgProtobufWrapped message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtobufWrapped} CMsgProtobufWrapped
         */
        CMsgProtobufWrapped.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtobufWrapped)
                return object;
            var message = new $root.CMsgProtobufWrapped();
            if (object.message_body != null)
                if (typeof object.message_body === "string")
                    $util.base64.decode(object.message_body, message.message_body = $util.newBuffer($util.base64.length(object.message_body)), 0);
                else if (object.message_body.length)
                    message.message_body = object.message_body;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtobufWrapped message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtobufWrapped
         * @static
         * @param {CMsgProtobufWrapped} message CMsgProtobufWrapped
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtobufWrapped.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if (options.bytes === String)
                    object.message_body = "";
                else {
                    object.message_body = [];
                    if (options.bytes !== Array)
                        object.message_body = $util.newBuffer(object.message_body);
                }
            if (message.message_body != null && message.hasOwnProperty("message_body"))
                object.message_body = options.bytes === String ? $util.base64.encode(message.message_body, 0, message.message_body.length) : options.bytes === Array ? Array.prototype.slice.call(message.message_body) : message.message_body;
            return object;
        };
    
        /**
         * Converts this CMsgProtobufWrapped to JSON.
         * @function toJSON
         * @memberof CMsgProtobufWrapped
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtobufWrapped.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgProtobufWrapped;
    })();
    
    $root.CMsgAuthTicket = (function() {
    
        /**
         * Properties of a CMsgAuthTicket.
         * @exports ICMsgAuthTicket
         * @interface ICMsgAuthTicket
         * @property {number|null} [estate] CMsgAuthTicket estate
         * @property {number|null} [eresult] CMsgAuthTicket eresult
         * @property {number|Long|null} [steamid] CMsgAuthTicket steamid
         * @property {number|Long|null} [gameid] CMsgAuthTicket gameid
         * @property {number|null} [h_steam_pipe] CMsgAuthTicket h_steam_pipe
         * @property {number|null} [ticket_crc] CMsgAuthTicket ticket_crc
         * @property {Uint8Array|null} [ticket] CMsgAuthTicket ticket
         */
    
        /**
         * Constructs a new CMsgAuthTicket.
         * @exports CMsgAuthTicket
         * @classdesc Represents a CMsgAuthTicket.
         * @implements ICMsgAuthTicket
         * @constructor
         * @param {ICMsgAuthTicket=} [properties] Properties to set
         */
        function CMsgAuthTicket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAuthTicket estate.
         * @member {number} estate
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.estate = 0;
    
        /**
         * CMsgAuthTicket eresult.
         * @member {number} eresult
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.eresult = 2;
    
        /**
         * CMsgAuthTicket steamid.
         * @member {number|Long} steamid
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAuthTicket gameid.
         * @member {number|Long} gameid
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.gameid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgAuthTicket h_steam_pipe.
         * @member {number} h_steam_pipe
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.h_steam_pipe = 0;
    
        /**
         * CMsgAuthTicket ticket_crc.
         * @member {number} ticket_crc
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.ticket_crc = 0;
    
        /**
         * CMsgAuthTicket ticket.
         * @member {Uint8Array} ticket
         * @memberof CMsgAuthTicket
         * @instance
         */
        CMsgAuthTicket.prototype.ticket = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgAuthTicket instance using the specified properties.
         * @function create
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket=} [properties] Properties to set
         * @returns {CMsgAuthTicket} CMsgAuthTicket instance
         */
        CMsgAuthTicket.create = function create(properties) {
            return new CMsgAuthTicket(properties);
        };
    
        /**
         * Encodes the specified CMsgAuthTicket message. Does not implicitly {@link CMsgAuthTicket.verify|verify} messages.
         * @function encode
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket} message CMsgAuthTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAuthTicket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.estate != null && Object.hasOwnProperty.call(message, "estate"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.estate);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.eresult);
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamid);
            if (message.gameid != null && Object.hasOwnProperty.call(message, "gameid"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.gameid);
            if (message.h_steam_pipe != null && Object.hasOwnProperty.call(message, "h_steam_pipe"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.h_steam_pipe);
            if (message.ticket_crc != null && Object.hasOwnProperty.call(message, "ticket_crc"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.ticket_crc);
            if (message.ticket != null && Object.hasOwnProperty.call(message, "ticket"))
                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.ticket);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAuthTicket message, length delimited. Does not implicitly {@link CMsgAuthTicket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAuthTicket
         * @static
         * @param {ICMsgAuthTicket} message CMsgAuthTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAuthTicket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAuthTicket message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAuthTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAuthTicket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAuthTicket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.estate = reader.uint32();
                    break;
                case 2:
                    message.eresult = reader.uint32();
                    break;
                case 3:
                    message.steamid = reader.fixed64();
                    break;
                case 4:
                    message.gameid = reader.fixed64();
                    break;
                case 5:
                    message.h_steam_pipe = reader.uint32();
                    break;
                case 6:
                    message.ticket_crc = reader.uint32();
                    break;
                case 7:
                    message.ticket = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAuthTicket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAuthTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAuthTicket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAuthTicket message.
         * @function verify
         * @memberof CMsgAuthTicket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAuthTicket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.estate != null && message.hasOwnProperty("estate"))
                if (!$util.isInteger(message.estate))
                    return "estate: integer expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (!$util.isInteger(message.gameid) && !(message.gameid && $util.isInteger(message.gameid.low) && $util.isInteger(message.gameid.high)))
                    return "gameid: integer|Long expected";
            if (message.h_steam_pipe != null && message.hasOwnProperty("h_steam_pipe"))
                if (!$util.isInteger(message.h_steam_pipe))
                    return "h_steam_pipe: integer expected";
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                if (!$util.isInteger(message.ticket_crc))
                    return "ticket_crc: integer expected";
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                if (!(message.ticket && typeof message.ticket.length === "number" || $util.isString(message.ticket)))
                    return "ticket: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAuthTicket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAuthTicket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAuthTicket} CMsgAuthTicket
         */
        CMsgAuthTicket.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAuthTicket)
                return object;
            var message = new $root.CMsgAuthTicket();
            if (object.estate != null)
                message.estate = object.estate >>> 0;
            if (object.eresult != null)
                message.eresult = object.eresult >>> 0;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.gameid != null)
                if ($util.Long)
                    (message.gameid = $util.Long.fromValue(object.gameid)).unsigned = false;
                else if (typeof object.gameid === "string")
                    message.gameid = parseInt(object.gameid, 10);
                else if (typeof object.gameid === "number")
                    message.gameid = object.gameid;
                else if (typeof object.gameid === "object")
                    message.gameid = new $util.LongBits(object.gameid.low >>> 0, object.gameid.high >>> 0).toNumber();
            if (object.h_steam_pipe != null)
                message.h_steam_pipe = object.h_steam_pipe >>> 0;
            if (object.ticket_crc != null)
                message.ticket_crc = object.ticket_crc >>> 0;
            if (object.ticket != null)
                if (typeof object.ticket === "string")
                    $util.base64.decode(object.ticket, message.ticket = $util.newBuffer($util.base64.length(object.ticket)), 0);
                else if (object.ticket.length)
                    message.ticket = object.ticket;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAuthTicket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAuthTicket
         * @static
         * @param {CMsgAuthTicket} message CMsgAuthTicket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAuthTicket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.estate = 0;
                object.eresult = 2;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gameid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gameid = options.longs === String ? "0" : 0;
                object.h_steam_pipe = 0;
                object.ticket_crc = 0;
                if (options.bytes === String)
                    object.ticket = "";
                else {
                    object.ticket = [];
                    if (options.bytes !== Array)
                        object.ticket = $util.newBuffer(object.ticket);
                }
            }
            if (message.estate != null && message.hasOwnProperty("estate"))
                object.estate = message.estate;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.gameid != null && message.hasOwnProperty("gameid"))
                if (typeof message.gameid === "number")
                    object.gameid = options.longs === String ? String(message.gameid) : message.gameid;
                else
                    object.gameid = options.longs === String ? $util.Long.prototype.toString.call(message.gameid) : options.longs === Number ? new $util.LongBits(message.gameid.low >>> 0, message.gameid.high >>> 0).toNumber() : message.gameid;
            if (message.h_steam_pipe != null && message.hasOwnProperty("h_steam_pipe"))
                object.h_steam_pipe = message.h_steam_pipe;
            if (message.ticket_crc != null && message.hasOwnProperty("ticket_crc"))
                object.ticket_crc = message.ticket_crc;
            if (message.ticket != null && message.hasOwnProperty("ticket"))
                object.ticket = options.bytes === String ? $util.base64.encode(message.ticket, 0, message.ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.ticket) : message.ticket;
            return object;
        };
    
        /**
         * Converts this CMsgAuthTicket to JSON.
         * @function toJSON
         * @memberof CMsgAuthTicket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAuthTicket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAuthTicket;
    })();
    
    $root.CCDDBAppDetailCommon = (function() {
    
        /**
         * Properties of a CCDDBAppDetailCommon.
         * @exports ICCDDBAppDetailCommon
         * @interface ICCDDBAppDetailCommon
         * @property {number|null} [appid] CCDDBAppDetailCommon appid
         * @property {string|null} [name] CCDDBAppDetailCommon name
         * @property {string|null} [icon] CCDDBAppDetailCommon icon
         * @property {string|null} [logo] CCDDBAppDetailCommon logo
         * @property {string|null} [logo_small] CCDDBAppDetailCommon logo_small
         * @property {boolean|null} [tool] CCDDBAppDetailCommon tool
         * @property {boolean|null} [demo] CCDDBAppDetailCommon demo
         * @property {boolean|null} [media] CCDDBAppDetailCommon media
         * @property {boolean|null} [community_visible_stats] CCDDBAppDetailCommon community_visible_stats
         * @property {string|null} [friendly_name] CCDDBAppDetailCommon friendly_name
         * @property {string|null} [propagation] CCDDBAppDetailCommon propagation
         * @property {boolean|null} [has_adult_content] CCDDBAppDetailCommon has_adult_content
         */
    
        /**
         * Constructs a new CCDDBAppDetailCommon.
         * @exports CCDDBAppDetailCommon
         * @classdesc Represents a CCDDBAppDetailCommon.
         * @implements ICCDDBAppDetailCommon
         * @constructor
         * @param {ICCDDBAppDetailCommon=} [properties] Properties to set
         */
        function CCDDBAppDetailCommon(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CCDDBAppDetailCommon appid.
         * @member {number} appid
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.appid = 0;
    
        /**
         * CCDDBAppDetailCommon name.
         * @member {string} name
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.name = "";
    
        /**
         * CCDDBAppDetailCommon icon.
         * @member {string} icon
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.icon = "";
    
        /**
         * CCDDBAppDetailCommon logo.
         * @member {string} logo
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.logo = "";
    
        /**
         * CCDDBAppDetailCommon logo_small.
         * @member {string} logo_small
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.logo_small = "";
    
        /**
         * CCDDBAppDetailCommon tool.
         * @member {boolean} tool
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.tool = false;
    
        /**
         * CCDDBAppDetailCommon demo.
         * @member {boolean} demo
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.demo = false;
    
        /**
         * CCDDBAppDetailCommon media.
         * @member {boolean} media
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.media = false;
    
        /**
         * CCDDBAppDetailCommon community_visible_stats.
         * @member {boolean} community_visible_stats
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.community_visible_stats = false;
    
        /**
         * CCDDBAppDetailCommon friendly_name.
         * @member {string} friendly_name
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.friendly_name = "";
    
        /**
         * CCDDBAppDetailCommon propagation.
         * @member {string} propagation
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.propagation = "";
    
        /**
         * CCDDBAppDetailCommon has_adult_content.
         * @member {boolean} has_adult_content
         * @memberof CCDDBAppDetailCommon
         * @instance
         */
        CCDDBAppDetailCommon.prototype.has_adult_content = false;
    
        /**
         * Creates a new CCDDBAppDetailCommon instance using the specified properties.
         * @function create
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {ICCDDBAppDetailCommon=} [properties] Properties to set
         * @returns {CCDDBAppDetailCommon} CCDDBAppDetailCommon instance
         */
        CCDDBAppDetailCommon.create = function create(properties) {
            return new CCDDBAppDetailCommon(properties);
        };
    
        /**
         * Encodes the specified CCDDBAppDetailCommon message. Does not implicitly {@link CCDDBAppDetailCommon.verify|verify} messages.
         * @function encode
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {ICCDDBAppDetailCommon} message CCDDBAppDetailCommon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCDDBAppDetailCommon.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            if (message.icon != null && Object.hasOwnProperty.call(message, "icon"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.icon);
            if (message.logo != null && Object.hasOwnProperty.call(message, "logo"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.logo);
            if (message.logo_small != null && Object.hasOwnProperty.call(message, "logo_small"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.logo_small);
            if (message.tool != null && Object.hasOwnProperty.call(message, "tool"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.tool);
            if (message.demo != null && Object.hasOwnProperty.call(message, "demo"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.demo);
            if (message.media != null && Object.hasOwnProperty.call(message, "media"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.media);
            if (message.community_visible_stats != null && Object.hasOwnProperty.call(message, "community_visible_stats"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.community_visible_stats);
            if (message.friendly_name != null && Object.hasOwnProperty.call(message, "friendly_name"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.friendly_name);
            if (message.propagation != null && Object.hasOwnProperty.call(message, "propagation"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.propagation);
            if (message.has_adult_content != null && Object.hasOwnProperty.call(message, "has_adult_content"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.has_adult_content);
            return writer;
        };
    
        /**
         * Encodes the specified CCDDBAppDetailCommon message, length delimited. Does not implicitly {@link CCDDBAppDetailCommon.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {ICCDDBAppDetailCommon} message CCDDBAppDetailCommon message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCDDBAppDetailCommon.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CCDDBAppDetailCommon message from the specified reader or buffer.
         * @function decode
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CCDDBAppDetailCommon} CCDDBAppDetailCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCDDBAppDetailCommon.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CCDDBAppDetailCommon();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.appid = reader.uint32();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                case 3:
                    message.icon = reader.string();
                    break;
                case 4:
                    message.logo = reader.string();
                    break;
                case 5:
                    message.logo_small = reader.string();
                    break;
                case 6:
                    message.tool = reader.bool();
                    break;
                case 7:
                    message.demo = reader.bool();
                    break;
                case 8:
                    message.media = reader.bool();
                    break;
                case 9:
                    message.community_visible_stats = reader.bool();
                    break;
                case 10:
                    message.friendly_name = reader.string();
                    break;
                case 11:
                    message.propagation = reader.string();
                    break;
                case 12:
                    message.has_adult_content = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CCDDBAppDetailCommon message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CCDDBAppDetailCommon} CCDDBAppDetailCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCDDBAppDetailCommon.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CCDDBAppDetailCommon message.
         * @function verify
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CCDDBAppDetailCommon.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.icon != null && message.hasOwnProperty("icon"))
                if (!$util.isString(message.icon))
                    return "icon: string expected";
            if (message.logo != null && message.hasOwnProperty("logo"))
                if (!$util.isString(message.logo))
                    return "logo: string expected";
            if (message.logo_small != null && message.hasOwnProperty("logo_small"))
                if (!$util.isString(message.logo_small))
                    return "logo_small: string expected";
            if (message.tool != null && message.hasOwnProperty("tool"))
                if (typeof message.tool !== "boolean")
                    return "tool: boolean expected";
            if (message.demo != null && message.hasOwnProperty("demo"))
                if (typeof message.demo !== "boolean")
                    return "demo: boolean expected";
            if (message.media != null && message.hasOwnProperty("media"))
                if (typeof message.media !== "boolean")
                    return "media: boolean expected";
            if (message.community_visible_stats != null && message.hasOwnProperty("community_visible_stats"))
                if (typeof message.community_visible_stats !== "boolean")
                    return "community_visible_stats: boolean expected";
            if (message.friendly_name != null && message.hasOwnProperty("friendly_name"))
                if (!$util.isString(message.friendly_name))
                    return "friendly_name: string expected";
            if (message.propagation != null && message.hasOwnProperty("propagation"))
                if (!$util.isString(message.propagation))
                    return "propagation: string expected";
            if (message.has_adult_content != null && message.hasOwnProperty("has_adult_content"))
                if (typeof message.has_adult_content !== "boolean")
                    return "has_adult_content: boolean expected";
            return null;
        };
    
        /**
         * Creates a CCDDBAppDetailCommon message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CCDDBAppDetailCommon} CCDDBAppDetailCommon
         */
        CCDDBAppDetailCommon.fromObject = function fromObject(object) {
            if (object instanceof $root.CCDDBAppDetailCommon)
                return object;
            var message = new $root.CCDDBAppDetailCommon();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.name != null)
                message.name = String(object.name);
            if (object.icon != null)
                message.icon = String(object.icon);
            if (object.logo != null)
                message.logo = String(object.logo);
            if (object.logo_small != null)
                message.logo_small = String(object.logo_small);
            if (object.tool != null)
                message.tool = Boolean(object.tool);
            if (object.demo != null)
                message.demo = Boolean(object.demo);
            if (object.media != null)
                message.media = Boolean(object.media);
            if (object.community_visible_stats != null)
                message.community_visible_stats = Boolean(object.community_visible_stats);
            if (object.friendly_name != null)
                message.friendly_name = String(object.friendly_name);
            if (object.propagation != null)
                message.propagation = String(object.propagation);
            if (object.has_adult_content != null)
                message.has_adult_content = Boolean(object.has_adult_content);
            return message;
        };
    
        /**
         * Creates a plain object from a CCDDBAppDetailCommon message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CCDDBAppDetailCommon
         * @static
         * @param {CCDDBAppDetailCommon} message CCDDBAppDetailCommon
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CCDDBAppDetailCommon.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.name = "";
                object.icon = "";
                object.logo = "";
                object.logo_small = "";
                object.tool = false;
                object.demo = false;
                object.media = false;
                object.community_visible_stats = false;
                object.friendly_name = "";
                object.propagation = "";
                object.has_adult_content = false;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.icon != null && message.hasOwnProperty("icon"))
                object.icon = message.icon;
            if (message.logo != null && message.hasOwnProperty("logo"))
                object.logo = message.logo;
            if (message.logo_small != null && message.hasOwnProperty("logo_small"))
                object.logo_small = message.logo_small;
            if (message.tool != null && message.hasOwnProperty("tool"))
                object.tool = message.tool;
            if (message.demo != null && message.hasOwnProperty("demo"))
                object.demo = message.demo;
            if (message.media != null && message.hasOwnProperty("media"))
                object.media = message.media;
            if (message.community_visible_stats != null && message.hasOwnProperty("community_visible_stats"))
                object.community_visible_stats = message.community_visible_stats;
            if (message.friendly_name != null && message.hasOwnProperty("friendly_name"))
                object.friendly_name = message.friendly_name;
            if (message.propagation != null && message.hasOwnProperty("propagation"))
                object.propagation = message.propagation;
            if (message.has_adult_content != null && message.hasOwnProperty("has_adult_content"))
                object.has_adult_content = message.has_adult_content;
            return object;
        };
    
        /**
         * Converts this CCDDBAppDetailCommon to JSON.
         * @function toJSON
         * @memberof CCDDBAppDetailCommon
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CCDDBAppDetailCommon.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CCDDBAppDetailCommon;
    })();
    
    $root.CMsgAppRights = (function() {
    
        /**
         * Properties of a CMsgAppRights.
         * @exports ICMsgAppRights
         * @interface ICMsgAppRights
         * @property {boolean|null} [edit_info] CMsgAppRights edit_info
         * @property {boolean|null} [publish] CMsgAppRights publish
         * @property {boolean|null} [view_error_data] CMsgAppRights view_error_data
         * @property {boolean|null} [download] CMsgAppRights download
         * @property {boolean|null} [upload_cdkeys] CMsgAppRights upload_cdkeys
         * @property {boolean|null} [generate_cdkeys] CMsgAppRights generate_cdkeys
         * @property {boolean|null} [view_financials] CMsgAppRights view_financials
         * @property {boolean|null} [manage_ceg] CMsgAppRights manage_ceg
         * @property {boolean|null} [manage_signing] CMsgAppRights manage_signing
         * @property {boolean|null} [manage_cdkeys] CMsgAppRights manage_cdkeys
         * @property {boolean|null} [edit_marketing] CMsgAppRights edit_marketing
         * @property {boolean|null} [economy_support] CMsgAppRights economy_support
         * @property {boolean|null} [economy_support_supervisor] CMsgAppRights economy_support_supervisor
         * @property {boolean|null} [manage_pricing] CMsgAppRights manage_pricing
         * @property {boolean|null} [broadcast_live] CMsgAppRights broadcast_live
         * @property {boolean|null} [view_marketing_traffic] CMsgAppRights view_marketing_traffic
         */
    
        /**
         * Constructs a new CMsgAppRights.
         * @exports CMsgAppRights
         * @classdesc Represents a CMsgAppRights.
         * @implements ICMsgAppRights
         * @constructor
         * @param {ICMsgAppRights=} [properties] Properties to set
         */
        function CMsgAppRights(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAppRights edit_info.
         * @member {boolean} edit_info
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.edit_info = false;
    
        /**
         * CMsgAppRights publish.
         * @member {boolean} publish
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.publish = false;
    
        /**
         * CMsgAppRights view_error_data.
         * @member {boolean} view_error_data
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.view_error_data = false;
    
        /**
         * CMsgAppRights download.
         * @member {boolean} download
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.download = false;
    
        /**
         * CMsgAppRights upload_cdkeys.
         * @member {boolean} upload_cdkeys
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.upload_cdkeys = false;
    
        /**
         * CMsgAppRights generate_cdkeys.
         * @member {boolean} generate_cdkeys
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.generate_cdkeys = false;
    
        /**
         * CMsgAppRights view_financials.
         * @member {boolean} view_financials
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.view_financials = false;
    
        /**
         * CMsgAppRights manage_ceg.
         * @member {boolean} manage_ceg
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.manage_ceg = false;
    
        /**
         * CMsgAppRights manage_signing.
         * @member {boolean} manage_signing
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.manage_signing = false;
    
        /**
         * CMsgAppRights manage_cdkeys.
         * @member {boolean} manage_cdkeys
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.manage_cdkeys = false;
    
        /**
         * CMsgAppRights edit_marketing.
         * @member {boolean} edit_marketing
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.edit_marketing = false;
    
        /**
         * CMsgAppRights economy_support.
         * @member {boolean} economy_support
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.economy_support = false;
    
        /**
         * CMsgAppRights economy_support_supervisor.
         * @member {boolean} economy_support_supervisor
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.economy_support_supervisor = false;
    
        /**
         * CMsgAppRights manage_pricing.
         * @member {boolean} manage_pricing
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.manage_pricing = false;
    
        /**
         * CMsgAppRights broadcast_live.
         * @member {boolean} broadcast_live
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.broadcast_live = false;
    
        /**
         * CMsgAppRights view_marketing_traffic.
         * @member {boolean} view_marketing_traffic
         * @memberof CMsgAppRights
         * @instance
         */
        CMsgAppRights.prototype.view_marketing_traffic = false;
    
        /**
         * Creates a new CMsgAppRights instance using the specified properties.
         * @function create
         * @memberof CMsgAppRights
         * @static
         * @param {ICMsgAppRights=} [properties] Properties to set
         * @returns {CMsgAppRights} CMsgAppRights instance
         */
        CMsgAppRights.create = function create(properties) {
            return new CMsgAppRights(properties);
        };
    
        /**
         * Encodes the specified CMsgAppRights message. Does not implicitly {@link CMsgAppRights.verify|verify} messages.
         * @function encode
         * @memberof CMsgAppRights
         * @static
         * @param {ICMsgAppRights} message CMsgAppRights message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAppRights.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.edit_info != null && Object.hasOwnProperty.call(message, "edit_info"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.edit_info);
            if (message.publish != null && Object.hasOwnProperty.call(message, "publish"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.publish);
            if (message.view_error_data != null && Object.hasOwnProperty.call(message, "view_error_data"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.view_error_data);
            if (message.download != null && Object.hasOwnProperty.call(message, "download"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.download);
            if (message.upload_cdkeys != null && Object.hasOwnProperty.call(message, "upload_cdkeys"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.upload_cdkeys);
            if (message.generate_cdkeys != null && Object.hasOwnProperty.call(message, "generate_cdkeys"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.generate_cdkeys);
            if (message.view_financials != null && Object.hasOwnProperty.call(message, "view_financials"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.view_financials);
            if (message.manage_ceg != null && Object.hasOwnProperty.call(message, "manage_ceg"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.manage_ceg);
            if (message.manage_signing != null && Object.hasOwnProperty.call(message, "manage_signing"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.manage_signing);
            if (message.manage_cdkeys != null && Object.hasOwnProperty.call(message, "manage_cdkeys"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.manage_cdkeys);
            if (message.edit_marketing != null && Object.hasOwnProperty.call(message, "edit_marketing"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.edit_marketing);
            if (message.economy_support != null && Object.hasOwnProperty.call(message, "economy_support"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.economy_support);
            if (message.economy_support_supervisor != null && Object.hasOwnProperty.call(message, "economy_support_supervisor"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.economy_support_supervisor);
            if (message.manage_pricing != null && Object.hasOwnProperty.call(message, "manage_pricing"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.manage_pricing);
            if (message.broadcast_live != null && Object.hasOwnProperty.call(message, "broadcast_live"))
                writer.uint32(/* id 15, wireType 0 =*/120).bool(message.broadcast_live);
            if (message.view_marketing_traffic != null && Object.hasOwnProperty.call(message, "view_marketing_traffic"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.view_marketing_traffic);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAppRights message, length delimited. Does not implicitly {@link CMsgAppRights.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAppRights
         * @static
         * @param {ICMsgAppRights} message CMsgAppRights message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAppRights.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAppRights message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAppRights
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAppRights} CMsgAppRights
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAppRights.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAppRights();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.edit_info = reader.bool();
                    break;
                case 2:
                    message.publish = reader.bool();
                    break;
                case 3:
                    message.view_error_data = reader.bool();
                    break;
                case 4:
                    message.download = reader.bool();
                    break;
                case 5:
                    message.upload_cdkeys = reader.bool();
                    break;
                case 6:
                    message.generate_cdkeys = reader.bool();
                    break;
                case 7:
                    message.view_financials = reader.bool();
                    break;
                case 8:
                    message.manage_ceg = reader.bool();
                    break;
                case 9:
                    message.manage_signing = reader.bool();
                    break;
                case 10:
                    message.manage_cdkeys = reader.bool();
                    break;
                case 11:
                    message.edit_marketing = reader.bool();
                    break;
                case 12:
                    message.economy_support = reader.bool();
                    break;
                case 13:
                    message.economy_support_supervisor = reader.bool();
                    break;
                case 14:
                    message.manage_pricing = reader.bool();
                    break;
                case 15:
                    message.broadcast_live = reader.bool();
                    break;
                case 16:
                    message.view_marketing_traffic = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAppRights message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAppRights
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAppRights} CMsgAppRights
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAppRights.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAppRights message.
         * @function verify
         * @memberof CMsgAppRights
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAppRights.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.edit_info != null && message.hasOwnProperty("edit_info"))
                if (typeof message.edit_info !== "boolean")
                    return "edit_info: boolean expected";
            if (message.publish != null && message.hasOwnProperty("publish"))
                if (typeof message.publish !== "boolean")
                    return "publish: boolean expected";
            if (message.view_error_data != null && message.hasOwnProperty("view_error_data"))
                if (typeof message.view_error_data !== "boolean")
                    return "view_error_data: boolean expected";
            if (message.download != null && message.hasOwnProperty("download"))
                if (typeof message.download !== "boolean")
                    return "download: boolean expected";
            if (message.upload_cdkeys != null && message.hasOwnProperty("upload_cdkeys"))
                if (typeof message.upload_cdkeys !== "boolean")
                    return "upload_cdkeys: boolean expected";
            if (message.generate_cdkeys != null && message.hasOwnProperty("generate_cdkeys"))
                if (typeof message.generate_cdkeys !== "boolean")
                    return "generate_cdkeys: boolean expected";
            if (message.view_financials != null && message.hasOwnProperty("view_financials"))
                if (typeof message.view_financials !== "boolean")
                    return "view_financials: boolean expected";
            if (message.manage_ceg != null && message.hasOwnProperty("manage_ceg"))
                if (typeof message.manage_ceg !== "boolean")
                    return "manage_ceg: boolean expected";
            if (message.manage_signing != null && message.hasOwnProperty("manage_signing"))
                if (typeof message.manage_signing !== "boolean")
                    return "manage_signing: boolean expected";
            if (message.manage_cdkeys != null && message.hasOwnProperty("manage_cdkeys"))
                if (typeof message.manage_cdkeys !== "boolean")
                    return "manage_cdkeys: boolean expected";
            if (message.edit_marketing != null && message.hasOwnProperty("edit_marketing"))
                if (typeof message.edit_marketing !== "boolean")
                    return "edit_marketing: boolean expected";
            if (message.economy_support != null && message.hasOwnProperty("economy_support"))
                if (typeof message.economy_support !== "boolean")
                    return "economy_support: boolean expected";
            if (message.economy_support_supervisor != null && message.hasOwnProperty("economy_support_supervisor"))
                if (typeof message.economy_support_supervisor !== "boolean")
                    return "economy_support_supervisor: boolean expected";
            if (message.manage_pricing != null && message.hasOwnProperty("manage_pricing"))
                if (typeof message.manage_pricing !== "boolean")
                    return "manage_pricing: boolean expected";
            if (message.broadcast_live != null && message.hasOwnProperty("broadcast_live"))
                if (typeof message.broadcast_live !== "boolean")
                    return "broadcast_live: boolean expected";
            if (message.view_marketing_traffic != null && message.hasOwnProperty("view_marketing_traffic"))
                if (typeof message.view_marketing_traffic !== "boolean")
                    return "view_marketing_traffic: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgAppRights message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAppRights
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAppRights} CMsgAppRights
         */
        CMsgAppRights.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAppRights)
                return object;
            var message = new $root.CMsgAppRights();
            if (object.edit_info != null)
                message.edit_info = Boolean(object.edit_info);
            if (object.publish != null)
                message.publish = Boolean(object.publish);
            if (object.view_error_data != null)
                message.view_error_data = Boolean(object.view_error_data);
            if (object.download != null)
                message.download = Boolean(object.download);
            if (object.upload_cdkeys != null)
                message.upload_cdkeys = Boolean(object.upload_cdkeys);
            if (object.generate_cdkeys != null)
                message.generate_cdkeys = Boolean(object.generate_cdkeys);
            if (object.view_financials != null)
                message.view_financials = Boolean(object.view_financials);
            if (object.manage_ceg != null)
                message.manage_ceg = Boolean(object.manage_ceg);
            if (object.manage_signing != null)
                message.manage_signing = Boolean(object.manage_signing);
            if (object.manage_cdkeys != null)
                message.manage_cdkeys = Boolean(object.manage_cdkeys);
            if (object.edit_marketing != null)
                message.edit_marketing = Boolean(object.edit_marketing);
            if (object.economy_support != null)
                message.economy_support = Boolean(object.economy_support);
            if (object.economy_support_supervisor != null)
                message.economy_support_supervisor = Boolean(object.economy_support_supervisor);
            if (object.manage_pricing != null)
                message.manage_pricing = Boolean(object.manage_pricing);
            if (object.broadcast_live != null)
                message.broadcast_live = Boolean(object.broadcast_live);
            if (object.view_marketing_traffic != null)
                message.view_marketing_traffic = Boolean(object.view_marketing_traffic);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAppRights message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAppRights
         * @static
         * @param {CMsgAppRights} message CMsgAppRights
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAppRights.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.edit_info = false;
                object.publish = false;
                object.view_error_data = false;
                object.download = false;
                object.upload_cdkeys = false;
                object.generate_cdkeys = false;
                object.view_financials = false;
                object.manage_ceg = false;
                object.manage_signing = false;
                object.manage_cdkeys = false;
                object.edit_marketing = false;
                object.economy_support = false;
                object.economy_support_supervisor = false;
                object.manage_pricing = false;
                object.broadcast_live = false;
                object.view_marketing_traffic = false;
            }
            if (message.edit_info != null && message.hasOwnProperty("edit_info"))
                object.edit_info = message.edit_info;
            if (message.publish != null && message.hasOwnProperty("publish"))
                object.publish = message.publish;
            if (message.view_error_data != null && message.hasOwnProperty("view_error_data"))
                object.view_error_data = message.view_error_data;
            if (message.download != null && message.hasOwnProperty("download"))
                object.download = message.download;
            if (message.upload_cdkeys != null && message.hasOwnProperty("upload_cdkeys"))
                object.upload_cdkeys = message.upload_cdkeys;
            if (message.generate_cdkeys != null && message.hasOwnProperty("generate_cdkeys"))
                object.generate_cdkeys = message.generate_cdkeys;
            if (message.view_financials != null && message.hasOwnProperty("view_financials"))
                object.view_financials = message.view_financials;
            if (message.manage_ceg != null && message.hasOwnProperty("manage_ceg"))
                object.manage_ceg = message.manage_ceg;
            if (message.manage_signing != null && message.hasOwnProperty("manage_signing"))
                object.manage_signing = message.manage_signing;
            if (message.manage_cdkeys != null && message.hasOwnProperty("manage_cdkeys"))
                object.manage_cdkeys = message.manage_cdkeys;
            if (message.edit_marketing != null && message.hasOwnProperty("edit_marketing"))
                object.edit_marketing = message.edit_marketing;
            if (message.economy_support != null && message.hasOwnProperty("economy_support"))
                object.economy_support = message.economy_support;
            if (message.economy_support_supervisor != null && message.hasOwnProperty("economy_support_supervisor"))
                object.economy_support_supervisor = message.economy_support_supervisor;
            if (message.manage_pricing != null && message.hasOwnProperty("manage_pricing"))
                object.manage_pricing = message.manage_pricing;
            if (message.broadcast_live != null && message.hasOwnProperty("broadcast_live"))
                object.broadcast_live = message.broadcast_live;
            if (message.view_marketing_traffic != null && message.hasOwnProperty("view_marketing_traffic"))
                object.view_marketing_traffic = message.view_marketing_traffic;
            return object;
        };
    
        /**
         * Converts this CMsgAppRights to JSON.
         * @function toJSON
         * @memberof CMsgAppRights
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAppRights.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CMsgAppRights;
    })();
    
    $root.CCuratorPreferences = (function() {
    
        /**
         * Properties of a CCuratorPreferences.
         * @exports ICCuratorPreferences
         * @interface ICCuratorPreferences
         * @property {number|null} [supported_languages] CCuratorPreferences supported_languages
         * @property {boolean|null} [platform_windows] CCuratorPreferences platform_windows
         * @property {boolean|null} [platform_mac] CCuratorPreferences platform_mac
         * @property {boolean|null} [platform_linux] CCuratorPreferences platform_linux
         * @property {boolean|null} [vr_content] CCuratorPreferences vr_content
         * @property {boolean|null} [adult_content_violence] CCuratorPreferences adult_content_violence
         * @property {boolean|null} [adult_content_sex] CCuratorPreferences adult_content_sex
         * @property {number|null} [timestamp_updated] CCuratorPreferences timestamp_updated
         * @property {Array.<number>|null} [tagids_curated] CCuratorPreferences tagids_curated
         * @property {Array.<number>|null} [tagids_filtered] CCuratorPreferences tagids_filtered
         * @property {string|null} [website_title] CCuratorPreferences website_title
         * @property {string|null} [website_url] CCuratorPreferences website_url
         * @property {string|null} [discussion_url] CCuratorPreferences discussion_url
         * @property {boolean|null} [show_broadcast] CCuratorPreferences show_broadcast
         */
    
        /**
         * Constructs a new CCuratorPreferences.
         * @exports CCuratorPreferences
         * @classdesc Represents a CCuratorPreferences.
         * @implements ICCuratorPreferences
         * @constructor
         * @param {ICCuratorPreferences=} [properties] Properties to set
         */
        function CCuratorPreferences(properties) {
            this.tagids_curated = [];
            this.tagids_filtered = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CCuratorPreferences supported_languages.
         * @member {number} supported_languages
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.supported_languages = 0;
    
        /**
         * CCuratorPreferences platform_windows.
         * @member {boolean} platform_windows
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.platform_windows = false;
    
        /**
         * CCuratorPreferences platform_mac.
         * @member {boolean} platform_mac
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.platform_mac = false;
    
        /**
         * CCuratorPreferences platform_linux.
         * @member {boolean} platform_linux
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.platform_linux = false;
    
        /**
         * CCuratorPreferences vr_content.
         * @member {boolean} vr_content
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.vr_content = false;
    
        /**
         * CCuratorPreferences adult_content_violence.
         * @member {boolean} adult_content_violence
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.adult_content_violence = false;
    
        /**
         * CCuratorPreferences adult_content_sex.
         * @member {boolean} adult_content_sex
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.adult_content_sex = false;
    
        /**
         * CCuratorPreferences timestamp_updated.
         * @member {number} timestamp_updated
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.timestamp_updated = 0;
    
        /**
         * CCuratorPreferences tagids_curated.
         * @member {Array.<number>} tagids_curated
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.tagids_curated = $util.emptyArray;
    
        /**
         * CCuratorPreferences tagids_filtered.
         * @member {Array.<number>} tagids_filtered
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.tagids_filtered = $util.emptyArray;
    
        /**
         * CCuratorPreferences website_title.
         * @member {string} website_title
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.website_title = "";
    
        /**
         * CCuratorPreferences website_url.
         * @member {string} website_url
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.website_url = "";
    
        /**
         * CCuratorPreferences discussion_url.
         * @member {string} discussion_url
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.discussion_url = "";
    
        /**
         * CCuratorPreferences show_broadcast.
         * @member {boolean} show_broadcast
         * @memberof CCuratorPreferences
         * @instance
         */
        CCuratorPreferences.prototype.show_broadcast = false;
    
        /**
         * Creates a new CCuratorPreferences instance using the specified properties.
         * @function create
         * @memberof CCuratorPreferences
         * @static
         * @param {ICCuratorPreferences=} [properties] Properties to set
         * @returns {CCuratorPreferences} CCuratorPreferences instance
         */
        CCuratorPreferences.create = function create(properties) {
            return new CCuratorPreferences(properties);
        };
    
        /**
         * Encodes the specified CCuratorPreferences message. Does not implicitly {@link CCuratorPreferences.verify|verify} messages.
         * @function encode
         * @memberof CCuratorPreferences
         * @static
         * @param {ICCuratorPreferences} message CCuratorPreferences message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCuratorPreferences.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.supported_languages != null && Object.hasOwnProperty.call(message, "supported_languages"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.supported_languages);
            if (message.platform_windows != null && Object.hasOwnProperty.call(message, "platform_windows"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.platform_windows);
            if (message.platform_mac != null && Object.hasOwnProperty.call(message, "platform_mac"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.platform_mac);
            if (message.platform_linux != null && Object.hasOwnProperty.call(message, "platform_linux"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.platform_linux);
            if (message.vr_content != null && Object.hasOwnProperty.call(message, "vr_content"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.vr_content);
            if (message.adult_content_violence != null && Object.hasOwnProperty.call(message, "adult_content_violence"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.adult_content_violence);
            if (message.adult_content_sex != null && Object.hasOwnProperty.call(message, "adult_content_sex"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.adult_content_sex);
            if (message.timestamp_updated != null && Object.hasOwnProperty.call(message, "timestamp_updated"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.timestamp_updated);
            if (message.tagids_curated != null && message.tagids_curated.length)
                for (var i = 0; i < message.tagids_curated.length; ++i)
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.tagids_curated[i]);
            if (message.tagids_filtered != null && message.tagids_filtered.length)
                for (var i = 0; i < message.tagids_filtered.length; ++i)
                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.tagids_filtered[i]);
            if (message.website_title != null && Object.hasOwnProperty.call(message, "website_title"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.website_title);
            if (message.website_url != null && Object.hasOwnProperty.call(message, "website_url"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.website_url);
            if (message.discussion_url != null && Object.hasOwnProperty.call(message, "discussion_url"))
                writer.uint32(/* id 13, wireType 2 =*/106).string(message.discussion_url);
            if (message.show_broadcast != null && Object.hasOwnProperty.call(message, "show_broadcast"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.show_broadcast);
            return writer;
        };
    
        /**
         * Encodes the specified CCuratorPreferences message, length delimited. Does not implicitly {@link CCuratorPreferences.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CCuratorPreferences
         * @static
         * @param {ICCuratorPreferences} message CCuratorPreferences message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCuratorPreferences.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CCuratorPreferences message from the specified reader or buffer.
         * @function decode
         * @memberof CCuratorPreferences
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CCuratorPreferences} CCuratorPreferences
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCuratorPreferences.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CCuratorPreferences();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.supported_languages = reader.uint32();
                    break;
                case 2:
                    message.platform_windows = reader.bool();
                    break;
                case 3:
                    message.platform_mac = reader.bool();
                    break;
                case 4:
                    message.platform_linux = reader.bool();
                    break;
                case 5:
                    message.vr_content = reader.bool();
                    break;
                case 6:
                    message.adult_content_violence = reader.bool();
                    break;
                case 7:
                    message.adult_content_sex = reader.bool();
                    break;
                case 8:
                    message.timestamp_updated = reader.uint32();
                    break;
                case 9:
                    if (!(message.tagids_curated && message.tagids_curated.length))
                        message.tagids_curated = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.tagids_curated.push(reader.uint32());
                    } else
                        message.tagids_curated.push(reader.uint32());
                    break;
                case 10:
                    if (!(message.tagids_filtered && message.tagids_filtered.length))
                        message.tagids_filtered = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.tagids_filtered.push(reader.uint32());
                    } else
                        message.tagids_filtered.push(reader.uint32());
                    break;
                case 11:
                    message.website_title = reader.string();
                    break;
                case 12:
                    message.website_url = reader.string();
                    break;
                case 13:
                    message.discussion_url = reader.string();
                    break;
                case 14:
                    message.show_broadcast = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CCuratorPreferences message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CCuratorPreferences
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CCuratorPreferences} CCuratorPreferences
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCuratorPreferences.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CCuratorPreferences message.
         * @function verify
         * @memberof CCuratorPreferences
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CCuratorPreferences.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.supported_languages != null && message.hasOwnProperty("supported_languages"))
                if (!$util.isInteger(message.supported_languages))
                    return "supported_languages: integer expected";
            if (message.platform_windows != null && message.hasOwnProperty("platform_windows"))
                if (typeof message.platform_windows !== "boolean")
                    return "platform_windows: boolean expected";
            if (message.platform_mac != null && message.hasOwnProperty("platform_mac"))
                if (typeof message.platform_mac !== "boolean")
                    return "platform_mac: boolean expected";
            if (message.platform_linux != null && message.hasOwnProperty("platform_linux"))
                if (typeof message.platform_linux !== "boolean")
                    return "platform_linux: boolean expected";
            if (message.vr_content != null && message.hasOwnProperty("vr_content"))
                if (typeof message.vr_content !== "boolean")
                    return "vr_content: boolean expected";
            if (message.adult_content_violence != null && message.hasOwnProperty("adult_content_violence"))
                if (typeof message.adult_content_violence !== "boolean")
                    return "adult_content_violence: boolean expected";
            if (message.adult_content_sex != null && message.hasOwnProperty("adult_content_sex"))
                if (typeof message.adult_content_sex !== "boolean")
                    return "adult_content_sex: boolean expected";
            if (message.timestamp_updated != null && message.hasOwnProperty("timestamp_updated"))
                if (!$util.isInteger(message.timestamp_updated))
                    return "timestamp_updated: integer expected";
            if (message.tagids_curated != null && message.hasOwnProperty("tagids_curated")) {
                if (!Array.isArray(message.tagids_curated))
                    return "tagids_curated: array expected";
                for (var i = 0; i < message.tagids_curated.length; ++i)
                    if (!$util.isInteger(message.tagids_curated[i]))
                        return "tagids_curated: integer[] expected";
            }
            if (message.tagids_filtered != null && message.hasOwnProperty("tagids_filtered")) {
                if (!Array.isArray(message.tagids_filtered))
                    return "tagids_filtered: array expected";
                for (var i = 0; i < message.tagids_filtered.length; ++i)
                    if (!$util.isInteger(message.tagids_filtered[i]))
                        return "tagids_filtered: integer[] expected";
            }
            if (message.website_title != null && message.hasOwnProperty("website_title"))
                if (!$util.isString(message.website_title))
                    return "website_title: string expected";
            if (message.website_url != null && message.hasOwnProperty("website_url"))
                if (!$util.isString(message.website_url))
                    return "website_url: string expected";
            if (message.discussion_url != null && message.hasOwnProperty("discussion_url"))
                if (!$util.isString(message.discussion_url))
                    return "discussion_url: string expected";
            if (message.show_broadcast != null && message.hasOwnProperty("show_broadcast"))
                if (typeof message.show_broadcast !== "boolean")
                    return "show_broadcast: boolean expected";
            return null;
        };
    
        /**
         * Creates a CCuratorPreferences message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CCuratorPreferences
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CCuratorPreferences} CCuratorPreferences
         */
        CCuratorPreferences.fromObject = function fromObject(object) {
            if (object instanceof $root.CCuratorPreferences)
                return object;
            var message = new $root.CCuratorPreferences();
            if (object.supported_languages != null)
                message.supported_languages = object.supported_languages >>> 0;
            if (object.platform_windows != null)
                message.platform_windows = Boolean(object.platform_windows);
            if (object.platform_mac != null)
                message.platform_mac = Boolean(object.platform_mac);
            if (object.platform_linux != null)
                message.platform_linux = Boolean(object.platform_linux);
            if (object.vr_content != null)
                message.vr_content = Boolean(object.vr_content);
            if (object.adult_content_violence != null)
                message.adult_content_violence = Boolean(object.adult_content_violence);
            if (object.adult_content_sex != null)
                message.adult_content_sex = Boolean(object.adult_content_sex);
            if (object.timestamp_updated != null)
                message.timestamp_updated = object.timestamp_updated >>> 0;
            if (object.tagids_curated) {
                if (!Array.isArray(object.tagids_curated))
                    throw TypeError(".CCuratorPreferences.tagids_curated: array expected");
                message.tagids_curated = [];
                for (var i = 0; i < object.tagids_curated.length; ++i)
                    message.tagids_curated[i] = object.tagids_curated[i] >>> 0;
            }
            if (object.tagids_filtered) {
                if (!Array.isArray(object.tagids_filtered))
                    throw TypeError(".CCuratorPreferences.tagids_filtered: array expected");
                message.tagids_filtered = [];
                for (var i = 0; i < object.tagids_filtered.length; ++i)
                    message.tagids_filtered[i] = object.tagids_filtered[i] >>> 0;
            }
            if (object.website_title != null)
                message.website_title = String(object.website_title);
            if (object.website_url != null)
                message.website_url = String(object.website_url);
            if (object.discussion_url != null)
                message.discussion_url = String(object.discussion_url);
            if (object.show_broadcast != null)
                message.show_broadcast = Boolean(object.show_broadcast);
            return message;
        };
    
        /**
         * Creates a plain object from a CCuratorPreferences message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CCuratorPreferences
         * @static
         * @param {CCuratorPreferences} message CCuratorPreferences
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CCuratorPreferences.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.tagids_curated = [];
                object.tagids_filtered = [];
            }
            if (options.defaults) {
                object.supported_languages = 0;
                object.platform_windows = false;
                object.platform_mac = false;
                object.platform_linux = false;
                object.vr_content = false;
                object.adult_content_violence = false;
                object.adult_content_sex = false;
                object.timestamp_updated = 0;
                object.website_title = "";
                object.website_url = "";
                object.discussion_url = "";
                object.show_broadcast = false;
            }
            if (message.supported_languages != null && message.hasOwnProperty("supported_languages"))
                object.supported_languages = message.supported_languages;
            if (message.platform_windows != null && message.hasOwnProperty("platform_windows"))
                object.platform_windows = message.platform_windows;
            if (message.platform_mac != null && message.hasOwnProperty("platform_mac"))
                object.platform_mac = message.platform_mac;
            if (message.platform_linux != null && message.hasOwnProperty("platform_linux"))
                object.platform_linux = message.platform_linux;
            if (message.vr_content != null && message.hasOwnProperty("vr_content"))
                object.vr_content = message.vr_content;
            if (message.adult_content_violence != null && message.hasOwnProperty("adult_content_violence"))
                object.adult_content_violence = message.adult_content_violence;
            if (message.adult_content_sex != null && message.hasOwnProperty("adult_content_sex"))
                object.adult_content_sex = message.adult_content_sex;
            if (message.timestamp_updated != null && message.hasOwnProperty("timestamp_updated"))
                object.timestamp_updated = message.timestamp_updated;
            if (message.tagids_curated && message.tagids_curated.length) {
                object.tagids_curated = [];
                for (var j = 0; j < message.tagids_curated.length; ++j)
                    object.tagids_curated[j] = message.tagids_curated[j];
            }
            if (message.tagids_filtered && message.tagids_filtered.length) {
                object.tagids_filtered = [];
                for (var j = 0; j < message.tagids_filtered.length; ++j)
                    object.tagids_filtered[j] = message.tagids_filtered[j];
            }
            if (message.website_title != null && message.hasOwnProperty("website_title"))
                object.website_title = message.website_title;
            if (message.website_url != null && message.hasOwnProperty("website_url"))
                object.website_url = message.website_url;
            if (message.discussion_url != null && message.hasOwnProperty("discussion_url"))
                object.discussion_url = message.discussion_url;
            if (message.show_broadcast != null && message.hasOwnProperty("show_broadcast"))
                object.show_broadcast = message.show_broadcast;
            return object;
        };
    
        /**
         * Converts this CCuratorPreferences to JSON.
         * @function toJSON
         * @memberof CCuratorPreferences
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CCuratorPreferences.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CCuratorPreferences;
    })();
    
    $root.CLocalizationToken = (function() {
    
        /**
         * Properties of a CLocalizationToken.
         * @exports ICLocalizationToken
         * @interface ICLocalizationToken
         * @property {number|null} [language] CLocalizationToken language
         * @property {string|null} [localized_string] CLocalizationToken localized_string
         */
    
        /**
         * Constructs a new CLocalizationToken.
         * @exports CLocalizationToken
         * @classdesc Represents a CLocalizationToken.
         * @implements ICLocalizationToken
         * @constructor
         * @param {ICLocalizationToken=} [properties] Properties to set
         */
        function CLocalizationToken(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CLocalizationToken language.
         * @member {number} language
         * @memberof CLocalizationToken
         * @instance
         */
        CLocalizationToken.prototype.language = 0;
    
        /**
         * CLocalizationToken localized_string.
         * @member {string} localized_string
         * @memberof CLocalizationToken
         * @instance
         */
        CLocalizationToken.prototype.localized_string = "";
    
        /**
         * Creates a new CLocalizationToken instance using the specified properties.
         * @function create
         * @memberof CLocalizationToken
         * @static
         * @param {ICLocalizationToken=} [properties] Properties to set
         * @returns {CLocalizationToken} CLocalizationToken instance
         */
        CLocalizationToken.create = function create(properties) {
            return new CLocalizationToken(properties);
        };
    
        /**
         * Encodes the specified CLocalizationToken message. Does not implicitly {@link CLocalizationToken.verify|verify} messages.
         * @function encode
         * @memberof CLocalizationToken
         * @static
         * @param {ICLocalizationToken} message CLocalizationToken message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CLocalizationToken.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.language);
            if (message.localized_string != null && Object.hasOwnProperty.call(message, "localized_string"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.localized_string);
            return writer;
        };
    
        /**
         * Encodes the specified CLocalizationToken message, length delimited. Does not implicitly {@link CLocalizationToken.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CLocalizationToken
         * @static
         * @param {ICLocalizationToken} message CLocalizationToken message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CLocalizationToken.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CLocalizationToken message from the specified reader or buffer.
         * @function decode
         * @memberof CLocalizationToken
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CLocalizationToken} CLocalizationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CLocalizationToken.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CLocalizationToken();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.language = reader.uint32();
                    break;
                case 2:
                    message.localized_string = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CLocalizationToken message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CLocalizationToken
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CLocalizationToken} CLocalizationToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CLocalizationToken.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CLocalizationToken message.
         * @function verify
         * @memberof CLocalizationToken
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CLocalizationToken.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.language != null && message.hasOwnProperty("language"))
                if (!$util.isInteger(message.language))
                    return "language: integer expected";
            if (message.localized_string != null && message.hasOwnProperty("localized_string"))
                if (!$util.isString(message.localized_string))
                    return "localized_string: string expected";
            return null;
        };
    
        /**
         * Creates a CLocalizationToken message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CLocalizationToken
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CLocalizationToken} CLocalizationToken
         */
        CLocalizationToken.fromObject = function fromObject(object) {
            if (object instanceof $root.CLocalizationToken)
                return object;
            var message = new $root.CLocalizationToken();
            if (object.language != null)
                message.language = object.language >>> 0;
            if (object.localized_string != null)
                message.localized_string = String(object.localized_string);
            return message;
        };
    
        /**
         * Creates a plain object from a CLocalizationToken message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CLocalizationToken
         * @static
         * @param {CLocalizationToken} message CLocalizationToken
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CLocalizationToken.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.language = 0;
                object.localized_string = "";
            }
            if (message.language != null && message.hasOwnProperty("language"))
                object.language = message.language;
            if (message.localized_string != null && message.hasOwnProperty("localized_string"))
                object.localized_string = message.localized_string;
            return object;
        };
    
        /**
         * Converts this CLocalizationToken to JSON.
         * @function toJSON
         * @memberof CLocalizationToken
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CLocalizationToken.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CLocalizationToken;
    })();
    
    $root.CClanEventUserNewsTuple = (function() {
    
        /**
         * Properties of a CClanEventUserNewsTuple.
         * @exports ICClanEventUserNewsTuple
         * @interface ICClanEventUserNewsTuple
         * @property {number|null} [clanid] CClanEventUserNewsTuple clanid
         * @property {number|Long|null} [event_gid] CClanEventUserNewsTuple event_gid
         * @property {number|Long|null} [announcement_gid] CClanEventUserNewsTuple announcement_gid
         * @property {number|null} [rtime_start] CClanEventUserNewsTuple rtime_start
         * @property {number|null} [rtime_end] CClanEventUserNewsTuple rtime_end
         * @property {number|null} [priority_score] CClanEventUserNewsTuple priority_score
         * @property {number|null} [type] CClanEventUserNewsTuple type
         * @property {number|null} [clamp_range_slot] CClanEventUserNewsTuple clamp_range_slot
         * @property {number|null} [appid] CClanEventUserNewsTuple appid
         * @property {number|null} [rtime32_last_modified] CClanEventUserNewsTuple rtime32_last_modified
         */
    
        /**
         * Constructs a new CClanEventUserNewsTuple.
         * @exports CClanEventUserNewsTuple
         * @classdesc Represents a CClanEventUserNewsTuple.
         * @implements ICClanEventUserNewsTuple
         * @constructor
         * @param {ICClanEventUserNewsTuple=} [properties] Properties to set
         */
        function CClanEventUserNewsTuple(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CClanEventUserNewsTuple clanid.
         * @member {number} clanid
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.clanid = 0;
    
        /**
         * CClanEventUserNewsTuple event_gid.
         * @member {number|Long} event_gid
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.event_gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventUserNewsTuple announcement_gid.
         * @member {number|Long} announcement_gid
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.announcement_gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventUserNewsTuple rtime_start.
         * @member {number} rtime_start
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.rtime_start = 0;
    
        /**
         * CClanEventUserNewsTuple rtime_end.
         * @member {number} rtime_end
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.rtime_end = 0;
    
        /**
         * CClanEventUserNewsTuple priority_score.
         * @member {number} priority_score
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.priority_score = 0;
    
        /**
         * CClanEventUserNewsTuple type.
         * @member {number} type
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.type = 0;
    
        /**
         * CClanEventUserNewsTuple clamp_range_slot.
         * @member {number} clamp_range_slot
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.clamp_range_slot = 0;
    
        /**
         * CClanEventUserNewsTuple appid.
         * @member {number} appid
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.appid = 0;
    
        /**
         * CClanEventUserNewsTuple rtime32_last_modified.
         * @member {number} rtime32_last_modified
         * @memberof CClanEventUserNewsTuple
         * @instance
         */
        CClanEventUserNewsTuple.prototype.rtime32_last_modified = 0;
    
        /**
         * Creates a new CClanEventUserNewsTuple instance using the specified properties.
         * @function create
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {ICClanEventUserNewsTuple=} [properties] Properties to set
         * @returns {CClanEventUserNewsTuple} CClanEventUserNewsTuple instance
         */
        CClanEventUserNewsTuple.create = function create(properties) {
            return new CClanEventUserNewsTuple(properties);
        };
    
        /**
         * Encodes the specified CClanEventUserNewsTuple message. Does not implicitly {@link CClanEventUserNewsTuple.verify|verify} messages.
         * @function encode
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {ICClanEventUserNewsTuple} message CClanEventUserNewsTuple message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanEventUserNewsTuple.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.clanid != null && Object.hasOwnProperty.call(message, "clanid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.clanid);
            if (message.event_gid != null && Object.hasOwnProperty.call(message, "event_gid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.event_gid);
            if (message.announcement_gid != null && Object.hasOwnProperty.call(message, "announcement_gid"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.announcement_gid);
            if (message.rtime_start != null && Object.hasOwnProperty.call(message, "rtime_start"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.rtime_start);
            if (message.rtime_end != null && Object.hasOwnProperty.call(message, "rtime_end"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.rtime_end);
            if (message.priority_score != null && Object.hasOwnProperty.call(message, "priority_score"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.priority_score);
            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.type);
            if (message.clamp_range_slot != null && Object.hasOwnProperty.call(message, "clamp_range_slot"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.clamp_range_slot);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.appid);
            if (message.rtime32_last_modified != null && Object.hasOwnProperty.call(message, "rtime32_last_modified"))
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.rtime32_last_modified);
            return writer;
        };
    
        /**
         * Encodes the specified CClanEventUserNewsTuple message, length delimited. Does not implicitly {@link CClanEventUserNewsTuple.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {ICClanEventUserNewsTuple} message CClanEventUserNewsTuple message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanEventUserNewsTuple.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CClanEventUserNewsTuple message from the specified reader or buffer.
         * @function decode
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CClanEventUserNewsTuple} CClanEventUserNewsTuple
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanEventUserNewsTuple.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CClanEventUserNewsTuple();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.clanid = reader.uint32();
                    break;
                case 2:
                    message.event_gid = reader.fixed64();
                    break;
                case 3:
                    message.announcement_gid = reader.fixed64();
                    break;
                case 4:
                    message.rtime_start = reader.uint32();
                    break;
                case 5:
                    message.rtime_end = reader.uint32();
                    break;
                case 6:
                    message.priority_score = reader.uint32();
                    break;
                case 7:
                    message.type = reader.uint32();
                    break;
                case 8:
                    message.clamp_range_slot = reader.uint32();
                    break;
                case 9:
                    message.appid = reader.uint32();
                    break;
                case 10:
                    message.rtime32_last_modified = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CClanEventUserNewsTuple message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CClanEventUserNewsTuple} CClanEventUserNewsTuple
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanEventUserNewsTuple.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CClanEventUserNewsTuple message.
         * @function verify
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CClanEventUserNewsTuple.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                if (!$util.isInteger(message.clanid))
                    return "clanid: integer expected";
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                if (!$util.isInteger(message.event_gid) && !(message.event_gid && $util.isInteger(message.event_gid.low) && $util.isInteger(message.event_gid.high)))
                    return "event_gid: integer|Long expected";
            if (message.announcement_gid != null && message.hasOwnProperty("announcement_gid"))
                if (!$util.isInteger(message.announcement_gid) && !(message.announcement_gid && $util.isInteger(message.announcement_gid.low) && $util.isInteger(message.announcement_gid.high)))
                    return "announcement_gid: integer|Long expected";
            if (message.rtime_start != null && message.hasOwnProperty("rtime_start"))
                if (!$util.isInteger(message.rtime_start))
                    return "rtime_start: integer expected";
            if (message.rtime_end != null && message.hasOwnProperty("rtime_end"))
                if (!$util.isInteger(message.rtime_end))
                    return "rtime_end: integer expected";
            if (message.priority_score != null && message.hasOwnProperty("priority_score"))
                if (!$util.isInteger(message.priority_score))
                    return "priority_score: integer expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isInteger(message.type))
                    return "type: integer expected";
            if (message.clamp_range_slot != null && message.hasOwnProperty("clamp_range_slot"))
                if (!$util.isInteger(message.clamp_range_slot))
                    return "clamp_range_slot: integer expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                if (!$util.isInteger(message.rtime32_last_modified))
                    return "rtime32_last_modified: integer expected";
            return null;
        };
    
        /**
         * Creates a CClanEventUserNewsTuple message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CClanEventUserNewsTuple} CClanEventUserNewsTuple
         */
        CClanEventUserNewsTuple.fromObject = function fromObject(object) {
            if (object instanceof $root.CClanEventUserNewsTuple)
                return object;
            var message = new $root.CClanEventUserNewsTuple();
            if (object.clanid != null)
                message.clanid = object.clanid >>> 0;
            if (object.event_gid != null)
                if ($util.Long)
                    (message.event_gid = $util.Long.fromValue(object.event_gid)).unsigned = false;
                else if (typeof object.event_gid === "string")
                    message.event_gid = parseInt(object.event_gid, 10);
                else if (typeof object.event_gid === "number")
                    message.event_gid = object.event_gid;
                else if (typeof object.event_gid === "object")
                    message.event_gid = new $util.LongBits(object.event_gid.low >>> 0, object.event_gid.high >>> 0).toNumber();
            if (object.announcement_gid != null)
                if ($util.Long)
                    (message.announcement_gid = $util.Long.fromValue(object.announcement_gid)).unsigned = false;
                else if (typeof object.announcement_gid === "string")
                    message.announcement_gid = parseInt(object.announcement_gid, 10);
                else if (typeof object.announcement_gid === "number")
                    message.announcement_gid = object.announcement_gid;
                else if (typeof object.announcement_gid === "object")
                    message.announcement_gid = new $util.LongBits(object.announcement_gid.low >>> 0, object.announcement_gid.high >>> 0).toNumber();
            if (object.rtime_start != null)
                message.rtime_start = object.rtime_start >>> 0;
            if (object.rtime_end != null)
                message.rtime_end = object.rtime_end >>> 0;
            if (object.priority_score != null)
                message.priority_score = object.priority_score >>> 0;
            if (object.type != null)
                message.type = object.type >>> 0;
            if (object.clamp_range_slot != null)
                message.clamp_range_slot = object.clamp_range_slot >>> 0;
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.rtime32_last_modified != null)
                message.rtime32_last_modified = object.rtime32_last_modified >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CClanEventUserNewsTuple message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CClanEventUserNewsTuple
         * @static
         * @param {CClanEventUserNewsTuple} message CClanEventUserNewsTuple
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CClanEventUserNewsTuple.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.clanid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.event_gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.event_gid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.announcement_gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.announcement_gid = options.longs === String ? "0" : 0;
                object.rtime_start = 0;
                object.rtime_end = 0;
                object.priority_score = 0;
                object.type = 0;
                object.clamp_range_slot = 0;
                object.appid = 0;
                object.rtime32_last_modified = 0;
            }
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                object.clanid = message.clanid;
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                if (typeof message.event_gid === "number")
                    object.event_gid = options.longs === String ? String(message.event_gid) : message.event_gid;
                else
                    object.event_gid = options.longs === String ? $util.Long.prototype.toString.call(message.event_gid) : options.longs === Number ? new $util.LongBits(message.event_gid.low >>> 0, message.event_gid.high >>> 0).toNumber() : message.event_gid;
            if (message.announcement_gid != null && message.hasOwnProperty("announcement_gid"))
                if (typeof message.announcement_gid === "number")
                    object.announcement_gid = options.longs === String ? String(message.announcement_gid) : message.announcement_gid;
                else
                    object.announcement_gid = options.longs === String ? $util.Long.prototype.toString.call(message.announcement_gid) : options.longs === Number ? new $util.LongBits(message.announcement_gid.low >>> 0, message.announcement_gid.high >>> 0).toNumber() : message.announcement_gid;
            if (message.rtime_start != null && message.hasOwnProperty("rtime_start"))
                object.rtime_start = message.rtime_start;
            if (message.rtime_end != null && message.hasOwnProperty("rtime_end"))
                object.rtime_end = message.rtime_end;
            if (message.priority_score != null && message.hasOwnProperty("priority_score"))
                object.priority_score = message.priority_score;
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            if (message.clamp_range_slot != null && message.hasOwnProperty("clamp_range_slot"))
                object.clamp_range_slot = message.clamp_range_slot;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                object.rtime32_last_modified = message.rtime32_last_modified;
            return object;
        };
    
        /**
         * Converts this CClanEventUserNewsTuple to JSON.
         * @function toJSON
         * @memberof CClanEventUserNewsTuple
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CClanEventUserNewsTuple.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CClanEventUserNewsTuple;
    })();
    
    $root.CClanMatchEventByRange = (function() {
    
        /**
         * Properties of a CClanMatchEventByRange.
         * @exports ICClanMatchEventByRange
         * @interface ICClanMatchEventByRange
         * @property {number|null} [rtime_before] CClanMatchEventByRange rtime_before
         * @property {number|null} [rtime_after] CClanMatchEventByRange rtime_after
         * @property {number|null} [qualified] CClanMatchEventByRange qualified
         * @property {Array.<ICClanEventUserNewsTuple>|null} [events] CClanMatchEventByRange events
         */
    
        /**
         * Constructs a new CClanMatchEventByRange.
         * @exports CClanMatchEventByRange
         * @classdesc Represents a CClanMatchEventByRange.
         * @implements ICClanMatchEventByRange
         * @constructor
         * @param {ICClanMatchEventByRange=} [properties] Properties to set
         */
        function CClanMatchEventByRange(properties) {
            this.events = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CClanMatchEventByRange rtime_before.
         * @member {number} rtime_before
         * @memberof CClanMatchEventByRange
         * @instance
         */
        CClanMatchEventByRange.prototype.rtime_before = 0;
    
        /**
         * CClanMatchEventByRange rtime_after.
         * @member {number} rtime_after
         * @memberof CClanMatchEventByRange
         * @instance
         */
        CClanMatchEventByRange.prototype.rtime_after = 0;
    
        /**
         * CClanMatchEventByRange qualified.
         * @member {number} qualified
         * @memberof CClanMatchEventByRange
         * @instance
         */
        CClanMatchEventByRange.prototype.qualified = 0;
    
        /**
         * CClanMatchEventByRange events.
         * @member {Array.<ICClanEventUserNewsTuple>} events
         * @memberof CClanMatchEventByRange
         * @instance
         */
        CClanMatchEventByRange.prototype.events = $util.emptyArray;
    
        /**
         * Creates a new CClanMatchEventByRange instance using the specified properties.
         * @function create
         * @memberof CClanMatchEventByRange
         * @static
         * @param {ICClanMatchEventByRange=} [properties] Properties to set
         * @returns {CClanMatchEventByRange} CClanMatchEventByRange instance
         */
        CClanMatchEventByRange.create = function create(properties) {
            return new CClanMatchEventByRange(properties);
        };
    
        /**
         * Encodes the specified CClanMatchEventByRange message. Does not implicitly {@link CClanMatchEventByRange.verify|verify} messages.
         * @function encode
         * @memberof CClanMatchEventByRange
         * @static
         * @param {ICClanMatchEventByRange} message CClanMatchEventByRange message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanMatchEventByRange.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.rtime_before != null && Object.hasOwnProperty.call(message, "rtime_before"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.rtime_before);
            if (message.rtime_after != null && Object.hasOwnProperty.call(message, "rtime_after"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.rtime_after);
            if (message.qualified != null && Object.hasOwnProperty.call(message, "qualified"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.qualified);
            if (message.events != null && message.events.length)
                for (var i = 0; i < message.events.length; ++i)
                    $root.CClanEventUserNewsTuple.encode(message.events[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CClanMatchEventByRange message, length delimited. Does not implicitly {@link CClanMatchEventByRange.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CClanMatchEventByRange
         * @static
         * @param {ICClanMatchEventByRange} message CClanMatchEventByRange message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanMatchEventByRange.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CClanMatchEventByRange message from the specified reader or buffer.
         * @function decode
         * @memberof CClanMatchEventByRange
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CClanMatchEventByRange} CClanMatchEventByRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanMatchEventByRange.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CClanMatchEventByRange();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.rtime_before = reader.uint32();
                    break;
                case 2:
                    message.rtime_after = reader.uint32();
                    break;
                case 3:
                    message.qualified = reader.uint32();
                    break;
                case 4:
                    if (!(message.events && message.events.length))
                        message.events = [];
                    message.events.push($root.CClanEventUserNewsTuple.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CClanMatchEventByRange message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CClanMatchEventByRange
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CClanMatchEventByRange} CClanMatchEventByRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanMatchEventByRange.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CClanMatchEventByRange message.
         * @function verify
         * @memberof CClanMatchEventByRange
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CClanMatchEventByRange.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.rtime_before != null && message.hasOwnProperty("rtime_before"))
                if (!$util.isInteger(message.rtime_before))
                    return "rtime_before: integer expected";
            if (message.rtime_after != null && message.hasOwnProperty("rtime_after"))
                if (!$util.isInteger(message.rtime_after))
                    return "rtime_after: integer expected";
            if (message.qualified != null && message.hasOwnProperty("qualified"))
                if (!$util.isInteger(message.qualified))
                    return "qualified: integer expected";
            if (message.events != null && message.hasOwnProperty("events")) {
                if (!Array.isArray(message.events))
                    return "events: array expected";
                for (var i = 0; i < message.events.length; ++i) {
                    var error = $root.CClanEventUserNewsTuple.verify(message.events[i]);
                    if (error)
                        return "events." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CClanMatchEventByRange message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CClanMatchEventByRange
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CClanMatchEventByRange} CClanMatchEventByRange
         */
        CClanMatchEventByRange.fromObject = function fromObject(object) {
            if (object instanceof $root.CClanMatchEventByRange)
                return object;
            var message = new $root.CClanMatchEventByRange();
            if (object.rtime_before != null)
                message.rtime_before = object.rtime_before >>> 0;
            if (object.rtime_after != null)
                message.rtime_after = object.rtime_after >>> 0;
            if (object.qualified != null)
                message.qualified = object.qualified >>> 0;
            if (object.events) {
                if (!Array.isArray(object.events))
                    throw TypeError(".CClanMatchEventByRange.events: array expected");
                message.events = [];
                for (var i = 0; i < object.events.length; ++i) {
                    if (typeof object.events[i] !== "object")
                        throw TypeError(".CClanMatchEventByRange.events: object expected");
                    message.events[i] = $root.CClanEventUserNewsTuple.fromObject(object.events[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CClanMatchEventByRange message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CClanMatchEventByRange
         * @static
         * @param {CClanMatchEventByRange} message CClanMatchEventByRange
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CClanMatchEventByRange.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.events = [];
            if (options.defaults) {
                object.rtime_before = 0;
                object.rtime_after = 0;
                object.qualified = 0;
            }
            if (message.rtime_before != null && message.hasOwnProperty("rtime_before"))
                object.rtime_before = message.rtime_before;
            if (message.rtime_after != null && message.hasOwnProperty("rtime_after"))
                object.rtime_after = message.rtime_after;
            if (message.qualified != null && message.hasOwnProperty("qualified"))
                object.qualified = message.qualified;
            if (message.events && message.events.length) {
                object.events = [];
                for (var j = 0; j < message.events.length; ++j)
                    object.events[j] = $root.CClanEventUserNewsTuple.toObject(message.events[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CClanMatchEventByRange to JSON.
         * @function toJSON
         * @memberof CClanMatchEventByRange
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CClanMatchEventByRange.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CClanMatchEventByRange;
    })();
    
    $root.CCommunity_ClanAnnouncementInfo = (function() {
    
        /**
         * Properties of a CCommunity_ClanAnnouncementInfo.
         * @exports ICCommunity_ClanAnnouncementInfo
         * @interface ICCommunity_ClanAnnouncementInfo
         * @property {number|Long|null} [gid] CCommunity_ClanAnnouncementInfo gid
         * @property {number|Long|null} [clanid] CCommunity_ClanAnnouncementInfo clanid
         * @property {number|Long|null} [posterid] CCommunity_ClanAnnouncementInfo posterid
         * @property {string|null} [headline] CCommunity_ClanAnnouncementInfo headline
         * @property {number|null} [posttime] CCommunity_ClanAnnouncementInfo posttime
         * @property {number|null} [updatetime] CCommunity_ClanAnnouncementInfo updatetime
         * @property {string|null} [body] CCommunity_ClanAnnouncementInfo body
         * @property {number|null} [commentcount] CCommunity_ClanAnnouncementInfo commentcount
         * @property {Array.<string>|null} [tags] CCommunity_ClanAnnouncementInfo tags
         * @property {number|null} [language] CCommunity_ClanAnnouncementInfo language
         * @property {boolean|null} [hidden] CCommunity_ClanAnnouncementInfo hidden
         * @property {number|Long|null} [forum_topic_id] CCommunity_ClanAnnouncementInfo forum_topic_id
         * @property {number|Long|null} [event_gid] CCommunity_ClanAnnouncementInfo event_gid
         * @property {number|null} [voteupcount] CCommunity_ClanAnnouncementInfo voteupcount
         * @property {number|null} [votedowncount] CCommunity_ClanAnnouncementInfo votedowncount
         */
    
        /**
         * Constructs a new CCommunity_ClanAnnouncementInfo.
         * @exports CCommunity_ClanAnnouncementInfo
         * @classdesc Represents a CCommunity_ClanAnnouncementInfo.
         * @implements ICCommunity_ClanAnnouncementInfo
         * @constructor
         * @param {ICCommunity_ClanAnnouncementInfo=} [properties] Properties to set
         */
        function CCommunity_ClanAnnouncementInfo(properties) {
            this.tags = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CCommunity_ClanAnnouncementInfo gid.
         * @member {number|Long} gid
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.gid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo clanid.
         * @member {number|Long} clanid
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.clanid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo posterid.
         * @member {number|Long} posterid
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.posterid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo headline.
         * @member {string} headline
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.headline = "";
    
        /**
         * CCommunity_ClanAnnouncementInfo posttime.
         * @member {number} posttime
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.posttime = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo updatetime.
         * @member {number} updatetime
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.updatetime = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo body.
         * @member {string} body
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.body = "";
    
        /**
         * CCommunity_ClanAnnouncementInfo commentcount.
         * @member {number} commentcount
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.commentcount = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo tags.
         * @member {Array.<string>} tags
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.tags = $util.emptyArray;
    
        /**
         * CCommunity_ClanAnnouncementInfo language.
         * @member {number} language
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.language = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo hidden.
         * @member {boolean} hidden
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.hidden = false;
    
        /**
         * CCommunity_ClanAnnouncementInfo forum_topic_id.
         * @member {number|Long} forum_topic_id
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.forum_topic_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo event_gid.
         * @member {number|Long} event_gid
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.event_gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo voteupcount.
         * @member {number} voteupcount
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.voteupcount = 0;
    
        /**
         * CCommunity_ClanAnnouncementInfo votedowncount.
         * @member {number} votedowncount
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         */
        CCommunity_ClanAnnouncementInfo.prototype.votedowncount = 0;
    
        /**
         * Creates a new CCommunity_ClanAnnouncementInfo instance using the specified properties.
         * @function create
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {ICCommunity_ClanAnnouncementInfo=} [properties] Properties to set
         * @returns {CCommunity_ClanAnnouncementInfo} CCommunity_ClanAnnouncementInfo instance
         */
        CCommunity_ClanAnnouncementInfo.create = function create(properties) {
            return new CCommunity_ClanAnnouncementInfo(properties);
        };
    
        /**
         * Encodes the specified CCommunity_ClanAnnouncementInfo message. Does not implicitly {@link CCommunity_ClanAnnouncementInfo.verify|verify} messages.
         * @function encode
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {ICCommunity_ClanAnnouncementInfo} message CCommunity_ClanAnnouncementInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCommunity_ClanAnnouncementInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gid != null && Object.hasOwnProperty.call(message, "gid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.gid);
            if (message.clanid != null && Object.hasOwnProperty.call(message, "clanid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.clanid);
            if (message.posterid != null && Object.hasOwnProperty.call(message, "posterid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.posterid);
            if (message.headline != null && Object.hasOwnProperty.call(message, "headline"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.headline);
            if (message.posttime != null && Object.hasOwnProperty.call(message, "posttime"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.posttime);
            if (message.updatetime != null && Object.hasOwnProperty.call(message, "updatetime"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.updatetime);
            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
            if (message.commentcount != null && Object.hasOwnProperty.call(message, "commentcount"))
                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.commentcount);
            if (message.tags != null && message.tags.length)
                for (var i = 0; i < message.tags.length; ++i)
                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.tags[i]);
            if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.language);
            if (message.hidden != null && Object.hasOwnProperty.call(message, "hidden"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.hidden);
            if (message.forum_topic_id != null && Object.hasOwnProperty.call(message, "forum_topic_id"))
                writer.uint32(/* id 12, wireType 1 =*/97).fixed64(message.forum_topic_id);
            if (message.event_gid != null && Object.hasOwnProperty.call(message, "event_gid"))
                writer.uint32(/* id 13, wireType 1 =*/105).fixed64(message.event_gid);
            if (message.voteupcount != null && Object.hasOwnProperty.call(message, "voteupcount"))
                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.voteupcount);
            if (message.votedowncount != null && Object.hasOwnProperty.call(message, "votedowncount"))
                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.votedowncount);
            return writer;
        };
    
        /**
         * Encodes the specified CCommunity_ClanAnnouncementInfo message, length delimited. Does not implicitly {@link CCommunity_ClanAnnouncementInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {ICCommunity_ClanAnnouncementInfo} message CCommunity_ClanAnnouncementInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CCommunity_ClanAnnouncementInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CCommunity_ClanAnnouncementInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CCommunity_ClanAnnouncementInfo} CCommunity_ClanAnnouncementInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCommunity_ClanAnnouncementInfo.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CCommunity_ClanAnnouncementInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.gid = reader.uint64();
                    break;
                case 2:
                    message.clanid = reader.uint64();
                    break;
                case 3:
                    message.posterid = reader.uint64();
                    break;
                case 4:
                    message.headline = reader.string();
                    break;
                case 5:
                    message.posttime = reader.uint32();
                    break;
                case 6:
                    message.updatetime = reader.uint32();
                    break;
                case 7:
                    message.body = reader.string();
                    break;
                case 8:
                    message.commentcount = reader.int32();
                    break;
                case 9:
                    if (!(message.tags && message.tags.length))
                        message.tags = [];
                    message.tags.push(reader.string());
                    break;
                case 10:
                    message.language = reader.int32();
                    break;
                case 11:
                    message.hidden = reader.bool();
                    break;
                case 12:
                    message.forum_topic_id = reader.fixed64();
                    break;
                case 13:
                    message.event_gid = reader.fixed64();
                    break;
                case 14:
                    message.voteupcount = reader.int32();
                    break;
                case 15:
                    message.votedowncount = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CCommunity_ClanAnnouncementInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CCommunity_ClanAnnouncementInfo} CCommunity_ClanAnnouncementInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CCommunity_ClanAnnouncementInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CCommunity_ClanAnnouncementInfo message.
         * @function verify
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CCommunity_ClanAnnouncementInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (!$util.isInteger(message.gid) && !(message.gid && $util.isInteger(message.gid.low) && $util.isInteger(message.gid.high)))
                    return "gid: integer|Long expected";
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                if (!$util.isInteger(message.clanid) && !(message.clanid && $util.isInteger(message.clanid.low) && $util.isInteger(message.clanid.high)))
                    return "clanid: integer|Long expected";
            if (message.posterid != null && message.hasOwnProperty("posterid"))
                if (!$util.isInteger(message.posterid) && !(message.posterid && $util.isInteger(message.posterid.low) && $util.isInteger(message.posterid.high)))
                    return "posterid: integer|Long expected";
            if (message.headline != null && message.hasOwnProperty("headline"))
                if (!$util.isString(message.headline))
                    return "headline: string expected";
            if (message.posttime != null && message.hasOwnProperty("posttime"))
                if (!$util.isInteger(message.posttime))
                    return "posttime: integer expected";
            if (message.updatetime != null && message.hasOwnProperty("updatetime"))
                if (!$util.isInteger(message.updatetime))
                    return "updatetime: integer expected";
            if (message.body != null && message.hasOwnProperty("body"))
                if (!$util.isString(message.body))
                    return "body: string expected";
            if (message.commentcount != null && message.hasOwnProperty("commentcount"))
                if (!$util.isInteger(message.commentcount))
                    return "commentcount: integer expected";
            if (message.tags != null && message.hasOwnProperty("tags")) {
                if (!Array.isArray(message.tags))
                    return "tags: array expected";
                for (var i = 0; i < message.tags.length; ++i)
                    if (!$util.isString(message.tags[i]))
                        return "tags: string[] expected";
            }
            if (message.language != null && message.hasOwnProperty("language"))
                if (!$util.isInteger(message.language))
                    return "language: integer expected";
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                if (typeof message.hidden !== "boolean")
                    return "hidden: boolean expected";
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                if (!$util.isInteger(message.forum_topic_id) && !(message.forum_topic_id && $util.isInteger(message.forum_topic_id.low) && $util.isInteger(message.forum_topic_id.high)))
                    return "forum_topic_id: integer|Long expected";
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                if (!$util.isInteger(message.event_gid) && !(message.event_gid && $util.isInteger(message.event_gid.low) && $util.isInteger(message.event_gid.high)))
                    return "event_gid: integer|Long expected";
            if (message.voteupcount != null && message.hasOwnProperty("voteupcount"))
                if (!$util.isInteger(message.voteupcount))
                    return "voteupcount: integer expected";
            if (message.votedowncount != null && message.hasOwnProperty("votedowncount"))
                if (!$util.isInteger(message.votedowncount))
                    return "votedowncount: integer expected";
            return null;
        };
    
        /**
         * Creates a CCommunity_ClanAnnouncementInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CCommunity_ClanAnnouncementInfo} CCommunity_ClanAnnouncementInfo
         */
        CCommunity_ClanAnnouncementInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CCommunity_ClanAnnouncementInfo)
                return object;
            var message = new $root.CCommunity_ClanAnnouncementInfo();
            if (object.gid != null)
                if ($util.Long)
                    (message.gid = $util.Long.fromValue(object.gid)).unsigned = true;
                else if (typeof object.gid === "string")
                    message.gid = parseInt(object.gid, 10);
                else if (typeof object.gid === "number")
                    message.gid = object.gid;
                else if (typeof object.gid === "object")
                    message.gid = new $util.LongBits(object.gid.low >>> 0, object.gid.high >>> 0).toNumber(true);
            if (object.clanid != null)
                if ($util.Long)
                    (message.clanid = $util.Long.fromValue(object.clanid)).unsigned = true;
                else if (typeof object.clanid === "string")
                    message.clanid = parseInt(object.clanid, 10);
                else if (typeof object.clanid === "number")
                    message.clanid = object.clanid;
                else if (typeof object.clanid === "object")
                    message.clanid = new $util.LongBits(object.clanid.low >>> 0, object.clanid.high >>> 0).toNumber(true);
            if (object.posterid != null)
                if ($util.Long)
                    (message.posterid = $util.Long.fromValue(object.posterid)).unsigned = true;
                else if (typeof object.posterid === "string")
                    message.posterid = parseInt(object.posterid, 10);
                else if (typeof object.posterid === "number")
                    message.posterid = object.posterid;
                else if (typeof object.posterid === "object")
                    message.posterid = new $util.LongBits(object.posterid.low >>> 0, object.posterid.high >>> 0).toNumber(true);
            if (object.headline != null)
                message.headline = String(object.headline);
            if (object.posttime != null)
                message.posttime = object.posttime >>> 0;
            if (object.updatetime != null)
                message.updatetime = object.updatetime >>> 0;
            if (object.body != null)
                message.body = String(object.body);
            if (object.commentcount != null)
                message.commentcount = object.commentcount | 0;
            if (object.tags) {
                if (!Array.isArray(object.tags))
                    throw TypeError(".CCommunity_ClanAnnouncementInfo.tags: array expected");
                message.tags = [];
                for (var i = 0; i < object.tags.length; ++i)
                    message.tags[i] = String(object.tags[i]);
            }
            if (object.language != null)
                message.language = object.language | 0;
            if (object.hidden != null)
                message.hidden = Boolean(object.hidden);
            if (object.forum_topic_id != null)
                if ($util.Long)
                    (message.forum_topic_id = $util.Long.fromValue(object.forum_topic_id)).unsigned = false;
                else if (typeof object.forum_topic_id === "string")
                    message.forum_topic_id = parseInt(object.forum_topic_id, 10);
                else if (typeof object.forum_topic_id === "number")
                    message.forum_topic_id = object.forum_topic_id;
                else if (typeof object.forum_topic_id === "object")
                    message.forum_topic_id = new $util.LongBits(object.forum_topic_id.low >>> 0, object.forum_topic_id.high >>> 0).toNumber();
            if (object.event_gid != null)
                if ($util.Long)
                    (message.event_gid = $util.Long.fromValue(object.event_gid)).unsigned = false;
                else if (typeof object.event_gid === "string")
                    message.event_gid = parseInt(object.event_gid, 10);
                else if (typeof object.event_gid === "number")
                    message.event_gid = object.event_gid;
                else if (typeof object.event_gid === "object")
                    message.event_gid = new $util.LongBits(object.event_gid.low >>> 0, object.event_gid.high >>> 0).toNumber();
            if (object.voteupcount != null)
                message.voteupcount = object.voteupcount | 0;
            if (object.votedowncount != null)
                message.votedowncount = object.votedowncount | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CCommunity_ClanAnnouncementInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CCommunity_ClanAnnouncementInfo
         * @static
         * @param {CCommunity_ClanAnnouncementInfo} message CCommunity_ClanAnnouncementInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CCommunity_ClanAnnouncementInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.tags = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.clanid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.clanid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.posterid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.posterid = options.longs === String ? "0" : 0;
                object.headline = "";
                object.posttime = 0;
                object.updatetime = 0;
                object.body = "";
                object.commentcount = 0;
                object.language = 0;
                object.hidden = false;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.forum_topic_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.forum_topic_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.event_gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.event_gid = options.longs === String ? "0" : 0;
                object.voteupcount = 0;
                object.votedowncount = 0;
            }
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (typeof message.gid === "number")
                    object.gid = options.longs === String ? String(message.gid) : message.gid;
                else
                    object.gid = options.longs === String ? $util.Long.prototype.toString.call(message.gid) : options.longs === Number ? new $util.LongBits(message.gid.low >>> 0, message.gid.high >>> 0).toNumber(true) : message.gid;
            if (message.clanid != null && message.hasOwnProperty("clanid"))
                if (typeof message.clanid === "number")
                    object.clanid = options.longs === String ? String(message.clanid) : message.clanid;
                else
                    object.clanid = options.longs === String ? $util.Long.prototype.toString.call(message.clanid) : options.longs === Number ? new $util.LongBits(message.clanid.low >>> 0, message.clanid.high >>> 0).toNumber(true) : message.clanid;
            if (message.posterid != null && message.hasOwnProperty("posterid"))
                if (typeof message.posterid === "number")
                    object.posterid = options.longs === String ? String(message.posterid) : message.posterid;
                else
                    object.posterid = options.longs === String ? $util.Long.prototype.toString.call(message.posterid) : options.longs === Number ? new $util.LongBits(message.posterid.low >>> 0, message.posterid.high >>> 0).toNumber(true) : message.posterid;
            if (message.headline != null && message.hasOwnProperty("headline"))
                object.headline = message.headline;
            if (message.posttime != null && message.hasOwnProperty("posttime"))
                object.posttime = message.posttime;
            if (message.updatetime != null && message.hasOwnProperty("updatetime"))
                object.updatetime = message.updatetime;
            if (message.body != null && message.hasOwnProperty("body"))
                object.body = message.body;
            if (message.commentcount != null && message.hasOwnProperty("commentcount"))
                object.commentcount = message.commentcount;
            if (message.tags && message.tags.length) {
                object.tags = [];
                for (var j = 0; j < message.tags.length; ++j)
                    object.tags[j] = message.tags[j];
            }
            if (message.language != null && message.hasOwnProperty("language"))
                object.language = message.language;
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                object.hidden = message.hidden;
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                if (typeof message.forum_topic_id === "number")
                    object.forum_topic_id = options.longs === String ? String(message.forum_topic_id) : message.forum_topic_id;
                else
                    object.forum_topic_id = options.longs === String ? $util.Long.prototype.toString.call(message.forum_topic_id) : options.longs === Number ? new $util.LongBits(message.forum_topic_id.low >>> 0, message.forum_topic_id.high >>> 0).toNumber() : message.forum_topic_id;
            if (message.event_gid != null && message.hasOwnProperty("event_gid"))
                if (typeof message.event_gid === "number")
                    object.event_gid = options.longs === String ? String(message.event_gid) : message.event_gid;
                else
                    object.event_gid = options.longs === String ? $util.Long.prototype.toString.call(message.event_gid) : options.longs === Number ? new $util.LongBits(message.event_gid.low >>> 0, message.event_gid.high >>> 0).toNumber() : message.event_gid;
            if (message.voteupcount != null && message.hasOwnProperty("voteupcount"))
                object.voteupcount = message.voteupcount;
            if (message.votedowncount != null && message.hasOwnProperty("votedowncount"))
                object.votedowncount = message.votedowncount;
            return object;
        };
    
        /**
         * Converts this CCommunity_ClanAnnouncementInfo to JSON.
         * @function toJSON
         * @memberof CCommunity_ClanAnnouncementInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CCommunity_ClanAnnouncementInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CCommunity_ClanAnnouncementInfo;
    })();
    
    $root.CClanEventData = (function() {
    
        /**
         * Properties of a CClanEventData.
         * @exports ICClanEventData
         * @interface ICClanEventData
         * @property {number|Long|null} [gid] CClanEventData gid
         * @property {number|Long|null} [clan_steamid] CClanEventData clan_steamid
         * @property {string|null} [event_name] CClanEventData event_name
         * @property {EProtoClanEventType|null} [event_type] CClanEventData event_type
         * @property {number|null} [appid] CClanEventData appid
         * @property {string|null} [server_address] CClanEventData server_address
         * @property {string|null} [server_password] CClanEventData server_password
         * @property {number|null} [rtime32_start_time] CClanEventData rtime32_start_time
         * @property {number|null} [rtime32_end_time] CClanEventData rtime32_end_time
         * @property {number|null} [comment_count] CClanEventData comment_count
         * @property {number|Long|null} [creator_steamid] CClanEventData creator_steamid
         * @property {number|Long|null} [last_update_steamid] CClanEventData last_update_steamid
         * @property {string|null} [event_notes] CClanEventData event_notes
         * @property {string|null} [jsondata] CClanEventData jsondata
         * @property {ICCommunity_ClanAnnouncementInfo|null} [announcement_body] CClanEventData announcement_body
         * @property {boolean|null} [published] CClanEventData published
         * @property {boolean|null} [hidden] CClanEventData hidden
         * @property {number|null} [rtime32_visibility_start] CClanEventData rtime32_visibility_start
         * @property {number|null} [rtime32_visibility_end] CClanEventData rtime32_visibility_end
         * @property {number|null} [broadcaster_accountid] CClanEventData broadcaster_accountid
         * @property {number|null} [follower_count] CClanEventData follower_count
         * @property {number|null} [ignore_count] CClanEventData ignore_count
         * @property {number|Long|null} [forum_topic_id] CClanEventData forum_topic_id
         * @property {number|null} [rtime32_last_modified] CClanEventData rtime32_last_modified
         * @property {number|Long|null} [news_post_gid] CClanEventData news_post_gid
         * @property {number|null} [rtime_mod_reviewed] CClanEventData rtime_mod_reviewed
         * @property {number|null} [featured_app_tagid] CClanEventData featured_app_tagid
         */
    
        /**
         * Constructs a new CClanEventData.
         * @exports CClanEventData
         * @classdesc Represents a CClanEventData.
         * @implements ICClanEventData
         * @constructor
         * @param {ICClanEventData=} [properties] Properties to set
         */
        function CClanEventData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CClanEventData gid.
         * @member {number|Long} gid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData clan_steamid.
         * @member {number|Long} clan_steamid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.clan_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData event_name.
         * @member {string} event_name
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.event_name = "";
    
        /**
         * CClanEventData event_type.
         * @member {EProtoClanEventType} event_type
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.event_type = 1;
    
        /**
         * CClanEventData appid.
         * @member {number} appid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.appid = 0;
    
        /**
         * CClanEventData server_address.
         * @member {string} server_address
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.server_address = "";
    
        /**
         * CClanEventData server_password.
         * @member {string} server_password
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.server_password = "";
    
        /**
         * CClanEventData rtime32_start_time.
         * @member {number} rtime32_start_time
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_start_time = 0;
    
        /**
         * CClanEventData rtime32_end_time.
         * @member {number} rtime32_end_time
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_end_time = 0;
    
        /**
         * CClanEventData comment_count.
         * @member {number} comment_count
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.comment_count = 0;
    
        /**
         * CClanEventData creator_steamid.
         * @member {number|Long} creator_steamid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.creator_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData last_update_steamid.
         * @member {number|Long} last_update_steamid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.last_update_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData event_notes.
         * @member {string} event_notes
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.event_notes = "";
    
        /**
         * CClanEventData jsondata.
         * @member {string} jsondata
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.jsondata = "";
    
        /**
         * CClanEventData announcement_body.
         * @member {ICCommunity_ClanAnnouncementInfo|null|undefined} announcement_body
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.announcement_body = null;
    
        /**
         * CClanEventData published.
         * @member {boolean} published
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.published = false;
    
        /**
         * CClanEventData hidden.
         * @member {boolean} hidden
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.hidden = false;
    
        /**
         * CClanEventData rtime32_visibility_start.
         * @member {number} rtime32_visibility_start
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_visibility_start = 0;
    
        /**
         * CClanEventData rtime32_visibility_end.
         * @member {number} rtime32_visibility_end
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_visibility_end = 0;
    
        /**
         * CClanEventData broadcaster_accountid.
         * @member {number} broadcaster_accountid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.broadcaster_accountid = 0;
    
        /**
         * CClanEventData follower_count.
         * @member {number} follower_count
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.follower_count = 0;
    
        /**
         * CClanEventData ignore_count.
         * @member {number} ignore_count
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.ignore_count = 0;
    
        /**
         * CClanEventData forum_topic_id.
         * @member {number|Long} forum_topic_id
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.forum_topic_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData rtime32_last_modified.
         * @member {number} rtime32_last_modified
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime32_last_modified = 0;
    
        /**
         * CClanEventData news_post_gid.
         * @member {number|Long} news_post_gid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.news_post_gid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CClanEventData rtime_mod_reviewed.
         * @member {number} rtime_mod_reviewed
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.rtime_mod_reviewed = 0;
    
        /**
         * CClanEventData featured_app_tagid.
         * @member {number} featured_app_tagid
         * @memberof CClanEventData
         * @instance
         */
        CClanEventData.prototype.featured_app_tagid = 0;
    
        /**
         * Creates a new CClanEventData instance using the specified properties.
         * @function create
         * @memberof CClanEventData
         * @static
         * @param {ICClanEventData=} [properties] Properties to set
         * @returns {CClanEventData} CClanEventData instance
         */
        CClanEventData.create = function create(properties) {
            return new CClanEventData(properties);
        };
    
        /**
         * Encodes the specified CClanEventData message. Does not implicitly {@link CClanEventData.verify|verify} messages.
         * @function encode
         * @memberof CClanEventData
         * @static
         * @param {ICClanEventData} message CClanEventData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanEventData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.gid != null && Object.hasOwnProperty.call(message, "gid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.gid);
            if (message.clan_steamid != null && Object.hasOwnProperty.call(message, "clan_steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.clan_steamid);
            if (message.event_name != null && Object.hasOwnProperty.call(message, "event_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.event_name);
            if (message.event_type != null && Object.hasOwnProperty.call(message, "event_type"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.event_type);
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.appid);
            if (message.server_address != null && Object.hasOwnProperty.call(message, "server_address"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.server_address);
            if (message.server_password != null && Object.hasOwnProperty.call(message, "server_password"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.server_password);
            if (message.rtime32_start_time != null && Object.hasOwnProperty.call(message, "rtime32_start_time"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.rtime32_start_time);
            if (message.rtime32_end_time != null && Object.hasOwnProperty.call(message, "rtime32_end_time"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.rtime32_end_time);
            if (message.comment_count != null && Object.hasOwnProperty.call(message, "comment_count"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.comment_count);
            if (message.creator_steamid != null && Object.hasOwnProperty.call(message, "creator_steamid"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.creator_steamid);
            if (message.last_update_steamid != null && Object.hasOwnProperty.call(message, "last_update_steamid"))
                writer.uint32(/* id 12, wireType 1 =*/97).fixed64(message.last_update_steamid);
            if (message.event_notes != null && Object.hasOwnProperty.call(message, "event_notes"))
                writer.uint32(/* id 13, wireType 2 =*/106).string(message.event_notes);
            if (message.jsondata != null && Object.hasOwnProperty.call(message, "jsondata"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.jsondata);
            if (message.announcement_body != null && Object.hasOwnProperty.call(message, "announcement_body"))
                $root.CCommunity_ClanAnnouncementInfo.encode(message.announcement_body, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
            if (message.published != null && Object.hasOwnProperty.call(message, "published"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.published);
            if (message.hidden != null && Object.hasOwnProperty.call(message, "hidden"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.hidden);
            if (message.rtime32_visibility_start != null && Object.hasOwnProperty.call(message, "rtime32_visibility_start"))
                writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.rtime32_visibility_start);
            if (message.rtime32_visibility_end != null && Object.hasOwnProperty.call(message, "rtime32_visibility_end"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.rtime32_visibility_end);
            if (message.broadcaster_accountid != null && Object.hasOwnProperty.call(message, "broadcaster_accountid"))
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.broadcaster_accountid);
            if (message.follower_count != null && Object.hasOwnProperty.call(message, "follower_count"))
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.follower_count);
            if (message.ignore_count != null && Object.hasOwnProperty.call(message, "ignore_count"))
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.ignore_count);
            if (message.forum_topic_id != null && Object.hasOwnProperty.call(message, "forum_topic_id"))
                writer.uint32(/* id 23, wireType 1 =*/185).fixed64(message.forum_topic_id);
            if (message.rtime32_last_modified != null && Object.hasOwnProperty.call(message, "rtime32_last_modified"))
                writer.uint32(/* id 24, wireType 0 =*/192).uint32(message.rtime32_last_modified);
            if (message.news_post_gid != null && Object.hasOwnProperty.call(message, "news_post_gid"))
                writer.uint32(/* id 25, wireType 1 =*/201).fixed64(message.news_post_gid);
            if (message.rtime_mod_reviewed != null && Object.hasOwnProperty.call(message, "rtime_mod_reviewed"))
                writer.uint32(/* id 26, wireType 0 =*/208).uint32(message.rtime_mod_reviewed);
            if (message.featured_app_tagid != null && Object.hasOwnProperty.call(message, "featured_app_tagid"))
                writer.uint32(/* id 27, wireType 0 =*/216).uint32(message.featured_app_tagid);
            return writer;
        };
    
        /**
         * Encodes the specified CClanEventData message, length delimited. Does not implicitly {@link CClanEventData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CClanEventData
         * @static
         * @param {ICClanEventData} message CClanEventData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CClanEventData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CClanEventData message from the specified reader or buffer.
         * @function decode
         * @memberof CClanEventData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CClanEventData} CClanEventData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanEventData.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CClanEventData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.gid = reader.fixed64();
                    break;
                case 2:
                    message.clan_steamid = reader.fixed64();
                    break;
                case 3:
                    message.event_name = reader.string();
                    break;
                case 4:
                    message.event_type = reader.int32();
                    break;
                case 5:
                    message.appid = reader.uint32();
                    break;
                case 6:
                    message.server_address = reader.string();
                    break;
                case 7:
                    message.server_password = reader.string();
                    break;
                case 8:
                    message.rtime32_start_time = reader.uint32();
                    break;
                case 9:
                    message.rtime32_end_time = reader.uint32();
                    break;
                case 10:
                    message.comment_count = reader.int32();
                    break;
                case 11:
                    message.creator_steamid = reader.fixed64();
                    break;
                case 12:
                    message.last_update_steamid = reader.fixed64();
                    break;
                case 13:
                    message.event_notes = reader.string();
                    break;
                case 14:
                    message.jsondata = reader.string();
                    break;
                case 15:
                    message.announcement_body = $root.CCommunity_ClanAnnouncementInfo.decode(reader, reader.uint32());
                    break;
                case 16:
                    message.published = reader.bool();
                    break;
                case 17:
                    message.hidden = reader.bool();
                    break;
                case 18:
                    message.rtime32_visibility_start = reader.uint32();
                    break;
                case 19:
                    message.rtime32_visibility_end = reader.uint32();
                    break;
                case 20:
                    message.broadcaster_accountid = reader.uint32();
                    break;
                case 21:
                    message.follower_count = reader.uint32();
                    break;
                case 22:
                    message.ignore_count = reader.uint32();
                    break;
                case 23:
                    message.forum_topic_id = reader.fixed64();
                    break;
                case 24:
                    message.rtime32_last_modified = reader.uint32();
                    break;
                case 25:
                    message.news_post_gid = reader.fixed64();
                    break;
                case 26:
                    message.rtime_mod_reviewed = reader.uint32();
                    break;
                case 27:
                    message.featured_app_tagid = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CClanEventData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CClanEventData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CClanEventData} CClanEventData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CClanEventData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CClanEventData message.
         * @function verify
         * @memberof CClanEventData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CClanEventData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (!$util.isInteger(message.gid) && !(message.gid && $util.isInteger(message.gid.low) && $util.isInteger(message.gid.high)))
                    return "gid: integer|Long expected";
            if (message.clan_steamid != null && message.hasOwnProperty("clan_steamid"))
                if (!$util.isInteger(message.clan_steamid) && !(message.clan_steamid && $util.isInteger(message.clan_steamid.low) && $util.isInteger(message.clan_steamid.high)))
                    return "clan_steamid: integer|Long expected";
            if (message.event_name != null && message.hasOwnProperty("event_name"))
                if (!$util.isString(message.event_name))
                    return "event_name: string expected";
            if (message.event_type != null && message.hasOwnProperty("event_type"))
                switch (message.event_type) {
                default:
                    return "event_type: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                    break;
                }
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.server_address != null && message.hasOwnProperty("server_address"))
                if (!$util.isString(message.server_address))
                    return "server_address: string expected";
            if (message.server_password != null && message.hasOwnProperty("server_password"))
                if (!$util.isString(message.server_password))
                    return "server_password: string expected";
            if (message.rtime32_start_time != null && message.hasOwnProperty("rtime32_start_time"))
                if (!$util.isInteger(message.rtime32_start_time))
                    return "rtime32_start_time: integer expected";
            if (message.rtime32_end_time != null && message.hasOwnProperty("rtime32_end_time"))
                if (!$util.isInteger(message.rtime32_end_time))
                    return "rtime32_end_time: integer expected";
            if (message.comment_count != null && message.hasOwnProperty("comment_count"))
                if (!$util.isInteger(message.comment_count))
                    return "comment_count: integer expected";
            if (message.creator_steamid != null && message.hasOwnProperty("creator_steamid"))
                if (!$util.isInteger(message.creator_steamid) && !(message.creator_steamid && $util.isInteger(message.creator_steamid.low) && $util.isInteger(message.creator_steamid.high)))
                    return "creator_steamid: integer|Long expected";
            if (message.last_update_steamid != null && message.hasOwnProperty("last_update_steamid"))
                if (!$util.isInteger(message.last_update_steamid) && !(message.last_update_steamid && $util.isInteger(message.last_update_steamid.low) && $util.isInteger(message.last_update_steamid.high)))
                    return "last_update_steamid: integer|Long expected";
            if (message.event_notes != null && message.hasOwnProperty("event_notes"))
                if (!$util.isString(message.event_notes))
                    return "event_notes: string expected";
            if (message.jsondata != null && message.hasOwnProperty("jsondata"))
                if (!$util.isString(message.jsondata))
                    return "jsondata: string expected";
            if (message.announcement_body != null && message.hasOwnProperty("announcement_body")) {
                var error = $root.CCommunity_ClanAnnouncementInfo.verify(message.announcement_body);
                if (error)
                    return "announcement_body." + error;
            }
            if (message.published != null && message.hasOwnProperty("published"))
                if (typeof message.published !== "boolean")
                    return "published: boolean expected";
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                if (typeof message.hidden !== "boolean")
                    return "hidden: boolean expected";
            if (message.rtime32_visibility_start != null && message.hasOwnProperty("rtime32_visibility_start"))
                if (!$util.isInteger(message.rtime32_visibility_start))
                    return "rtime32_visibility_start: integer expected";
            if (message.rtime32_visibility_end != null && message.hasOwnProperty("rtime32_visibility_end"))
                if (!$util.isInteger(message.rtime32_visibility_end))
                    return "rtime32_visibility_end: integer expected";
            if (message.broadcaster_accountid != null && message.hasOwnProperty("broadcaster_accountid"))
                if (!$util.isInteger(message.broadcaster_accountid))
                    return "broadcaster_accountid: integer expected";
            if (message.follower_count != null && message.hasOwnProperty("follower_count"))
                if (!$util.isInteger(message.follower_count))
                    return "follower_count: integer expected";
            if (message.ignore_count != null && message.hasOwnProperty("ignore_count"))
                if (!$util.isInteger(message.ignore_count))
                    return "ignore_count: integer expected";
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                if (!$util.isInteger(message.forum_topic_id) && !(message.forum_topic_id && $util.isInteger(message.forum_topic_id.low) && $util.isInteger(message.forum_topic_id.high)))
                    return "forum_topic_id: integer|Long expected";
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                if (!$util.isInteger(message.rtime32_last_modified))
                    return "rtime32_last_modified: integer expected";
            if (message.news_post_gid != null && message.hasOwnProperty("news_post_gid"))
                if (!$util.isInteger(message.news_post_gid) && !(message.news_post_gid && $util.isInteger(message.news_post_gid.low) && $util.isInteger(message.news_post_gid.high)))
                    return "news_post_gid: integer|Long expected";
            if (message.rtime_mod_reviewed != null && message.hasOwnProperty("rtime_mod_reviewed"))
                if (!$util.isInteger(message.rtime_mod_reviewed))
                    return "rtime_mod_reviewed: integer expected";
            if (message.featured_app_tagid != null && message.hasOwnProperty("featured_app_tagid"))
                if (!$util.isInteger(message.featured_app_tagid))
                    return "featured_app_tagid: integer expected";
            return null;
        };
    
        /**
         * Creates a CClanEventData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CClanEventData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CClanEventData} CClanEventData
         */
        CClanEventData.fromObject = function fromObject(object) {
            if (object instanceof $root.CClanEventData)
                return object;
            var message = new $root.CClanEventData();
            if (object.gid != null)
                if ($util.Long)
                    (message.gid = $util.Long.fromValue(object.gid)).unsigned = false;
                else if (typeof object.gid === "string")
                    message.gid = parseInt(object.gid, 10);
                else if (typeof object.gid === "number")
                    message.gid = object.gid;
                else if (typeof object.gid === "object")
                    message.gid = new $util.LongBits(object.gid.low >>> 0, object.gid.high >>> 0).toNumber();
            if (object.clan_steamid != null)
                if ($util.Long)
                    (message.clan_steamid = $util.Long.fromValue(object.clan_steamid)).unsigned = false;
                else if (typeof object.clan_steamid === "string")
                    message.clan_steamid = parseInt(object.clan_steamid, 10);
                else if (typeof object.clan_steamid === "number")
                    message.clan_steamid = object.clan_steamid;
                else if (typeof object.clan_steamid === "object")
                    message.clan_steamid = new $util.LongBits(object.clan_steamid.low >>> 0, object.clan_steamid.high >>> 0).toNumber();
            if (object.event_name != null)
                message.event_name = String(object.event_name);
            switch (object.event_type) {
            case "k_EClanOtherEvent":
            case 1:
                message.event_type = 1;
                break;
            case "k_EClanGameEvent":
            case 2:
                message.event_type = 2;
                break;
            case "k_EClanPartyEvent":
            case 3:
                message.event_type = 3;
                break;
            case "k_EClanMeetingEvent":
            case 4:
                message.event_type = 4;
                break;
            case "k_EClanSpecialCauseEvent":
            case 5:
                message.event_type = 5;
                break;
            case "k_EClanMusicAndArtsEvent":
            case 6:
                message.event_type = 6;
                break;
            case "k_EClanSportsEvent":
            case 7:
                message.event_type = 7;
                break;
            case "k_EClanTripEvent":
            case 8:
                message.event_type = 8;
                break;
            case "k_EClanChatEvent":
            case 9:
                message.event_type = 9;
                break;
            case "k_EClanGameReleaseEvent":
            case 10:
                message.event_type = 10;
                break;
            case "k_EClanBroadcastEvent":
            case 11:
                message.event_type = 11;
                break;
            case "k_EClanSmallUpdateEvent":
            case 12:
                message.event_type = 12;
                break;
            case "k_EClanPreAnnounceMajorUpdateEvent":
            case 13:
                message.event_type = 13;
                break;
            case "k_EClanMajorUpdateEvent":
            case 14:
                message.event_type = 14;
                break;
            case "k_EClanDLCReleaseEvent":
            case 15:
                message.event_type = 15;
                break;
            case "k_EClanFutureReleaseEvent":
            case 16:
                message.event_type = 16;
                break;
            case "k_EClanESportTournamentStreamEvent":
            case 17:
                message.event_type = 17;
                break;
            case "k_EClanDevStreamEvent":
            case 18:
                message.event_type = 18;
                break;
            case "k_EClanFamousStreamEvent":
            case 19:
                message.event_type = 19;
                break;
            case "k_EClanGameSalesEvent":
            case 20:
                message.event_type = 20;
                break;
            case "k_EClanGameItemSalesEvent":
            case 21:
                message.event_type = 21;
                break;
            case "k_EClanInGameBonusXPEvent":
            case 22:
                message.event_type = 22;
                break;
            case "k_EClanInGameLootEvent":
            case 23:
                message.event_type = 23;
                break;
            case "k_EClanInGamePerksEvent":
            case 24:
                message.event_type = 24;
                break;
            case "k_EClanInGameChallengeEvent":
            case 25:
                message.event_type = 25;
                break;
            case "k_EClanInGameContestEvent":
            case 26:
                message.event_type = 26;
                break;
            case "k_EClanIRLEvent":
            case 27:
                message.event_type = 27;
                break;
            case "k_EClanNewsEvent":
            case 28:
                message.event_type = 28;
                break;
            case "k_EClanBetaReleaseEvent":
            case 29:
                message.event_type = 29;
                break;
            case "k_EClanInGameContentReleaseEvent":
            case 30:
                message.event_type = 30;
                break;
            case "k_EClanFreeTrial":
            case 31:
                message.event_type = 31;
                break;
            case "k_EClanSeasonRelease":
            case 32:
                message.event_type = 32;
                break;
            case "k_EClanSeasonUpdate":
            case 33:
                message.event_type = 33;
                break;
            case "k_EClanCrosspostEvent":
            case 34:
                message.event_type = 34;
                break;
            case "k_EClanInGameEventGeneral":
            case 35:
                message.event_type = 35;
                break;
            }
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.server_address != null)
                message.server_address = String(object.server_address);
            if (object.server_password != null)
                message.server_password = String(object.server_password);
            if (object.rtime32_start_time != null)
                message.rtime32_start_time = object.rtime32_start_time >>> 0;
            if (object.rtime32_end_time != null)
                message.rtime32_end_time = object.rtime32_end_time >>> 0;
            if (object.comment_count != null)
                message.comment_count = object.comment_count | 0;
            if (object.creator_steamid != null)
                if ($util.Long)
                    (message.creator_steamid = $util.Long.fromValue(object.creator_steamid)).unsigned = false;
                else if (typeof object.creator_steamid === "string")
                    message.creator_steamid = parseInt(object.creator_steamid, 10);
                else if (typeof object.creator_steamid === "number")
                    message.creator_steamid = object.creator_steamid;
                else if (typeof object.creator_steamid === "object")
                    message.creator_steamid = new $util.LongBits(object.creator_steamid.low >>> 0, object.creator_steamid.high >>> 0).toNumber();
            if (object.last_update_steamid != null)
                if ($util.Long)
                    (message.last_update_steamid = $util.Long.fromValue(object.last_update_steamid)).unsigned = false;
                else if (typeof object.last_update_steamid === "string")
                    message.last_update_steamid = parseInt(object.last_update_steamid, 10);
                else if (typeof object.last_update_steamid === "number")
                    message.last_update_steamid = object.last_update_steamid;
                else if (typeof object.last_update_steamid === "object")
                    message.last_update_steamid = new $util.LongBits(object.last_update_steamid.low >>> 0, object.last_update_steamid.high >>> 0).toNumber();
            if (object.event_notes != null)
                message.event_notes = String(object.event_notes);
            if (object.jsondata != null)
                message.jsondata = String(object.jsondata);
            if (object.announcement_body != null) {
                if (typeof object.announcement_body !== "object")
                    throw TypeError(".CClanEventData.announcement_body: object expected");
                message.announcement_body = $root.CCommunity_ClanAnnouncementInfo.fromObject(object.announcement_body);
            }
            if (object.published != null)
                message.published = Boolean(object.published);
            if (object.hidden != null)
                message.hidden = Boolean(object.hidden);
            if (object.rtime32_visibility_start != null)
                message.rtime32_visibility_start = object.rtime32_visibility_start >>> 0;
            if (object.rtime32_visibility_end != null)
                message.rtime32_visibility_end = object.rtime32_visibility_end >>> 0;
            if (object.broadcaster_accountid != null)
                message.broadcaster_accountid = object.broadcaster_accountid >>> 0;
            if (object.follower_count != null)
                message.follower_count = object.follower_count >>> 0;
            if (object.ignore_count != null)
                message.ignore_count = object.ignore_count >>> 0;
            if (object.forum_topic_id != null)
                if ($util.Long)
                    (message.forum_topic_id = $util.Long.fromValue(object.forum_topic_id)).unsigned = false;
                else if (typeof object.forum_topic_id === "string")
                    message.forum_topic_id = parseInt(object.forum_topic_id, 10);
                else if (typeof object.forum_topic_id === "number")
                    message.forum_topic_id = object.forum_topic_id;
                else if (typeof object.forum_topic_id === "object")
                    message.forum_topic_id = new $util.LongBits(object.forum_topic_id.low >>> 0, object.forum_topic_id.high >>> 0).toNumber();
            if (object.rtime32_last_modified != null)
                message.rtime32_last_modified = object.rtime32_last_modified >>> 0;
            if (object.news_post_gid != null)
                if ($util.Long)
                    (message.news_post_gid = $util.Long.fromValue(object.news_post_gid)).unsigned = false;
                else if (typeof object.news_post_gid === "string")
                    message.news_post_gid = parseInt(object.news_post_gid, 10);
                else if (typeof object.news_post_gid === "number")
                    message.news_post_gid = object.news_post_gid;
                else if (typeof object.news_post_gid === "object")
                    message.news_post_gid = new $util.LongBits(object.news_post_gid.low >>> 0, object.news_post_gid.high >>> 0).toNumber();
            if (object.rtime_mod_reviewed != null)
                message.rtime_mod_reviewed = object.rtime_mod_reviewed >>> 0;
            if (object.featured_app_tagid != null)
                message.featured_app_tagid = object.featured_app_tagid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CClanEventData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CClanEventData
         * @static
         * @param {CClanEventData} message CClanEventData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CClanEventData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.clan_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.clan_steamid = options.longs === String ? "0" : 0;
                object.event_name = "";
                object.event_type = options.enums === String ? "k_EClanOtherEvent" : 1;
                object.appid = 0;
                object.server_address = "";
                object.server_password = "";
                object.rtime32_start_time = 0;
                object.rtime32_end_time = 0;
                object.comment_count = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.creator_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.creator_steamid = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.last_update_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.last_update_steamid = options.longs === String ? "0" : 0;
                object.event_notes = "";
                object.jsondata = "";
                object.announcement_body = null;
                object.published = false;
                object.hidden = false;
                object.rtime32_visibility_start = 0;
                object.rtime32_visibility_end = 0;
                object.broadcaster_accountid = 0;
                object.follower_count = 0;
                object.ignore_count = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.forum_topic_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.forum_topic_id = options.longs === String ? "0" : 0;
                object.rtime32_last_modified = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.news_post_gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.news_post_gid = options.longs === String ? "0" : 0;
                object.rtime_mod_reviewed = 0;
                object.featured_app_tagid = 0;
            }
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (typeof message.gid === "number")
                    object.gid = options.longs === String ? String(message.gid) : message.gid;
                else
                    object.gid = options.longs === String ? $util.Long.prototype.toString.call(message.gid) : options.longs === Number ? new $util.LongBits(message.gid.low >>> 0, message.gid.high >>> 0).toNumber() : message.gid;
            if (message.clan_steamid != null && message.hasOwnProperty("clan_steamid"))
                if (typeof message.clan_steamid === "number")
                    object.clan_steamid = options.longs === String ? String(message.clan_steamid) : message.clan_steamid;
                else
                    object.clan_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.clan_steamid) : options.longs === Number ? new $util.LongBits(message.clan_steamid.low >>> 0, message.clan_steamid.high >>> 0).toNumber() : message.clan_steamid;
            if (message.event_name != null && message.hasOwnProperty("event_name"))
                object.event_name = message.event_name;
            if (message.event_type != null && message.hasOwnProperty("event_type"))
                object.event_type = options.enums === String ? $root.EProtoClanEventType[message.event_type] : message.event_type;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.server_address != null && message.hasOwnProperty("server_address"))
                object.server_address = message.server_address;
            if (message.server_password != null && message.hasOwnProperty("server_password"))
                object.server_password = message.server_password;
            if (message.rtime32_start_time != null && message.hasOwnProperty("rtime32_start_time"))
                object.rtime32_start_time = message.rtime32_start_time;
            if (message.rtime32_end_time != null && message.hasOwnProperty("rtime32_end_time"))
                object.rtime32_end_time = message.rtime32_end_time;
            if (message.comment_count != null && message.hasOwnProperty("comment_count"))
                object.comment_count = message.comment_count;
            if (message.creator_steamid != null && message.hasOwnProperty("creator_steamid"))
                if (typeof message.creator_steamid === "number")
                    object.creator_steamid = options.longs === String ? String(message.creator_steamid) : message.creator_steamid;
                else
                    object.creator_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.creator_steamid) : options.longs === Number ? new $util.LongBits(message.creator_steamid.low >>> 0, message.creator_steamid.high >>> 0).toNumber() : message.creator_steamid;
            if (message.last_update_steamid != null && message.hasOwnProperty("last_update_steamid"))
                if (typeof message.last_update_steamid === "number")
                    object.last_update_steamid = options.longs === String ? String(message.last_update_steamid) : message.last_update_steamid;
                else
                    object.last_update_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.last_update_steamid) : options.longs === Number ? new $util.LongBits(message.last_update_steamid.low >>> 0, message.last_update_steamid.high >>> 0).toNumber() : message.last_update_steamid;
            if (message.event_notes != null && message.hasOwnProperty("event_notes"))
                object.event_notes = message.event_notes;
            if (message.jsondata != null && message.hasOwnProperty("jsondata"))
                object.jsondata = message.jsondata;
            if (message.announcement_body != null && message.hasOwnProperty("announcement_body"))
                object.announcement_body = $root.CCommunity_ClanAnnouncementInfo.toObject(message.announcement_body, options);
            if (message.published != null && message.hasOwnProperty("published"))
                object.published = message.published;
            if (message.hidden != null && message.hasOwnProperty("hidden"))
                object.hidden = message.hidden;
            if (message.rtime32_visibility_start != null && message.hasOwnProperty("rtime32_visibility_start"))
                object.rtime32_visibility_start = message.rtime32_visibility_start;
            if (message.rtime32_visibility_end != null && message.hasOwnProperty("rtime32_visibility_end"))
                object.rtime32_visibility_end = message.rtime32_visibility_end;
            if (message.broadcaster_accountid != null && message.hasOwnProperty("broadcaster_accountid"))
                object.broadcaster_accountid = message.broadcaster_accountid;
            if (message.follower_count != null && message.hasOwnProperty("follower_count"))
                object.follower_count = message.follower_count;
            if (message.ignore_count != null && message.hasOwnProperty("ignore_count"))
                object.ignore_count = message.ignore_count;
            if (message.forum_topic_id != null && message.hasOwnProperty("forum_topic_id"))
                if (typeof message.forum_topic_id === "number")
                    object.forum_topic_id = options.longs === String ? String(message.forum_topic_id) : message.forum_topic_id;
                else
                    object.forum_topic_id = options.longs === String ? $util.Long.prototype.toString.call(message.forum_topic_id) : options.longs === Number ? new $util.LongBits(message.forum_topic_id.low >>> 0, message.forum_topic_id.high >>> 0).toNumber() : message.forum_topic_id;
            if (message.rtime32_last_modified != null && message.hasOwnProperty("rtime32_last_modified"))
                object.rtime32_last_modified = message.rtime32_last_modified;
            if (message.news_post_gid != null && message.hasOwnProperty("news_post_gid"))
                if (typeof message.news_post_gid === "number")
                    object.news_post_gid = options.longs === String ? String(message.news_post_gid) : message.news_post_gid;
                else
                    object.news_post_gid = options.longs === String ? $util.Long.prototype.toString.call(message.news_post_gid) : options.longs === Number ? new $util.LongBits(message.news_post_gid.low >>> 0, message.news_post_gid.high >>> 0).toNumber() : message.news_post_gid;
            if (message.rtime_mod_reviewed != null && message.hasOwnProperty("rtime_mod_reviewed"))
                object.rtime_mod_reviewed = message.rtime_mod_reviewed;
            if (message.featured_app_tagid != null && message.hasOwnProperty("featured_app_tagid"))
                object.featured_app_tagid = message.featured_app_tagid;
            return object;
        };
    
        /**
         * Converts this CClanEventData to JSON.
         * @function toJSON
         * @memberof CClanEventData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CClanEventData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CClanEventData;
    })();
    
    $root.CBilling_Address = (function() {
    
        /**
         * Properties of a CBilling_Address.
         * @exports ICBilling_Address
         * @interface ICBilling_Address
         * @property {string|null} [first_name] CBilling_Address first_name
         * @property {string|null} [last_name] CBilling_Address last_name
         * @property {string|null} [address1] CBilling_Address address1
         * @property {string|null} [address2] CBilling_Address address2
         * @property {string|null} [city] CBilling_Address city
         * @property {string|null} [us_state] CBilling_Address us_state
         * @property {string|null} [country_code] CBilling_Address country_code
         * @property {string|null} [postcode] CBilling_Address postcode
         * @property {number|null} [zip_plus4] CBilling_Address zip_plus4
         * @property {string|null} [phone] CBilling_Address phone
         */
    
        /**
         * Constructs a new CBilling_Address.
         * @exports CBilling_Address
         * @classdesc Represents a CBilling_Address.
         * @implements ICBilling_Address
         * @constructor
         * @param {ICBilling_Address=} [properties] Properties to set
         */
        function CBilling_Address(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CBilling_Address first_name.
         * @member {string} first_name
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.first_name = "";
    
        /**
         * CBilling_Address last_name.
         * @member {string} last_name
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.last_name = "";
    
        /**
         * CBilling_Address address1.
         * @member {string} address1
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.address1 = "";
    
        /**
         * CBilling_Address address2.
         * @member {string} address2
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.address2 = "";
    
        /**
         * CBilling_Address city.
         * @member {string} city
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.city = "";
    
        /**
         * CBilling_Address us_state.
         * @member {string} us_state
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.us_state = "";
    
        /**
         * CBilling_Address country_code.
         * @member {string} country_code
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.country_code = "";
    
        /**
         * CBilling_Address postcode.
         * @member {string} postcode
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.postcode = "";
    
        /**
         * CBilling_Address zip_plus4.
         * @member {number} zip_plus4
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.zip_plus4 = 0;
    
        /**
         * CBilling_Address phone.
         * @member {string} phone
         * @memberof CBilling_Address
         * @instance
         */
        CBilling_Address.prototype.phone = "";
    
        /**
         * Creates a new CBilling_Address instance using the specified properties.
         * @function create
         * @memberof CBilling_Address
         * @static
         * @param {ICBilling_Address=} [properties] Properties to set
         * @returns {CBilling_Address} CBilling_Address instance
         */
        CBilling_Address.create = function create(properties) {
            return new CBilling_Address(properties);
        };
    
        /**
         * Encodes the specified CBilling_Address message. Does not implicitly {@link CBilling_Address.verify|verify} messages.
         * @function encode
         * @memberof CBilling_Address
         * @static
         * @param {ICBilling_Address} message CBilling_Address message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CBilling_Address.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.first_name != null && Object.hasOwnProperty.call(message, "first_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.first_name);
            if (message.last_name != null && Object.hasOwnProperty.call(message, "last_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.last_name);
            if (message.address1 != null && Object.hasOwnProperty.call(message, "address1"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.address1);
            if (message.address2 != null && Object.hasOwnProperty.call(message, "address2"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.address2);
            if (message.city != null && Object.hasOwnProperty.call(message, "city"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.city);
            if (message.us_state != null && Object.hasOwnProperty.call(message, "us_state"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.us_state);
            if (message.country_code != null && Object.hasOwnProperty.call(message, "country_code"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.country_code);
            if (message.postcode != null && Object.hasOwnProperty.call(message, "postcode"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.postcode);
            if (message.zip_plus4 != null && Object.hasOwnProperty.call(message, "zip_plus4"))
                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.zip_plus4);
            if (message.phone != null && Object.hasOwnProperty.call(message, "phone"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.phone);
            return writer;
        };
    
        /**
         * Encodes the specified CBilling_Address message, length delimited. Does not implicitly {@link CBilling_Address.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CBilling_Address
         * @static
         * @param {ICBilling_Address} message CBilling_Address message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CBilling_Address.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CBilling_Address message from the specified reader or buffer.
         * @function decode
         * @memberof CBilling_Address
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CBilling_Address} CBilling_Address
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CBilling_Address.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CBilling_Address();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.first_name = reader.string();
                    break;
                case 2:
                    message.last_name = reader.string();
                    break;
                case 3:
                    message.address1 = reader.string();
                    break;
                case 4:
                    message.address2 = reader.string();
                    break;
                case 5:
                    message.city = reader.string();
                    break;
                case 6:
                    message.us_state = reader.string();
                    break;
                case 7:
                    message.country_code = reader.string();
                    break;
                case 8:
                    message.postcode = reader.string();
                    break;
                case 9:
                    message.zip_plus4 = reader.int32();
                    break;
                case 10:
                    message.phone = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CBilling_Address message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CBilling_Address
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CBilling_Address} CBilling_Address
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CBilling_Address.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CBilling_Address message.
         * @function verify
         * @memberof CBilling_Address
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CBilling_Address.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.first_name != null && message.hasOwnProperty("first_name"))
                if (!$util.isString(message.first_name))
                    return "first_name: string expected";
            if (message.last_name != null && message.hasOwnProperty("last_name"))
                if (!$util.isString(message.last_name))
                    return "last_name: string expected";
            if (message.address1 != null && message.hasOwnProperty("address1"))
                if (!$util.isString(message.address1))
                    return "address1: string expected";
            if (message.address2 != null && message.hasOwnProperty("address2"))
                if (!$util.isString(message.address2))
                    return "address2: string expected";
            if (message.city != null && message.hasOwnProperty("city"))
                if (!$util.isString(message.city))
                    return "city: string expected";
            if (message.us_state != null && message.hasOwnProperty("us_state"))
                if (!$util.isString(message.us_state))
                    return "us_state: string expected";
            if (message.country_code != null && message.hasOwnProperty("country_code"))
                if (!$util.isString(message.country_code))
                    return "country_code: string expected";
            if (message.postcode != null && message.hasOwnProperty("postcode"))
                if (!$util.isString(message.postcode))
                    return "postcode: string expected";
            if (message.zip_plus4 != null && message.hasOwnProperty("zip_plus4"))
                if (!$util.isInteger(message.zip_plus4))
                    return "zip_plus4: integer expected";
            if (message.phone != null && message.hasOwnProperty("phone"))
                if (!$util.isString(message.phone))
                    return "phone: string expected";
            return null;
        };
    
        /**
         * Creates a CBilling_Address message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CBilling_Address
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CBilling_Address} CBilling_Address
         */
        CBilling_Address.fromObject = function fromObject(object) {
            if (object instanceof $root.CBilling_Address)
                return object;
            var message = new $root.CBilling_Address();
            if (object.first_name != null)
                message.first_name = String(object.first_name);
            if (object.last_name != null)
                message.last_name = String(object.last_name);
            if (object.address1 != null)
                message.address1 = String(object.address1);
            if (object.address2 != null)
                message.address2 = String(object.address2);
            if (object.city != null)
                message.city = String(object.city);
            if (object.us_state != null)
                message.us_state = String(object.us_state);
            if (object.country_code != null)
                message.country_code = String(object.country_code);
            if (object.postcode != null)
                message.postcode = String(object.postcode);
            if (object.zip_plus4 != null)
                message.zip_plus4 = object.zip_plus4 | 0;
            if (object.phone != null)
                message.phone = String(object.phone);
            return message;
        };
    
        /**
         * Creates a plain object from a CBilling_Address message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CBilling_Address
         * @static
         * @param {CBilling_Address} message CBilling_Address
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CBilling_Address.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.first_name = "";
                object.last_name = "";
                object.address1 = "";
                object.address2 = "";
                object.city = "";
                object.us_state = "";
                object.country_code = "";
                object.postcode = "";
                object.zip_plus4 = 0;
                object.phone = "";
            }
            if (message.first_name != null && message.hasOwnProperty("first_name"))
                object.first_name = message.first_name;
            if (message.last_name != null && message.hasOwnProperty("last_name"))
                object.last_name = message.last_name;
            if (message.address1 != null && message.hasOwnProperty("address1"))
                object.address1 = message.address1;
            if (message.address2 != null && message.hasOwnProperty("address2"))
                object.address2 = message.address2;
            if (message.city != null && message.hasOwnProperty("city"))
                object.city = message.city;
            if (message.us_state != null && message.hasOwnProperty("us_state"))
                object.us_state = message.us_state;
            if (message.country_code != null && message.hasOwnProperty("country_code"))
                object.country_code = message.country_code;
            if (message.postcode != null && message.hasOwnProperty("postcode"))
                object.postcode = message.postcode;
            if (message.zip_plus4 != null && message.hasOwnProperty("zip_plus4"))
                object.zip_plus4 = message.zip_plus4;
            if (message.phone != null && message.hasOwnProperty("phone"))
                object.phone = message.phone;
            return object;
        };
    
        /**
         * Converts this CBilling_Address to JSON.
         * @function toJSON
         * @memberof CBilling_Address
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CBilling_Address.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return CBilling_Address;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [public_dependency] FileDescriptorProto public_dependency
                 * @property {Array.<number>|null} [weak_dependency] FileDescriptorProto weak_dependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [message_type] FileDescriptorProto message_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] FileDescriptorProto enum_type
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [source_code_info] FileDescriptorProto source_code_info
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.public_dependency = [];
                    this.weak_dependency = [];
                    this.message_type = [];
                    this.enum_type = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto public_dependency.
                 * @member {Array.<number>} public_dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.public_dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weak_dependency.
                 * @member {Array.<number>} weak_dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weak_dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto message_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} message_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.message_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto source_code_info.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} source_code_info
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.source_code_info = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.message_type != null && message.message_type.length)
                        for (var i = 0; i < message.message_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.message_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.source_code_info != null && Object.hasOwnProperty.call(message, "source_code_info"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.source_code_info, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.public_dependency != null && message.public_dependency.length)
                        for (var i = 0; i < message.public_dependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.public_dependency[i]);
                    if (message.weak_dependency != null && message.weak_dependency.length)
                        for (var i = 0; i < message.weak_dependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weak_dependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message["package"] = reader.string();
                            break;
                        case 3:
                            if (!(message.dependency && message.dependency.length))
                                message.dependency = [];
                            message.dependency.push(reader.string());
                            break;
                        case 10:
                            if (!(message.public_dependency && message.public_dependency.length))
                                message.public_dependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.public_dependency.push(reader.int32());
                            } else
                                message.public_dependency.push(reader.int32());
                            break;
                        case 11:
                            if (!(message.weak_dependency && message.weak_dependency.length))
                                message.weak_dependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.weak_dependency.push(reader.int32());
                            } else
                                message.weak_dependency.push(reader.int32());
                            break;
                        case 4:
                            if (!(message.message_type && message.message_type.length))
                                message.message_type = [];
                            message.message_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.enum_type && message.enum_type.length))
                                message.enum_type = [];
                            message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.service && message.service.length))
                                message.service = [];
                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            message.source_code_info = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                            break;
                        case 12:
                            message.syntax = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.public_dependency != null && message.hasOwnProperty("public_dependency")) {
                        if (!Array.isArray(message.public_dependency))
                            return "public_dependency: array expected";
                        for (var i = 0; i < message.public_dependency.length; ++i)
                            if (!$util.isInteger(message.public_dependency[i]))
                                return "public_dependency: integer[] expected";
                    }
                    if (message.weak_dependency != null && message.hasOwnProperty("weak_dependency")) {
                        if (!Array.isArray(message.weak_dependency))
                            return "weak_dependency: array expected";
                        for (var i = 0; i < message.weak_dependency.length; ++i)
                            if (!$util.isInteger(message.weak_dependency[i]))
                                return "weak_dependency: integer[] expected";
                    }
                    if (message.message_type != null && message.hasOwnProperty("message_type")) {
                        if (!Array.isArray(message.message_type))
                            return "message_type: array expected";
                        for (var i = 0; i < message.message_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.message_type[i]);
                            if (error)
                                return "message_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.source_code_info);
                        if (error)
                            return "source_code_info." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.public_dependency) {
                        if (!Array.isArray(object.public_dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.public_dependency: array expected");
                        message.public_dependency = [];
                        for (var i = 0; i < object.public_dependency.length; ++i)
                            message.public_dependency[i] = object.public_dependency[i] | 0;
                    }
                    if (object.weak_dependency) {
                        if (!Array.isArray(object.weak_dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weak_dependency: array expected");
                        message.weak_dependency = [];
                        for (var i = 0; i < object.weak_dependency.length; ++i)
                            message.weak_dependency[i] = object.weak_dependency[i] | 0;
                    }
                    if (object.message_type) {
                        if (!Array.isArray(object.message_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.message_type: array expected");
                        message.message_type = [];
                        for (var i = 0; i < object.message_type.length; ++i) {
                            if (typeof object.message_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.message_type: object expected");
                            message.message_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.message_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.source_code_info != null) {
                        if (typeof object.source_code_info !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.source_code_info: object expected");
                        message.source_code_info = $root.google.protobuf.SourceCodeInfo.fromObject(object.source_code_info);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.message_type = [];
                        object.enum_type = [];
                        object.service = [];
                        object.extension = [];
                        object.public_dependency = [];
                        object.weak_dependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.source_code_info = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.message_type && message.message_type.length) {
                        object.message_type = [];
                        for (var j = 0; j < message.message_type.length; ++j)
                            object.message_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.message_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                        object.source_code_info = $root.google.protobuf.SourceCodeInfo.toObject(message.source_code_info, options);
                    if (message.public_dependency && message.public_dependency.length) {
                        object.public_dependency = [];
                        for (var j = 0; j < message.public_dependency.length; ++j)
                            object.public_dependency[j] = message.public_dependency[j];
                    }
                    if (message.weak_dependency && message.weak_dependency.length) {
                        object.weak_dependency = [];
                        for (var j = 0; j < message.weak_dependency.length; ++j)
                            object.weak_dependency[j] = message.weak_dependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nested_type] DescriptorProto nested_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] DescriptorProto enum_type
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extension_range] DescriptorProto extension_range
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneof_decl] DescriptorProto oneof_decl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reserved_range] DescriptorProto reserved_range
                 * @property {Array.<string>|null} [reserved_name] DescriptorProto reserved_name
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nested_type = [];
                    this.enum_type = [];
                    this.extension_range = [];
                    this.oneof_decl = [];
                    this.reserved_range = [];
                    this.reserved_name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nested_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nested_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nested_type = $util.emptyArray;
    
                /**
                 * DescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * DescriptorProto extension_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extension_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension_range = $util.emptyArray;
    
                /**
                 * DescriptorProto oneof_decl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneof_decl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneof_decl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reserved_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reserved_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reserved_range = $util.emptyArray;
    
                /**
                 * DescriptorProto reserved_name.
                 * @member {Array.<string>} reserved_name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reserved_name = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nested_type != null && message.nested_type.length)
                        for (var i = 0; i < message.nested_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nested_type[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extension_range != null && message.extension_range.length)
                        for (var i = 0; i < message.extension_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extension_range[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneof_decl != null && message.oneof_decl.length)
                        for (var i = 0; i < message.oneof_decl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneof_decl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reserved_range != null && message.reserved_range.length)
                        for (var i = 0; i < message.reserved_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reserved_range[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reserved_name != null && message.reserved_name.length)
                        for (var i = 0; i < message.reserved_name.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reserved_name[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.field && message.field.length))
                                message.field = [];
                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            if (!(message.nested_type && message.nested_type.length))
                                message.nested_type = [];
                            message.nested_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 4:
                            if (!(message.enum_type && message.enum_type.length))
                                message.enum_type = [];
                            message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.extension_range && message.extension_range.length))
                                message.extension_range = [];
                            message.extension_range.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.oneof_decl && message.oneof_decl.length))
                                message.oneof_decl = [];
                            message.oneof_decl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            if (!(message.reserved_range && message.reserved_range.length))
                                message.reserved_range = [];
                            message.reserved_range.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 10:
                            if (!(message.reserved_name && message.reserved_name.length))
                                message.reserved_name = [];
                            message.reserved_name.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nested_type != null && message.hasOwnProperty("nested_type")) {
                        if (!Array.isArray(message.nested_type))
                            return "nested_type: array expected";
                        for (var i = 0; i < message.nested_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nested_type[i]);
                            if (error)
                                return "nested_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.extension_range != null && message.hasOwnProperty("extension_range")) {
                        if (!Array.isArray(message.extension_range))
                            return "extension_range: array expected";
                        for (var i = 0; i < message.extension_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extension_range[i]);
                            if (error)
                                return "extension_range." + error;
                        }
                    }
                    if (message.oneof_decl != null && message.hasOwnProperty("oneof_decl")) {
                        if (!Array.isArray(message.oneof_decl))
                            return "oneof_decl: array expected";
                        for (var i = 0; i < message.oneof_decl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneof_decl[i]);
                            if (error)
                                return "oneof_decl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reserved_range != null && message.hasOwnProperty("reserved_range")) {
                        if (!Array.isArray(message.reserved_range))
                            return "reserved_range: array expected";
                        for (var i = 0; i < message.reserved_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reserved_range[i]);
                            if (error)
                                return "reserved_range." + error;
                        }
                    }
                    if (message.reserved_name != null && message.hasOwnProperty("reserved_name")) {
                        if (!Array.isArray(message.reserved_name))
                            return "reserved_name: array expected";
                        for (var i = 0; i < message.reserved_name.length; ++i)
                            if (!$util.isString(message.reserved_name[i]))
                                return "reserved_name: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nested_type) {
                        if (!Array.isArray(object.nested_type))
                            throw TypeError(".google.protobuf.DescriptorProto.nested_type: array expected");
                        message.nested_type = [];
                        for (var i = 0; i < object.nested_type.length; ++i) {
                            if (typeof object.nested_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nested_type: object expected");
                            message.nested_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nested_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.DescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.extension_range) {
                        if (!Array.isArray(object.extension_range))
                            throw TypeError(".google.protobuf.DescriptorProto.extension_range: array expected");
                        message.extension_range = [];
                        for (var i = 0; i < object.extension_range.length; ++i) {
                            if (typeof object.extension_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension_range: object expected");
                            message.extension_range[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extension_range[i]);
                        }
                    }
                    if (object.oneof_decl) {
                        if (!Array.isArray(object.oneof_decl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: array expected");
                        message.oneof_decl = [];
                        for (var i = 0; i < object.oneof_decl.length; ++i) {
                            if (typeof object.oneof_decl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneof_decl: object expected");
                            message.oneof_decl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneof_decl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reserved_range) {
                        if (!Array.isArray(object.reserved_range))
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_range: array expected");
                        message.reserved_range = [];
                        for (var i = 0; i < object.reserved_range.length; ++i) {
                            if (typeof object.reserved_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reserved_range: object expected");
                            message.reserved_range[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reserved_range[i]);
                        }
                    }
                    if (object.reserved_name) {
                        if (!Array.isArray(object.reserved_name))
                            throw TypeError(".google.protobuf.DescriptorProto.reserved_name: array expected");
                        message.reserved_name = [];
                        for (var i = 0; i < object.reserved_name.length; ++i)
                            message.reserved_name[i] = String(object.reserved_name[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nested_type = [];
                        object.enum_type = [];
                        object.extension_range = [];
                        object.extension = [];
                        object.oneof_decl = [];
                        object.reserved_range = [];
                        object.reserved_name = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nested_type && message.nested_type.length) {
                        object.nested_type = [];
                        for (var j = 0; j < message.nested_type.length; ++j)
                            object.nested_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.nested_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.extension_range && message.extension_range.length) {
                        object.extension_range = [];
                        for (var j = 0; j < message.extension_range.length; ++j)
                            object.extension_range[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extension_range[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneof_decl && message.oneof_decl.length) {
                        object.oneof_decl = [];
                        for (var j = 0; j < message.oneof_decl.length; ++j)
                            object.oneof_decl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneof_decl[j], options);
                    }
                    if (message.reserved_range && message.reserved_range.length) {
                        object.reserved_range = [];
                        for (var j = 0; j < message.reserved_range.length; ++j)
                            object.reserved_range[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reserved_range[j], options);
                    }
                    if (message.reserved_name && message.reserved_name.length) {
                        object.reserved_name = [];
                        for (var j = 0; j < message.reserved_name.length; ++j)
                            object.reserved_name[j] = message.reserved_name[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [type_name] FieldDescriptorProto type_name
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [default_value] FieldDescriptorProto default_value
                 * @property {number|null} [oneof_index] FieldDescriptorProto oneof_index
                 * @property {string|null} [json_name] FieldDescriptorProto json_name
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto type_name.
                 * @member {string} type_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type_name = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto default_value.
                 * @member {string} default_value
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.default_value = "";
    
                /**
                 * FieldDescriptorProto oneof_index.
                 * @member {number} oneof_index
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneof_index = 0;
    
                /**
                 * FieldDescriptorProto json_name.
                 * @member {string} json_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.json_name = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.type_name != null && Object.hasOwnProperty.call(message, "type_name"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.type_name);
                    if (message.default_value != null && Object.hasOwnProperty.call(message, "default_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.default_value);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneof_index != null && Object.hasOwnProperty.call(message, "oneof_index"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneof_index);
                    if (message.json_name != null && Object.hasOwnProperty.call(message, "json_name"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.json_name);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.number = reader.int32();
                            break;
                        case 4:
                            message.label = reader.int32();
                            break;
                        case 5:
                            message.type = reader.int32();
                            break;
                        case 6:
                            message.type_name = reader.string();
                            break;
                        case 2:
                            message.extendee = reader.string();
                            break;
                        case 7:
                            message.default_value = reader.string();
                            break;
                        case 9:
                            message.oneof_index = reader.int32();
                            break;
                        case 10:
                            message.json_name = reader.string();
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        if (!$util.isString(message.type_name))
                            return "type_name: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        if (!$util.isString(message.default_value))
                            return "default_value: string expected";
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        if (!$util.isInteger(message.oneof_index))
                            return "oneof_index: integer expected";
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        if (!$util.isString(message.json_name))
                            return "json_name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.type_name != null)
                        message.type_name = String(object.type_name);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.default_value != null)
                        message.default_value = String(object.default_value);
                    if (object.oneof_index != null)
                        message.oneof_index = object.oneof_index | 0;
                    if (object.json_name != null)
                        message.json_name = String(object.json_name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.type_name = "";
                        object.default_value = "";
                        object.options = null;
                        object.oneof_index = 0;
                        object.json_name = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        object.type_name = message.type_name;
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        object.default_value = message.default_value;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneof_index != null && message.hasOwnProperty("oneof_index"))
                        object.oneof_index = message.oneof_index;
                    if (message.json_name != null && message.hasOwnProperty("json_name"))
                        object.json_name = message.json_name;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.value && message.value.length))
                                message.value = [];
                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.value = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.number = reader.int32();
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.method && message.method.length))
                                message.method = [];
                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [input_type] MethodDescriptorProto input_type
                 * @property {string|null} [output_type] MethodDescriptorProto output_type
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [client_streaming] MethodDescriptorProto client_streaming
                 * @property {boolean|null} [server_streaming] MethodDescriptorProto server_streaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto input_type.
                 * @member {string} input_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.input_type = "";
    
                /**
                 * MethodDescriptorProto output_type.
                 * @member {string} output_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.output_type = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto client_streaming.
                 * @member {boolean} client_streaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.client_streaming = false;
    
                /**
                 * MethodDescriptorProto server_streaming.
                 * @member {boolean} server_streaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.server_streaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.input_type != null && Object.hasOwnProperty.call(message, "input_type"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.input_type);
                    if (message.output_type != null && Object.hasOwnProperty.call(message, "output_type"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.output_type);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.client_streaming != null && Object.hasOwnProperty.call(message, "client_streaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.client_streaming);
                    if (message.server_streaming != null && Object.hasOwnProperty.call(message, "server_streaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.server_streaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.input_type = reader.string();
                            break;
                        case 3:
                            message.output_type = reader.string();
                            break;
                        case 4:
                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.client_streaming = reader.bool();
                            break;
                        case 6:
                            message.server_streaming = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        if (!$util.isString(message.input_type))
                            return "input_type: string expected";
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        if (!$util.isString(message.output_type))
                            return "output_type: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        if (typeof message.client_streaming !== "boolean")
                            return "client_streaming: boolean expected";
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        if (typeof message.server_streaming !== "boolean")
                            return "server_streaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.input_type != null)
                        message.input_type = String(object.input_type);
                    if (object.output_type != null)
                        message.output_type = String(object.output_type);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.client_streaming != null)
                        message.client_streaming = Boolean(object.client_streaming);
                    if (object.server_streaming != null)
                        message.server_streaming = Boolean(object.server_streaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.input_type = "";
                        object.output_type = "";
                        object.options = null;
                        object.client_streaming = false;
                        object.server_streaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        object.input_type = message.input_type;
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        object.output_type = message.output_type;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.client_streaming != null && message.hasOwnProperty("client_streaming"))
                        object.client_streaming = message.client_streaming;
                    if (message.server_streaming != null && message.hasOwnProperty("server_streaming"))
                        object.server_streaming = message.server_streaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [java_package] FileOptions java_package
                 * @property {string|null} [java_outer_classname] FileOptions java_outer_classname
                 * @property {boolean|null} [java_multiple_files] FileOptions java_multiple_files
                 * @property {boolean|null} [java_generate_equals_and_hash] FileOptions java_generate_equals_and_hash
                 * @property {boolean|null} [java_string_check_utf8] FileOptions java_string_check_utf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimize_for] FileOptions optimize_for
                 * @property {string|null} [go_package] FileOptions go_package
                 * @property {boolean|null} [cc_generic_services] FileOptions cc_generic_services
                 * @property {boolean|null} [java_generic_services] FileOptions java_generic_services
                 * @property {boolean|null} [py_generic_services] FileOptions py_generic_services
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [cc_enable_arenas] FileOptions cc_enable_arenas
                 * @property {string|null} [objc_class_prefix] FileOptions objc_class_prefix
                 * @property {string|null} [csharp_namespace] FileOptions csharp_namespace
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FileOptions uninterpreted_option
                 * @property {boolean|null} [".force_php_generation"] FileOptions .force_php_generation
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions java_package.
                 * @member {string} java_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_package = "";
    
                /**
                 * FileOptions java_outer_classname.
                 * @member {string} java_outer_classname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_outer_classname = "";
    
                /**
                 * FileOptions java_multiple_files.
                 * @member {boolean} java_multiple_files
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_multiple_files = false;
    
                /**
                 * FileOptions java_generate_equals_and_hash.
                 * @member {boolean} java_generate_equals_and_hash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generate_equals_and_hash = false;
    
                /**
                 * FileOptions java_string_check_utf8.
                 * @member {boolean} java_string_check_utf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_string_check_utf8 = false;
    
                /**
                 * FileOptions optimize_for.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimize_for
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimize_for = 1;
    
                /**
                 * FileOptions go_package.
                 * @member {string} go_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.go_package = "";
    
                /**
                 * FileOptions cc_generic_services.
                 * @member {boolean} cc_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_generic_services = false;
    
                /**
                 * FileOptions java_generic_services.
                 * @member {boolean} java_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generic_services = false;
    
                /**
                 * FileOptions py_generic_services.
                 * @member {boolean} py_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.py_generic_services = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions cc_enable_arenas.
                 * @member {boolean} cc_enable_arenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_enable_arenas = false;
    
                /**
                 * FileOptions objc_class_prefix.
                 * @member {string} objc_class_prefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objc_class_prefix = "";
    
                /**
                 * FileOptions csharp_namespace.
                 * @member {string} csharp_namespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharp_namespace = "";
    
                /**
                 * FileOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FileOptions .force_php_generation.
                 * @member {boolean} .force_php_generation
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".force_php_generation"] = false;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.java_package != null && Object.hasOwnProperty.call(message, "java_package"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.java_package);
                    if (message.java_outer_classname != null && Object.hasOwnProperty.call(message, "java_outer_classname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.java_outer_classname);
                    if (message.optimize_for != null && Object.hasOwnProperty.call(message, "optimize_for"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimize_for);
                    if (message.java_multiple_files != null && Object.hasOwnProperty.call(message, "java_multiple_files"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.java_multiple_files);
                    if (message.go_package != null && Object.hasOwnProperty.call(message, "go_package"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.go_package);
                    if (message.cc_generic_services != null && Object.hasOwnProperty.call(message, "cc_generic_services"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.cc_generic_services);
                    if (message.java_generic_services != null && Object.hasOwnProperty.call(message, "java_generic_services"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.java_generic_services);
                    if (message.py_generic_services != null && Object.hasOwnProperty.call(message, "py_generic_services"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.py_generic_services);
                    if (message.java_generate_equals_and_hash != null && Object.hasOwnProperty.call(message, "java_generate_equals_and_hash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.java_generate_equals_and_hash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.java_string_check_utf8 != null && Object.hasOwnProperty.call(message, "java_string_check_utf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.java_string_check_utf8);
                    if (message.cc_enable_arenas != null && Object.hasOwnProperty.call(message, "cc_enable_arenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.cc_enable_arenas);
                    if (message.objc_class_prefix != null && Object.hasOwnProperty.call(message, "objc_class_prefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objc_class_prefix);
                    if (message.csharp_namespace != null && Object.hasOwnProperty.call(message, "csharp_namespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharp_namespace);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".force_php_generation"] != null && Object.hasOwnProperty.call(message, ".force_php_generation"))
                        writer.uint32(/* id 50000, wireType 0 =*/400000).bool(message[".force_php_generation"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.java_package = reader.string();
                            break;
                        case 8:
                            message.java_outer_classname = reader.string();
                            break;
                        case 10:
                            message.java_multiple_files = reader.bool();
                            break;
                        case 20:
                            message.java_generate_equals_and_hash = reader.bool();
                            break;
                        case 27:
                            message.java_string_check_utf8 = reader.bool();
                            break;
                        case 9:
                            message.optimize_for = reader.int32();
                            break;
                        case 11:
                            message.go_package = reader.string();
                            break;
                        case 16:
                            message.cc_generic_services = reader.bool();
                            break;
                        case 17:
                            message.java_generic_services = reader.bool();
                            break;
                        case 18:
                            message.py_generic_services = reader.bool();
                            break;
                        case 23:
                            message.deprecated = reader.bool();
                            break;
                        case 31:
                            message.cc_enable_arenas = reader.bool();
                            break;
                        case 36:
                            message.objc_class_prefix = reader.string();
                            break;
                        case 37:
                            message.csharp_namespace = reader.string();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".force_php_generation"] = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        if (!$util.isString(message.java_package))
                            return "java_package: string expected";
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        if (!$util.isString(message.java_outer_classname))
                            return "java_outer_classname: string expected";
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        if (typeof message.java_multiple_files !== "boolean")
                            return "java_multiple_files: boolean expected";
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        if (typeof message.java_generate_equals_and_hash !== "boolean")
                            return "java_generate_equals_and_hash: boolean expected";
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        if (typeof message.java_string_check_utf8 !== "boolean")
                            return "java_string_check_utf8: boolean expected";
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        switch (message.optimize_for) {
                        default:
                            return "optimize_for: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        if (!$util.isString(message.go_package))
                            return "go_package: string expected";
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        if (typeof message.cc_generic_services !== "boolean")
                            return "cc_generic_services: boolean expected";
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        if (typeof message.java_generic_services !== "boolean")
                            return "java_generic_services: boolean expected";
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        if (typeof message.py_generic_services !== "boolean")
                            return "py_generic_services: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        if (typeof message.cc_enable_arenas !== "boolean")
                            return "cc_enable_arenas: boolean expected";
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        if (!$util.isString(message.objc_class_prefix))
                            return "objc_class_prefix: string expected";
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        if (!$util.isString(message.csharp_namespace))
                            return "csharp_namespace: string expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".force_php_generation"] != null && message.hasOwnProperty(".force_php_generation"))
                        if (typeof message[".force_php_generation"] !== "boolean")
                            return ".force_php_generation: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.java_package != null)
                        message.java_package = String(object.java_package);
                    if (object.java_outer_classname != null)
                        message.java_outer_classname = String(object.java_outer_classname);
                    if (object.java_multiple_files != null)
                        message.java_multiple_files = Boolean(object.java_multiple_files);
                    if (object.java_generate_equals_and_hash != null)
                        message.java_generate_equals_and_hash = Boolean(object.java_generate_equals_and_hash);
                    if (object.java_string_check_utf8 != null)
                        message.java_string_check_utf8 = Boolean(object.java_string_check_utf8);
                    switch (object.optimize_for) {
                    case "SPEED":
                    case 1:
                        message.optimize_for = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimize_for = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimize_for = 3;
                        break;
                    }
                    if (object.go_package != null)
                        message.go_package = String(object.go_package);
                    if (object.cc_generic_services != null)
                        message.cc_generic_services = Boolean(object.cc_generic_services);
                    if (object.java_generic_services != null)
                        message.java_generic_services = Boolean(object.java_generic_services);
                    if (object.py_generic_services != null)
                        message.py_generic_services = Boolean(object.py_generic_services);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.cc_enable_arenas != null)
                        message.cc_enable_arenas = Boolean(object.cc_enable_arenas);
                    if (object.objc_class_prefix != null)
                        message.objc_class_prefix = String(object.objc_class_prefix);
                    if (object.csharp_namespace != null)
                        message.csharp_namespace = String(object.csharp_namespace);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".force_php_generation"] != null)
                        message[".force_php_generation"] = Boolean(object[".force_php_generation"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.java_package = "";
                        object.java_outer_classname = "";
                        object.optimize_for = options.enums === String ? "SPEED" : 1;
                        object.java_multiple_files = false;
                        object.go_package = "";
                        object.cc_generic_services = false;
                        object.java_generic_services = false;
                        object.py_generic_services = false;
                        object.java_generate_equals_and_hash = false;
                        object.deprecated = false;
                        object.java_string_check_utf8 = false;
                        object.cc_enable_arenas = false;
                        object.objc_class_prefix = "";
                        object.csharp_namespace = "";
                        object[".force_php_generation"] = false;
                    }
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        object.java_package = message.java_package;
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        object.java_outer_classname = message.java_outer_classname;
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        object.optimize_for = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] : message.optimize_for;
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        object.java_multiple_files = message.java_multiple_files;
                    if (message.go_package != null && message.hasOwnProperty("go_package"))
                        object.go_package = message.go_package;
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        object.cc_generic_services = message.cc_generic_services;
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        object.java_generic_services = message.java_generic_services;
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        object.py_generic_services = message.py_generic_services;
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        object.java_generate_equals_and_hash = message.java_generate_equals_and_hash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.java_string_check_utf8 != null && message.hasOwnProperty("java_string_check_utf8"))
                        object.java_string_check_utf8 = message.java_string_check_utf8;
                    if (message.cc_enable_arenas != null && message.hasOwnProperty("cc_enable_arenas"))
                        object.cc_enable_arenas = message.cc_enable_arenas;
                    if (message.objc_class_prefix != null && message.hasOwnProperty("objc_class_prefix"))
                        object.objc_class_prefix = message.objc_class_prefix;
                    if (message.csharp_namespace != null && message.hasOwnProperty("csharp_namespace"))
                        object.csharp_namespace = message.csharp_namespace;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".force_php_generation"] != null && message.hasOwnProperty(".force_php_generation"))
                        object[".force_php_generation"] = message[".force_php_generation"];
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [message_set_wire_format] MessageOptions message_set_wire_format
                 * @property {boolean|null} [no_standard_descriptor_accessor] MessageOptions no_standard_descriptor_accessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [map_entry] MessageOptions map_entry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MessageOptions uninterpreted_option
                 * @property {number|null} [".msgpool_soft_limit"] MessageOptions .msgpool_soft_limit
                 * @property {number|null} [".msgpool_hard_limit"] MessageOptions .msgpool_hard_limit
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions message_set_wire_format.
                 * @member {boolean} message_set_wire_format
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.message_set_wire_format = false;
    
                /**
                 * MessageOptions no_standard_descriptor_accessor.
                 * @member {boolean} no_standard_descriptor_accessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.no_standard_descriptor_accessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions map_entry.
                 * @member {boolean} map_entry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.map_entry = false;
    
                /**
                 * MessageOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * MessageOptions .msgpool_soft_limit.
                 * @member {number} .msgpool_soft_limit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpool_soft_limit"] = 32;
    
                /**
                 * MessageOptions .msgpool_hard_limit.
                 * @member {number} .msgpool_hard_limit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpool_hard_limit"] = 384;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.message_set_wire_format != null && Object.hasOwnProperty.call(message, "message_set_wire_format"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.message_set_wire_format);
                    if (message.no_standard_descriptor_accessor != null && Object.hasOwnProperty.call(message, "no_standard_descriptor_accessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.no_standard_descriptor_accessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.map_entry != null && Object.hasOwnProperty.call(message, "map_entry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.map_entry);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".msgpool_soft_limit"] != null && Object.hasOwnProperty.call(message, ".msgpool_soft_limit"))
                        writer.uint32(/* id 50000, wireType 0 =*/400000).int32(message[".msgpool_soft_limit"]);
                    if (message[".msgpool_hard_limit"] != null && Object.hasOwnProperty.call(message, ".msgpool_hard_limit"))
                        writer.uint32(/* id 50001, wireType 0 =*/400008).int32(message[".msgpool_hard_limit"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.message_set_wire_format = reader.bool();
                            break;
                        case 2:
                            message.no_standard_descriptor_accessor = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 7:
                            message.map_entry = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50000:
                            message[".msgpool_soft_limit"] = reader.int32();
                            break;
                        case 50001:
                            message[".msgpool_hard_limit"] = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        if (typeof message.message_set_wire_format !== "boolean")
                            return "message_set_wire_format: boolean expected";
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        if (typeof message.no_standard_descriptor_accessor !== "boolean")
                            return "no_standard_descriptor_accessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        if (typeof message.map_entry !== "boolean")
                            return "map_entry: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        if (!$util.isInteger(message[".msgpool_soft_limit"]))
                            return ".msgpool_soft_limit: integer expected";
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        if (!$util.isInteger(message[".msgpool_hard_limit"]))
                            return ".msgpool_hard_limit: integer expected";
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.message_set_wire_format != null)
                        message.message_set_wire_format = Boolean(object.message_set_wire_format);
                    if (object.no_standard_descriptor_accessor != null)
                        message.no_standard_descriptor_accessor = Boolean(object.no_standard_descriptor_accessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.map_entry != null)
                        message.map_entry = Boolean(object.map_entry);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".msgpool_soft_limit"] != null)
                        message[".msgpool_soft_limit"] = object[".msgpool_soft_limit"] | 0;
                    if (object[".msgpool_hard_limit"] != null)
                        message[".msgpool_hard_limit"] = object[".msgpool_hard_limit"] | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.message_set_wire_format = false;
                        object.no_standard_descriptor_accessor = false;
                        object.deprecated = false;
                        object.map_entry = false;
                        object[".msgpool_soft_limit"] = 32;
                        object[".msgpool_hard_limit"] = 384;
                    }
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        object.message_set_wire_format = message.message_set_wire_format;
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        object.no_standard_descriptor_accessor = message.no_standard_descriptor_accessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.map_entry != null && message.hasOwnProperty("map_entry"))
                        object.map_entry = message.map_entry;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        object[".msgpool_soft_limit"] = message[".msgpool_soft_limit"];
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        object[".msgpool_hard_limit"] = message[".msgpool_hard_limit"];
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FieldOptions uninterpreted_option
                 * @property {boolean|null} [".php_output_always_number"] FieldOptions .php_output_always_number
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FieldOptions .php_output_always_number.
                 * @member {boolean} .php_output_always_number
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".php_output_always_number"] = false;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".php_output_always_number"] != null && Object.hasOwnProperty.call(message, ".php_output_always_number"))
                        writer.uint32(/* id 50020, wireType 0 =*/400160).bool(message[".php_output_always_number"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.ctype = reader.int32();
                            break;
                        case 2:
                            message.packed = reader.bool();
                            break;
                        case 6:
                            message.jstype = reader.int32();
                            break;
                        case 5:
                            message.lazy = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 10:
                            message.weak = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 50020:
                            message[".php_output_always_number"] = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".php_output_always_number"] != null && message.hasOwnProperty(".php_output_always_number"))
                        if (typeof message[".php_output_always_number"] !== "boolean")
                            return ".php_output_always_number: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".php_output_always_number"] != null)
                        message[".php_output_always_number"] = Boolean(object[".php_output_always_number"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object[".php_output_always_number"] = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".php_output_always_number"] != null && message.hasOwnProperty(".php_output_always_number"))
                        object[".php_output_always_number"] = message[".php_output_always_number"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] OneofOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allow_alias] EnumOptions allow_alias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allow_alias.
                 * @member {boolean} allow_alias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allow_alias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allow_alias != null && Object.hasOwnProperty.call(message, "allow_alias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allow_alias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            message.allow_alias = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        if (typeof message.allow_alias !== "boolean")
                            return "allow_alias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allow_alias != null)
                        message.allow_alias = Boolean(object.allow_alias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.allow_alias = false;
                        object.deprecated = false;
                    }
                    if (message.allow_alias != null && message.hasOwnProperty("allow_alias"))
                        object.allow_alias = message.allow_alias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumValueOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] ServiceOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MethodOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                message.uninterpreted_option = [];
                            message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifier_value] UninterpretedOption identifier_value
                 * @property {number|Long|null} [positive_int_value] UninterpretedOption positive_int_value
                 * @property {number|Long|null} [negative_int_value] UninterpretedOption negative_int_value
                 * @property {number|null} [double_value] UninterpretedOption double_value
                 * @property {Uint8Array|null} [string_value] UninterpretedOption string_value
                 * @property {string|null} [aggregate_value] UninterpretedOption aggregate_value
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifier_value.
                 * @member {string} identifier_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifier_value = "";
    
                /**
                 * UninterpretedOption positive_int_value.
                 * @member {number|Long} positive_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positive_int_value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negative_int_value.
                 * @member {number|Long} negative_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negative_int_value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption double_value.
                 * @member {number} double_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.double_value = 0;
    
                /**
                 * UninterpretedOption string_value.
                 * @member {Uint8Array} string_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.string_value = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregate_value.
                 * @member {string} aggregate_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregate_value = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifier_value != null && Object.hasOwnProperty.call(message, "identifier_value"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier_value);
                    if (message.positive_int_value != null && Object.hasOwnProperty.call(message, "positive_int_value"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positive_int_value);
                    if (message.negative_int_value != null && Object.hasOwnProperty.call(message, "negative_int_value"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negative_int_value);
                    if (message.double_value != null && Object.hasOwnProperty.call(message, "double_value"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.double_value);
                    if (message.string_value != null && Object.hasOwnProperty.call(message, "string_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.string_value);
                    if (message.aggregate_value != null && Object.hasOwnProperty.call(message, "aggregate_value"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregate_value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            if (!(message.name && message.name.length))
                                message.name = [];
                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.identifier_value = reader.string();
                            break;
                        case 4:
                            message.positive_int_value = reader.uint64();
                            break;
                        case 5:
                            message.negative_int_value = reader.int64();
                            break;
                        case 6:
                            message.double_value = reader.double();
                            break;
                        case 7:
                            message.string_value = reader.bytes();
                            break;
                        case 8:
                            message.aggregate_value = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        if (!$util.isString(message.identifier_value))
                            return "identifier_value: string expected";
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (!$util.isInteger(message.positive_int_value) && !(message.positive_int_value && $util.isInteger(message.positive_int_value.low) && $util.isInteger(message.positive_int_value.high)))
                            return "positive_int_value: integer|Long expected";
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (!$util.isInteger(message.negative_int_value) && !(message.negative_int_value && $util.isInteger(message.negative_int_value.low) && $util.isInteger(message.negative_int_value.high)))
                            return "negative_int_value: integer|Long expected";
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        if (typeof message.double_value !== "number")
                            return "double_value: number expected";
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        if (!(message.string_value && typeof message.string_value.length === "number" || $util.isString(message.string_value)))
                            return "string_value: buffer expected";
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        if (!$util.isString(message.aggregate_value))
                            return "aggregate_value: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifier_value != null)
                        message.identifier_value = String(object.identifier_value);
                    if (object.positive_int_value != null)
                        if ($util.Long)
                            (message.positive_int_value = $util.Long.fromValue(object.positive_int_value)).unsigned = true;
                        else if (typeof object.positive_int_value === "string")
                            message.positive_int_value = parseInt(object.positive_int_value, 10);
                        else if (typeof object.positive_int_value === "number")
                            message.positive_int_value = object.positive_int_value;
                        else if (typeof object.positive_int_value === "object")
                            message.positive_int_value = new $util.LongBits(object.positive_int_value.low >>> 0, object.positive_int_value.high >>> 0).toNumber(true);
                    if (object.negative_int_value != null)
                        if ($util.Long)
                            (message.negative_int_value = $util.Long.fromValue(object.negative_int_value)).unsigned = false;
                        else if (typeof object.negative_int_value === "string")
                            message.negative_int_value = parseInt(object.negative_int_value, 10);
                        else if (typeof object.negative_int_value === "number")
                            message.negative_int_value = object.negative_int_value;
                        else if (typeof object.negative_int_value === "object")
                            message.negative_int_value = new $util.LongBits(object.negative_int_value.low >>> 0, object.negative_int_value.high >>> 0).toNumber();
                    if (object.double_value != null)
                        message.double_value = Number(object.double_value);
                    if (object.string_value != null)
                        if (typeof object.string_value === "string")
                            $util.base64.decode(object.string_value, message.string_value = $util.newBuffer($util.base64.length(object.string_value)), 0);
                        else if (object.string_value.length)
                            message.string_value = object.string_value;
                    if (object.aggregate_value != null)
                        message.aggregate_value = String(object.aggregate_value);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifier_value = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positive_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positive_int_value = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negative_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negative_int_value = options.longs === String ? "0" : 0;
                        object.double_value = 0;
                        if (options.bytes === String)
                            object.string_value = "";
                        else {
                            object.string_value = [];
                            if (options.bytes !== Array)
                                object.string_value = $util.newBuffer(object.string_value);
                        }
                        object.aggregate_value = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        object.identifier_value = message.identifier_value;
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (typeof message.positive_int_value === "number")
                            object.positive_int_value = options.longs === String ? String(message.positive_int_value) : message.positive_int_value;
                        else
                            object.positive_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.positive_int_value) : options.longs === Number ? new $util.LongBits(message.positive_int_value.low >>> 0, message.positive_int_value.high >>> 0).toNumber(true) : message.positive_int_value;
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (typeof message.negative_int_value === "number")
                            object.negative_int_value = options.longs === String ? String(message.negative_int_value) : message.negative_int_value;
                        else
                            object.negative_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.negative_int_value) : options.longs === Number ? new $util.LongBits(message.negative_int_value.low >>> 0, message.negative_int_value.high >>> 0).toNumber() : message.negative_int_value;
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        object.double_value = options.json && !isFinite(message.double_value) ? String(message.double_value) : message.double_value;
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        object.string_value = options.bytes === String ? $util.base64.encode(message.string_value, 0, message.string_value.length) : options.bytes === Array ? Array.prototype.slice.call(message.string_value) : message.string_value;
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        object.aggregate_value = message.aggregate_value;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} name_part NamePart name_part
                     * @property {boolean} is_extension NamePart is_extension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart name_part.
                     * @member {string} name_part
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.name_part = "";
    
                    /**
                     * NamePart is_extension.
                     * @member {boolean} is_extension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.is_extension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name_part);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.is_extension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.name_part = reader.string();
                                break;
                            case 2:
                                message.is_extension = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("name_part"))
                            throw $util.ProtocolError("missing required 'name_part'", { instance: message });
                        if (!message.hasOwnProperty("is_extension"))
                            throw $util.ProtocolError("missing required 'is_extension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.name_part))
                            return "name_part: string expected";
                        if (typeof message.is_extension !== "boolean")
                            return "is_extension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.name_part != null)
                            message.name_part = String(object.name_part);
                        if (object.is_extension != null)
                            message.is_extension = Boolean(object.is_extension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name_part = "";
                            object.is_extension = false;
                        }
                        if (message.name_part != null && message.hasOwnProperty("name_part"))
                            object.name_part = message.name_part;
                        if (message.is_extension != null && message.hasOwnProperty("is_extension"))
                            object.is_extension = message.is_extension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.location && message.location.length))
                                message.location = [];
                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leading_comments] Location leading_comments
                     * @property {string|null} [trailing_comments] Location trailing_comments
                     * @property {Array.<string>|null} [leading_detached_comments] Location leading_detached_comments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leading_detached_comments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leading_comments.
                     * @member {string} leading_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leading_comments = "";
    
                    /**
                     * Location trailing_comments.
                     * @member {string} trailing_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailing_comments = "";
    
                    /**
                     * Location leading_detached_comments.
                     * @member {Array.<string>} leading_detached_comments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leading_detached_comments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leading_comments != null && Object.hasOwnProperty.call(message, "leading_comments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leading_comments);
                        if (message.trailing_comments != null && Object.hasOwnProperty.call(message, "trailing_comments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailing_comments);
                        if (message.leading_detached_comments != null && message.leading_detached_comments.length)
                            for (var i = 0; i < message.leading_detached_comments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leading_detached_comments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                if (!(message.span && message.span.length))
                                    message.span = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.span.push(reader.int32());
                                } else
                                    message.span.push(reader.int32());
                                break;
                            case 3:
                                message.leading_comments = reader.string();
                                break;
                            case 4:
                                message.trailing_comments = reader.string();
                                break;
                            case 6:
                                if (!(message.leading_detached_comments && message.leading_detached_comments.length))
                                    message.leading_detached_comments = [];
                                message.leading_detached_comments.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            if (!$util.isString(message.leading_comments))
                                return "leading_comments: string expected";
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            if (!$util.isString(message.trailing_comments))
                                return "trailing_comments: string expected";
                        if (message.leading_detached_comments != null && message.hasOwnProperty("leading_detached_comments")) {
                            if (!Array.isArray(message.leading_detached_comments))
                                return "leading_detached_comments: array expected";
                            for (var i = 0; i < message.leading_detached_comments.length; ++i)
                                if (!$util.isString(message.leading_detached_comments[i]))
                                    return "leading_detached_comments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leading_comments != null)
                            message.leading_comments = String(object.leading_comments);
                        if (object.trailing_comments != null)
                            message.trailing_comments = String(object.trailing_comments);
                        if (object.leading_detached_comments) {
                            if (!Array.isArray(object.leading_detached_comments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leading_detached_comments: array expected");
                            message.leading_detached_comments = [];
                            for (var i = 0; i < object.leading_detached_comments.length; ++i)
                                message.leading_detached_comments[i] = String(object.leading_detached_comments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leading_detached_comments = [];
                        }
                        if (options.defaults) {
                            object.leading_comments = "";
                            object.trailing_comments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leading_comments != null && message.hasOwnProperty("leading_comments"))
                            object.leading_comments = message.leading_comments;
                        if (message.trailing_comments != null && message.hasOwnProperty("trailing_comments"))
                            object.trailing_comments = message.trailing_comments;
                        if (message.leading_detached_comments && message.leading_detached_comments.length) {
                            object.leading_detached_comments = [];
                            for (var j = 0; j < message.leading_detached_comments.length; ++j)
                                object.leading_detached_comments[j] = message.leading_detached_comments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.annotation && message.annotation.length))
                                message.annotation = [];
                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [source_file] Annotation source_file
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation source_file.
                     * @member {string} source_file
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.source_file = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.source_file != null && Object.hasOwnProperty.call(message, "source_file"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.source_file);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                message.source_file = reader.string();
                                break;
                            case 3:
                                message.begin = reader.int32();
                                break;
                            case 4:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            if (!$util.isString(message.source_file))
                                return "source_file: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.source_file != null)
                            message.source_file = String(object.source_file);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.source_file = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.source_file != null && message.hasOwnProperty("source_file"))
                            object.source_file = message.source_file;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();
    
    $root.EncryptedAppTicket = (function() {
    
        /**
         * Properties of an EncryptedAppTicket.
         * @exports IEncryptedAppTicket
         * @interface IEncryptedAppTicket
         * @property {number|null} [ticket_version_no] EncryptedAppTicket ticket_version_no
         * @property {number|null} [crc_encryptedticket] EncryptedAppTicket crc_encryptedticket
         * @property {number|null} [cb_encrypteduserdata] EncryptedAppTicket cb_encrypteduserdata
         * @property {number|null} [cb_encrypted_appownershipticket] EncryptedAppTicket cb_encrypted_appownershipticket
         * @property {Uint8Array|null} [encrypted_ticket] EncryptedAppTicket encrypted_ticket
         */
    
        /**
         * Constructs a new EncryptedAppTicket.
         * @exports EncryptedAppTicket
         * @classdesc Represents an EncryptedAppTicket.
         * @implements IEncryptedAppTicket
         * @constructor
         * @param {IEncryptedAppTicket=} [properties] Properties to set
         */
        function EncryptedAppTicket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * EncryptedAppTicket ticket_version_no.
         * @member {number} ticket_version_no
         * @memberof EncryptedAppTicket
         * @instance
         */
        EncryptedAppTicket.prototype.ticket_version_no = 0;
    
        /**
         * EncryptedAppTicket crc_encryptedticket.
         * @member {number} crc_encryptedticket
         * @memberof EncryptedAppTicket
         * @instance
         */
        EncryptedAppTicket.prototype.crc_encryptedticket = 0;
    
        /**
         * EncryptedAppTicket cb_encrypteduserdata.
         * @member {number} cb_encrypteduserdata
         * @memberof EncryptedAppTicket
         * @instance
         */
        EncryptedAppTicket.prototype.cb_encrypteduserdata = 0;
    
        /**
         * EncryptedAppTicket cb_encrypted_appownershipticket.
         * @member {number} cb_encrypted_appownershipticket
         * @memberof EncryptedAppTicket
         * @instance
         */
        EncryptedAppTicket.prototype.cb_encrypted_appownershipticket = 0;
    
        /**
         * EncryptedAppTicket encrypted_ticket.
         * @member {Uint8Array} encrypted_ticket
         * @memberof EncryptedAppTicket
         * @instance
         */
        EncryptedAppTicket.prototype.encrypted_ticket = $util.newBuffer([]);
    
        /**
         * Creates a new EncryptedAppTicket instance using the specified properties.
         * @function create
         * @memberof EncryptedAppTicket
         * @static
         * @param {IEncryptedAppTicket=} [properties] Properties to set
         * @returns {EncryptedAppTicket} EncryptedAppTicket instance
         */
        EncryptedAppTicket.create = function create(properties) {
            return new EncryptedAppTicket(properties);
        };
    
        /**
         * Encodes the specified EncryptedAppTicket message. Does not implicitly {@link EncryptedAppTicket.verify|verify} messages.
         * @function encode
         * @memberof EncryptedAppTicket
         * @static
         * @param {IEncryptedAppTicket} message EncryptedAppTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        EncryptedAppTicket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ticket_version_no != null && Object.hasOwnProperty.call(message, "ticket_version_no"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ticket_version_no);
            if (message.crc_encryptedticket != null && Object.hasOwnProperty.call(message, "crc_encryptedticket"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.crc_encryptedticket);
            if (message.cb_encrypteduserdata != null && Object.hasOwnProperty.call(message, "cb_encrypteduserdata"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cb_encrypteduserdata);
            if (message.cb_encrypted_appownershipticket != null && Object.hasOwnProperty.call(message, "cb_encrypted_appownershipticket"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.cb_encrypted_appownershipticket);
            if (message.encrypted_ticket != null && Object.hasOwnProperty.call(message, "encrypted_ticket"))
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.encrypted_ticket);
            return writer;
        };
    
        /**
         * Encodes the specified EncryptedAppTicket message, length delimited. Does not implicitly {@link EncryptedAppTicket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof EncryptedAppTicket
         * @static
         * @param {IEncryptedAppTicket} message EncryptedAppTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        EncryptedAppTicket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes an EncryptedAppTicket message from the specified reader or buffer.
         * @function decode
         * @memberof EncryptedAppTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {EncryptedAppTicket} EncryptedAppTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        EncryptedAppTicket.decode = function decode(reader, length) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.EncryptedAppTicket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                switch (tag >>> 3) {
                case 1:
                    message.ticket_version_no = reader.uint32();
                    break;
                case 2:
                    message.crc_encryptedticket = reader.uint32();
                    break;
                case 3:
                    message.cb_encrypteduserdata = reader.uint32();
                    break;
                case 4:
                    message.cb_encrypted_appownershipticket = reader.uint32();
                    break;
                case 5:
                    message.encrypted_ticket = reader.bytes();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes an EncryptedAppTicket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof EncryptedAppTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {EncryptedAppTicket} EncryptedAppTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        EncryptedAppTicket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies an EncryptedAppTicket message.
         * @function verify
         * @memberof EncryptedAppTicket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        EncryptedAppTicket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ticket_version_no != null && message.hasOwnProperty("ticket_version_no"))
                if (!$util.isInteger(message.ticket_version_no))
                    return "ticket_version_no: integer expected";
            if (message.crc_encryptedticket != null && message.hasOwnProperty("crc_encryptedticket"))
                if (!$util.isInteger(message.crc_encryptedticket))
                    return "crc_encryptedticket: integer expected";
            if (message.cb_encrypteduserdata != null && message.hasOwnProperty("cb_encrypteduserdata"))
                if (!$util.isInteger(message.cb_encrypteduserdata))
                    return "cb_encrypteduserdata: integer expected";
            if (message.cb_encrypted_appownershipticket != null && message.hasOwnProperty("cb_encrypted_appownershipticket"))
                if (!$util.isInteger(message.cb_encrypted_appownershipticket))
                    return "cb_encrypted_appownershipticket: integer expected";
            if (message.encrypted_ticket != null && message.hasOwnProperty("encrypted_ticket"))
                if (!(message.encrypted_ticket && typeof message.encrypted_ticket.length === "number" || $util.isString(message.encrypted_ticket)))
                    return "encrypted_ticket: buffer expected";
            return null;
        };
    
        /**
         * Creates an EncryptedAppTicket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof EncryptedAppTicket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {EncryptedAppTicket} EncryptedAppTicket
         */
        EncryptedAppTicket.fromObject = function fromObject(object) {
            if (object instanceof $root.EncryptedAppTicket)
                return object;
            var message = new $root.EncryptedAppTicket();
            if (object.ticket_version_no != null)
                message.ticket_version_no = object.ticket_version_no >>> 0;
            if (object.crc_encryptedticket != null)
                message.crc_encryptedticket = object.crc_encryptedticket >>> 0;
            if (object.cb_encrypteduserdata != null)
                message.cb_encrypteduserdata = object.cb_encrypteduserdata >>> 0;
            if (object.cb_encrypted_appownershipticket != null)
                message.cb_encrypted_appownershipticket = object.cb_encrypted_appownershipticket >>> 0;
            if (object.encrypted_ticket != null)
                if (typeof object.encrypted_ticket === "string")
                    $util.base64.decode(object.encrypted_ticket, message.encrypted_ticket = $util.newBuffer($util.base64.length(object.encrypted_ticket)), 0);
                else if (object.encrypted_ticket.length)
                    message.encrypted_ticket = object.encrypted_ticket;
            return message;
        };
    
        /**
         * Creates a plain object from an EncryptedAppTicket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof EncryptedAppTicket
         * @static
         * @param {EncryptedAppTicket} message EncryptedAppTicket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        EncryptedAppTicket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.ticket_version_no = 0;
                object.crc_encryptedticket = 0;
                object.cb_encrypteduserdata = 0;
                object.cb_encrypted_appownershipticket = 0;
                if (options.bytes === String)
                    object.encrypted_ticket = "";
                else {
                    object.encrypted_ticket = [];
                    if (options.bytes !== Array)
                        object.encrypted_ticket = $util.newBuffer(object.encrypted_ticket);
                }
            }
            if (message.ticket_version_no != null && message.hasOwnProperty("ticket_version_no"))
                object.ticket_version_no = message.ticket_version_no;
            if (message.crc_encryptedticket != null && message.hasOwnProperty("crc_encryptedticket"))
                object.crc_encryptedticket = message.crc_encryptedticket;
            if (message.cb_encrypteduserdata != null && message.hasOwnProperty("cb_encrypteduserdata"))
                object.cb_encrypteduserdata = message.cb_encrypteduserdata;
            if (message.cb_encrypted_appownershipticket != null && message.hasOwnProperty("cb_encrypted_appownershipticket"))
                object.cb_encrypted_appownershipticket = message.cb_encrypted_appownershipticket;
            if (message.encrypted_ticket != null && message.hasOwnProperty("encrypted_ticket"))
                object.encrypted_ticket = options.bytes === String ? $util.base64.encode(message.encrypted_ticket, 0, message.encrypted_ticket.length) : options.bytes === Array ? Array.prototype.slice.call(message.encrypted_ticket) : message.encrypted_ticket;
            return object;
        };
    
        /**
         * Converts this EncryptedAppTicket to JSON.
         * @function toJSON
         * @memberof EncryptedAppTicket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        EncryptedAppTicket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        return EncryptedAppTicket;
    })();

    return $root;
});
